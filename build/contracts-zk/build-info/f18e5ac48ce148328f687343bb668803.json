{"id":"f18e5ac48ce148328f687343bb668803","_format":"hh-sol-build-info-1","solcVersion":"0.8.13","solcLongVersion":"0.8.13+commit.abaa5c0e","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/ERC721All.sol":{"content":"// SPDX-License-Identifier: MIT\n// Written by: Rob Secord (https://twitter.com/robsecord)\n// Co-founder @ Charged Particles - Visit: https://charged.fi\n// Co-founder @ Taggr             - Visit: https://taggr.io\n\npragma solidity 0.8.13;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\nimport \"./lib/ERC721.sol\";\n\n/**\n * @dev todo...\n */\ncontract ERC721All is Ownable, ERC721 {\n  mapping(uint256 => bool) internal _activeTokens;\n\n  /// @dev ERC721 Base Token URI\n  string internal _baseTokenURI;\n\n  constructor(\n    string memory name,\n    string memory symbol,\n    string memory baseUri\n  ) ERC721(name, symbol) Ownable() {\n    _baseTokenURI = baseUri;\n  }\n\n  /**\n   * @dev Overrides {IERC721-balanceOf}.\n   */\n  function balanceOf(address owner) public view override returns (uint256) {\n    require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n    if (_balances[owner] == 0 && _hasOwnToken(owner)) {\n      return 1;\n    }\n    return _balances[owner];\n  }\n\n  /**\n   * @dev Overrides {IERC721-ownerOf}.\n   */\n  function ownerOf(uint256 tokenId) public view override returns (address) {\n    require(_isTokenActive(tokenId), \"ERC721: invalid token ID\");\n\n    // If token has been transfered then _owners will be populated,\n    // otherwise the token ID represents the initial owner\n    address owner = _owners[tokenId];\n    if (owner == address(0)) {\n      owner = address(uint160(tokenId));\n    }\n    return owner;\n  }\n\n  function mint() public {\n    _mint(_msgSender());\n  }\n\n  function _mint(address receiver) internal {\n    // Token ID == Minter Address\n    uint256 tokenId = uint256(uint160(receiver));\n\n    require(receiver != address(0), \"ERC721: mint to the zero address\");\n    require(!_isTokenActive(tokenId), \"ERC721: token already minted\");\n\n    // Mark Token as Active\n    _activeTokens[tokenId] = true;\n\n    // Fire Transfer Event\n    emit Transfer(address(0), receiver, tokenId);\n  }\n\n  function _transfer(\n    address from,\n    address to,\n    uint256 tokenId\n  ) internal override {\n    require(ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n    require(to != address(0), \"ERC721: transfer to the zero address\");\n\n    _beforeTokenTransfer(from, to, tokenId);\n\n    // Clear approvals from the previous owner\n    _approve(address(0), tokenId);\n\n    // Only if token has previously been transfered after mint\n    if (_owners[tokenId] != address(0)) {\n      _balances[from] -= 1;\n    }\n    _balances[to] += 1;\n    _owners[tokenId] = to;\n\n    emit Transfer(from, to, tokenId);\n\n    _afterTokenTransfer(from, to, tokenId);\n  }\n\n  function _hasOwnToken(address owner) internal view returns (bool) {\n    uint256 ownerTokenId = uint256(uint160(owner));\n    address currentOwner = _owners[ownerTokenId];\n    return (_isTokenActive(ownerTokenId) && (currentOwner == owner || currentOwner == address(0)));\n  }\n\n  function _isTokenActive(uint256 tokenId) internal view returns (bool) {\n    // Check if Token is Active and Not Burned\n    return (_activeTokens[tokenId] && _owners[tokenId] != _NULL_ADDRESS);\n  }\n\n  function _baseURI() internal view virtual override returns (string memory) {\n    return _baseTokenURI;\n  }\n\n  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n    address owner = _owners[tokenId];\n    if (owner == address(0)) {\n      owner = address(uint160(tokenId));\n    }\n\n    return _baseURI();\n  }\n}\n"},"contracts/lib/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// Modifed from: OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\n// Modified by: Rob Secord (https://twitter.com/robsecord)\n// Co-founder @ Charged Particles - Visit: https://charged.fi\n// Co-founder @ Taggr             - Visit: https://taggr.io\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\nimport \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n *\n * NOTE:\n *  The only changes made here are:\n *    - change scope of \"_owners\" from private to internal\n *    - change scope of \"_balances\" from private to internal\n *    - remove \"ERC721\" scope-resolution from \"ownerOf\" calls in order to override \"ownerOf\"\n *    - modify the _burn function to burn to an alternate Null Address (prevents reassignment back to Pre-Mint Receiver)\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    address constant internal _NULL_ADDRESS = 0x000000000000000000000000000000000000dEaD;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) internal _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) internal _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner nor approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        // Prevent re-assigning the token back to the Pre-Mint Receiver\n        _owners[tokenId] = _NULL_ADDRESS;\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n"}},"settings":{"optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout"],"":["ast"]}},"libraries":{}}},"output":{"errors":[],"version":"0.8.13","long_version":"0.8.13+commit.abaa5c0e.Darwin.appleclang","zk_version":"1.3.16","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"id":0,"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[625],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":626,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":625,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,625],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[]}],"src":"102:2514:0"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"id":1,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[890],"IERC721":[228]},"id":229,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":115,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":229,"sourceUnit":891,"src":"133:47:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":117,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":890,"src":"271:7:1"},"id":118,"nodeType":"InheritanceSpecifier","src":"271:7:1"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"182:67:1","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":228,"linearizedBaseContracts":[228,890],"name":"IERC721","nameLocation":"260:7:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"285:88:1","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":127,"name":"Transfer","nameLocation":"384:8:1","nodeType":"EventDefinition","parameters":{"id":126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:1","nodeType":"VariableDeclaration","scope":127,"src":"393:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":123,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:1","nodeType":"VariableDeclaration","scope":127,"src":"415:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":122,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":125,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:1","nodeType":"VariableDeclaration","scope":127,"src":"435:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":124,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:1"},"src":"378:82:1"},{"anonymous":false,"documentation":{"id":128,"nodeType":"StructuredDocumentation","src":"466:94:1","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":136,"name":"Approval","nameLocation":"571:8:1","nodeType":"EventDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":130,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:1","nodeType":"VariableDeclaration","scope":136,"src":"580:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":132,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:1","nodeType":"VariableDeclaration","scope":136,"src":"603:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":131,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":134,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:1","nodeType":"VariableDeclaration","scope":136,"src":"629:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":133,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:1"},"src":"565:89:1"},{"anonymous":false,"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"660:117:1","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":145,"name":"ApprovalForAll","nameLocation":"788:14:1","nodeType":"EventDefinition","parameters":{"id":144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:1","nodeType":"VariableDeclaration","scope":145,"src":"803:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":141,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:1","nodeType":"VariableDeclaration","scope":145,"src":"826:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":140,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":143,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:1","nodeType":"VariableDeclaration","scope":145,"src":"852:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":142,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:1"},"src":"782:85:1"},{"documentation":{"id":146,"nodeType":"StructuredDocumentation","src":"873:76:1","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":153,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:1","nodeType":"FunctionDefinition","parameters":{"id":149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":148,"mutability":"mutable","name":"owner","nameLocation":"981:5:1","nodeType":"VariableDeclaration","scope":153,"src":"973:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":147,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:1"},"returnParameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"mutability":"mutable","name":"balance","nameLocation":"1019:7:1","nodeType":"VariableDeclaration","scope":153,"src":"1011:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":150,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:1"},"scope":228,"src":"954:74:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"1034:131:1","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":161,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:1","nodeType":"FunctionDefinition","parameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":156,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:1","nodeType":"VariableDeclaration","scope":161,"src":"1187:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":155,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:1"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"mutability":"mutable","name":"owner","nameLocation":"1235:5:1","nodeType":"VariableDeclaration","scope":161,"src":"1227:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":158,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:1"},"scope":228,"src":"1170:72:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":162,"nodeType":"StructuredDocumentation","src":"1248:556:1","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":173,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:1","nodeType":"FunctionDefinition","parameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"mutability":"mutable","name":"from","nameLocation":"1843:4:1","nodeType":"VariableDeclaration","scope":173,"src":"1835:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"1835:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":166,"mutability":"mutable","name":"to","nameLocation":"1857:2:1","nodeType":"VariableDeclaration","scope":173,"src":"1849:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":165,"name":"address","nodeType":"ElementaryTypeName","src":"1849:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":168,"mutability":"mutable","name":"tokenId","nameLocation":"1869:7:1","nodeType":"VariableDeclaration","scope":173,"src":"1861:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"1861:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":170,"mutability":"mutable","name":"data","nameLocation":"1893:4:1","nodeType":"VariableDeclaration","scope":173,"src":"1878:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":169,"name":"bytes","nodeType":"ElementaryTypeName","src":"1878:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:64:1"},"returnParameters":{"id":172,"nodeType":"ParameterList","parameters":[],"src":"1907:0:1"},"scope":228,"src":"1809:99:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":174,"nodeType":"StructuredDocumentation","src":"1914:687:1","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":183,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2615:16:1","nodeType":"FunctionDefinition","parameters":{"id":181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"mutability":"mutable","name":"from","nameLocation":"2640:4:1","nodeType":"VariableDeclaration","scope":183,"src":"2632:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"2632:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":178,"mutability":"mutable","name":"to","nameLocation":"2654:2:1","nodeType":"VariableDeclaration","scope":183,"src":"2646:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":177,"name":"address","nodeType":"ElementaryTypeName","src":"2646:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"tokenId","nameLocation":"2666:7:1","nodeType":"VariableDeclaration","scope":183,"src":"2658:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"2658:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2631:43:1"},"returnParameters":{"id":182,"nodeType":"ParameterList","parameters":[],"src":"2683:0:1"},"scope":228,"src":"2606:78:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"2690:732:1","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":193,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3436:12:1","nodeType":"FunctionDefinition","parameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"from","nameLocation":"3457:4:1","nodeType":"VariableDeclaration","scope":193,"src":"3449:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"3449:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":188,"mutability":"mutable","name":"to","nameLocation":"3471:2:1","nodeType":"VariableDeclaration","scope":193,"src":"3463:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":187,"name":"address","nodeType":"ElementaryTypeName","src":"3463:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":190,"mutability":"mutable","name":"tokenId","nameLocation":"3483:7:1","nodeType":"VariableDeclaration","scope":193,"src":"3475:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":189,"name":"uint256","nodeType":"ElementaryTypeName","src":"3475:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3448:43:1"},"returnParameters":{"id":192,"nodeType":"ParameterList","parameters":[],"src":"3500:0:1"},"scope":228,"src":"3427:74:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":194,"nodeType":"StructuredDocumentation","src":"3507:452:1","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":201,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3973:7:1","nodeType":"FunctionDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":196,"mutability":"mutable","name":"to","nameLocation":"3989:2:1","nodeType":"VariableDeclaration","scope":201,"src":"3981:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":195,"name":"address","nodeType":"ElementaryTypeName","src":"3981:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":198,"mutability":"mutable","name":"tokenId","nameLocation":"4001:7:1","nodeType":"VariableDeclaration","scope":201,"src":"3993:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"3993:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3980:29:1"},"returnParameters":{"id":200,"nodeType":"ParameterList","parameters":[],"src":"4018:0:1"},"scope":228,"src":"3964:55:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":202,"nodeType":"StructuredDocumentation","src":"4025:309:1","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":209,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4348:17:1","nodeType":"FunctionDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"operator","nameLocation":"4374:8:1","nodeType":"VariableDeclaration","scope":209,"src":"4366:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":203,"name":"address","nodeType":"ElementaryTypeName","src":"4366:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":206,"mutability":"mutable","name":"approved","nameLocation":"4389:8:1","nodeType":"VariableDeclaration","scope":209,"src":"4384:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":205,"name":"bool","nodeType":"ElementaryTypeName","src":"4384:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:33:1"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[],"src":"4407:0:1"},"scope":228,"src":"4339:69:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"4414:139:1","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":217,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4567:11:1","nodeType":"FunctionDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"tokenId","nameLocation":"4587:7:1","nodeType":"VariableDeclaration","scope":217,"src":"4579:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":211,"name":"uint256","nodeType":"ElementaryTypeName","src":"4579:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4578:17:1"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"mutability":"mutable","name":"operator","nameLocation":"4627:8:1","nodeType":"VariableDeclaration","scope":217,"src":"4619:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":214,"name":"address","nodeType":"ElementaryTypeName","src":"4619:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4618:18:1"},"scope":228,"src":"4558:79:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"4643:138:1","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":227,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4795:16:1","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"owner","nameLocation":"4820:5:1","nodeType":"VariableDeclaration","scope":227,"src":"4812:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":219,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"operator","nameLocation":"4835:8:1","nodeType":"VariableDeclaration","scope":227,"src":"4827:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"4827:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4811:33:1"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":227,"src":"4868:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":224,"name":"bool","nodeType":"ElementaryTypeName","src":"4868:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4867:6:1"},"scope":228,"src":"4786:88:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":229,"src":"250:4626:1","usedErrors":[]}],"src":"108:4769:1"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"id":2,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[246]},"id":247,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":230,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":231,"nodeType":"StructuredDocumentation","src":"141:152:2","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":246,"linearizedBaseContracts":[246],"name":"IERC721Receiver","nameLocation":"304:15:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"326:493:2","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":245,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:2","nodeType":"FunctionDefinition","parameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"operator","nameLocation":"867:8:2","nodeType":"VariableDeclaration","scope":245,"src":"859:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":236,"mutability":"mutable","name":"from","nameLocation":"893:4:2","nodeType":"VariableDeclaration","scope":245,"src":"885:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":235,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":238,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:2","nodeType":"VariableDeclaration","scope":245,"src":"907:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":237,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":240,"mutability":"mutable","name":"data","nameLocation":"947:4:2","nodeType":"VariableDeclaration","scope":245,"src":"932:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":239,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:2"},"returnParameters":{"id":244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":245,"src":"976:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":242,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:2"},"scope":246,"src":"824:160:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":247,"src":"294:692:2","usedErrors":[]}],"src":"116:871:2"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"id":3,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[890],"IERC721":[228],"IERC721Metadata":[273]},"id":274,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":248,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":249,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":274,"sourceUnit":229,"src":"137:24:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":251,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":228,"src":"326:7:3"},"id":252,"nodeType":"InheritanceSpecifier","src":"326:7:3"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"163:133:3","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":273,"linearizedBaseContracts":[273,228,890],"name":"IERC721Metadata","nameLocation":"307:15:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":253,"nodeType":"StructuredDocumentation","src":"340:58:3","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":258,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"412:4:3","nodeType":"FunctionDefinition","parameters":{"id":254,"nodeType":"ParameterList","parameters":[],"src":"416:2:3"},"returnParameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":258,"src":"442:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":255,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"441:15:3"},"scope":273,"src":"403:54:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":259,"nodeType":"StructuredDocumentation","src":"463:60:3","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":264,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"537:6:3","nodeType":"FunctionDefinition","parameters":{"id":260,"nodeType":"ParameterList","parameters":[],"src":"543:2:3"},"returnParameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":264,"src":"569:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":261,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"568:15:3"},"scope":273,"src":"528:56:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":265,"nodeType":"StructuredDocumentation","src":"590:90:3","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":272,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"694:8:3","nodeType":"FunctionDefinition","parameters":{"id":268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":267,"mutability":"mutable","name":"tokenId","nameLocation":"711:7:3","nodeType":"VariableDeclaration","scope":272,"src":"703:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":266,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"702:17:3"},"returnParameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":272,"src":"743:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":269,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"742:15:3"},"scope":273,"src":"685:73:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":274,"src":"297:463:3","usedErrors":[]}],"src":"112:649:3"}},"@openzeppelin/contracts/utils/Address.sol":{"id":4,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[603]},"id":604,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":275,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":276,"nodeType":"StructuredDocumentation","src":"126:67:4","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":603,"linearizedBaseContracts":[603],"name":"Address","nameLocation":"202:7:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":290,"nodeType":"Block","src":"1478:254:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":284,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"1702:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1702:12:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1702:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":283,"id":289,"nodeType":"Return","src":"1695:30:4"}]},"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"216:1191:4","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":291,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:4","nodeType":"FunctionDefinition","parameters":{"id":280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"account","nameLocation":"1440:7:4","nodeType":"VariableDeclaration","scope":291,"src":"1432:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":278,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:4"},"returnParameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":291,"src":"1472:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":281,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:4"},"scope":603,"src":"1412:320:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":324,"nodeType":"Block","src":"2718:241:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":302,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$603","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$603","typeString":"library Address"}],"id":301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:4","typeDescriptions":{}}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2736:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2736:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":305,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"2761:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":299,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2728:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":309,"nodeType":"ExpressionStatement","src":"2728:73:4"},{"assignments":[311,null],"declarations":[{"constant":false,"id":311,"mutability":"mutable","name":"success","nameLocation":"2818:7:4","nodeType":"VariableDeclaration","scope":324,"src":"2813:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":310,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":318,"initialValue":{"arguments":[{"hexValue":"","id":316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":312,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"2831:9:4","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2831:14:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":314,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"2853:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2831:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:4"},{"expression":{"arguments":[{"id":320,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":311,"src":"2882:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":319,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2874:78:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":323,"nodeType":"ExpressionStatement","src":"2874:78:4"}]},"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"1738:904:4","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":325,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:4","nodeType":"FunctionDefinition","parameters":{"id":297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:4","nodeType":"VariableDeclaration","scope":325,"src":"2666:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":296,"mutability":"mutable","name":"amount","nameLocation":"2701:6:4","nodeType":"VariableDeclaration","scope":325,"src":"2693:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":295,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:4"},"returnParameters":{"id":298,"nodeType":"ParameterList","parameters":[],"src":"2718:0:4"},"scope":603,"src":"2647:312:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":342,"nodeType":"Block","src":"3790:96:4","statements":[{"expression":{"arguments":[{"id":336,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"3829:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":337,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"3837:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":335,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[383,427],"referencedDeclaration":427,"src":"3807:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3807:72:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":334,"id":341,"nodeType":"Return","src":"3800:79:4"}]},"documentation":{"id":326,"nodeType":"StructuredDocumentation","src":"2965:731:4","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":343,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:4","nodeType":"FunctionDefinition","parameters":{"id":331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":328,"mutability":"mutable","name":"target","nameLocation":"3731:6:4","nodeType":"VariableDeclaration","scope":343,"src":"3723:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":327,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":330,"mutability":"mutable","name":"data","nameLocation":"3752:4:4","nodeType":"VariableDeclaration","scope":343,"src":"3739:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":329,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:4"},"returnParameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":343,"src":"3776:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":332,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:4"},"scope":603,"src":"3701:185:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":362,"nodeType":"Block","src":"4255:76:4","statements":[{"expression":{"arguments":[{"id":356,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"4294:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":357,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"4302:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":359,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"4311:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":355,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[383,427],"referencedDeclaration":427,"src":"4272:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4272:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":354,"id":361,"nodeType":"Return","src":"4265:59:4"}]},"documentation":{"id":344,"nodeType":"StructuredDocumentation","src":"3892:211:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":363,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:4","nodeType":"FunctionDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":346,"mutability":"mutable","name":"target","nameLocation":"4147:6:4","nodeType":"VariableDeclaration","scope":363,"src":"4139:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":348,"mutability":"mutable","name":"data","nameLocation":"4176:4:4","nodeType":"VariableDeclaration","scope":363,"src":"4163:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":347,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:4","nodeType":"VariableDeclaration","scope":363,"src":"4190:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":349,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:4"},"returnParameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"4241:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":352,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:4"},"scope":603,"src":"4108:223:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":382,"nodeType":"Block","src":"4806:111:4","statements":[{"expression":{"arguments":[{"id":376,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"4845:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":377,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"4853:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"4859:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":375,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[383,427],"referencedDeclaration":427,"src":"4823:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4823:87:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":374,"id":381,"nodeType":"Return","src":"4816:94:4"}]},"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"4337:351:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":383,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:4","nodeType":"FunctionDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"target","nameLocation":"4732:6:4","nodeType":"VariableDeclaration","scope":383,"src":"4724:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"data","nameLocation":"4753:4:4","nodeType":"VariableDeclaration","scope":383,"src":"4740:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":367,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":370,"mutability":"mutable","name":"value","nameLocation":"4767:5:4","nodeType":"VariableDeclaration","scope":383,"src":"4759:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":369,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:4"},"returnParameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":383,"src":"4792:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":372,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:4"},"scope":603,"src":"4693:224:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":426,"nodeType":"Block","src":"5344:267:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":400,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$603","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$603","typeString":"library Address"}],"id":399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:4","typeDescriptions":{}}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5362:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5362:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"5387:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":397,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5354:81:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":407,"nodeType":"ExpressionStatement","src":"5354:81:4"},{"assignments":[409,411],"declarations":[{"constant":false,"id":409,"mutability":"mutable","name":"success","nameLocation":"5451:7:4","nodeType":"VariableDeclaration","scope":426,"src":"5446:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":408,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":411,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:4","nodeType":"VariableDeclaration","scope":426,"src":"5460:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":410,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":418,"initialValue":{"arguments":[{"id":416,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"5513:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":412,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"5487:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5487:11:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"5506:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5487:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:4"},{"expression":{"arguments":[{"id":420,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"5562:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":421,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"5570:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":422,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"5579:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":423,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"5591:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":419,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"5535:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5535:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":396,"id":425,"nodeType":"Return","src":"5528:76:4"}]},"documentation":{"id":384,"nodeType":"StructuredDocumentation","src":"4923:237:4","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":427,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:4","nodeType":"FunctionDefinition","parameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"mutability":"mutable","name":"target","nameLocation":"5213:6:4","nodeType":"VariableDeclaration","scope":427,"src":"5205:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"data","nameLocation":"5242:4:4","nodeType":"VariableDeclaration","scope":427,"src":"5229:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":387,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":390,"mutability":"mutable","name":"value","nameLocation":"5264:5:4","nodeType":"VariableDeclaration","scope":427,"src":"5256:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":389,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:4","nodeType":"VariableDeclaration","scope":427,"src":"5279:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":391,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:4"},"returnParameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"5330:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":394,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:4"},"scope":603,"src":"5165:446:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":443,"nodeType":"Block","src":"5888:97:4","statements":[{"expression":{"arguments":[{"id":438,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"5924:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":439,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"5932:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":437,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[444,473],"referencedDeclaration":473,"src":"5905:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5905:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":436,"id":442,"nodeType":"Return","src":"5898:80:4"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"5617:166:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":444,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:4","nodeType":"FunctionDefinition","parameters":{"id":433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"target","nameLocation":"5824:6:4","nodeType":"VariableDeclaration","scope":444,"src":"5816:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":429,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":432,"mutability":"mutable","name":"data","nameLocation":"5845:4:4","nodeType":"VariableDeclaration","scope":444,"src":"5832:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":431,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:4"},"returnParameters":{"id":436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":444,"src":"5874:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":434,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:4"},"scope":603,"src":"5788:197:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":472,"nodeType":"Block","src":"6327:168:4","statements":[{"assignments":[457,459],"declarations":[{"constant":false,"id":457,"mutability":"mutable","name":"success","nameLocation":"6343:7:4","nodeType":"VariableDeclaration","scope":472,"src":"6338:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":456,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":459,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:4","nodeType":"VariableDeclaration","scope":472,"src":"6352:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":458,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":464,"initialValue":{"arguments":[{"id":462,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"6397:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":460,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6379:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:4","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6379:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:4"},{"expression":{"arguments":[{"id":466,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6446:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":467,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"6454:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":468,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"6463:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":469,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"6475:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":465,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"6419:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6419:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":455,"id":471,"nodeType":"Return","src":"6412:76:4"}]},"documentation":{"id":445,"nodeType":"StructuredDocumentation","src":"5991:173:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":473,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:4","nodeType":"FunctionDefinition","parameters":{"id":452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":447,"mutability":"mutable","name":"target","nameLocation":"6214:6:4","nodeType":"VariableDeclaration","scope":473,"src":"6206:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":446,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":449,"mutability":"mutable","name":"data","nameLocation":"6243:4:4","nodeType":"VariableDeclaration","scope":473,"src":"6230:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":448,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":451,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:4","nodeType":"VariableDeclaration","scope":473,"src":"6257:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":450,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:4"},"returnParameters":{"id":455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":473,"src":"6313:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":453,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:4"},"scope":603,"src":"6169:326:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":489,"nodeType":"Block","src":"6771:101:4","statements":[{"expression":{"arguments":[{"id":484,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"6809:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":485,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"6817:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":483,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[490,519],"referencedDeclaration":519,"src":"6788:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6788:77:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":482,"id":488,"nodeType":"Return","src":"6781:84:4"}]},"documentation":{"id":474,"nodeType":"StructuredDocumentation","src":"6501:168:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":490,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:4","nodeType":"FunctionDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":476,"mutability":"mutable","name":"target","nameLocation":"6712:6:4","nodeType":"VariableDeclaration","scope":490,"src":"6704:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":475,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":478,"mutability":"mutable","name":"data","nameLocation":"6733:4:4","nodeType":"VariableDeclaration","scope":490,"src":"6720:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":477,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:4"},"returnParameters":{"id":482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":490,"src":"6757:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":480,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:4"},"scope":603,"src":"6674:198:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":518,"nodeType":"Block","src":"7213:170:4","statements":[{"assignments":[503,505],"declarations":[{"constant":false,"id":503,"mutability":"mutable","name":"success","nameLocation":"7229:7:4","nodeType":"VariableDeclaration","scope":518,"src":"7224:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":502,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":505,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:4","nodeType":"VariableDeclaration","scope":518,"src":"7238:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":504,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":510,"initialValue":{"arguments":[{"id":508,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"7285:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":506,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"7265:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:4","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7265:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:4"},{"expression":{"arguments":[{"id":512,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"7334:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":513,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"7342:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":514,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"7351:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":515,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"7363:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":511,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"7307:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7307:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":501,"id":517,"nodeType":"Return","src":"7300:76:4"}]},"documentation":{"id":491,"nodeType":"StructuredDocumentation","src":"6878:175:4","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":519,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:4","nodeType":"FunctionDefinition","parameters":{"id":498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"target","nameLocation":"7105:6:4","nodeType":"VariableDeclaration","scope":519,"src":"7097:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":495,"mutability":"mutable","name":"data","nameLocation":"7134:4:4","nodeType":"VariableDeclaration","scope":519,"src":"7121:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":494,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":497,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:4","nodeType":"VariableDeclaration","scope":519,"src":"7148:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":496,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:4"},"returnParameters":{"id":501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":519,"src":"7199:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":499,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:4"},"scope":603,"src":"7058:325:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":557,"nodeType":"Block","src":"7865:434:4","statements":[{"condition":{"id":533,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"7879:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":555,"nodeType":"Block","src":"8235:58:4","statements":[{"expression":{"arguments":[{"id":551,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"8257:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":552,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"8269:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":550,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"8249:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8249:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":554,"nodeType":"ExpressionStatement","src":"8249:33:4"}]},"id":556,"nodeType":"IfStatement","src":"7875:418:4","trueBody":{"id":549,"nodeType":"Block","src":"7888:341:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":534,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"7906:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7906:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":546,"nodeType":"IfStatement","src":"7902:286:4","trueBody":{"id":545,"nodeType":"Block","src":"7930:258:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":540,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"8132:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":539,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"8121:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8121:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":538,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8113:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":544,"nodeType":"ExpressionStatement","src":"8113:60:4"}]}},{"expression":{"id":547,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"8208:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":532,"id":548,"nodeType":"Return","src":"8201:17:4"}]}}]},"documentation":{"id":520,"nodeType":"StructuredDocumentation","src":"7389:277:4","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":558,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:4","nodeType":"FunctionDefinition","parameters":{"id":529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":522,"mutability":"mutable","name":"target","nameLocation":"7724:6:4","nodeType":"VariableDeclaration","scope":558,"src":"7716:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":521,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":524,"mutability":"mutable","name":"success","nameLocation":"7745:7:4","nodeType":"VariableDeclaration","scope":558,"src":"7740:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":523,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":526,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:4","nodeType":"VariableDeclaration","scope":558,"src":"7762:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":525,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":528,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:4","nodeType":"VariableDeclaration","scope":558,"src":"7795:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":527,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:4"},"returnParameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":558,"src":"7851:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":530,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:4"},"scope":603,"src":"7671:628:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":581,"nodeType":"Block","src":"8680:135:4","statements":[{"condition":{"id":570,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"8694:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":579,"nodeType":"Block","src":"8751:58:4","statements":[{"expression":{"arguments":[{"id":575,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"8773:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":576,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"8785:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":574,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"8765:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8765:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":578,"nodeType":"ExpressionStatement","src":"8765:33:4"}]},"id":580,"nodeType":"IfStatement","src":"8690:119:4","trueBody":{"id":573,"nodeType":"Block","src":"8703:42:4","statements":[{"expression":{"id":571,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"8724:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":569,"id":572,"nodeType":"Return","src":"8717:17:4"}]}}]},"documentation":{"id":559,"nodeType":"StructuredDocumentation","src":"8305:210:4","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":582,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:4","nodeType":"FunctionDefinition","parameters":{"id":566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"mutability":"mutable","name":"success","nameLocation":"8560:7:4","nodeType":"VariableDeclaration","scope":582,"src":"8555:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":560,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":563,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:4","nodeType":"VariableDeclaration","scope":582,"src":"8577:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":562,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":565,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:4","nodeType":"VariableDeclaration","scope":582,"src":"8610:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":564,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:4"},"returnParameters":{"id":569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":582,"src":"8666:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":567,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:4"},"scope":603,"src":"8520:295:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":601,"nodeType":"Block","src":"8904:457:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":589,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"8980:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8980:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":599,"nodeType":"Block","src":"9310:45:4","statements":[{"expression":{"arguments":[{"id":596,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"9331:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":595,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9324:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":598,"nodeType":"ExpressionStatement","src":"9324:20:4"}]},"id":600,"nodeType":"IfStatement","src":"8976:379:4","trueBody":{"id":594,"nodeType":"Block","src":"9003:301:4","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:4","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:4","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:4"},"nodeType":"YulFunctionCall","src":"9202:17:4"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:4","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:4"},"nodeType":"YulFunctionCall","src":"9243:19:4"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:4"},"nodeType":"YulFunctionCall","src":"9236:44:4"},"nodeType":"YulExpressionStatement","src":"9236:44:4"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":584,"isOffset":false,"isSlot":false,"src":"9208:10:4","valueSize":1},{"declaration":584,"isOffset":false,"isSlot":false,"src":"9251:10:4","valueSize":1}],"id":593,"nodeType":"InlineAssembly","src":"9152:142:4"}]}}]},"id":602,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:4","nodeType":"FunctionDefinition","parameters":{"id":587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":584,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:4","nodeType":"VariableDeclaration","scope":602,"src":"8838:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":583,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":586,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:4","nodeType":"VariableDeclaration","scope":602,"src":"8863:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":585,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:4"},"returnParameters":{"id":588,"nodeType":"ParameterList","parameters":[],"src":"8904:0:4"},"scope":603,"src":"8821:540:4","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":604,"src":"194:9169:4","usedErrors":[]}],"src":"101:9263:4"}},"@openzeppelin/contracts/utils/Context.sol":{"id":5,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[625]},"id":626,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":605,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:5"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":606,"nodeType":"StructuredDocumentation","src":"111:496:5","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":625,"linearizedBaseContracts":[625],"name":"Context","nameLocation":"626:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":614,"nodeType":"Block","src":"702:34:5","statements":[{"expression":{"expression":{"id":611,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":610,"id":613,"nodeType":"Return","src":"712:17:5"}]},"id":615,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:5","nodeType":"FunctionDefinition","parameters":{"id":607,"nodeType":"ParameterList","parameters":[],"src":"659:2:5"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":615,"src":"693:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:5"},"scope":625,"src":"640:96:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":623,"nodeType":"Block","src":"809:32:5","statements":[{"expression":{"expression":{"id":620,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":619,"id":622,"nodeType":"Return","src":"819:15:5"}]},"id":624,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:5","nodeType":"FunctionDefinition","parameters":{"id":616,"nodeType":"ParameterList","parameters":[],"src":"759:2:5"},"returnParameters":{"id":619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":624,"src":"793:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":617,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:5"},"scope":625,"src":"742:99:5","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":626,"src":"608:235:5","usedErrors":[]}],"src":"86:758:5"}},"@openzeppelin/contracts/utils/Strings.sol":{"id":6,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[1756],"SignedMath":[1861],"Strings":[854]},"id":855,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":627,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:6"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":628,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":855,"sourceUnit":1757,"src":"126:25:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":629,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":855,"sourceUnit":1862,"src":"152:31:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":630,"nodeType":"StructuredDocumentation","src":"185:34:6","text":" @dev String operations."},"fullyImplemented":true,"id":854,"linearizedBaseContracts":[854],"name":"Strings","nameLocation":"228:7:6","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":633,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:6","nodeType":"VariableDeclaration","scope":854,"src":"242:54:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":631,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:6","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":636,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:6","nodeType":"VariableDeclaration","scope":854,"src":"302:43:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":634,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:6","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":683,"nodeType":"Block","src":"518:625:6","statements":[{"id":682,"nodeType":"UncheckedBlock","src":"528:609:6","statements":[{"assignments":[645],"declarations":[{"constant":false,"id":645,"mutability":"mutable","name":"length","nameLocation":"560:6:6","nodeType":"VariableDeclaration","scope":682,"src":"552:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":644,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":652,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"580:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":646,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"569:4:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1756_$","typeString":"type(library Math)"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":1593,"src":"569:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"569:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:6"},{"assignments":[654],"declarations":[{"constant":false,"id":654,"mutability":"mutable","name":"buffer","nameLocation":"618:6:6","nodeType":"VariableDeclaration","scope":682,"src":"604:20:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":653,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":659,"initialValue":{"arguments":[{"id":657,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"638:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":655,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"627:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:6"},{"assignments":[661],"declarations":[{"constant":false,"id":661,"mutability":"mutable","name":"ptr","nameLocation":"667:3:6","nodeType":"VariableDeclaration","scope":682,"src":"659:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":662,"nodeType":"VariableDeclarationStatement","src":"659:11:6"},{"AST":{"nodeType":"YulBlock","src":"740:67:6","statements":[{"nodeType":"YulAssignment","src":"758:35:6","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:6","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:6"},"nodeType":"YulFunctionCall","src":"777:15:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:6"},"nodeType":"YulFunctionCall","src":"765:28:6"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:6"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":654,"isOffset":false,"isSlot":false,"src":"769:6:6","valueSize":1},{"declaration":645,"isOffset":false,"isSlot":false,"src":"785:6:6","valueSize":1},{"declaration":661,"isOffset":false,"isSlot":false,"src":"758:3:6","valueSize":1}],"id":663,"nodeType":"InlineAssembly","src":"731:76:6"},{"body":{"id":678,"nodeType":"Block","src":"833:267:6","statements":[{"expression":{"id":666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:6","subExpression":{"id":665,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"851:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":667,"nodeType":"ExpressionStatement","src":"851:5:6"},{"AST":{"nodeType":"YulBlock","src":"934:84:6","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:6"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:6","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:6"},"nodeType":"YulFunctionCall","src":"974:14:6"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:6"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:6"},"nodeType":"YulFunctionCall","src":"969:30:6"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:6"},"nodeType":"YulFunctionCall","src":"956:44:6"},"nodeType":"YulExpressionStatement","src":"956:44:6"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":633,"isOffset":false,"isSlot":false,"src":"990:8:6","valueSize":1},{"declaration":661,"isOffset":false,"isSlot":false,"src":"964:3:6","valueSize":1},{"declaration":639,"isOffset":false,"isSlot":false,"src":"978:5:6","valueSize":1}],"id":668,"nodeType":"InlineAssembly","src":"925:93:6"},{"expression":{"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"1035:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:6","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":672,"nodeType":"ExpressionStatement","src":"1035:11:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"1068:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":677,"nodeType":"IfStatement","src":"1064:21:6","trueBody":{"id":676,"nodeType":"Break","src":"1080:5:6"}}]},"condition":{"hexValue":"74727565","id":664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":679,"nodeType":"WhileStatement","src":"820:280:6"},{"expression":{"id":680,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"1120:6:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":643,"id":681,"nodeType":"Return","src":"1113:13:6"}]}]},"documentation":{"id":637,"nodeType":"StructuredDocumentation","src":"352:90:6","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":684,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:6","nodeType":"FunctionDefinition","parameters":{"id":640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":639,"mutability":"mutable","name":"value","nameLocation":"473:5:6","nodeType":"VariableDeclaration","scope":684,"src":"465:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":638,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:6"},"returnParameters":{"id":643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":684,"src":"503:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":641,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:6"},"scope":854,"src":"447:696:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":711,"nodeType":"Block","src":"1313:103:6","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"1354:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:6","trueExpression":{"hexValue":"2d","id":699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"1400:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":703,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"1385:10:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$1861_$","typeString":"type(library SignedMath)"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":1860,"src":"1385:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1385:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":702,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[684,712],"referencedDeclaration":684,"src":"1376:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1376:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":694,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1337:71:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":692,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:6","typeDescriptions":{}}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1330:79:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":691,"id":710,"nodeType":"Return","src":"1323:86:6"}]},"documentation":{"id":685,"nodeType":"StructuredDocumentation","src":"1149:89:6","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":712,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:6","nodeType":"FunctionDefinition","parameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":687,"mutability":"mutable","name":"value","nameLocation":"1268:5:6","nodeType":"VariableDeclaration","scope":712,"src":"1261:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":686,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:6"},"returnParameters":{"id":691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":712,"src":"1298:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":689,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:6"},"scope":854,"src":"1243:173:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":731,"nodeType":"Block","src":"1595:100:6","statements":[{"id":730,"nodeType":"UncheckedBlock","src":"1605:84:6","statements":[{"expression":{"arguments":[{"id":721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"1648:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"1667:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":722,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"1655:4:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$1756_$","typeString":"type(library Math)"}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":1716,"src":"1655:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1655:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":720,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[732,808,828],"referencedDeclaration":808,"src":"1636:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1636:42:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":719,"id":729,"nodeType":"Return","src":"1629:49:6"}]}]},"documentation":{"id":713,"nodeType":"StructuredDocumentation","src":"1422:94:6","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":732,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:6","nodeType":"FunctionDefinition","parameters":{"id":716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":715,"mutability":"mutable","name":"value","nameLocation":"1550:5:6","nodeType":"VariableDeclaration","scope":732,"src":"1542:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":714,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:6"},"returnParameters":{"id":719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":732,"src":"1580:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":717,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:6"},"scope":854,"src":"1521:174:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":807,"nodeType":"Block","src":"1908:347:6","statements":[{"assignments":[743],"declarations":[{"constant":false,"id":743,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:6","nodeType":"VariableDeclaration","scope":807,"src":"1918:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":742,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":752,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":747,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"1954:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":744,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1940:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:6"},{"expression":{"id":757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":753,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"1975:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":755,"indexExpression":{"hexValue":"30","id":754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":758,"nodeType":"ExpressionStatement","src":"1975:15:6"},{"expression":{"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":759,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"2000:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":761,"indexExpression":{"hexValue":"31","id":760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":764,"nodeType":"ExpressionStatement","src":"2000:15:6"},{"body":{"id":793,"nodeType":"Block","src":"2070:83:6","statements":[{"expression":{"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":779,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"2084:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":781,"indexExpression":{"id":780,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"2091:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":782,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"2096:8:6","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":786,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"2105:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:6","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":788,"nodeType":"ExpressionStatement","src":"2084:33:6"},{"expression":{"id":791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"2131:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":792,"nodeType":"ExpressionStatement","src":"2131:11:6"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":773,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"2058:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":794,"initializationExpression":{"assignments":[766],"declarations":[{"constant":false,"id":766,"mutability":"mutable","name":"i","nameLocation":"2038:1:6","nodeType":"VariableDeclaration","scope":794,"src":"2030:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":765,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":772,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":768,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"2046:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:6"},"loopExpression":{"expression":{"id":777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:6","subExpression":{"id":776,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"2067:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":778,"nodeType":"ExpressionStatement","src":"2065:3:6"},"nodeType":"ForStatement","src":"2025:128:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"2170:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":795,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2162:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":801,"nodeType":"ExpressionStatement","src":"2162:55:6"},{"expression":{"arguments":[{"id":804,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"2241:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":802,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:6","typeDescriptions":{}}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2234:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":741,"id":806,"nodeType":"Return","src":"2227:21:6"}]},"documentation":{"id":733,"nodeType":"StructuredDocumentation","src":"1701:112:6","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":808,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:6","nodeType":"FunctionDefinition","parameters":{"id":738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":735,"mutability":"mutable","name":"value","nameLocation":"1847:5:6","nodeType":"VariableDeclaration","scope":808,"src":"1839:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":734,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":737,"mutability":"mutable","name":"length","nameLocation":"1862:6:6","nodeType":"VariableDeclaration","scope":808,"src":"1854:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":736,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:6"},"returnParameters":{"id":741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":808,"src":"1893:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":739,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:6"},"scope":854,"src":"1818:437:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":827,"nodeType":"Block","src":"2480:76:6","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":821,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"2525:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":819,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:6","typeDescriptions":{}}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2517:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:6","typeDescriptions":{}}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2509:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":824,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"2533:15:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":816,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[732,808,828],"referencedDeclaration":808,"src":"2497:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2497:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":815,"id":826,"nodeType":"Return","src":"2490:59:6"}]},"documentation":{"id":809,"nodeType":"StructuredDocumentation","src":"2261:141:6","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":828,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:6","nodeType":"FunctionDefinition","parameters":{"id":812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"mutability":"mutable","name":"addr","nameLocation":"2436:4:6","nodeType":"VariableDeclaration","scope":828,"src":"2428:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":810,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:6"},"returnParameters":{"id":815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":828,"src":"2465:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":813,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:6"},"scope":854,"src":"2407:149:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":852,"nodeType":"Block","src":"2711:66:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":841,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"2744:1:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":839,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:6","typeDescriptions":{}}},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2738:8:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":838,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2728:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":847,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"2767:1:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":845,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:6","typeDescriptions":{}}},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2761:8:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":844,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2751:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":837,"id":851,"nodeType":"Return","src":"2721:49:6"}]},"documentation":{"id":829,"nodeType":"StructuredDocumentation","src":"2562:66:6","text":" @dev Returns true if the two strings are equal."},"id":853,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:6","nodeType":"FunctionDefinition","parameters":{"id":834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"mutability":"mutable","name":"a","nameLocation":"2662:1:6","nodeType":"VariableDeclaration","scope":853,"src":"2648:15:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":830,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":833,"mutability":"mutable","name":"b","nameLocation":"2679:1:6","nodeType":"VariableDeclaration","scope":853,"src":"2665:15:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":832,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:6"},"returnParameters":{"id":837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":853,"src":"2705:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":835,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:6"},"scope":854,"src":"2633:144:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":855,"src":"220:2559:6","usedErrors":[]}],"src":"101:2679:6"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"id":7,"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[878],"IERC165":[890]},"id":879,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":856,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:7"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":857,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":879,"sourceUnit":891,"src":"124:23:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":859,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":890,"src":"754:7:7"},"id":860,"nodeType":"InheritanceSpecifier","src":"754:7:7"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":858,"nodeType":"StructuredDocumentation","src":"149:576:7","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":878,"linearizedBaseContracts":[878,890],"name":"ERC165","nameLocation":"744:6:7","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[889],"body":{"id":876,"nodeType":"Block","src":"920:64:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":869,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"937:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":871,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"957:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$890_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$890_$","typeString":"type(contract IERC165)"}],"id":870,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$890","typeString":"type(contract IERC165)"}},"id":873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":868,"id":875,"nodeType":"Return","src":"930:47:7"}]},"documentation":{"id":861,"nodeType":"StructuredDocumentation","src":"768:56:7","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":877,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:7","nodeType":"FunctionDefinition","overrides":{"id":865,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:7"},"parameters":{"id":864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":863,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:7","nodeType":"VariableDeclaration","scope":877,"src":"856:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":862,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:7"},"returnParameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":877,"src":"914:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":866,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:7"},"scope":878,"src":"829:155:7","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":879,"src":"726:260:7","usedErrors":[]}],"src":"99:888:7"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"id":8,"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[890]},"id":891,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":880,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":881,"nodeType":"StructuredDocumentation","src":"125:279:8","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":890,"linearizedBaseContracts":[890],"name":"IERC165","nameLocation":"415:7:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":882,"nodeType":"StructuredDocumentation","src":"429:340:8","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":889,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:8","nodeType":"FunctionDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:8","nodeType":"VariableDeclaration","scope":889,"src":"801:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":883,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:8"},"returnParameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":889,"src":"844:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":886,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:8"},"scope":890,"src":"774:76:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":891,"src":"405:447:8","usedErrors":[]}],"src":"100:753:8"}},"@openzeppelin/contracts/utils/math/Math.sol":{"id":9,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[1756]},"id":1757,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":892,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":893,"nodeType":"StructuredDocumentation","src":"128:73:9","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1756,"linearizedBaseContracts":[1756],"name":"Math","nameLocation":"210:4:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":897,"members":[{"id":894,"name":"Down","nameLocation":"245:4:9","nodeType":"EnumValue","src":"245:4:9"},{"id":895,"name":"Up","nameLocation":"287:2:9","nodeType":"EnumValue","src":"287:2:9"},{"id":896,"name":"Zero","nameLocation":"318:4:9","nodeType":"EnumValue","src":"318:4:9"}],"name":"Rounding","nameLocation":"226:8:9","nodeType":"EnumDefinition","src":"221:122:9"},{"body":{"id":914,"nodeType":"Block","src":"480:37:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":907,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"497:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":908,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"501:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":911,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"509:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:9","trueExpression":{"id":910,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"505:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":906,"id":913,"nodeType":"Return","src":"490:20:9"}]},"documentation":{"id":898,"nodeType":"StructuredDocumentation","src":"349:59:9","text":" @dev Returns the largest of two numbers."},"id":915,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:9","nodeType":"FunctionDefinition","parameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"mutability":"mutable","name":"a","nameLocation":"434:1:9","nodeType":"VariableDeclaration","scope":915,"src":"426:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":899,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":902,"mutability":"mutable","name":"b","nameLocation":"445:1:9","nodeType":"VariableDeclaration","scope":915,"src":"437:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":901,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:9"},"returnParameters":{"id":906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":915,"src":"471:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":904,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:9"},"scope":1756,"src":"413:104:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":932,"nodeType":"Block","src":"655:37:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":925,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"672:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":926,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"676:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":929,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"684:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:9","trueExpression":{"id":928,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"680:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":924,"id":931,"nodeType":"Return","src":"665:20:9"}]},"documentation":{"id":916,"nodeType":"StructuredDocumentation","src":"523:60:9","text":" @dev Returns the smallest of two numbers."},"id":933,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:9","nodeType":"FunctionDefinition","parameters":{"id":921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":918,"mutability":"mutable","name":"a","nameLocation":"609:1:9","nodeType":"VariableDeclaration","scope":933,"src":"601:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":917,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":920,"mutability":"mutable","name":"b","nameLocation":"620:1:9","nodeType":"VariableDeclaration","scope":933,"src":"612:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":919,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:9"},"returnParameters":{"id":924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":933,"src":"646:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":922,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:9"},"scope":1756,"src":"588:104:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":955,"nodeType":"Block","src":"876:82:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":943,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"931:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":944,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"935:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":946,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":947,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"941:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":948,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"945:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":950,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":942,"id":954,"nodeType":"Return","src":"923:28:9"}]},"documentation":{"id":934,"nodeType":"StructuredDocumentation","src":"698:102:9","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":956,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:9","nodeType":"FunctionDefinition","parameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":936,"mutability":"mutable","name":"a","nameLocation":"830:1:9","nodeType":"VariableDeclaration","scope":956,"src":"822:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":935,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":938,"mutability":"mutable","name":"b","nameLocation":"841:1:9","nodeType":"VariableDeclaration","scope":956,"src":"833:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":937,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:9"},"returnParameters":{"id":942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":956,"src":"867:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":940,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:9"},"scope":1756,"src":"805:153:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":980,"nodeType":"Block","src":"1228:123:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":966,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"1316:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":970,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"1330:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":973,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":974,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"1339:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:9","trueExpression":{"hexValue":"30","id":969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":965,"id":979,"nodeType":"Return","src":"1309:35:9"}]},"documentation":{"id":957,"nodeType":"StructuredDocumentation","src":"964:188:9","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":981,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:9","nodeType":"FunctionDefinition","parameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":959,"mutability":"mutable","name":"a","nameLocation":"1182:1:9","nodeType":"VariableDeclaration","scope":981,"src":"1174:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":958,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":961,"mutability":"mutable","name":"b","nameLocation":"1193:1:9","nodeType":"VariableDeclaration","scope":981,"src":"1185:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:9"},"returnParameters":{"id":965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":981,"src":"1219:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":963,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:9"},"scope":1756,"src":"1157:194:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1103,"nodeType":"Block","src":"1765:4115:9","statements":[{"id":1102,"nodeType":"UncheckedBlock","src":"1775:4099:9","statements":[{"assignments":[994],"declarations":[{"constant":false,"id":994,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:9","nodeType":"VariableDeclaration","scope":1102,"src":"2096:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":993,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":995,"nodeType":"VariableDeclarationStatement","src":"2096:13:9"},{"assignments":[997],"declarations":[{"constant":false,"id":997,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:9","nodeType":"VariableDeclaration","scope":1102,"src":"2168:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":996,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":998,"nodeType":"VariableDeclarationStatement","src":"2168:13:9"},{"AST":{"nodeType":"YulBlock","src":"2248:157:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:9","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:9"},"nodeType":"YulFunctionCall","src":"2289:6:9"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:9"},"nodeType":"YulFunctionCall","src":"2276:20:9"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:9","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:9"},"nodeType":"YulFunctionCall","src":"2322:9:9"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:9"}]},{"nodeType":"YulAssignment","src":"2348:43:9","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:9"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:9"},"nodeType":"YulFunctionCall","src":"2361:14:9"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:9"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:9"},"nodeType":"YulFunctionCall","src":"2377:13:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:9"},"nodeType":"YulFunctionCall","src":"2357:34:9"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:9"}]}]},"evmVersion":"london","externalReferences":[{"declaration":994,"isOffset":false,"isSlot":false,"src":"2313:5:9","valueSize":1},{"declaration":994,"isOffset":false,"isSlot":false,"src":"2369:5:9","valueSize":1},{"declaration":994,"isOffset":false,"isSlot":false,"src":"2384:5:9","valueSize":1},{"declaration":997,"isOffset":false,"isSlot":false,"src":"2348:5:9","valueSize":1},{"declaration":984,"isOffset":false,"isSlot":false,"src":"2283:1:9","valueSize":1},{"declaration":984,"isOffset":false,"isSlot":false,"src":"2326:1:9","valueSize":1},{"declaration":986,"isOffset":false,"isSlot":false,"src":"2286:1:9","valueSize":1},{"declaration":986,"isOffset":false,"isSlot":false,"src":"2329:1:9","valueSize":1}],"id":999,"nodeType":"InlineAssembly","src":"2239:166:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1000,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"2486:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1008,"nodeType":"IfStatement","src":"2482:368:9","trueBody":{"id":1007,"nodeType":"Block","src":"2498:352:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1003,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"2816:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1004,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"2824:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":992,"id":1006,"nodeType":"Return","src":"2809:26:9"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1010,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"2960:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1011,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"2974:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":1013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":1009,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2952:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1015,"nodeType":"ExpressionStatement","src":"2952:53:9"},{"assignments":[1017],"declarations":[{"constant":false,"id":1017,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:9","nodeType":"VariableDeclaration","scope":1102,"src":"3261:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1016,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1018,"nodeType":"VariableDeclarationStatement","src":"3261:17:9"},{"AST":{"nodeType":"YulBlock","src":"3301:291:9","statements":[{"nodeType":"YulAssignment","src":"3370:38:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:9"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:9"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:9"},"nodeType":"YulFunctionCall","src":"3383:25:9"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:9"}]},{"nodeType":"YulAssignment","src":"3490:41:9","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:9"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:9"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:9"},"nodeType":"YulFunctionCall","src":"3510:20:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:9"},"nodeType":"YulFunctionCall","src":"3499:32:9"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:9"}]},{"nodeType":"YulAssignment","src":"3548:30:9","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:9"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:9"},"nodeType":"YulFunctionCall","src":"3557:21:9"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:9"}]}]},"evmVersion":"london","externalReferences":[{"declaration":988,"isOffset":false,"isSlot":false,"src":"3396:11:9","valueSize":1},{"declaration":994,"isOffset":false,"isSlot":false,"src":"3524:5:9","valueSize":1},{"declaration":994,"isOffset":false,"isSlot":false,"src":"3548:5:9","valueSize":1},{"declaration":994,"isOffset":false,"isSlot":false,"src":"3561:5:9","valueSize":1},{"declaration":997,"isOffset":false,"isSlot":false,"src":"3490:5:9","valueSize":1},{"declaration":997,"isOffset":false,"isSlot":false,"src":"3503:5:9","valueSize":1},{"declaration":1017,"isOffset":false,"isSlot":false,"src":"3370:9:9","valueSize":1},{"declaration":1017,"isOffset":false,"isSlot":false,"src":"3513:9:9","valueSize":1},{"declaration":1017,"isOffset":false,"isSlot":false,"src":"3568:9:9","valueSize":1},{"declaration":984,"isOffset":false,"isSlot":false,"src":"3390:1:9","valueSize":1},{"declaration":986,"isOffset":false,"isSlot":false,"src":"3393:1:9","valueSize":1}],"id":1019,"nodeType":"InlineAssembly","src":"3292:300:9"},{"assignments":[1021],"declarations":[{"constant":false,"id":1021,"mutability":"mutable","name":"twos","nameLocation":"3907:4:9","nodeType":"VariableDeclaration","scope":1102,"src":"3899:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1020,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1029,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1022,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"3914:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:9","subExpression":{"id":1023,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"3930:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1027,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:9"},{"AST":{"nodeType":"YulBlock","src":"3969:362:9","statements":[{"nodeType":"YulAssignment","src":"4034:37:9","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:9"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:9"},"nodeType":"YulFunctionCall","src":"4049:22:9"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:9"}]},{"nodeType":"YulAssignment","src":"4138:25:9","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:9"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:9"},"nodeType":"YulFunctionCall","src":"4147:16:9"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:9"}]},{"nodeType":"YulAssignment","src":"4278:39:9","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:9","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:9"},"nodeType":"YulFunctionCall","src":"4294:12:9"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:9"},"nodeType":"YulFunctionCall","src":"4290:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:9"},"nodeType":"YulFunctionCall","src":"4286:31:9"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:9"}]}]},"evmVersion":"london","externalReferences":[{"declaration":988,"isOffset":false,"isSlot":false,"src":"4034:11:9","valueSize":1},{"declaration":988,"isOffset":false,"isSlot":false,"src":"4053:11:9","valueSize":1},{"declaration":994,"isOffset":false,"isSlot":false,"src":"4138:5:9","valueSize":1},{"declaration":994,"isOffset":false,"isSlot":false,"src":"4151:5:9","valueSize":1},{"declaration":1021,"isOffset":false,"isSlot":false,"src":"4066:4:9","valueSize":1},{"declaration":1021,"isOffset":false,"isSlot":false,"src":"4158:4:9","valueSize":1},{"declaration":1021,"isOffset":false,"isSlot":false,"src":"4278:4:9","valueSize":1},{"declaration":1021,"isOffset":false,"isSlot":false,"src":"4301:4:9","valueSize":1},{"declaration":1021,"isOffset":false,"isSlot":false,"src":"4308:4:9","valueSize":1}],"id":1030,"nodeType":"InlineAssembly","src":"3960:371:9"},{"expression":{"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1031,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"4397:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1032,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"4406:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1033,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"4414:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1036,"nodeType":"ExpressionStatement","src":"4397:21:9"},{"assignments":[1038],"declarations":[{"constant":false,"id":1038,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:9","nodeType":"VariableDeclaration","scope":1102,"src":"4736:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1037,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1045,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:9","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1040,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"4759:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1042,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:9"},{"expression":{"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1046,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"4992:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1048,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"5007:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1049,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"5021:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1053,"nodeType":"ExpressionStatement","src":"4992:36:9"},{"expression":{"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1054,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"5061:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1056,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"5076:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1057,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"5090:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1061,"nodeType":"ExpressionStatement","src":"5061:36:9"},{"expression":{"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1062,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"5131:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1064,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"5146:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1065,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"5160:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1069,"nodeType":"ExpressionStatement","src":"5131:36:9"},{"expression":{"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1070,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"5201:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1072,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"5216:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1073,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"5230:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1077,"nodeType":"ExpressionStatement","src":"5201:36:9"},{"expression":{"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1078,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"5271:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1080,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"5286:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1081,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"5300:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1085,"nodeType":"ExpressionStatement","src":"5271:36:9"},{"expression":{"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1086,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"5342:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1088,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"5357:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1089,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"5371:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1093,"nodeType":"ExpressionStatement","src":"5342:36:9"},{"expression":{"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1094,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"5812:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1095,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"5821:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1096,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"5829:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1099,"nodeType":"ExpressionStatement","src":"5812:24:9"},{"expression":{"id":1100,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"5857:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":992,"id":1101,"nodeType":"Return","src":"5850:13:9"}]}]},"documentation":{"id":982,"nodeType":"StructuredDocumentation","src":"1357:305:9","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":1104,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:9","nodeType":"FunctionDefinition","parameters":{"id":989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"x","nameLocation":"1691:1:9","nodeType":"VariableDeclaration","scope":1104,"src":"1683:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":983,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":986,"mutability":"mutable","name":"y","nameLocation":"1702:1:9","nodeType":"VariableDeclaration","scope":1104,"src":"1694:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":985,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":988,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:9","nodeType":"VariableDeclaration","scope":1104,"src":"1705:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":987,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:9"},"returnParameters":{"id":992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":991,"mutability":"mutable","name":"result","nameLocation":"1757:6:9","nodeType":"VariableDeclaration","scope":1104,"src":"1749:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":990,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:9"},"scope":1756,"src":"1667:4213:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1147,"nodeType":"Block","src":"6122:189:9","statements":[{"assignments":[1120],"declarations":[{"constant":false,"id":1120,"mutability":"mutable","name":"result","nameLocation":"6140:6:9","nodeType":"VariableDeclaration","scope":1147,"src":"6132:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1119,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1126,"initialValue":{"arguments":[{"id":1122,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"6156:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1123,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"6159:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1124,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"6162:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1121,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1104,1148],"referencedDeclaration":1104,"src":"6149:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6149:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:9"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$897","typeString":"enum Math.Rounding"},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1127,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"6188:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$897","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1128,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"6200:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$897_$","typeString":"type(enum Math.Rounding)"}},"id":1129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":895,"src":"6200:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$897","typeString":"enum Math.Rounding"}},"src":"6188:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1132,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"6222:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1133,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"6225:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1134,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"6228:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1131,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:9","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6215:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1144,"nodeType":"IfStatement","src":"6184:98:9","trueBody":{"id":1143,"nodeType":"Block","src":"6246:36:9","statements":[{"expression":{"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1139,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"6260:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1142,"nodeType":"ExpressionStatement","src":"6260:11:9"}]}},{"expression":{"id":1145,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"6298:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1118,"id":1146,"nodeType":"Return","src":"6291:13:9"}]},"documentation":{"id":1105,"nodeType":"StructuredDocumentation","src":"5886:121:9","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1148,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:9","nodeType":"FunctionDefinition","parameters":{"id":1115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1107,"mutability":"mutable","name":"x","nameLocation":"6036:1:9","nodeType":"VariableDeclaration","scope":1148,"src":"6028:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1106,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1109,"mutability":"mutable","name":"y","nameLocation":"6047:1:9","nodeType":"VariableDeclaration","scope":1148,"src":"6039:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1108,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1111,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:9","nodeType":"VariableDeclaration","scope":1148,"src":"6050:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1110,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1114,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:9","nodeType":"VariableDeclaration","scope":1148,"src":"6071:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$897","typeString":"enum Math.Rounding"},"typeName":{"id":1113,"nodeType":"UserDefinedTypeName","pathNode":{"id":1112,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":897,"src":"6071:8:9"},"referencedDeclaration":897,"src":"6071:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$897","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:9"},"returnParameters":{"id":1118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1148,"src":"6113:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1116,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:9"},"scope":1756,"src":"6012:299:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1259,"nodeType":"Block","src":"6587:1585:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1156,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"6601:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1162,"nodeType":"IfStatement","src":"6597:45:9","trueBody":{"id":1161,"nodeType":"Block","src":"6609:33:9","statements":[{"expression":{"hexValue":"30","id":1159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1155,"id":1160,"nodeType":"Return","src":"6623:8:9"}]}},{"assignments":[1164],"declarations":[{"constant":false,"id":1164,"mutability":"mutable","name":"result","nameLocation":"7329:6:9","nodeType":"VariableDeclaration","scope":1259,"src":"7321:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1163,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1173,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1167,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"7349:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1166,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1428,1464],"referencedDeclaration":1428,"src":"7344:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7344:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1171,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:9"},{"id":1258,"nodeType":"UncheckedBlock","src":"7758:408:9","statements":[{"expression":{"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1174,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"7782:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1175,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"7792:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1176,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"7801:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1177,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"7805:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1180,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1184,"nodeType":"ExpressionStatement","src":"7782:35:9"},{"expression":{"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1185,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"7831:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1186,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"7841:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1187,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"7850:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1188,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"7854:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1191,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1195,"nodeType":"ExpressionStatement","src":"7831:35:9"},{"expression":{"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1196,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"7880:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1197,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"7890:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1198,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"7899:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1199,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"7903:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1202,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1206,"nodeType":"ExpressionStatement","src":"7880:35:9"},{"expression":{"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1207,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"7929:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1208,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"7939:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1209,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"7948:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1210,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"7952:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1213,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1217,"nodeType":"ExpressionStatement","src":"7929:35:9"},{"expression":{"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1218,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"7978:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1219,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"7988:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1220,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"7997:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1221,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"8001:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1224,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1228,"nodeType":"ExpressionStatement","src":"7978:35:9"},{"expression":{"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1229,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"8027:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1230,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"8037:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1231,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"8046:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1232,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"8050:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1235,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1239,"nodeType":"ExpressionStatement","src":"8027:35:9"},{"expression":{"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1240,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"8076:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1241,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"8086:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1242,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"8095:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1243,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"8099:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1246,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1250,"nodeType":"ExpressionStatement","src":"8076:35:9"},{"expression":{"arguments":[{"id":1252,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"8136:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1253,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"8144:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1254,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"8148:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1251,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"8132:3:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8132:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1155,"id":1257,"nodeType":"Return","src":"8125:30:9"}]}]},"documentation":{"id":1149,"nodeType":"StructuredDocumentation","src":"6317:208:9","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":1260,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:9","nodeType":"FunctionDefinition","parameters":{"id":1152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1151,"mutability":"mutable","name":"a","nameLocation":"6552:1:9","nodeType":"VariableDeclaration","scope":1260,"src":"6544:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1150,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:9"},"returnParameters":{"id":1155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1260,"src":"6578:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1153,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:9"},"scope":1756,"src":"6530:1642:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1295,"nodeType":"Block","src":"8348:161:9","statements":[{"id":1294,"nodeType":"UncheckedBlock","src":"8358:145:9","statements":[{"assignments":[1272],"declarations":[{"constant":false,"id":1272,"mutability":"mutable","name":"result","nameLocation":"8390:6:9","nodeType":"VariableDeclaration","scope":1294,"src":"8382:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1271,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1276,"initialValue":{"arguments":[{"id":1274,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"8404:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1273,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[1260,1296],"referencedDeclaration":1260,"src":"8399:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8399:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1277,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"8427:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$897","typeString":"enum Math.Rounding"},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1278,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"8437:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$897","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1279,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"8449:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$897_$","typeString":"type(enum Math.Rounding)"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":895,"src":"8449:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$897","typeString":"enum Math.Rounding"}},"src":"8437:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1282,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"8464:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1283,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"8473:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1285,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"8482:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:9","trueExpression":{"hexValue":"31","id":1288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1291,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1270,"id":1293,"nodeType":"Return","src":"8420:72:9"}]}]},"documentation":{"id":1261,"nodeType":"StructuredDocumentation","src":"8178:89:9","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":1296,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:9","nodeType":"FunctionDefinition","parameters":{"id":1267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1263,"mutability":"mutable","name":"a","nameLocation":"8294:1:9","nodeType":"VariableDeclaration","scope":1296,"src":"8286:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1262,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1266,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:9","nodeType":"VariableDeclaration","scope":1296,"src":"8297:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$897","typeString":"enum Math.Rounding"},"typeName":{"id":1265,"nodeType":"UserDefinedTypeName","pathNode":{"id":1264,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":897,"src":"8297:8:9"},"referencedDeclaration":897,"src":"8297:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$897","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:9"},"returnParameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1296,"src":"8339:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1268,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:9"},"scope":1756,"src":"8272:237:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1427,"nodeType":"Block","src":"8694:922:9","statements":[{"assignments":[1305],"declarations":[{"constant":false,"id":1305,"mutability":"mutable","name":"result","nameLocation":"8712:6:9","nodeType":"VariableDeclaration","scope":1427,"src":"8704:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1304,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1307,"initialValue":{"hexValue":"30","id":1306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:9"},{"id":1424,"nodeType":"UncheckedBlock","src":"8732:855:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"8760:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1322,"nodeType":"IfStatement","src":"8756:99:9","trueBody":{"id":1321,"nodeType":"Block","src":"8778:77:9","statements":[{"expression":{"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"8796:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1316,"nodeType":"ExpressionStatement","src":"8796:13:9"},{"expression":{"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1317,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"8827:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":1318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1320,"nodeType":"ExpressionStatement","src":"8827:13:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"8872:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1337,"nodeType":"IfStatement","src":"8868:96:9","trueBody":{"id":1336,"nodeType":"Block","src":"8889:75:9","statements":[{"expression":{"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"8907:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1331,"nodeType":"ExpressionStatement","src":"8907:12:9"},{"expression":{"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1332,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"8937:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1335,"nodeType":"ExpressionStatement","src":"8937:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"8981:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1352,"nodeType":"IfStatement","src":"8977:96:9","trueBody":{"id":1351,"nodeType":"Block","src":"8998:75:9","statements":[{"expression":{"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"9016:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1346,"nodeType":"ExpressionStatement","src":"9016:12:9"},{"expression":{"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1347,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"9046:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1350,"nodeType":"ExpressionStatement","src":"9046:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"9090:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1367,"nodeType":"IfStatement","src":"9086:96:9","trueBody":{"id":1366,"nodeType":"Block","src":"9107:75:9","statements":[{"expression":{"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"9125:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1361,"nodeType":"ExpressionStatement","src":"9125:12:9"},{"expression":{"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1362,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"9155:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1365,"nodeType":"ExpressionStatement","src":"9155:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"9199:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1382,"nodeType":"IfStatement","src":"9195:93:9","trueBody":{"id":1381,"nodeType":"Block","src":"9215:73:9","statements":[{"expression":{"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"9233:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1376,"nodeType":"ExpressionStatement","src":"9233:11:9"},{"expression":{"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1377,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"9262:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1380,"nodeType":"ExpressionStatement","src":"9262:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"9305:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":1384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1397,"nodeType":"IfStatement","src":"9301:93:9","trueBody":{"id":1396,"nodeType":"Block","src":"9321:73:9","statements":[{"expression":{"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"9339:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1391,"nodeType":"ExpressionStatement","src":"9339:11:9"},{"expression":{"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1392,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"9368:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1395,"nodeType":"ExpressionStatement","src":"9368:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"9411:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1412,"nodeType":"IfStatement","src":"9407:93:9","trueBody":{"id":1411,"nodeType":"Block","src":"9427:73:9","statements":[{"expression":{"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"9445:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":1404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1406,"nodeType":"ExpressionStatement","src":"9445:11:9"},{"expression":{"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1407,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"9474:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1410,"nodeType":"ExpressionStatement","src":"9474:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"9517:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1423,"nodeType":"IfStatement","src":"9513:64:9","trueBody":{"id":1422,"nodeType":"Block","src":"9533:44:9","statements":[{"expression":{"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1418,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"9551:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1421,"nodeType":"ExpressionStatement","src":"9551:11:9"}]}}]},{"expression":{"id":1425,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"9603:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1303,"id":1426,"nodeType":"Return","src":"9596:13:9"}]},"documentation":{"id":1297,"nodeType":"StructuredDocumentation","src":"8515:113:9","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1428,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:9","nodeType":"FunctionDefinition","parameters":{"id":1300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1299,"mutability":"mutable","name":"value","nameLocation":"8655:5:9","nodeType":"VariableDeclaration","scope":1428,"src":"8647:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1298,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:9"},"returnParameters":{"id":1303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1428,"src":"8685:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1301,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:9"},"scope":1756,"src":"8633:983:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1463,"nodeType":"Block","src":"9849:165:9","statements":[{"id":1462,"nodeType":"UncheckedBlock","src":"9859:149:9","statements":[{"assignments":[1440],"declarations":[{"constant":false,"id":1440,"mutability":"mutable","name":"result","nameLocation":"9891:6:9","nodeType":"VariableDeclaration","scope":1462,"src":"9883:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1439,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1444,"initialValue":{"arguments":[{"id":1442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"9905:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1441,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1428,1464],"referencedDeclaration":1428,"src":"9900:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9900:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1445,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"9932:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$897","typeString":"enum Math.Rounding"},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1446,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"9942:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$897","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1447,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"9954:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$897_$","typeString":"type(enum Math.Rounding)"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":895,"src":"9954:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$897","typeString":"enum Math.Rounding"}},"src":"9942:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1451,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"9974:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"9983:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:9","trueExpression":{"hexValue":"31","id":1456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1459,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1438,"id":1461,"nodeType":"Return","src":"9925:72:9"}]}]},"documentation":{"id":1429,"nodeType":"StructuredDocumentation","src":"9622:142:9","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1464,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:9","nodeType":"FunctionDefinition","parameters":{"id":1435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1431,"mutability":"mutable","name":"value","nameLocation":"9791:5:9","nodeType":"VariableDeclaration","scope":1464,"src":"9783:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1430,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1434,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:9","nodeType":"VariableDeclaration","scope":1464,"src":"9798:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$897","typeString":"enum Math.Rounding"},"typeName":{"id":1433,"nodeType":"UserDefinedTypeName","pathNode":{"id":1432,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":897,"src":"9798:8:9"},"referencedDeclaration":897,"src":"9798:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$897","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:9"},"returnParameters":{"id":1438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1464,"src":"9840:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1436,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:9"},"scope":1756,"src":"9769:245:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1592,"nodeType":"Block","src":"10201:854:9","statements":[{"assignments":[1473],"declarations":[{"constant":false,"id":1473,"mutability":"mutable","name":"result","nameLocation":"10219:6:9","nodeType":"VariableDeclaration","scope":1592,"src":"10211:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1472,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1475,"initialValue":{"hexValue":"30","id":1474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:9"},{"id":1589,"nodeType":"UncheckedBlock","src":"10239:787:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"10267:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1492,"nodeType":"IfStatement","src":"10263:103:9","trueBody":{"id":1491,"nodeType":"Block","src":"10286:80:9","statements":[{"expression":{"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"10304:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":1484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":1483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1486,"nodeType":"ExpressionStatement","src":"10304:17:9"},{"expression":{"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1487,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"10339:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1490,"nodeType":"ExpressionStatement","src":"10339:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"10383:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:9","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1509,"nodeType":"IfStatement","src":"10379:103:9","trueBody":{"id":1508,"nodeType":"Block","src":"10402:80:9","statements":[{"expression":{"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"10420:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":1501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:9","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1503,"nodeType":"ExpressionStatement","src":"10420:17:9"},{"expression":{"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1504,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"10455:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1507,"nodeType":"ExpressionStatement","src":"10455:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"10499:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1526,"nodeType":"IfStatement","src":"10495:103:9","trueBody":{"id":1525,"nodeType":"Block","src":"10518:80:9","statements":[{"expression":{"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"10536:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":1518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1520,"nodeType":"ExpressionStatement","src":"10536:17:9"},{"expression":{"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1521,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"10571:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1524,"nodeType":"ExpressionStatement","src":"10571:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"10615:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:9","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1543,"nodeType":"IfStatement","src":"10611:100:9","trueBody":{"id":1542,"nodeType":"Block","src":"10633:78:9","statements":[{"expression":{"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"10651:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":1535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":1534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:9","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1537,"nodeType":"ExpressionStatement","src":"10651:16:9"},{"expression":{"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1538,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"10685:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1541,"nodeType":"ExpressionStatement","src":"10685:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"10728:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:9","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1560,"nodeType":"IfStatement","src":"10724:100:9","trueBody":{"id":1559,"nodeType":"Block","src":"10746:78:9","statements":[{"expression":{"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"10764:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":1552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":1551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:9","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1554,"nodeType":"ExpressionStatement","src":"10764:16:9"},{"expression":{"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1555,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"10798:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1558,"nodeType":"ExpressionStatement","src":"10798:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"10841:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:9","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1577,"nodeType":"IfStatement","src":"10837:100:9","trueBody":{"id":1576,"nodeType":"Block","src":"10859:78:9","statements":[{"expression":{"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"10877:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":1569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":1568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:9","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1571,"nodeType":"ExpressionStatement","src":"10877:16:9"},{"expression":{"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1572,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"10911:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1575,"nodeType":"ExpressionStatement","src":"10911:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"10954:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":1581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":1580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1588,"nodeType":"IfStatement","src":"10950:66:9","trueBody":{"id":1587,"nodeType":"Block","src":"10972:44:9","statements":[{"expression":{"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1583,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"10990:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1586,"nodeType":"ExpressionStatement","src":"10990:11:9"}]}}]},{"expression":{"id":1590,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"11042:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1471,"id":1591,"nodeType":"Return","src":"11035:13:9"}]},"documentation":{"id":1465,"nodeType":"StructuredDocumentation","src":"10020:114:9","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1593,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:9","nodeType":"FunctionDefinition","parameters":{"id":1468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1467,"mutability":"mutable","name":"value","nameLocation":"10162:5:9","nodeType":"VariableDeclaration","scope":1593,"src":"10154:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1466,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:9"},"returnParameters":{"id":1471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1593,"src":"10192:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1469,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:9"},"scope":1756,"src":"10139:916:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1628,"nodeType":"Block","src":"11290:167:9","statements":[{"id":1627,"nodeType":"UncheckedBlock","src":"11300:151:9","statements":[{"assignments":[1605],"declarations":[{"constant":false,"id":1605,"mutability":"mutable","name":"result","nameLocation":"11332:6:9","nodeType":"VariableDeclaration","scope":1627,"src":"11324:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1604,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1609,"initialValue":{"arguments":[{"id":1607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"11347:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1606,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[1593,1629],"referencedDeclaration":1593,"src":"11341:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11341:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1610,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"11374:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$897","typeString":"enum Math.Rounding"},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1611,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"11384:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$897","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1612,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"11396:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$897_$","typeString":"type(enum Math.Rounding)"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":895,"src":"11396:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$897","typeString":"enum Math.Rounding"}},"src":"11384:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1616,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"11417:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"11426:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:9","trueExpression":{"hexValue":"31","id":1621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1624,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1603,"id":1626,"nodeType":"Return","src":"11367:73:9"}]}]},"documentation":{"id":1594,"nodeType":"StructuredDocumentation","src":"11061:143:9","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1629,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:9","nodeType":"FunctionDefinition","parameters":{"id":1600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1596,"mutability":"mutable","name":"value","nameLocation":"11232:5:9","nodeType":"VariableDeclaration","scope":1629,"src":"11224:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1595,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1599,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:9","nodeType":"VariableDeclaration","scope":1629,"src":"11239:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$897","typeString":"enum Math.Rounding"},"typeName":{"id":1598,"nodeType":"UserDefinedTypeName","pathNode":{"id":1597,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":897,"src":"11239:8:9"},"referencedDeclaration":897,"src":"11239:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$897","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:9"},"returnParameters":{"id":1603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1629,"src":"11281:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1601,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:9"},"scope":1756,"src":"11209:248:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1715,"nodeType":"Block","src":"11771:600:9","statements":[{"assignments":[1638],"declarations":[{"constant":false,"id":1638,"mutability":"mutable","name":"result","nameLocation":"11789:6:9","nodeType":"VariableDeclaration","scope":1715,"src":"11781:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1637,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1640,"initialValue":{"hexValue":"30","id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:9"},{"id":1712,"nodeType":"UncheckedBlock","src":"11809:533:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"11837:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1655,"nodeType":"IfStatement","src":"11833:98:9","trueBody":{"id":1654,"nodeType":"Block","src":"11855:76:9","statements":[{"expression":{"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"11873:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1649,"nodeType":"ExpressionStatement","src":"11873:13:9"},{"expression":{"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1650,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"11904:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1653,"nodeType":"ExpressionStatement","src":"11904:12:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"11948:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1670,"nodeType":"IfStatement","src":"11944:95:9","trueBody":{"id":1669,"nodeType":"Block","src":"11965:74:9","statements":[{"expression":{"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"11983:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1664,"nodeType":"ExpressionStatement","src":"11983:12:9"},{"expression":{"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1665,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"12013:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1668,"nodeType":"ExpressionStatement","src":"12013:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"12056:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1685,"nodeType":"IfStatement","src":"12052:95:9","trueBody":{"id":1684,"nodeType":"Block","src":"12073:74:9","statements":[{"expression":{"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"12091:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1679,"nodeType":"ExpressionStatement","src":"12091:12:9"},{"expression":{"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1680,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"12121:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1683,"nodeType":"ExpressionStatement","src":"12121:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"12164:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1700,"nodeType":"IfStatement","src":"12160:95:9","trueBody":{"id":1699,"nodeType":"Block","src":"12181:74:9","statements":[{"expression":{"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"12199:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1694,"nodeType":"ExpressionStatement","src":"12199:12:9"},{"expression":{"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1695,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"12229:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1698,"nodeType":"ExpressionStatement","src":"12229:11:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"12272:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1711,"nodeType":"IfStatement","src":"12268:64:9","trueBody":{"id":1710,"nodeType":"Block","src":"12288:44:9","statements":[{"expression":{"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1706,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"12306:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1709,"nodeType":"ExpressionStatement","src":"12306:11:9"}]}}]},{"expression":{"id":1713,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"12358:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1636,"id":1714,"nodeType":"Return","src":"12351:13:9"}]},"documentation":{"id":1630,"nodeType":"StructuredDocumentation","src":"11463:240:9","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":1716,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:9","nodeType":"FunctionDefinition","parameters":{"id":1633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1632,"mutability":"mutable","name":"value","nameLocation":"11732:5:9","nodeType":"VariableDeclaration","scope":1716,"src":"11724:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1631,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:9"},"returnParameters":{"id":1636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1716,"src":"11762:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1634,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:9"},"scope":1756,"src":"11708:663:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1754,"nodeType":"Block","src":"12608:174:9","statements":[{"id":1753,"nodeType":"UncheckedBlock","src":"12618:158:9","statements":[{"assignments":[1728],"declarations":[{"constant":false,"id":1728,"mutability":"mutable","name":"result","nameLocation":"12650:6:9","nodeType":"VariableDeclaration","scope":1753,"src":"12642:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1727,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1732,"initialValue":{"arguments":[{"id":1730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"12666:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1729,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[1716,1755],"referencedDeclaration":1716,"src":"12659:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12659:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1733,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"12693:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$897","typeString":"enum Math.Rounding"},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1734,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"12703:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$897","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1735,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"12715:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$897_$","typeString":"type(enum Math.Rounding)"}},"id":1736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":895,"src":"12715:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$897","typeString":"enum Math.Rounding"}},"src":"12703:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1739,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"12736:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":1740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:9","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1742,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"12751:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:9","trueExpression":{"hexValue":"31","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1750,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1726,"id":1752,"nodeType":"Return","src":"12686:79:9"}]}]},"documentation":{"id":1717,"nodeType":"StructuredDocumentation","src":"12377:144:9","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1755,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:9","nodeType":"FunctionDefinition","parameters":{"id":1723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"value","nameLocation":"12550:5:9","nodeType":"VariableDeclaration","scope":1755,"src":"12542:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1718,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1722,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:9","nodeType":"VariableDeclaration","scope":1755,"src":"12557:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$897","typeString":"enum Math.Rounding"},"typeName":{"id":1721,"nodeType":"UserDefinedTypeName","pathNode":{"id":1720,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":897,"src":"12557:8:9"},"referencedDeclaration":897,"src":"12557:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$897","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:9"},"returnParameters":{"id":1726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1755,"src":"12599:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1724,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:9"},"scope":1756,"src":"12526:256:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1757,"src":"202:12582:9","usedErrors":[]}],"src":"103:12682:9"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"id":10,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[1861]},"id":1862,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1758,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":1759,"nodeType":"StructuredDocumentation","src":"134:80:10","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":1861,"linearizedBaseContracts":[1861],"name":"SignedMath","nameLocation":"223:10:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1776,"nodeType":"Block","src":"375:37:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1769,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"392:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1770,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"396:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1773,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"404:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:10","trueExpression":{"id":1772,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"400:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1768,"id":1775,"nodeType":"Return","src":"385:20:10"}]},"documentation":{"id":1760,"nodeType":"StructuredDocumentation","src":"240:66:10","text":" @dev Returns the largest of two signed numbers."},"id":1777,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:10","nodeType":"FunctionDefinition","parameters":{"id":1765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1762,"mutability":"mutable","name":"a","nameLocation":"331:1:10","nodeType":"VariableDeclaration","scope":1777,"src":"324:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1761,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1764,"mutability":"mutable","name":"b","nameLocation":"341:1:10","nodeType":"VariableDeclaration","scope":1777,"src":"334:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1763,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:10"},"returnParameters":{"id":1768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1777,"src":"367:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1766,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:10"},"scope":1861,"src":"311:101:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1794,"nodeType":"Block","src":"554:37:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1787,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"571:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1788,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"575:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1791,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"583:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:10","trueExpression":{"id":1790,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"579:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1786,"id":1793,"nodeType":"Return","src":"564:20:10"}]},"documentation":{"id":1778,"nodeType":"StructuredDocumentation","src":"418:67:10","text":" @dev Returns the smallest of two signed numbers."},"id":1795,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:10","nodeType":"FunctionDefinition","parameters":{"id":1783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1780,"mutability":"mutable","name":"a","nameLocation":"510:1:10","nodeType":"VariableDeclaration","scope":1795,"src":"503:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1779,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1782,"mutability":"mutable","name":"b","nameLocation":"520:1:10","nodeType":"VariableDeclaration","scope":1795,"src":"513:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1781,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:10"},"returnParameters":{"id":1786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1795,"src":"546:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1784,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:10"},"scope":1861,"src":"490:101:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1838,"nodeType":"Block","src":"796:162:10","statements":[{"assignments":[1806],"declarations":[{"constant":false,"id":1806,"mutability":"mutable","name":"x","nameLocation":"865:1:10","nodeType":"VariableDeclaration","scope":1838,"src":"858:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1805,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1819,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1807,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"870:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1808,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"874:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1810,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1811,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"881:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1812,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"885:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1814,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1817,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:10"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1820,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"910:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1825,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"930:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1823,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:10","typeDescriptions":{}}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"922:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1821,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:10","typeDescriptions":{}}},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"915:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1830,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"944:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1831,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"948:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1833,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1835,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1804,"id":1837,"nodeType":"Return","src":"903:48:10"}]},"documentation":{"id":1796,"nodeType":"StructuredDocumentation","src":"597:126:10","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":1839,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:10","nodeType":"FunctionDefinition","parameters":{"id":1801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1798,"mutability":"mutable","name":"a","nameLocation":"752:1:10","nodeType":"VariableDeclaration","scope":1839,"src":"745:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1797,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1800,"mutability":"mutable","name":"b","nameLocation":"762:1:10","nodeType":"VariableDeclaration","scope":1839,"src":"755:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1799,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:10"},"returnParameters":{"id":1804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1839,"src":"788:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1802,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:10"},"scope":1861,"src":"728:230:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1859,"nodeType":"Block","src":"1102:158:10","statements":[{"id":1858,"nodeType":"UncheckedBlock","src":"1112:142:10","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1849,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"1227:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":1850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:10","subExpression":{"id":1853,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"1241:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:10","trueExpression":{"id":1852,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"1236:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1847,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:10","typeDescriptions":{}}},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1219:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1846,"id":1857,"nodeType":"Return","src":"1212:31:10"}]}]},"documentation":{"id":1840,"nodeType":"StructuredDocumentation","src":"964:78:10","text":" @dev Returns the absolute unsigned value of a signed value."},"id":1860,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:10","nodeType":"FunctionDefinition","parameters":{"id":1843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1842,"mutability":"mutable","name":"n","nameLocation":"1067:1:10","nodeType":"VariableDeclaration","scope":1860,"src":"1060:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1841,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:10"},"returnParameters":{"id":1846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1845,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1860,"src":"1093:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1844,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:10"},"scope":1861,"src":"1047:213:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1862,"src":"215:1047:10","usedErrors":[]}],"src":"109:1154:10"}},"contracts/ERC721All.sol":{"id":11,"ast":{"absolutePath":"contracts/ERC721All.sol","exportedSymbols":{"Address":[603],"Context":[625],"ERC165":[878],"ERC721":[3093],"ERC721All":[2225],"IERC165":[890],"IERC721":[228],"IERC721Metadata":[273],"IERC721Receiver":[246],"Math":[1756],"Ownable":[112],"SignedMath":[1861],"Strings":[854]},"id":2226,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1863,"literals":["solidity","0.8",".13"],"nodeType":"PragmaDirective","src":"213:23:11"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":1864,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2226,"sourceUnit":113,"src":"238:52:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/lib/ERC721.sol","file":"./lib/ERC721.sol","id":1865,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2226,"sourceUnit":3094,"src":"292:26:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1867,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":112,"src":"366:7:11"},"id":1868,"nodeType":"InheritanceSpecifier","src":"366:7:11"},{"baseName":{"id":1869,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":3093,"src":"375:6:11"},"id":1870,"nodeType":"InheritanceSpecifier","src":"375:6:11"}],"canonicalName":"ERC721All","contractDependencies":[],"contractKind":"contract","documentation":{"id":1866,"nodeType":"StructuredDocumentation","src":"320:23:11","text":" @dev todo..."},"fullyImplemented":true,"id":2225,"linearizedBaseContracts":[2225,3093,273,228,878,890,112,625],"name":"ERC721All","nameLocation":"353:9:11","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1874,"mutability":"mutable","name":"_activeTokens","nameLocation":"420:13:11","nodeType":"VariableDeclaration","scope":2225,"src":"386:47:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"typeName":{"id":1873,"keyType":{"id":1871,"name":"uint256","nodeType":"ElementaryTypeName","src":"394:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"386:24:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueType":{"id":1872,"name":"bool","nodeType":"ElementaryTypeName","src":"405:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"documentation":{"id":1875,"nodeType":"StructuredDocumentation","src":"438:30:11","text":"@dev ERC721 Base Token URI"},"id":1877,"mutability":"mutable","name":"_baseTokenURI","nameLocation":"487:13:11","nodeType":"VariableDeclaration","scope":2225,"src":"471:29:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1876,"name":"string","nodeType":"ElementaryTypeName","src":"471:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"body":{"id":1896,"nodeType":"Block","src":"629:34:11","statements":[{"expression":{"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1892,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"635:13:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1893,"name":"baseUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"651:7:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"635:23:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1895,"nodeType":"ExpressionStatement","src":"635:23:11"}]},"id":1897,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1886,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"605:4:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1887,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1881,"src":"611:6:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":1888,"kind":"baseConstructorSpecifier","modifierName":{"id":1885,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":3093,"src":"598:6:11"},"nodeType":"ModifierInvocation","src":"598:20:11"},{"arguments":[],"id":1890,"kind":"baseConstructorSpecifier","modifierName":{"id":1889,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":112,"src":"619:7:11"},"nodeType":"ModifierInvocation","src":"619:9:11"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1879,"mutability":"mutable","name":"name","nameLocation":"536:4:11","nodeType":"VariableDeclaration","scope":1897,"src":"522:18:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1878,"name":"string","nodeType":"ElementaryTypeName","src":"522:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1881,"mutability":"mutable","name":"symbol","nameLocation":"560:6:11","nodeType":"VariableDeclaration","scope":1897,"src":"546:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1880,"name":"string","nodeType":"ElementaryTypeName","src":"546:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1883,"mutability":"mutable","name":"baseUri","nameLocation":"586:7:11","nodeType":"VariableDeclaration","scope":1897,"src":"572:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1882,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"516:81:11"},"returnParameters":{"id":1891,"nodeType":"ParameterList","parameters":[],"src":"629:0:11"},"scope":2225,"src":"505:158:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2346],"body":{"id":1933,"nodeType":"Block","src":"793:191:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1907,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"807:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"824:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"816:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1908,"name":"address","nodeType":"ElementaryTypeName","src":"816:7:11","typeDescriptions":{}}},"id":1911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"816:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"807:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":1913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"828:43:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""},"value":"ERC721: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""}],"id":1906,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"799:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"799:73:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1915,"nodeType":"ExpressionStatement","src":"799:73:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1916,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"882:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1918,"indexExpression":{"id":1917,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"892:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"882:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"902:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"882:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":1922,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"920:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1921,"name":"_hasOwnToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"907:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"907:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"882:44:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1928,"nodeType":"IfStatement","src":"878:73:11","trueBody":{"id":1927,"nodeType":"Block","src":"928:23:11","statements":[{"expression":{"hexValue":"31","id":1925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"943:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"functionReturnParameters":1905,"id":1926,"nodeType":"Return","src":"936:8:11"}]}},{"expression":{"baseExpression":{"id":1929,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"963:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1931,"indexExpression":{"id":1930,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"973:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"963:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1905,"id":1932,"nodeType":"Return","src":"956:23:11"}]},"documentation":{"id":1898,"nodeType":"StructuredDocumentation","src":"667:50:11","text":" @dev Overrides {IERC721-balanceOf}."},"functionSelector":"70a08231","id":1934,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"729:9:11","nodeType":"FunctionDefinition","overrides":{"id":1902,"nodeType":"OverrideSpecifier","overrides":[],"src":"766:8:11"},"parameters":{"id":1901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1900,"mutability":"mutable","name":"owner","nameLocation":"747:5:11","nodeType":"VariableDeclaration","scope":1934,"src":"739:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1899,"name":"address","nodeType":"ElementaryTypeName","src":"739:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"738:15:11"},"returnParameters":{"id":1905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1934,"src":"784:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1903,"name":"uint256","nodeType":"ElementaryTypeName","src":"784:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"783:9:11"},"scope":2225,"src":"720:264:11","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[2374],"body":{"id":1976,"nodeType":"Block","src":"1112:333:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":1945,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"1141:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1944,"name":"_isTokenActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"1126:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1126:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":1947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1151:26:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":1943,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1118:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1118:60:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1949,"nodeType":"ExpressionStatement","src":"1118:60:11"},{"assignments":[1951],"declarations":[{"constant":false,"id":1951,"mutability":"mutable","name":"owner","nameLocation":"1320:5:11","nodeType":"VariableDeclaration","scope":1976,"src":"1312:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1950,"name":"address","nodeType":"ElementaryTypeName","src":"1312:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1955,"initialValue":{"baseExpression":{"id":1952,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"1328:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1954,"indexExpression":{"id":1953,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"1336:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1328:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1312:32:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1956,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"1354:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1363:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1957,"name":"address","nodeType":"ElementaryTypeName","src":"1363:7:11","typeDescriptions":{}}},"id":1960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1363:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1354:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1973,"nodeType":"IfStatement","src":"1350:73:11","trueBody":{"id":1972,"nodeType":"Block","src":"1375:48:11","statements":[{"expression":{"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1962,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"1383:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":1967,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"1407:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1399:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1965,"name":"uint160","nodeType":"ElementaryTypeName","src":"1399:7:11","typeDescriptions":{}}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1399:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1391:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1963,"name":"address","nodeType":"ElementaryTypeName","src":"1391:7:11","typeDescriptions":{}}},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1391:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1383:33:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1971,"nodeType":"ExpressionStatement","src":"1383:33:11"}]}},{"expression":{"id":1974,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"1435:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1942,"id":1975,"nodeType":"Return","src":"1428:12:11"}]},"documentation":{"id":1935,"nodeType":"StructuredDocumentation","src":"988:48:11","text":" @dev Overrides {IERC721-ownerOf}."},"functionSelector":"6352211e","id":1977,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1048:7:11","nodeType":"FunctionDefinition","overrides":{"id":1939,"nodeType":"OverrideSpecifier","overrides":[],"src":"1085:8:11"},"parameters":{"id":1938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1937,"mutability":"mutable","name":"tokenId","nameLocation":"1064:7:11","nodeType":"VariableDeclaration","scope":1977,"src":"1056:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1936,"name":"uint256","nodeType":"ElementaryTypeName","src":"1056:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1055:17:11"},"returnParameters":{"id":1942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1977,"src":"1103:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1940,"name":"address","nodeType":"ElementaryTypeName","src":"1103:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1102:9:11"},"scope":2225,"src":"1039:406:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1985,"nodeType":"Block","src":"1472:30:11","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1981,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"1484:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1484:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1980,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[2035,2803],"referencedDeclaration":2035,"src":"1478:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1478:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1984,"nodeType":"ExpressionStatement","src":"1478:19:11"}]},"functionSelector":"1249c58b","id":1986,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"1458:4:11","nodeType":"FunctionDefinition","parameters":{"id":1978,"nodeType":"ParameterList","parameters":[],"src":"1462:2:11"},"returnParameters":{"id":1979,"nodeType":"ParameterList","parameters":[],"src":"1472:0:11"},"scope":2225,"src":"1449:53:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2034,"nodeType":"Block","src":"1548:376:11","statements":[{"assignments":[1992],"declarations":[{"constant":false,"id":1992,"mutability":"mutable","name":"tokenId","nameLocation":"1596:7:11","nodeType":"VariableDeclaration","scope":2034,"src":"1588:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1991,"name":"uint256","nodeType":"ElementaryTypeName","src":"1588:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2000,"initialValue":{"arguments":[{"arguments":[{"id":1997,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"1622:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1614:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1995,"name":"uint160","nodeType":"ElementaryTypeName","src":"1614:7:11","typeDescriptions":{}}},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1614:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1606:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1993,"name":"uint256","nodeType":"ElementaryTypeName","src":"1606:7:11","typeDescriptions":{}}},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1606:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1588:44:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2002,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"1647:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1667:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1659:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2003,"name":"address","nodeType":"ElementaryTypeName","src":"1659:7:11","typeDescriptions":{}}},"id":2006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1659:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1647:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":2008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1671:34:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":2001,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1639:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1639:67:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2010,"nodeType":"ExpressionStatement","src":"1639:67:11"},{"expression":{"arguments":[{"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1720:24:11","subExpression":{"arguments":[{"id":2013,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"1736:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2012,"name":"_isTokenActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"1721:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1721:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":2016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1746:30:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":2011,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1712:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1712:65:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2018,"nodeType":"ExpressionStatement","src":"1712:65:11"},{"expression":{"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2019,"name":"_activeTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"1812:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":2021,"indexExpression":{"id":2020,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"1826:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1812:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1837:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1812:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2024,"nodeType":"ExpressionStatement","src":"1812:29:11"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1897:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1889:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2026,"name":"address","nodeType":"ElementaryTypeName","src":"1889:7:11","typeDescriptions":{}}},"id":2029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1889:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2030,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"1901:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2031,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"1911:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2025,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"1880:8:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1880:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2033,"nodeType":"EmitStatement","src":"1875:44:11"}]},"id":2035,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"1515:5:11","nodeType":"FunctionDefinition","parameters":{"id":1989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1988,"mutability":"mutable","name":"receiver","nameLocation":"1529:8:11","nodeType":"VariableDeclaration","scope":2035,"src":"1521:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1987,"name":"address","nodeType":"ElementaryTypeName","src":"1521:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1520:18:11"},"returnParameters":{"id":1990,"nodeType":"ParameterList","parameters":[],"src":"1548:0:11"},"scope":2225,"src":"1506:418:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2937],"body":{"id":2118,"nodeType":"Block","src":"2024:560:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2047,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"2046:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2046,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[1977],"referencedDeclaration":1977,"src":"2038:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2038:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2049,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"2058:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2038:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":2051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2064:39:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":2045,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2030:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2030:74:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2053,"nodeType":"ExpressionStatement","src":"2030:74:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2055,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"2118:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2132:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2124:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2056,"name":"address","nodeType":"ElementaryTypeName","src":"2124:7:11","typeDescriptions":{}}},"id":2059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2124:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2118:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":2061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2136:38:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":2054,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2110:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2110:65:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2063,"nodeType":"ExpressionStatement","src":"2110:65:11"},{"expression":{"arguments":[{"id":2065,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"2203:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2066,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"2209:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2067,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"2213:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2064,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"2182:20:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2182:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2069,"nodeType":"ExpressionStatement","src":"2182:39:11"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2292:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2284:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2071,"name":"address","nodeType":"ElementaryTypeName","src":"2284:7:11","typeDescriptions":{}}},"id":2074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2284:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2075,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"2296:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2070,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"2275:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2275:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2077,"nodeType":"ExpressionStatement","src":"2275:29:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2078,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"2378:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2080,"indexExpression":{"id":2079,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"2386:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2378:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2406:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2398:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2081,"name":"address","nodeType":"ElementaryTypeName","src":"2398:7:11","typeDescriptions":{}}},"id":2084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2398:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2378:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2093,"nodeType":"IfStatement","src":"2374:71:11","trueBody":{"id":2092,"nodeType":"Block","src":"2410:35:11","statements":[{"expression":{"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2086,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"2418:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2088,"indexExpression":{"id":2087,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"2428:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2418:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2437:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2418:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2091,"nodeType":"ExpressionStatement","src":"2418:20:11"}]}},{"expression":{"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2094,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"2450:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2096,"indexExpression":{"id":2095,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"2460:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2450:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2467:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2450:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2099,"nodeType":"ExpressionStatement","src":"2450:18:11"},{"expression":{"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2100,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"2474:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2102,"indexExpression":{"id":2101,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"2482:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2474:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2103,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"2493:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2474:21:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2105,"nodeType":"ExpressionStatement","src":"2474:21:11"},{"eventCall":{"arguments":[{"id":2107,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"2516:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2108,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"2522:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2109,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"2526:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2106,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"2507:8:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2507:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2111,"nodeType":"EmitStatement","src":"2502:32:11"},{"expression":{"arguments":[{"id":2113,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"2561:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2114,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"2567:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2115,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"2571:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2112,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"2541:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2541:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2117,"nodeType":"ExpressionStatement","src":"2541:38:11"}]},"id":2119,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"1937:9:11","nodeType":"FunctionDefinition","overrides":{"id":2043,"nodeType":"OverrideSpecifier","overrides":[],"src":"2015:8:11"},"parameters":{"id":2042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2037,"mutability":"mutable","name":"from","nameLocation":"1960:4:11","nodeType":"VariableDeclaration","scope":2119,"src":"1952:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2036,"name":"address","nodeType":"ElementaryTypeName","src":"1952:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2039,"mutability":"mutable","name":"to","nameLocation":"1978:2:11","nodeType":"VariableDeclaration","scope":2119,"src":"1970:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2038,"name":"address","nodeType":"ElementaryTypeName","src":"1970:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2041,"mutability":"mutable","name":"tokenId","nameLocation":"1994:7:11","nodeType":"VariableDeclaration","scope":2119,"src":"1986:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2040,"name":"uint256","nodeType":"ElementaryTypeName","src":"1986:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1946:59:11"},"returnParameters":{"id":2044,"nodeType":"ParameterList","parameters":[],"src":"2024:0:11"},"scope":2225,"src":"1928:656:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2159,"nodeType":"Block","src":"2654:207:11","statements":[{"assignments":[2127],"declarations":[{"constant":false,"id":2127,"mutability":"mutable","name":"ownerTokenId","nameLocation":"2668:12:11","nodeType":"VariableDeclaration","scope":2159,"src":"2660:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2126,"name":"uint256","nodeType":"ElementaryTypeName","src":"2660:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2135,"initialValue":{"arguments":[{"arguments":[{"id":2132,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"2699:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2691:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2130,"name":"uint160","nodeType":"ElementaryTypeName","src":"2691:7:11","typeDescriptions":{}}},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2691:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2683:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2128,"name":"uint256","nodeType":"ElementaryTypeName","src":"2683:7:11","typeDescriptions":{}}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2683:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2660:46:11"},{"assignments":[2137],"declarations":[{"constant":false,"id":2137,"mutability":"mutable","name":"currentOwner","nameLocation":"2720:12:11","nodeType":"VariableDeclaration","scope":2159,"src":"2712:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2136,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2141,"initialValue":{"baseExpression":{"id":2138,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"2735:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2140,"indexExpression":{"id":2139,"name":"ownerTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"2743:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2735:21:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2712:44:11"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2143,"name":"ownerTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"2785:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2142,"name":"_isTokenActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"2770:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2770:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2145,"name":"currentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"2803:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2146,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"2819:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2803:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2148,"name":"currentOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"2828:12:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2852:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2149,"name":"address","nodeType":"ElementaryTypeName","src":"2844:7:11","typeDescriptions":{}}},"id":2152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2844:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2828:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2803:51:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2155,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2802:53:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2770:85:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2157,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2769:87:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2125,"id":2158,"nodeType":"Return","src":"2762:94:11"}]},"id":2160,"implemented":true,"kind":"function","modifiers":[],"name":"_hasOwnToken","nameLocation":"2597:12:11","nodeType":"FunctionDefinition","parameters":{"id":2122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2121,"mutability":"mutable","name":"owner","nameLocation":"2618:5:11","nodeType":"VariableDeclaration","scope":2160,"src":"2610:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2120,"name":"address","nodeType":"ElementaryTypeName","src":"2610:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2609:15:11"},"returnParameters":{"id":2125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2160,"src":"2648:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2123,"name":"bool","nodeType":"ElementaryTypeName","src":"2648:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2647:6:11"},"scope":2225,"src":"2588:273:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2178,"nodeType":"Block","src":"2935:126:11","statements":[{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2167,"name":"_activeTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"2996:13:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":2169,"indexExpression":{"id":2168,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"3010:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2996:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2170,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"3022:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2172,"indexExpression":{"id":2171,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"3030:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3022:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2173,"name":"_NULL_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"3042:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3022:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2996:59:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2176,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2995:61:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2166,"id":2177,"nodeType":"Return","src":"2988:68:11"}]},"id":2179,"implemented":true,"kind":"function","modifiers":[],"name":"_isTokenActive","nameLocation":"2874:14:11","nodeType":"FunctionDefinition","parameters":{"id":2163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2162,"mutability":"mutable","name":"tokenId","nameLocation":"2897:7:11","nodeType":"VariableDeclaration","scope":2179,"src":"2889:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2161,"name":"uint256","nodeType":"ElementaryTypeName","src":"2889:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2888:17:11"},"returnParameters":{"id":2166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2179,"src":"2929:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2164,"name":"bool","nodeType":"ElementaryTypeName","src":"2929:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2928:6:11"},"scope":2225,"src":"2865:196:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[2442],"body":{"id":2187,"nodeType":"Block","src":"3140:31:11","statements":[{"expression":{"id":2185,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"3153:13:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2184,"id":2186,"nodeType":"Return","src":"3146:20:11"}]},"id":2188,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3074:8:11","nodeType":"FunctionDefinition","overrides":{"id":2181,"nodeType":"OverrideSpecifier","overrides":[],"src":"3107:8:11"},"parameters":{"id":2180,"nodeType":"ParameterList","parameters":[],"src":"3082:2:11"},"returnParameters":{"id":2184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2188,"src":"3125:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2182,"name":"string","nodeType":"ElementaryTypeName","src":"3125:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3124:15:11"},"scope":2225,"src":"3065:106:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2433],"body":{"id":2223,"nodeType":"Block","src":"3263:145:11","statements":[{"assignments":[2197],"declarations":[{"constant":false,"id":2197,"mutability":"mutable","name":"owner","nameLocation":"3277:5:11","nodeType":"VariableDeclaration","scope":2223,"src":"3269:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2196,"name":"address","nodeType":"ElementaryTypeName","src":"3269:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2201,"initialValue":{"baseExpression":{"id":2198,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"3285:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2200,"indexExpression":{"id":2199,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"3293:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3285:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3269:32:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2202,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"3311:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3328:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3320:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2203,"name":"address","nodeType":"ElementaryTypeName","src":"3320:7:11","typeDescriptions":{}}},"id":2206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3320:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3311:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2219,"nodeType":"IfStatement","src":"3307:73:11","trueBody":{"id":2218,"nodeType":"Block","src":"3332:48:11","statements":[{"expression":{"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2208,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"3340:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2213,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"3364:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3356:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2211,"name":"uint160","nodeType":"ElementaryTypeName","src":"3356:7:11","typeDescriptions":{}}},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3356:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3348:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2209,"name":"address","nodeType":"ElementaryTypeName","src":"3348:7:11","typeDescriptions":{}}},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3348:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3340:33:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2217,"nodeType":"ExpressionStatement","src":"3340:33:11"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2220,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[2188],"referencedDeclaration":2188,"src":"3393:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3393:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2195,"id":2222,"nodeType":"Return","src":"3386:17:11"}]},"functionSelector":"c87b56dd","id":2224,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"3184:8:11","nodeType":"FunctionDefinition","overrides":{"id":2192,"nodeType":"OverrideSpecifier","overrides":[],"src":"3230:8:11"},"parameters":{"id":2191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2190,"mutability":"mutable","name":"tokenId","nameLocation":"3201:7:11","nodeType":"VariableDeclaration","scope":2224,"src":"3193:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2189,"name":"uint256","nodeType":"ElementaryTypeName","src":"3193:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3192:17:11"},"returnParameters":{"id":2195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2224,"src":"3248:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2193,"name":"string","nodeType":"ElementaryTypeName","src":"3248:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3247:15:11"},"scope":2225,"src":"3175:233:11","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2226,"src":"344:3066:11","usedErrors":[]}],"src":"213:3198:11"}},"contracts/lib/ERC721.sol":{"id":12,"ast":{"absolutePath":"contracts/lib/ERC721.sol","exportedSymbols":{"Address":[603],"Context":[625],"ERC165":[878],"ERC721":[3093],"IERC165":[890],"IERC721":[228],"IERC721Metadata":[273],"IERC721Receiver":[246],"Math":[1756],"SignedMath":[1861],"Strings":[854]},"id":3094,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2227,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"302:23:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":2228,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3094,"sourceUnit":229,"src":"327:58:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","id":2229,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3094,"sourceUnit":247,"src":"386:66:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","id":2230,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3094,"sourceUnit":274,"src":"453:77:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"@openzeppelin/contracts/utils/Address.sol","id":2231,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3094,"sourceUnit":604,"src":"531:51:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"@openzeppelin/contracts/utils/Context.sol","id":2232,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3094,"sourceUnit":626,"src":"583:51:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":2233,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3094,"sourceUnit":855,"src":"635:51:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165.sol","id":2234,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3094,"sourceUnit":879,"src":"687:64:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2236,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":625,"src":"1401:7:12"},"id":2237,"nodeType":"InheritanceSpecifier","src":"1401:7:12"},{"baseName":{"id":2238,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":878,"src":"1410:6:12"},"id":2239,"nodeType":"InheritanceSpecifier","src":"1410:6:12"},{"baseName":{"id":2240,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":228,"src":"1418:7:12"},"id":2241,"nodeType":"InheritanceSpecifier","src":"1418:7:12"},{"baseName":{"id":2242,"name":"IERC721Metadata","nodeType":"IdentifierPath","referencedDeclaration":273,"src":"1427:15:12"},"id":2243,"nodeType":"InheritanceSpecifier","src":"1427:15:12"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":2235,"nodeType":"StructuredDocumentation","src":"753:628:12","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}.\n NOTE:\n  The only changes made here are:\n    - change scope of \"_owners\" from private to internal\n    - change scope of \"_balances\" from private to internal\n    - remove \"ERC721\" scope-resolution from \"ownerOf\" calls in order to override \"ownerOf\"\n    - modify the _burn function to burn to an alternate Null Address (prevents reassignment back to Pre-Mint Receiver)"},"fullyImplemented":true,"id":3093,"linearizedBaseContracts":[3093,273,228,878,890,625],"name":"ERC721","nameLocation":"1391:6:12","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2246,"libraryName":{"id":2244,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":603,"src":"1455:7:12"},"nodeType":"UsingForDirective","src":"1449:26:12","typeName":{"id":2245,"name":"address","nodeType":"ElementaryTypeName","src":"1467:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"global":false,"id":2249,"libraryName":{"id":2247,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":854,"src":"1486:7:12"},"nodeType":"UsingForDirective","src":"1480:26:12","typeName":{"id":2248,"name":"uint256","nodeType":"ElementaryTypeName","src":"1498:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"id":2252,"mutability":"constant","name":"_NULL_ADDRESS","nameLocation":"1538:13:12","nodeType":"VariableDeclaration","scope":3093,"src":"1512:84:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2250,"name":"address","nodeType":"ElementaryTypeName","src":"1512:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303064456144","id":2251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1554:42:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x000000000000000000000000000000000000dEaD"},"visibility":"internal"},{"constant":false,"id":2254,"mutability":"mutable","name":"_name","nameLocation":"1636:5:12","nodeType":"VariableDeclaration","scope":3093,"src":"1621:20:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2253,"name":"string","nodeType":"ElementaryTypeName","src":"1621:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2256,"mutability":"mutable","name":"_symbol","nameLocation":"1683:7:12","nodeType":"VariableDeclaration","scope":3093,"src":"1668:22:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2255,"name":"string","nodeType":"ElementaryTypeName","src":"1668:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2260,"mutability":"mutable","name":"_owners","nameLocation":"1780:7:12","nodeType":"VariableDeclaration","scope":3093,"src":"1743:44:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":2259,"keyType":{"id":2257,"name":"uint256","nodeType":"ElementaryTypeName","src":"1751:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1743:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":2258,"name":"address","nodeType":"ElementaryTypeName","src":"1762:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"constant":false,"id":2264,"mutability":"mutable","name":"_balances","nameLocation":"1875:9:12","nodeType":"VariableDeclaration","scope":3093,"src":"1838:46:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2263,"keyType":{"id":2261,"name":"address","nodeType":"ElementaryTypeName","src":"1846:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1838:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":2262,"name":"uint256","nodeType":"ElementaryTypeName","src":"1857:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":2268,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1976:15:12","nodeType":"VariableDeclaration","scope":3093,"src":"1940:51:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":2267,"keyType":{"id":2265,"name":"uint256","nodeType":"ElementaryTypeName","src":"1948:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1940:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":2266,"name":"address","nodeType":"ElementaryTypeName","src":"1959:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":2274,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"2099:18:12","nodeType":"VariableDeclaration","scope":3093,"src":"2046:71:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":2273,"keyType":{"id":2269,"name":"address","nodeType":"ElementaryTypeName","src":"2054:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2046:44:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":2272,"keyType":{"id":2270,"name":"address","nodeType":"ElementaryTypeName","src":"2073:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2065:24:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":2271,"name":"bool","nodeType":"ElementaryTypeName","src":"2084:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":2290,"nodeType":"Block","src":"2293:57:12","statements":[{"expression":{"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2282,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"2303:5:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2283,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"2311:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2303:13:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2285,"nodeType":"ExpressionStatement","src":"2303:13:12"},{"expression":{"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2286,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"2326:7:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2287,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"2336:7:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2326:17:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2289,"nodeType":"ExpressionStatement","src":"2326:17:12"}]},"documentation":{"id":2275,"nodeType":"StructuredDocumentation","src":"2124:108:12","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":2291,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2277,"mutability":"mutable","name":"name_","nameLocation":"2263:5:12","nodeType":"VariableDeclaration","scope":2291,"src":"2249:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2276,"name":"string","nodeType":"ElementaryTypeName","src":"2249:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2279,"mutability":"mutable","name":"symbol_","nameLocation":"2284:7:12","nodeType":"VariableDeclaration","scope":2291,"src":"2270:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2278,"name":"string","nodeType":"ElementaryTypeName","src":"2270:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2248:44:12"},"returnParameters":{"id":2281,"nodeType":"ParameterList","parameters":[],"src":"2293:0:12"},"scope":3093,"src":"2237:113:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[877,889],"body":{"id":2321,"nodeType":"Block","src":"2525:192:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2302,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"2554:11:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2304,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"2574:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$228_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$228_$","typeString":"type(contract IERC721)"}],"id":2303,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2569:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2569:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$228","typeString":"type(contract IERC721)"}},"id":2306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"2569:25:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2554:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2308,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"2610:11:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2310,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"2630:15:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$273_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$273_$","typeString":"type(contract IERC721Metadata)"}],"id":2309,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2625:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2625:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$273","typeString":"type(contract IERC721Metadata)"}},"id":2312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"2625:33:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2610:48:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2554:104:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2317,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"2698:11:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2315,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2674:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$3093_$","typeString":"type(contract super ERC721)"}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":877,"src":"2674:23:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2674:36:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2554:156:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2301,"id":2320,"nodeType":"Return","src":"2535:175:12"}]},"documentation":{"id":2292,"nodeType":"StructuredDocumentation","src":"2356:56:12","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2322,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2426:17:12","nodeType":"FunctionDefinition","overrides":{"id":2298,"nodeType":"OverrideSpecifier","overrides":[{"id":2296,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":878,"src":"2493:6:12"},{"id":2297,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":890,"src":"2501:7:12"}],"src":"2484:25:12"},"parameters":{"id":2295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2294,"mutability":"mutable","name":"interfaceId","nameLocation":"2451:11:12","nodeType":"VariableDeclaration","scope":2322,"src":"2444:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2293,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2444:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2443:20:12"},"returnParameters":{"id":2301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2322,"src":"2519:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2299,"name":"bool","nodeType":"ElementaryTypeName","src":"2519:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2518:6:12"},"scope":3093,"src":"2417:300:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[153],"body":{"id":2345,"nodeType":"Block","src":"2857:123:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2332,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"2875:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2884:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2333,"name":"address","nodeType":"ElementaryTypeName","src":"2884:7:12","typeDescriptions":{}}},"id":2336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2884:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2875:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":2338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2896:43:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""},"value":"ERC721: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""}],"id":2331,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2867:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2867:73:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2340,"nodeType":"ExpressionStatement","src":"2867:73:12"},{"expression":{"baseExpression":{"id":2341,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"2957:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2343,"indexExpression":{"id":2342,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"2967:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2957:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2330,"id":2344,"nodeType":"Return","src":"2950:23:12"}]},"documentation":{"id":2323,"nodeType":"StructuredDocumentation","src":"2723:48:12","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":2346,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2785:9:12","nodeType":"FunctionDefinition","overrides":{"id":2327,"nodeType":"OverrideSpecifier","overrides":[],"src":"2830:8:12"},"parameters":{"id":2326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2325,"mutability":"mutable","name":"owner","nameLocation":"2803:5:12","nodeType":"VariableDeclaration","scope":2346,"src":"2795:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2324,"name":"address","nodeType":"ElementaryTypeName","src":"2795:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2794:15:12"},"returnParameters":{"id":2330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2346,"src":"2848:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2328,"name":"uint256","nodeType":"ElementaryTypeName","src":"2848:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2847:9:12"},"scope":3093,"src":"2776:204:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[161],"body":{"id":2373,"nodeType":"Block","src":"3118:137:12","statements":[{"assignments":[2356],"declarations":[{"constant":false,"id":2356,"mutability":"mutable","name":"owner","nameLocation":"3136:5:12","nodeType":"VariableDeclaration","scope":2373,"src":"3128:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2355,"name":"address","nodeType":"ElementaryTypeName","src":"3128:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2360,"initialValue":{"baseExpression":{"id":2357,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"3144:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2359,"indexExpression":{"id":2358,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"3152:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3144:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3128:32:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2362,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"3178:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3195:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3187:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2363,"name":"address","nodeType":"ElementaryTypeName","src":"3187:7:12","typeDescriptions":{}}},"id":2366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3187:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3178:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":2368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3199:26:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":2361,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3170:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3170:56:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2370,"nodeType":"ExpressionStatement","src":"3170:56:12"},{"expression":{"id":2371,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"3243:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2354,"id":2372,"nodeType":"Return","src":"3236:12:12"}]},"documentation":{"id":2347,"nodeType":"StructuredDocumentation","src":"2986:46:12","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":2374,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"3046:7:12","nodeType":"FunctionDefinition","overrides":{"id":2351,"nodeType":"OverrideSpecifier","overrides":[],"src":"3091:8:12"},"parameters":{"id":2350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2349,"mutability":"mutable","name":"tokenId","nameLocation":"3062:7:12","nodeType":"VariableDeclaration","scope":2374,"src":"3054:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2348,"name":"uint256","nodeType":"ElementaryTypeName","src":"3054:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3053:17:12"},"returnParameters":{"id":2354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2374,"src":"3109:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2352,"name":"address","nodeType":"ElementaryTypeName","src":"3109:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3108:9:12"},"scope":3093,"src":"3037:218:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[258],"body":{"id":2383,"nodeType":"Block","src":"3386:29:12","statements":[{"expression":{"id":2381,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"3403:5:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2380,"id":2382,"nodeType":"Return","src":"3396:12:12"}]},"documentation":{"id":2375,"nodeType":"StructuredDocumentation","src":"3261:51:12","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":2384,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"3326:4:12","nodeType":"FunctionDefinition","overrides":{"id":2377,"nodeType":"OverrideSpecifier","overrides":[],"src":"3353:8:12"},"parameters":{"id":2376,"nodeType":"ParameterList","parameters":[],"src":"3330:2:12"},"returnParameters":{"id":2380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2384,"src":"3371:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2378,"name":"string","nodeType":"ElementaryTypeName","src":"3371:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3370:15:12"},"scope":3093,"src":"3317:98:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[264],"body":{"id":2393,"nodeType":"Block","src":"3550:31:12","statements":[{"expression":{"id":2391,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"3567:7:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2390,"id":2392,"nodeType":"Return","src":"3560:14:12"}]},"documentation":{"id":2385,"nodeType":"StructuredDocumentation","src":"3421:53:12","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":2394,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"3488:6:12","nodeType":"FunctionDefinition","overrides":{"id":2387,"nodeType":"OverrideSpecifier","overrides":[],"src":"3517:8:12"},"parameters":{"id":2386,"nodeType":"ParameterList","parameters":[],"src":"3494:2:12"},"returnParameters":{"id":2390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2389,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2394,"src":"3535:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2388,"name":"string","nodeType":"ElementaryTypeName","src":"3535:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3534:15:12"},"scope":3093,"src":"3479:102:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[272],"body":{"id":2432,"nodeType":"Block","src":"3735:188:12","statements":[{"expression":{"arguments":[{"id":2404,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"3760:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2403,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3006,"src":"3745:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3745:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2406,"nodeType":"ExpressionStatement","src":"3745:23:12"},{"assignments":[2408],"declarations":[{"constant":false,"id":2408,"mutability":"mutable","name":"baseURI","nameLocation":"3793:7:12","nodeType":"VariableDeclaration","scope":2432,"src":"3779:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2407,"name":"string","nodeType":"ElementaryTypeName","src":"3779:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2411,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2409,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"3803:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3803:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"3779:34:12"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2414,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"3836:7:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3830:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2412,"name":"bytes","nodeType":"ElementaryTypeName","src":"3830:5:12","typeDescriptions":{}}},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3830:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3830:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3854:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3830:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3914:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3830:86:12","trueExpression":{"arguments":[{"arguments":[{"id":2423,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"3882:7:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2424,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"3891:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":684,"src":"3891:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3891:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2421,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3865:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3865:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3865:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3858:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2419,"name":"string","nodeType":"ElementaryTypeName","src":"3858:6:12","typeDescriptions":{}}},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3858:53:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2402,"id":2431,"nodeType":"Return","src":"3823:93:12"}]},"documentation":{"id":2395,"nodeType":"StructuredDocumentation","src":"3587:55:12","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":2433,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"3656:8:12","nodeType":"FunctionDefinition","overrides":{"id":2399,"nodeType":"OverrideSpecifier","overrides":[],"src":"3702:8:12"},"parameters":{"id":2398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2397,"mutability":"mutable","name":"tokenId","nameLocation":"3673:7:12","nodeType":"VariableDeclaration","scope":2433,"src":"3665:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2396,"name":"uint256","nodeType":"ElementaryTypeName","src":"3665:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3664:17:12"},"returnParameters":{"id":2402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2433,"src":"3720:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2400,"name":"string","nodeType":"ElementaryTypeName","src":"3720:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3719:15:12"},"scope":3093,"src":"3647:276:12","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2441,"nodeType":"Block","src":"4231:26:12","statements":[{"expression":{"hexValue":"","id":2439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4248:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":2438,"id":2440,"nodeType":"Return","src":"4241:9:12"}]},"documentation":{"id":2434,"nodeType":"StructuredDocumentation","src":"3929:231:12","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":2442,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"4174:8:12","nodeType":"FunctionDefinition","parameters":{"id":2435,"nodeType":"ParameterList","parameters":[],"src":"4182:2:12"},"returnParameters":{"id":2438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2442,"src":"4216:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2436,"name":"string","nodeType":"ElementaryTypeName","src":"4216:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4215:15:12"},"scope":3093,"src":"4165:92:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[201],"body":{"id":2483,"nodeType":"Block","src":"4384:330:12","statements":[{"assignments":[2452],"declarations":[{"constant":false,"id":2452,"mutability":"mutable","name":"owner","nameLocation":"4402:5:12","nodeType":"VariableDeclaration","scope":2483,"src":"4394:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2451,"name":"address","nodeType":"ElementaryTypeName","src":"4394:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2456,"initialValue":{"arguments":[{"id":2454,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"4418:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2453,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"4410:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4410:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4394:32:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2458,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"4444:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2459,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"4450:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4444:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":2461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4457:35:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":2457,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4436:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4436:57:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2463,"nodeType":"ExpressionStatement","src":"4436:57:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2465,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"4525:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4525:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2467,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"4541:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4525:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2470,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"4567:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2471,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"4574:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4574:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2469,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"4550:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4550:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4525:62:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c","id":2475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4601:64:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","typeString":"literal_string \"ERC721: approve caller is not token owner nor approved for all\""},"value":"ERC721: approve caller is not token owner nor approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","typeString":"literal_string \"ERC721: approve caller is not token owner nor approved for all\""}],"id":2464,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4504:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4504:171:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2477,"nodeType":"ExpressionStatement","src":"4504:171:12"},{"expression":{"arguments":[{"id":2479,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"4695:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2480,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"4699:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2478,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"4686:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4686:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2482,"nodeType":"ExpressionStatement","src":"4686:21:12"}]},"documentation":{"id":2443,"nodeType":"StructuredDocumentation","src":"4263:46:12","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":2484,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4323:7:12","nodeType":"FunctionDefinition","overrides":{"id":2449,"nodeType":"OverrideSpecifier","overrides":[],"src":"4375:8:12"},"parameters":{"id":2448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2445,"mutability":"mutable","name":"to","nameLocation":"4339:2:12","nodeType":"VariableDeclaration","scope":2484,"src":"4331:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2444,"name":"address","nodeType":"ElementaryTypeName","src":"4331:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2447,"mutability":"mutable","name":"tokenId","nameLocation":"4351:7:12","nodeType":"VariableDeclaration","scope":2484,"src":"4343:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2446,"name":"uint256","nodeType":"ElementaryTypeName","src":"4343:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4330:29:12"},"returnParameters":{"id":2450,"nodeType":"ParameterList","parameters":[],"src":"4384:0:12"},"scope":3093,"src":"4314:400:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[217],"body":{"id":2501,"nodeType":"Block","src":"4860:82:12","statements":[{"expression":{"arguments":[{"id":2494,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"4885:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2493,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3006,"src":"4870:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4870:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2496,"nodeType":"ExpressionStatement","src":"4870:23:12"},{"expression":{"baseExpression":{"id":2497,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"4911:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2499,"indexExpression":{"id":2498,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"4927:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4911:24:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2492,"id":2500,"nodeType":"Return","src":"4904:31:12"}]},"documentation":{"id":2485,"nodeType":"StructuredDocumentation","src":"4720:50:12","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":2502,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4784:11:12","nodeType":"FunctionDefinition","overrides":{"id":2489,"nodeType":"OverrideSpecifier","overrides":[],"src":"4833:8:12"},"parameters":{"id":2488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2487,"mutability":"mutable","name":"tokenId","nameLocation":"4804:7:12","nodeType":"VariableDeclaration","scope":2502,"src":"4796:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2486,"name":"uint256","nodeType":"ElementaryTypeName","src":"4796:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4795:17:12"},"returnParameters":{"id":2492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2502,"src":"4851:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2490,"name":"address","nodeType":"ElementaryTypeName","src":"4851:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4850:9:12"},"scope":3093,"src":"4775:167:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[209],"body":{"id":2518,"nodeType":"Block","src":"5093:69:12","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2512,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"5122:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5122:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2514,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"5136:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2515,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"5146:8:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2511,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2992,"src":"5103:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5103:52:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2517,"nodeType":"ExpressionStatement","src":"5103:52:12"}]},"documentation":{"id":2503,"nodeType":"StructuredDocumentation","src":"4948:56:12","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":2519,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"5018:17:12","nodeType":"FunctionDefinition","overrides":{"id":2509,"nodeType":"OverrideSpecifier","overrides":[],"src":"5084:8:12"},"parameters":{"id":2508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2505,"mutability":"mutable","name":"operator","nameLocation":"5044:8:12","nodeType":"VariableDeclaration","scope":2519,"src":"5036:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2504,"name":"address","nodeType":"ElementaryTypeName","src":"5036:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2507,"mutability":"mutable","name":"approved","nameLocation":"5059:8:12","nodeType":"VariableDeclaration","scope":2519,"src":"5054:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2506,"name":"bool","nodeType":"ElementaryTypeName","src":"5054:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5035:33:12"},"returnParameters":{"id":2510,"nodeType":"ParameterList","parameters":[],"src":"5093:0:12"},"scope":3093,"src":"5009:153:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[227],"body":{"id":2536,"nodeType":"Block","src":"5331:59:12","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":2530,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"5348:18:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2532,"indexExpression":{"id":2531,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"5367:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5348:25:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2534,"indexExpression":{"id":2533,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"5374:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5348:35:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2529,"id":2535,"nodeType":"Return","src":"5341:42:12"}]},"documentation":{"id":2520,"nodeType":"StructuredDocumentation","src":"5168:55:12","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":2537,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"5237:16:12","nodeType":"FunctionDefinition","overrides":{"id":2526,"nodeType":"OverrideSpecifier","overrides":[],"src":"5307:8:12"},"parameters":{"id":2525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2522,"mutability":"mutable","name":"owner","nameLocation":"5262:5:12","nodeType":"VariableDeclaration","scope":2537,"src":"5254:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2521,"name":"address","nodeType":"ElementaryTypeName","src":"5254:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2524,"mutability":"mutable","name":"operator","nameLocation":"5277:8:12","nodeType":"VariableDeclaration","scope":2537,"src":"5269:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2523,"name":"address","nodeType":"ElementaryTypeName","src":"5269:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5253:33:12"},"returnParameters":{"id":2529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2537,"src":"5325:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2527,"name":"bool","nodeType":"ElementaryTypeName","src":"5325:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5324:6:12"},"scope":3093,"src":"5228:162:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[193],"body":{"id":2563,"nodeType":"Block","src":"5571:208:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2550,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"5660:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5660:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2552,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"5674:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2549,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"5641:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5641:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f766564","id":2554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5684:48:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""},"value":"ERC721: caller is not token owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""}],"id":2548,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5633:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5633:100:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2556,"nodeType":"ExpressionStatement","src":"5633:100:12"},{"expression":{"arguments":[{"id":2558,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"5754:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2559,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"5760:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2560,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"5764:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2557,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"5744:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5744:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2562,"nodeType":"ExpressionStatement","src":"5744:28:12"}]},"documentation":{"id":2538,"nodeType":"StructuredDocumentation","src":"5396:51:12","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":2564,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5461:12:12","nodeType":"FunctionDefinition","overrides":{"id":2546,"nodeType":"OverrideSpecifier","overrides":[],"src":"5562:8:12"},"parameters":{"id":2545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2540,"mutability":"mutable","name":"from","nameLocation":"5491:4:12","nodeType":"VariableDeclaration","scope":2564,"src":"5483:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2539,"name":"address","nodeType":"ElementaryTypeName","src":"5483:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2542,"mutability":"mutable","name":"to","nameLocation":"5513:2:12","nodeType":"VariableDeclaration","scope":2564,"src":"5505:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2541,"name":"address","nodeType":"ElementaryTypeName","src":"5505:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2544,"mutability":"mutable","name":"tokenId","nameLocation":"5533:7:12","nodeType":"VariableDeclaration","scope":2564,"src":"5525:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2543,"name":"uint256","nodeType":"ElementaryTypeName","src":"5525:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5473:73:12"},"returnParameters":{"id":2547,"nodeType":"ParameterList","parameters":[],"src":"5571:0:12"},"scope":3093,"src":"5452:327:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[183],"body":{"id":2582,"nodeType":"Block","src":"5968:56:12","statements":[{"expression":{"arguments":[{"id":2576,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"5995:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2577,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"6001:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2578,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"6005:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6014:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2575,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[2583,2613],"referencedDeclaration":2613,"src":"5978:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5978:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2581,"nodeType":"ExpressionStatement","src":"5978:39:12"}]},"documentation":{"id":2565,"nodeType":"StructuredDocumentation","src":"5785:55:12","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":2583,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5854:16:12","nodeType":"FunctionDefinition","overrides":{"id":2573,"nodeType":"OverrideSpecifier","overrides":[],"src":"5959:8:12"},"parameters":{"id":2572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2567,"mutability":"mutable","name":"from","nameLocation":"5888:4:12","nodeType":"VariableDeclaration","scope":2583,"src":"5880:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2566,"name":"address","nodeType":"ElementaryTypeName","src":"5880:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2569,"mutability":"mutable","name":"to","nameLocation":"5910:2:12","nodeType":"VariableDeclaration","scope":2583,"src":"5902:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2568,"name":"address","nodeType":"ElementaryTypeName","src":"5902:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2571,"mutability":"mutable","name":"tokenId","nameLocation":"5930:7:12","nodeType":"VariableDeclaration","scope":2583,"src":"5922:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2570,"name":"uint256","nodeType":"ElementaryTypeName","src":"5922:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5870:73:12"},"returnParameters":{"id":2574,"nodeType":"ParameterList","parameters":[],"src":"5968:0:12"},"scope":3093,"src":"5845:179:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[173],"body":{"id":2612,"nodeType":"Block","src":"6240:165:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2598,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"6277:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6277:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2600,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"6291:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2597,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"6258:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6258:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f766564","id":2602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6301:48:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""},"value":"ERC721: caller is not token owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""}],"id":2596,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6250:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6250:100:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2604,"nodeType":"ExpressionStatement","src":"6250:100:12"},{"expression":{"arguments":[{"id":2606,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"6374:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2607,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"6380:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2608,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"6384:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2609,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"6393:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2605,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"6360:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6360:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2611,"nodeType":"ExpressionStatement","src":"6360:38:12"}]},"documentation":{"id":2584,"nodeType":"StructuredDocumentation","src":"6030:55:12","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":2613,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"6099:16:12","nodeType":"FunctionDefinition","overrides":{"id":2594,"nodeType":"OverrideSpecifier","overrides":[],"src":"6231:8:12"},"parameters":{"id":2593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2586,"mutability":"mutable","name":"from","nameLocation":"6133:4:12","nodeType":"VariableDeclaration","scope":2613,"src":"6125:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2585,"name":"address","nodeType":"ElementaryTypeName","src":"6125:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2588,"mutability":"mutable","name":"to","nameLocation":"6155:2:12","nodeType":"VariableDeclaration","scope":2613,"src":"6147:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2587,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2590,"mutability":"mutable","name":"tokenId","nameLocation":"6175:7:12","nodeType":"VariableDeclaration","scope":2613,"src":"6167:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2589,"name":"uint256","nodeType":"ElementaryTypeName","src":"6167:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2592,"mutability":"mutable","name":"data","nameLocation":"6205:4:12","nodeType":"VariableDeclaration","scope":2613,"src":"6192:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2591,"name":"bytes","nodeType":"ElementaryTypeName","src":"6192:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6115:100:12"},"returnParameters":{"id":2595,"nodeType":"ParameterList","parameters":[],"src":"6240:0:12"},"scope":3093,"src":"6090:315:12","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2641,"nodeType":"Block","src":"7406:165:12","statements":[{"expression":{"arguments":[{"id":2626,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"7426:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2627,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"7432:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2628,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"7436:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2625,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"7416:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7416:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2630,"nodeType":"ExpressionStatement","src":"7416:28:12"},{"expression":{"arguments":[{"arguments":[{"id":2633,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"7485:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2634,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"7491:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2635,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"7495:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2636,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"7504:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2632,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"7462:22:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7462:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":2638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7511:52:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":2631,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7454:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7454:110:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2640,"nodeType":"ExpressionStatement","src":"7454:110:12"}]},"documentation":{"id":2614,"nodeType":"StructuredDocumentation","src":"6411:850:12","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":2642,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"7275:13:12","nodeType":"FunctionDefinition","parameters":{"id":2623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2616,"mutability":"mutable","name":"from","nameLocation":"7306:4:12","nodeType":"VariableDeclaration","scope":2642,"src":"7298:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2615,"name":"address","nodeType":"ElementaryTypeName","src":"7298:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2618,"mutability":"mutable","name":"to","nameLocation":"7328:2:12","nodeType":"VariableDeclaration","scope":2642,"src":"7320:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2617,"name":"address","nodeType":"ElementaryTypeName","src":"7320:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2620,"mutability":"mutable","name":"tokenId","nameLocation":"7348:7:12","nodeType":"VariableDeclaration","scope":2642,"src":"7340:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2619,"name":"uint256","nodeType":"ElementaryTypeName","src":"7340:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2622,"mutability":"mutable","name":"data","nameLocation":"7378:4:12","nodeType":"VariableDeclaration","scope":2642,"src":"7365:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2621,"name":"bytes","nodeType":"ElementaryTypeName","src":"7365:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7288:100:12"},"returnParameters":{"id":2624,"nodeType":"ParameterList","parameters":[],"src":"7406:0:12"},"scope":3093,"src":"7266:305:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2659,"nodeType":"Block","src":"7945:54:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2650,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"7962:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2652,"indexExpression":{"id":2651,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"7970:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7962:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7990:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7982:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2653,"name":"address","nodeType":"ElementaryTypeName","src":"7982:7:12","typeDescriptions":{}}},"id":2656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7982:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7962:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2649,"id":2658,"nodeType":"Return","src":"7955:37:12"}]},"documentation":{"id":2643,"nodeType":"StructuredDocumentation","src":"7577:292:12","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":2660,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7883:7:12","nodeType":"FunctionDefinition","parameters":{"id":2646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2645,"mutability":"mutable","name":"tokenId","nameLocation":"7899:7:12","nodeType":"VariableDeclaration","scope":2660,"src":"7891:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2644,"name":"uint256","nodeType":"ElementaryTypeName","src":"7891:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7890:17:12"},"returnParameters":{"id":2649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2660,"src":"7939:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2647,"name":"bool","nodeType":"ElementaryTypeName","src":"7939:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7938:6:12"},"scope":3093,"src":"7874:125:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2692,"nodeType":"Block","src":"8256:155:12","statements":[{"assignments":[2671],"declarations":[{"constant":false,"id":2671,"mutability":"mutable","name":"owner","nameLocation":"8274:5:12","nodeType":"VariableDeclaration","scope":2692,"src":"8266:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2670,"name":"address","nodeType":"ElementaryTypeName","src":"8266:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2675,"initialValue":{"arguments":[{"id":2673,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2665,"src":"8290:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2672,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"8282:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8282:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8266:32:12"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2676,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2663,"src":"8316:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2677,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"8327:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8316:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2680,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"8353:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2681,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2663,"src":"8360:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2679,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"8336:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8336:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8316:52:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2685,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2665,"src":"8384:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2684,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2502,"src":"8372:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8372:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2687,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2663,"src":"8396:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8372:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8316:87:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2690,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8315:89:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2669,"id":2691,"nodeType":"Return","src":"8308:96:12"}]},"documentation":{"id":2661,"nodeType":"StructuredDocumentation","src":"8005:147:12","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":2693,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"8166:18:12","nodeType":"FunctionDefinition","parameters":{"id":2666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2663,"mutability":"mutable","name":"spender","nameLocation":"8193:7:12","nodeType":"VariableDeclaration","scope":2693,"src":"8185:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2662,"name":"address","nodeType":"ElementaryTypeName","src":"8185:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2665,"mutability":"mutable","name":"tokenId","nameLocation":"8210:7:12","nodeType":"VariableDeclaration","scope":2693,"src":"8202:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2664,"name":"uint256","nodeType":"ElementaryTypeName","src":"8202:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8184:34:12"},"returnParameters":{"id":2669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2693,"src":"8250:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2667,"name":"bool","nodeType":"ElementaryTypeName","src":"8250:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8249:6:12"},"scope":3093,"src":"8157:254:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2707,"nodeType":"Block","src":"8806:43:12","statements":[{"expression":{"arguments":[{"id":2702,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"8826:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2703,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"8830:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8839:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2701,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[2708,2737],"referencedDeclaration":2737,"src":"8816:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8816:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2706,"nodeType":"ExpressionStatement","src":"8816:26:12"}]},"documentation":{"id":2694,"nodeType":"StructuredDocumentation","src":"8417:319:12","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":2708,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8750:9:12","nodeType":"FunctionDefinition","parameters":{"id":2699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2696,"mutability":"mutable","name":"to","nameLocation":"8768:2:12","nodeType":"VariableDeclaration","scope":2708,"src":"8760:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2695,"name":"address","nodeType":"ElementaryTypeName","src":"8760:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2698,"mutability":"mutable","name":"tokenId","nameLocation":"8780:7:12","nodeType":"VariableDeclaration","scope":2708,"src":"8772:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2697,"name":"uint256","nodeType":"ElementaryTypeName","src":"8772:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8759:29:12"},"returnParameters":{"id":2700,"nodeType":"ParameterList","parameters":[],"src":"8806:0:12"},"scope":3093,"src":"8741:108:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2736,"nodeType":"Block","src":"9184:195:12","statements":[{"expression":{"arguments":[{"id":2719,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"9200:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2720,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"9204:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2718,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"9194:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9194:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2722,"nodeType":"ExpressionStatement","src":"9194:18:12"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":2727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9274:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9266:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2725,"name":"address","nodeType":"ElementaryTypeName","src":"9266:7:12","typeDescriptions":{}}},"id":2728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9266:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2729,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2711,"src":"9278:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2730,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"9282:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2731,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"9291:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2724,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3070,"src":"9243:22:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9243:53:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":2733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9310:52:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":2723,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9222:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9222:150:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2735,"nodeType":"ExpressionStatement","src":"9222:150:12"}]},"documentation":{"id":2709,"nodeType":"StructuredDocumentation","src":"8855:210:12","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":2737,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"9079:9:12","nodeType":"FunctionDefinition","parameters":{"id":2716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2711,"mutability":"mutable","name":"to","nameLocation":"9106:2:12","nodeType":"VariableDeclaration","scope":2737,"src":"9098:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2710,"name":"address","nodeType":"ElementaryTypeName","src":"9098:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2713,"mutability":"mutable","name":"tokenId","nameLocation":"9126:7:12","nodeType":"VariableDeclaration","scope":2737,"src":"9118:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2712,"name":"uint256","nodeType":"ElementaryTypeName","src":"9118:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2715,"mutability":"mutable","name":"data","nameLocation":"9156:4:12","nodeType":"VariableDeclaration","scope":2737,"src":"9143:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2714,"name":"bytes","nodeType":"ElementaryTypeName","src":"9143:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9088:78:12"},"returnParameters":{"id":2717,"nodeType":"ParameterList","parameters":[],"src":"9184:0:12"},"scope":3093,"src":"9070:309:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2802,"nodeType":"Block","src":"9762:366:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2746,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"9780:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9794:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9786:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2747,"name":"address","nodeType":"ElementaryTypeName","src":"9786:7:12","typeDescriptions":{}}},"id":2750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9786:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9780:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":2752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9798:34:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":2745,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9772:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9772:61:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2754,"nodeType":"ExpressionStatement","src":"9772:61:12"},{"expression":{"arguments":[{"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9851:17:12","subExpression":{"arguments":[{"id":2757,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"9860:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2756,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"9852:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9852:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":2760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9870:30:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":2755,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9843:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9843:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2762,"nodeType":"ExpressionStatement","src":"9843:58:12"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9941:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9933:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2764,"name":"address","nodeType":"ElementaryTypeName","src":"9933:7:12","typeDescriptions":{}}},"id":2767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9933:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2768,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"9945:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2769,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"9949:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2763,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"9912:20:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9912:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2771,"nodeType":"ExpressionStatement","src":"9912:45:12"},{"expression":{"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2772,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"9968:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2774,"indexExpression":{"id":2773,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"9978:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9968:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9985:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9968:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2777,"nodeType":"ExpressionStatement","src":"9968:18:12"},{"expression":{"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2778,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"9996:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2780,"indexExpression":{"id":2779,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"10004:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9996:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2781,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"10015:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9996:21:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2783,"nodeType":"ExpressionStatement","src":"9996:21:12"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10050:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10042:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2785,"name":"address","nodeType":"ElementaryTypeName","src":"10042:7:12","typeDescriptions":{}}},"id":2788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10042:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2789,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"10054:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2790,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"10058:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2784,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"10033:8:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10033:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2792,"nodeType":"EmitStatement","src":"10028:38:12"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10105:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10097:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2794,"name":"address","nodeType":"ElementaryTypeName","src":"10097:7:12","typeDescriptions":{}}},"id":2797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10097:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2798,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"10109:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2799,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"10113:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2793,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"10077:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10077:44:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2801,"nodeType":"ExpressionStatement","src":"10077:44:12"}]},"documentation":{"id":2738,"nodeType":"StructuredDocumentation","src":"9385:311:12","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":2803,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9710:5:12","nodeType":"FunctionDefinition","parameters":{"id":2743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2740,"mutability":"mutable","name":"to","nameLocation":"9724:2:12","nodeType":"VariableDeclaration","scope":2803,"src":"9716:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2739,"name":"address","nodeType":"ElementaryTypeName","src":"9716:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2742,"mutability":"mutable","name":"tokenId","nameLocation":"9736:7:12","nodeType":"VariableDeclaration","scope":2803,"src":"9728:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2741,"name":"uint256","nodeType":"ElementaryTypeName","src":"9728:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9715:29:12"},"returnParameters":{"id":2744,"nodeType":"ParameterList","parameters":[],"src":"9762:0:12"},"scope":3093,"src":"9701:427:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2862,"nodeType":"Block","src":"10394:431:12","statements":[{"assignments":[2810],"declarations":[{"constant":false,"id":2810,"mutability":"mutable","name":"owner","nameLocation":"10412:5:12","nodeType":"VariableDeclaration","scope":2862,"src":"10404:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2809,"name":"address","nodeType":"ElementaryTypeName","src":"10404:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2814,"initialValue":{"arguments":[{"id":2812,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"10428:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2811,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"10420:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10420:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10404:32:12"},{"expression":{"arguments":[{"id":2816,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"10468:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10483:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10475:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2817,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:12","typeDescriptions":{}}},"id":2820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10475:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2821,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"10487:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2815,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"10447:20:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10447:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2823,"nodeType":"ExpressionStatement","src":"10447:48:12"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10542:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2825,"name":"address","nodeType":"ElementaryTypeName","src":"10542:7:12","typeDescriptions":{}}},"id":2828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10542:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2829,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"10554:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2824,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"10533:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10533:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2831,"nodeType":"ExpressionStatement","src":"10533:29:12"},{"expression":{"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2832,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"10573:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2834,"indexExpression":{"id":2833,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"10583:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10573:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10593:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10573:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2837,"nodeType":"ExpressionStatement","src":"10573:21:12"},{"expression":{"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2838,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"10676:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2840,"indexExpression":{"id":2839,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"10684:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10676:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2841,"name":"_NULL_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"10695:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10676:32:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2843,"nodeType":"ExpressionStatement","src":"10676:32:12"},{"eventCall":{"arguments":[{"id":2845,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"10733:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10748:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10740:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2846,"name":"address","nodeType":"ElementaryTypeName","src":"10740:7:12","typeDescriptions":{}}},"id":2849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10740:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2850,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"10752:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2844,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"10724:8:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10724:36:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2852,"nodeType":"EmitStatement","src":"10719:41:12"},{"expression":{"arguments":[{"id":2854,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"10791:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10806:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10798:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2855,"name":"address","nodeType":"ElementaryTypeName","src":"10798:7:12","typeDescriptions":{}}},"id":2858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10798:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2859,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"10810:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2853,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"10771:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10771:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2861,"nodeType":"ExpressionStatement","src":"10771:47:12"}]},"documentation":{"id":2804,"nodeType":"StructuredDocumentation","src":"10134:206:12","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":2863,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"10354:5:12","nodeType":"FunctionDefinition","parameters":{"id":2807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2806,"mutability":"mutable","name":"tokenId","nameLocation":"10368:7:12","nodeType":"VariableDeclaration","scope":2863,"src":"10360:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2805,"name":"uint256","nodeType":"ElementaryTypeName","src":"10360:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10359:17:12"},"returnParameters":{"id":2808,"nodeType":"ParameterList","parameters":[],"src":"10394:0:12"},"scope":3093,"src":"10345:480:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2936,"nodeType":"Block","src":"11258:489:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2875,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"11284:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2874,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"11276:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11276:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2877,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"11296:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11276:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":2879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11302:39:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":2873,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11268:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11268:74:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2881,"nodeType":"ExpressionStatement","src":"11268:74:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2883,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"11360:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11374:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11366:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2884,"name":"address","nodeType":"ElementaryTypeName","src":"11366:7:12","typeDescriptions":{}}},"id":2887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11366:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11360:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":2889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11378:38:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":2882,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11352:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11352:65:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2891,"nodeType":"ExpressionStatement","src":"11352:65:12"},{"expression":{"arguments":[{"id":2893,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"11449:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2894,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"11455:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2895,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"11459:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2892,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"11428:20:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11428:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2897,"nodeType":"ExpressionStatement","src":"11428:39:12"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11546:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11538:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2899,"name":"address","nodeType":"ElementaryTypeName","src":"11538:7:12","typeDescriptions":{}}},"id":2902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11538:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2903,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"11550:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2898,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"11529:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11529:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2905,"nodeType":"ExpressionStatement","src":"11529:29:12"},{"expression":{"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2906,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"11569:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2908,"indexExpression":{"id":2907,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"11579:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11569:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11588:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11569:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2911,"nodeType":"ExpressionStatement","src":"11569:20:12"},{"expression":{"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2912,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"11599:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2914,"indexExpression":{"id":2913,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"11609:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11599:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11616:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11599:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2917,"nodeType":"ExpressionStatement","src":"11599:18:12"},{"expression":{"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2918,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"11627:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2920,"indexExpression":{"id":2919,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"11635:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11627:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2921,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"11646:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11627:21:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2923,"nodeType":"ExpressionStatement","src":"11627:21:12"},{"eventCall":{"arguments":[{"id":2925,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"11673:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2926,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"11679:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2927,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"11683:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2924,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"11664:8:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11664:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2929,"nodeType":"EmitStatement","src":"11659:32:12"},{"expression":{"arguments":[{"id":2931,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"11722:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2932,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"11728:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2933,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"11732:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2930,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"11702:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11702:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2935,"nodeType":"ExpressionStatement","src":"11702:38:12"}]},"documentation":{"id":2864,"nodeType":"StructuredDocumentation","src":"10831:313:12","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":2937,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11158:9:12","nodeType":"FunctionDefinition","parameters":{"id":2871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2866,"mutability":"mutable","name":"from","nameLocation":"11185:4:12","nodeType":"VariableDeclaration","scope":2937,"src":"11177:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2865,"name":"address","nodeType":"ElementaryTypeName","src":"11177:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2868,"mutability":"mutable","name":"to","nameLocation":"11207:2:12","nodeType":"VariableDeclaration","scope":2937,"src":"11199:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2867,"name":"address","nodeType":"ElementaryTypeName","src":"11199:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2870,"mutability":"mutable","name":"tokenId","nameLocation":"11227:7:12","nodeType":"VariableDeclaration","scope":2937,"src":"11219:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2869,"name":"uint256","nodeType":"ElementaryTypeName","src":"11219:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11167:73:12"},"returnParameters":{"id":2872,"nodeType":"ParameterList","parameters":[],"src":"11258:0:12"},"scope":3093,"src":"11149:598:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2959,"nodeType":"Block","src":"11923:100:12","statements":[{"expression":{"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2945,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"11933:15:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2947,"indexExpression":{"id":2946,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"11949:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11933:24:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2948,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"11960:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11933:29:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2950,"nodeType":"ExpressionStatement","src":"11933:29:12"},{"eventCall":{"arguments":[{"arguments":[{"id":2953,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"11994:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2952,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"11986:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11986:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2955,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"12004:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2956,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"12008:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2951,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"11977:8:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11977:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2958,"nodeType":"EmitStatement","src":"11972:44:12"}]},"documentation":{"id":2938,"nodeType":"StructuredDocumentation","src":"11753:101:12","text":" @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."},"id":2960,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"11868:8:12","nodeType":"FunctionDefinition","parameters":{"id":2943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2940,"mutability":"mutable","name":"to","nameLocation":"11885:2:12","nodeType":"VariableDeclaration","scope":2960,"src":"11877:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2939,"name":"address","nodeType":"ElementaryTypeName","src":"11877:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2942,"mutability":"mutable","name":"tokenId","nameLocation":"11897:7:12","nodeType":"VariableDeclaration","scope":2960,"src":"11889:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2941,"name":"uint256","nodeType":"ElementaryTypeName","src":"11889:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11876:29:12"},"returnParameters":{"id":2944,"nodeType":"ParameterList","parameters":[],"src":"11923:0:12"},"scope":3093,"src":"11859:164:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2991,"nodeType":"Block","src":"12282:184:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2971,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"12300:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2972,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"12309:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12300:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":2974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12319:27:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":2970,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12292:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12292:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2976,"nodeType":"ExpressionStatement","src":"12292:55:12"},{"expression":{"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2977,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2274,"src":"12357:18:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2980,"indexExpression":{"id":2978,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"12376:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12357:25:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2981,"indexExpression":{"id":2979,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"12383:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12357:35:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2982,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"12395:8:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12357:46:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2984,"nodeType":"ExpressionStatement","src":"12357:46:12"},{"eventCall":{"arguments":[{"id":2986,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"12433:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2987,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"12440:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2988,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"12450:8:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2985,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"12418:14:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12418:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2990,"nodeType":"EmitStatement","src":"12413:46:12"}]},"documentation":{"id":2961,"nodeType":"StructuredDocumentation","src":"12029:125:12","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":2992,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"12168:18:12","nodeType":"FunctionDefinition","parameters":{"id":2968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2963,"mutability":"mutable","name":"owner","nameLocation":"12204:5:12","nodeType":"VariableDeclaration","scope":2992,"src":"12196:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2962,"name":"address","nodeType":"ElementaryTypeName","src":"12196:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2965,"mutability":"mutable","name":"operator","nameLocation":"12227:8:12","nodeType":"VariableDeclaration","scope":2992,"src":"12219:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2964,"name":"address","nodeType":"ElementaryTypeName","src":"12219:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2967,"mutability":"mutable","name":"approved","nameLocation":"12250:8:12","nodeType":"VariableDeclaration","scope":2992,"src":"12245:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2966,"name":"bool","nodeType":"ElementaryTypeName","src":"12245:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12186:78:12"},"returnParameters":{"id":2969,"nodeType":"ParameterList","parameters":[],"src":"12282:0:12"},"scope":3093,"src":"12159:307:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3005,"nodeType":"Block","src":"12613:70:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":3000,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"12639:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2999,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"12631:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12631:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":3002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12649:26:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":2998,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12623:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12623:53:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3004,"nodeType":"ExpressionStatement","src":"12623:53:12"}]},"documentation":{"id":2993,"nodeType":"StructuredDocumentation","src":"12472:73:12","text":" @dev Reverts if the `tokenId` has not been minted yet."},"id":3006,"implemented":true,"kind":"function","modifiers":[],"name":"_requireMinted","nameLocation":"12559:14:12","nodeType":"FunctionDefinition","parameters":{"id":2996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2995,"mutability":"mutable","name":"tokenId","nameLocation":"12582:7:12","nodeType":"VariableDeclaration","scope":3006,"src":"12574:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2994,"name":"uint256","nodeType":"ElementaryTypeName","src":"12574:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12573:17:12"},"returnParameters":{"id":2997,"nodeType":"ParameterList","parameters":[],"src":"12613:0:12"},"scope":3093,"src":"12550:133:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3069,"nodeType":"Block","src":"13390:679:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3020,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"13404:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"13404:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"13404:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13421:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13404:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3067,"nodeType":"Block","src":"14027:36:12","statements":[{"expression":{"hexValue":"74727565","id":3065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14048:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3019,"id":3066,"nodeType":"Return","src":"14041:11:12"}]},"id":3068,"nodeType":"IfStatement","src":"13400:663:12","trueBody":{"id":3064,"nodeType":"Block","src":"13424:597:12","statements":[{"clauses":[{"block":{"id":3044,"nodeType":"Block","src":"13538:91:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3038,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"13563:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":3039,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"13573:15:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$246_$","typeString":"type(contract IERC721Receiver)"}},"id":3040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":245,"src":"13573:32:12","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":3041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"13573:41:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"13563:51:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3019,"id":3043,"nodeType":"Return","src":"13556:58:12"}]},"errorName":"","id":3045,"nodeType":"TryCatchClause","parameters":{"id":3037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3036,"mutability":"mutable","name":"retval","nameLocation":"13530:6:12","nodeType":"VariableDeclaration","scope":3045,"src":"13523:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3035,"name":"bytes4","nodeType":"ElementaryTypeName","src":"13523:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"13522:15:12"},"src":"13514:115:12"},{"block":{"id":3061,"nodeType":"Block","src":"13658:353:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3049,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"13680:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"13680:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13697:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13680:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3059,"nodeType":"Block","src":"13807:190:12","statements":[{"AST":{"nodeType":"YulBlock","src":"13893:86:12","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13930:2:12","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"13934:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13926:3:12"},"nodeType":"YulFunctionCall","src":"13926:15:12"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"13949:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13943:5:12"},"nodeType":"YulFunctionCall","src":"13943:13:12"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13919:6:12"},"nodeType":"YulFunctionCall","src":"13919:38:12"},"nodeType":"YulExpressionStatement","src":"13919:38:12"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":3047,"isOffset":false,"isSlot":false,"src":"13934:6:12","valueSize":1},{"declaration":3047,"isOffset":false,"isSlot":false,"src":"13949:6:12","valueSize":1}],"id":3058,"nodeType":"InlineAssembly","src":"13884:95:12"}]},"id":3060,"nodeType":"IfStatement","src":"13676:321:12","trueBody":{"id":3057,"nodeType":"Block","src":"13700:101:12","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":3054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13729:52:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":3053,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"13722:6:12","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13722:60:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3056,"nodeType":"ExpressionStatement","src":"13722:60:12"}]}}]},"errorName":"","id":3062,"nodeType":"TryCatchClause","parameters":{"id":3048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3047,"mutability":"mutable","name":"reason","nameLocation":"13650:6:12","nodeType":"VariableDeclaration","scope":3062,"src":"13637:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3046,"name":"bytes","nodeType":"ElementaryTypeName","src":"13637:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13636:21:12"},"src":"13630:381:12"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3029,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"13479:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13479:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3031,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"13493:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3032,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"13499:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3033,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"13508:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":3026,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"13458:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3025,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"13442:15:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$246_$","typeString":"type(contract IERC721Receiver)"}},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13442:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$246","typeString":"contract IERC721Receiver"}},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":245,"src":"13442:36:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13442:71:12","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":3063,"nodeType":"TryStatement","src":"13438:573:12"}]}}]},"documentation":{"id":3007,"nodeType":"StructuredDocumentation","src":"12689:541:12","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":3070,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"13244:22:12","nodeType":"FunctionDefinition","parameters":{"id":3016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3009,"mutability":"mutable","name":"from","nameLocation":"13284:4:12","nodeType":"VariableDeclaration","scope":3070,"src":"13276:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3008,"name":"address","nodeType":"ElementaryTypeName","src":"13276:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3011,"mutability":"mutable","name":"to","nameLocation":"13306:2:12","nodeType":"VariableDeclaration","scope":3070,"src":"13298:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3010,"name":"address","nodeType":"ElementaryTypeName","src":"13298:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3013,"mutability":"mutable","name":"tokenId","nameLocation":"13326:7:12","nodeType":"VariableDeclaration","scope":3070,"src":"13318:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3012,"name":"uint256","nodeType":"ElementaryTypeName","src":"13318:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3015,"mutability":"mutable","name":"data","nameLocation":"13356:4:12","nodeType":"VariableDeclaration","scope":3070,"src":"13343:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3014,"name":"bytes","nodeType":"ElementaryTypeName","src":"13343:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13266:100:12"},"returnParameters":{"id":3019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3070,"src":"13384:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3017,"name":"bool","nodeType":"ElementaryTypeName","src":"13384:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13383:6:12"},"scope":3093,"src":"13235:834:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3080,"nodeType":"Block","src":"14745:2:12","statements":[]},"documentation":{"id":3071,"nodeType":"StructuredDocumentation","src":"14075:545:12","text":" @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":3081,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"14634:20:12","nodeType":"FunctionDefinition","parameters":{"id":3078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3073,"mutability":"mutable","name":"from","nameLocation":"14672:4:12","nodeType":"VariableDeclaration","scope":3081,"src":"14664:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3072,"name":"address","nodeType":"ElementaryTypeName","src":"14664:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3075,"mutability":"mutable","name":"to","nameLocation":"14694:2:12","nodeType":"VariableDeclaration","scope":3081,"src":"14686:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3074,"name":"address","nodeType":"ElementaryTypeName","src":"14686:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3077,"mutability":"mutable","name":"tokenId","nameLocation":"14714:7:12","nodeType":"VariableDeclaration","scope":3081,"src":"14706:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3076,"name":"uint256","nodeType":"ElementaryTypeName","src":"14706:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14654:73:12"},"returnParameters":{"id":3079,"nodeType":"ParameterList","parameters":[],"src":"14745:0:12"},"scope":3093,"src":"14625:122:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3091,"nodeType":"Block","src":"15238:2:12","statements":[]},"documentation":{"id":3082,"nodeType":"StructuredDocumentation","src":"14753:361:12","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":3092,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"15128:19:12","nodeType":"FunctionDefinition","parameters":{"id":3089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3084,"mutability":"mutable","name":"from","nameLocation":"15165:4:12","nodeType":"VariableDeclaration","scope":3092,"src":"15157:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3083,"name":"address","nodeType":"ElementaryTypeName","src":"15157:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3086,"mutability":"mutable","name":"to","nameLocation":"15187:2:12","nodeType":"VariableDeclaration","scope":3092,"src":"15179:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3085,"name":"address","nodeType":"ElementaryTypeName","src":"15179:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3088,"mutability":"mutable","name":"tokenId","nameLocation":"15207:7:12","nodeType":"VariableDeclaration","scope":3092,"src":"15199:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3087,"name":"uint256","nodeType":"ElementaryTypeName","src":"15199:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15147:73:12"},"returnParameters":{"id":3090,"nodeType":"ParameterList","parameters":[],"src":"15238:0:12"},"scope":3093,"src":"15119:121:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3094,"src":"1382:13860:12","usedErrors":[]}],"src":"302:14941:12"}}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}","devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}","zk_version":"1.3.16"},"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Address.sol:Address\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000604e6d7baea78aca4288afaf6fb75e7fe9d6369ca2b769b41c22dacaae958009"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 4:\"@openzeppelin/contracts/utils/Address.sol\"\nobject \"Address_603\" {\n    code {\n        {\n            /// @src 4:194:9363  \"library Address {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Address_603_deployed\")\n            codecopy(_1, dataoffset(\"Address_603_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 4:\"@openzeppelin/contracts/utils/Address.sol\"\n    object \"Address_603_deployed\" {\n        code {\n            {\n                /// @src 4:194:9363  \"library Address {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220d959757f98093f5ced0f9e421aec02576825e483a69cd538b891feede44a630764736f6c634300080d0033\"\n    }\n}\n","hash":"010000073be25961f3e0f3dab8c1b365e87be8e7509497a694261d013b39a32f","factoryDependencies":{}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","zk_version":"1.3.16"},"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Strings.sol:Strings\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000f5076a2629be9e1994c7260fecd3bcc4caebe33257112185c9386b569fdf9056"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 6:\"@openzeppelin/contracts/utils/Strings.sol\"\nobject \"Strings_854\" {\n    code {\n        {\n            /// @src 6:220:2779  \"library Strings {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Strings_854_deployed\")\n            codecopy(_1, dataoffset(\"Strings_854_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 6:\"@openzeppelin/contracts/utils/Strings.sol\"\n    object \"Strings_854_deployed\" {\n        code {\n            {\n                /// @src 6:220:2779  \"library Strings {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220940703037aa2d949be13298aea2b7df9b80b8fb7068128f56a1def1d36e2d29464736f6c634300080d0033\"\n    }\n}\n","hash":"010000070aed6493c40c14498d779005aad285621ce22204a64f782cf2a49f95","factoryDependencies":{}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":""}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":""}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}","zk_version":"1.3.16"},"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Math.sol:Math\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e0000001000010430000000000000000000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000092e40af14fa7a87222fb836af8fcc0985990a4378f61e91d62908fb9b548d3c2"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 9:\"@openzeppelin/contracts/utils/math/Math.sol\"\nobject \"Math_1756\" {\n    code {\n        {\n            /// @src 9:202:12784  \"library Math {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Math_1756_deployed\")\n            codecopy(_1, dataoffset(\"Math_1756_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 9:\"@openzeppelin/contracts/utils/math/Math.sol\"\n    object \"Math_1756_deployed\" {\n        code {\n            {\n                /// @src 9:202:12784  \"library Math {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212208784997c98929308a0f154c755b8a595d3089f3d1e1bbdc711c3425a83bfff4b64736f6c634300080d0033\"\n    }\n}\n","hash":"010000076580a40eacc5bf9961ed390692ff5b85b967ef996dc2ac6bcf8bba27","factoryDependencies":{}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","zk_version":"1.3.16"},"devdoc":{"details":"Standard signed math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SignedMath.sol:SignedMath\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000632d4dc14e026b4a15d90684f65f9dedca6bec97664be1fa1212fc43c5bf83c9"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 10:\"@openzeppelin/contracts/utils/math/SignedMath.sol\"\nobject \"SignedMath_1861\" {\n    code {\n        {\n            /// @src 10:215:1262  \"library SignedMath {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"SignedMath_1861_deployed\")\n            codecopy(_1, dataoffset(\"SignedMath_1861_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 10:\"@openzeppelin/contracts/utils/math/SignedMath.sol\"\n    object \"SignedMath_1861_deployed\" {\n        code {\n            {\n                /// @src 10:215:1262  \"library SignedMath {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122099410ea23aed26001d6944ae848f5cf01e52e05f9341b717460e9c22d2868c1564736f6c634300080d0033\"\n    }\n}\n","hash":"01000007a85600a7902e2a5fe8986d2f8f246edc02f1ddab75682aa251320e29","factoryDependencies":{}}},"contracts/ERC721All.sol":{"ERC721All":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"string","name":"baseUri","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"baseUri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"todo...\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"Overrides {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Overrides {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"_baseTokenURI\":{\"details\":\"ERC721 Base Token URI\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC721All.sol\":\"ERC721All\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/ERC721All.sol\":{\"keccak256\":\"0xa79ec22c9697210e92770ff7eee4747574449bf24681d3b10b5ede61471f511a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6aa530baafdba2f792d6a1d76972051d248b07cb0c8f7fac03e6ea74697357d6\",\"dweb:/ipfs/QmaXVHXp3aBYyZHc75SdbEhvbvSF8AHPW7PSkcVs6U4JNL\"]},\"contracts/lib/ERC721.sol\":{\"keccak256\":\"0x726960336df673d5fd509dde21ba3bed24645291d201f74762b945fe4d5aa016\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb5cefbd15159da2ee1fa6e6050be9dfa19cdfe72b7eb0d09d63f1bf252605\",\"dweb:/ipfs/QmaAziN1hCNgW54ofjDyME3FM7p96M4dXC7d3gBTLWVZkw\"]}},\"version\":1}","zk_version":"1.3.16"},"devdoc":{"details":"todo...","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"Overrides {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"owner()":{"details":"Returns the address of the current owner."},"ownerOf(uint256)":{"details":"Overrides {IERC721-ownerOf}."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"stateVariables":{"_baseTokenURI":{"details":"ERC721 Base Token URI"}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":7,"contract":"contracts/ERC721All.sol:ERC721All","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":2254,"contract":"contracts/ERC721All.sol:ERC721All","label":"_name","offset":0,"slot":"1","type":"t_string_storage"},{"astId":2256,"contract":"contracts/ERC721All.sol:ERC721All","label":"_symbol","offset":0,"slot":"2","type":"t_string_storage"},{"astId":2260,"contract":"contracts/ERC721All.sol:ERC721All","label":"_owners","offset":0,"slot":"3","type":"t_mapping(t_uint256,t_address)"},{"astId":2264,"contract":"contracts/ERC721All.sol:ERC721All","label":"_balances","offset":0,"slot":"4","type":"t_mapping(t_address,t_uint256)"},{"astId":2268,"contract":"contracts/ERC721All.sol:ERC721All","label":"_tokenApprovals","offset":0,"slot":"5","type":"t_mapping(t_uint256,t_address)"},{"astId":2274,"contract":"contracts/ERC721All.sol:ERC721All","label":"_operatorApprovals","offset":0,"slot":"6","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":1874,"contract":"contracts/ERC721All.sol:ERC721All","label":"_activeTokens","offset":0,"slot":"7","type":"t_mapping(t_uint256,t_bool)"},{"astId":1877,"contract":"contracts/ERC721All.sol:ERC721All","label":"_baseTokenURI","offset":0,"slot":"8","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_bool)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => bool)","numberOfBytes":"32","value":"t_bool"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ERC721All.sol:ERC721All\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[10]\n\tptr.add\tr1, r0, r4\n\tptr.add\tr4, r0, stack[@ptr_calldata]\n\tadd\t0, r0, stack[@returndatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tadd\tr4, r0, r1\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, r1\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r1, r2\n\tjump.lt\t@.BB0_2\n\tld\tr4, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_15[0], r2, r3\n\tjump.le\t@.BB0_101\n\tsub.s!\t@CPI0_16[0], r2, r3\n\tjump.le\t@.BB0_113\n\tsub.s!\t@CPI0_17[0], r2, r3\n\tjump.le\t@.BB0_119\n\tsub.s!\t@CPI0_18[0], r2, r3\n\tjump.eq\t@.BB0_253\n\tsub.s!\t@CPI0_19[0], r2, r3\n\tjump.eq\t@.BB0_263\n\tsub.s!\t@CPI0_20[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r6\n\tsub.s!\t@CPI0_7[0], r6, r1\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_7[0], r1, r2\n\tcontext.caller\tr5\n\tsub!\tr2, r5, r2\n\tjump.ne\t@.BB0_214\n\tsub!\tr6, r0, r2\n\tjump.ne\t@.BB0_274\n\tadd\t@CPI0_40[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t38, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_41[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_42[0], r0, r1\n\tjump\t@.BB0_199\n.BB0_1:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_1[0], r1, r2\n\tsub.s!\t@CPI0_2[0], r2, r2\n\tjump.gt\t@.BB0_6\n.BB0_4:\n\tadd\t@CPI0_45[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB0_5:\n\tst.1\t4, r1\n\tadd\t@CPI0_46[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_6:\n\tadd\t159, r1, r2\n\tand\t@CPI0_3[0], r2, r2\n\tst.1\t64, r2\n\tand\t31, r1, r2\n\tshr.s!\t5, r1, r3\n\tjump.eq\t@.BB0_276\n\tadd\tr0, r0, r5\n.BB0_8:\n\tshl.s\t5, r5, r6\n\tptr.add\tr4, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_8\n.BB0_276:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r3, r3\n\tptr.add\tr4, r3, r4\n\tshl.s\t3, r2, r2\n\tadd\t128, r3, r3\n\tld.1\tr3, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr4, r4\n\tsub\t256, r2, r2\n\tshr\tr4, r2, r4\n\tshl\tr4, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr3, r2\n.BB0_10:\n\tsub.s!\t96, r1, r2\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r5\n\tsub.s!\t@CPI0_4[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tadd\t128, r1, r2\n\tadd\t159, r5, r3\n\tsub!\tr3, r2, r3\n\tjump.ge\t@.BB0_2\n\tadd\t128, r5, r4\n\tld.1\tr4, r3\n\tsub.s!\t@CPI0_4[0], r3, r6\n\tjump.gt\t@.BB0_4\n\tadd\t63, r3, r6\n\tsub.s\t32, r0, r9\n\tand\tr6, r9, r6\n\tld.1\t64, r10\n\tadd\tr10, r6, r6\n\tsub!\tr6, r10, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_4[0], r6, r8\n\tjump.gt\t@.BB0_4\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_4\n\tadd\tr9, r0, stack-[9]\n\tst.1\t64, r6\n\tadd\tr10, r0, stack-[10]\n\tst.1.inc\tr10, r3, r6\n\tadd\tr6, r0, stack-[8]\n\tadd\tr5, r3, r5\n\tadd\t160, r5, r5\n\tsub!\tr5, r2, r5\n\tjump.gt\t@.BB0_2\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_22\n\tadd\tr0, r0, r5\n\tadd\tstack-[10], r0, r8\n.BB0_19:\n\tadd\t32, r5, r5\n\tadd\tr5, r8, r6\n\tadd\tr5, r4, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_19\n\tsub!\tr5, r3, r4\n\tjump.le\t@.BB0_22\n\tadd\tstack-[10], r3, r3\n\tadd\t32, r3, r3\n\tst.1\tr3, r0\n.BB0_22:\n\tld.1\t160, r5\n\tsub.s!\t@CPI0_4[0], r5, r3\n\tjump.gt\t@.BB0_2\n\tadd\t31, r5, r3\n\tadd\t@CPI0_5[0], r0, r4\n\tsub!\tr3, r1, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr4, r0, r6\n\tand\t@CPI0_5[0], r3, r3\n\tsub!\tr3, r0, r7\n\tadd.ge\tr0, r0, r4\n\tsub.s!\t@CPI0_5[0], r3, r3\n\tadd\tr6, r0, r3\n\tadd.eq\tr4, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_2\n\tadd\t128, r5, r4\n\tld.1\tr4, r3\n\tsub.s!\t@CPI0_4[0], r3, r6\n\tadd\tstack-[9], r0, r7\n\tjump.gt\t@.BB0_4\n\tadd\t63, r3, r6\n\tand\tr6, r7, r6\n\tld.1\t64, r9\n\tadd\tr9, r6, r6\n\tsub!\tr6, r9, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_4[0], r6, r8\n\tjump.gt\t@.BB0_4\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r6\n\tadd\tr9, r0, stack-[7]\n\tst.1.inc\tr9, r3, r6\n\tadd\tr6, r0, stack-[6]\n\tadd\tr5, r3, r5\n\tadd\t160, r5, r5\n\tsub!\tr5, r2, r5\n\tjump.gt\t@.BB0_2\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_33\n\tadd\tr0, r0, r5\n\tadd\tstack-[7], r0, r8\n.BB0_30:\n\tadd\t32, r5, r5\n\tadd\tr5, r8, r6\n\tadd\tr5, r4, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_30\n\tsub!\tr5, r3, r4\n\tjump.le\t@.BB0_33\n\tadd\tstack-[7], r3, r3\n\tadd\t32, r3, r3\n\tst.1\tr3, r0\n.BB0_33:\n\tld.1\t192, r4\n\tsub.s!\t@CPI0_4[0], r4, r3\n\tjump.gt\t@.BB0_2\n\tadd\t31, r4, r3\n\tadd\t@CPI0_5[0], r0, r5\n\tsub!\tr3, r1, r1\n\tadd\tr0, r0, r1\n\tadd.ge\tr5, r0, r1\n\tand\t@CPI0_5[0], r3, r3\n\tsub!\tr3, r0, r6\n\tadd.ge\tr0, r0, r5\n\tsub.s!\t@CPI0_5[0], r3, r3\n\tadd.eq\tr5, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t128, r4, r3\n\tld.1\tr3, r1\n\tsub.s!\t@CPI0_4[0], r1, r5\n\tadd\tstack-[9], r0, r6\n\tjump.gt\t@.BB0_4\n\tadd\t63, r1, r5\n\tand\tr5, r6, r5\n\tld.1\t64, r6\n\tadd\tr6, r5, r5\n\tadd\tr6, r0, stack-[5]\n\tsub!\tr5, r6, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI0_4[0], r5, r7\n\tjump.gt\t@.BB0_4\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r5\n\tadd\tstack-[5], r0, r5\n\tst.1.inc\tr5, r1, r5\n\tadd\tr5, r0, stack-[4]\n\tadd\tr4, r1, r4\n\tadd\t160, r4, r4\n\tsub!\tr4, r2, r2\n\tjump.gt\t@.BB0_2\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_44\n\tadd\tr0, r0, r2\n\tadd\tstack-[5], r0, r6\n.BB0_41:\n\tadd\t32, r2, r2\n\tadd\tr2, r6, r4\n\tadd\tr2, r3, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr2, r1, r4\n\tjump.lt\t@.BB0_41\n\tsub!\tr2, r1, r2\n\tjump.le\t@.BB0_44\n\tadd\tstack-[5], r1, r1\n\tadd\t32, r1, r1\n\tst.1\tr1, r0\n.BB0_44:\n\tsload\tr0, r1\n\tand\t@CPI0_6[0], r1, r2\n\tcontext.caller\tr6\n\tor\tr2, r6, r2\n\tsstore\tr0, r2\n\tld.1\t64, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr4\n\tsub.s!\t@CPI0_0[0], r4, r5\n\tadd.ge\tr3, r0, r4\n\tsub.s!\t@CPI0_0[0], r2, r5\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r4, r3\n\tor\tr3, r2, r2\n\tand\t@CPI0_7[0], r1, r5\n\tor\t@CPI0_8[0], r2, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_9[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[10], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_4\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand.eq\t127, r1, r1\n\tadd\tr1, r0, stack-[2]\n\tsub.s!\t31, r1, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_47\n\tadd\tstack-[2], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_53\n\tadd\t1, r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[3], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[2], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_53\n.BB0_52:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_52\n.BB0_53:\n\tadd\tstack-[3], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_94\n\tadd\t1, r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r2\n\tand!\tstack-[9], r2, r3\n\tadd\t32, r0, r2\n\tadd\t@CPI0_11[0], r0, r1\n\tadd\tstack-[10], r0, r6\n\tjump.eq\t@.BB0_91\n\tadd\t@CPI0_11[0], r0, r1\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_90:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_90\n.BB0_91:\n\tsub.s!\tstack-[3], r3, r3\n\tjump.ge\t@.BB0_93\n\tadd\tstack-[3], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[10], r2, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_93:\n\tadd\tstack-[3], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n\tjump\t@.BB0_54\n.BB0_101:\n\tsub.s!\t@CPI0_28[0], r2, r3\n\tjump.gt\t@.BB0_107\n\tsub.s!\t@CPI0_34[0], r2, r3\n\tjump.gt\t@.BB0_105\n\tsub.s!\t@CPI0_37[0], r2, r3\n\tjump.eq\t@.BB0_124\n\tsub.s!\t@CPI0_38[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r1\n\tand.eq\t127, r1, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_47\n\tst.1\t128, r1\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_138\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tst.1\t160, r1\n\tadd\t64, r0, r2\n\tjump\t@.BB0_136\n.BB0_113:\n\tsub.s!\t@CPI0_23[0], r2, r3\n\tjump.gt\t@.BB0_116\n\tsub.s!\t@CPI0_26[0], r2, r3\n\tjump.eq\t@.BB0_194\n\tsub.s!\t@CPI0_27[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_7[0], r1, r2\n\tcontext.caller\tr5\n\tsub!\tr2, r5, r2\n\tjump.ne\t@.BB0_214\n\tand\t@CPI0_6[0], r1, r1\n\tsstore\tr0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_39[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_9[0], r0, r4\n\tadd\tr0, r0, r6\n.BB0_216:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t@CPI0_53[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_107:\n\tsub.s!\t@CPI0_29[0], r2, r3\n\tjump.gt\t@.BB0_110\n\tsub.s!\t@CPI0_32[0], r2, r3\n\tjump.eq\t@.BB0_172\n\tsub.s!\t@CPI0_33[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[10]\n\tadd\tr2, r0, stack-[9]\n\tadd\tr3, r0, r2\n\tadd\tr2, r0, stack-[8]\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_isApprovedOrOwner, @DEFAULT_UNWIND\n\tnear_call\tr0, @require_helper_stringliteral_eb80, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r1\n\tadd\tstack-[9], r0, r2\n\tadd\tstack-[8], r0, r3\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tjump\t@.BB0_171\n.BB0_119:\n\tsub.s!\t@CPI0_21[0], r2, r3\n\tjump.eq\t@.BB0_229\n\tsub.s!\t@CPI0_22[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r2\n\tsub.s!\t128, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r4, r2\n\tld\tr2, r5\n\tsub.s!\t@CPI0_7[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r4, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_7[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t100, r4, r3\n\tld\tr3, r6\n\tsub.s!\t@CPI0_4[0], r6, r3\n\tjump.gt\t@.BB0_2\n\tadd\t35, r6, r3\n\tadd\t@CPI0_5[0], r0, r7\n\tsub!\tr3, r1, r8\n\tadd\tr0, r0, r8\n\tadd.ge\tr7, r0, r8\n\tand\t@CPI0_5[0], r3, r3\n\tsub!\tr3, r0, r9\n\tadd.ge\tr0, r0, r7\n\tsub.s!\t@CPI0_5[0], r3, r3\n\tadd\tr8, r0, r3\n\tadd.eq\tr7, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_2\n\tadd\t4, r6, r7\n\tptr.add\tr4, r7, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_4[0], r3, r8\n\tjump.gt\t@.BB0_4\n\tadd\t191, r3, r8\n\tsub.s\t32, r0, r9\n\tand\tr8, r9, r8\n\tsub.s!\t@CPI0_4[0], r8, r9\n\tjump.gt\t@.BB0_4\n\tst.1\t64, r8\n\tst.1\t128, r3\n\tadd\tr6, r3, r6\n\tadd\t36, r6, r6\n\tsub!\tr6, r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\t32, r7, r1\n\tptr.add\tr4, r1, r1\n\tand\t31, r3, r6\n\tshr.s!\t5, r3, r7\n\tjump.eq\t@.BB0_275\n\tadd\tr0, r0, r8\n.BB0_249:\n\tshl.s\t5, r8, r9\n\tptr.add\tr1, r9, r10\n\tld\tr10, r10\n\tadd\t160, r9, r9\n\tst.1\tr9, r10\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB0_249\n.BB0_275:\n\tsub!\tr6, r0, r8\n\tjump.eq\t@.BB0_251\n\tshl.s\t5, r7, r7\n\tptr.add\tr1, r7, r1\n\tshl.s\t3, r6, r6\n\tadd\t160, r7, r7\n\tld.1\tr7, r8\n\tshl\tr8, r6, r8\n\tshr\tr8, r6, r8\n\tld\tr1, r1\n\tsub\t256, r6, r6\n\tshr\tr1, r6, r1\n\tshl\tr1, r6, r1\n\tor\tr1, r8, r1\n\tst.1\tr7, r1\n.BB0_251:\n\tadd\t160, r3, r1\n\tst.1\tr1, r0\n\tptr.add.s\t68, r4, r1\n\tld\tr1, r3\n\tadd\t128, r0, r4\n\tadd\tr5, r0, r1\n\tjump\t@.BB0_252\n.BB0_105:\n\tsub.s!\t@CPI0_35[0], r2, r3\n\tjump.eq\t@.BB0_141\n\tsub.s!\t@CPI0_36[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tsub.s!\t@CPI0_7[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r4, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tadd\tr1, r0, stack-[8]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_47[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_150\n.BB0_152:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_66[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n.BB0_153:\n\tst.1\tr2, r3\n\tadd\t@CPI0_40[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_116:\n\tsub.s!\t@CPI0_24[0], r2, r1\n\tjump.eq\t@.BB0_218\n\tsub.s!\t@CPI0_25[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r1\n\tand.eq\t127, r1, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_47\n\tst.1\t128, r1\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_226\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tst.1\t160, r1\n\tadd\t64, r0, r2\n\tjump\t@.BB0_224\n.BB0_110:\n\tsub.s!\t@CPI0_30[0], r2, r3\n\tjump.eq\t@.BB0_186\n\tsub.s!\t@CPI0_31[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_ownerOf, @DEFAULT_UNWIND\n\tjump\t@.BB0_144\n.BB0_253:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tadd\t8, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r1\n\tand.eq\t127, r1, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.eq\t@.BB0_256\n.BB0_47:\n\tadd\t@CPI0_45[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tjump\t@.BB0_5\n.BB0_263:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_7[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r4, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[10]\n\tsub.s!\t@CPI0_7[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r2\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tjump\t@.BB0_211\n.BB0_124:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r1\n\tand\t@CPI0_67[0], r1, r2\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r2\n\tsub.s!\t@CPI0_68[0], r1, r3\n\tjump.eq\t@.BB0_130\n\tsub.s!\t@CPI0_69[0], r1, r3\n\tjump.eq\t@.BB0_130\n\tsub.s!\t@CPI0_70[0], r1, r1\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n.BB0_130:\n\tand\t1, r2, r1\n\tjump\t@.BB0_131\n.BB0_194:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tsub.s!\t@CPI0_7[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[10], r0, r2\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_200\n\tadd\t@CPI0_40[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t41, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_55[0], r0, r1\n.BB0_199:\n\tst.1\t228, r1\n\tadd\t@CPI0_43[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_172:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tcontext.caller\tr2\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_176\n\tadd\t@CPI0_40[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_59[0], r0, r1\n\tjump\t@.BB0_175\n.BB0_229:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tsub.s!\t@CPI0_7[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r4, r1\n\tld\tr1, r2\n\tsub!\tr2, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\tr2, r0, stack-[9]\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.caller\tr2\n\tsub.s!\tstack-[10], r2, r1\n\tjump.ne\t@.BB0_235\n\tadd\t@CPI0_40[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t25, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_49[0], r0, r1\n\tjump\t@.BB0_175\n.BB0_141:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_getApproved, @DEFAULT_UNWIND\n.BB0_144:\n\tand\t@CPI0_7[0], r1, r1\n.BB0_211:\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_44[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_218:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_7[0], r1, r1\n.BB0_131:\n\tst.1\t128, r1\n\tadd\t@CPI0_51[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_186:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t96, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_7[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r4, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_7[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r4, r3\n\tld\tr3, r3\n\tadd\t160, r0, r4\n\tst.1\t64, r4\n\tst.1\t128, r0\n\tadd\t128, r0, r4\n.BB0_252:\n\tnear_call\tr0, @fun_safeTransferFrom, @DEFAULT_UNWIND\n.BB0_171:\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_214:\n\tadd\t@CPI0_40[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_52[0], r0, r1\n.BB0_175:\n\tst.1\t196, r1\n\tadd\t@CPI0_50[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_256:\n\tst.1\t128, r1\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_260\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tst.1\t160, r1\n\tadd\t64, r0, r2\n\tjump\t@.BB0_258\n.BB0_176:\n\tadd\tr2, r0, stack-[10]\n\tst.1\t0, r2\n\tadd\t7, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_47[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_178\n.BB0_181:\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[9], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_47[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, stack-[9]\n\tshl.s\t192, r2, r1\n\tor\tstack-[9], r1, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_58[0], r0, r4\n\tadd\tr0, r0, r5\n\tadd\tstack-[10], r0, r6\n\tadd\tr6, r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_138:\n\tst.1\t0, r3\n\tadd\t32, r0, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_136\n\tadd\t@CPI0_11[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_140:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_140\n\tadd\t64, r3, r2\n\tjump\t@.BB0_136\n.BB0_226:\n\tst.1\t0, r3\n\tadd\t32, r0, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_224\n\tadd\t@CPI0_12[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_228:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_228\n\tadd\t64, r3, r2\n.BB0_224:\n\tjump\t@.BB0_136\n.BB0_200:\n\tst.1\t0, r2\n\tadd\t4, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_47[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_209\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[8]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_47[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_47[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r3\n\tand\t@CPI0_7[0], r3, stack-[7]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB0_209\n\tadd\tstack-[8], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_47[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI0_7[0], r1, r1\n\tsub.s!\t57005, r1, r1\n\tjump.eq\t@.BB0_209\n\tadd\t1, r0, r1\n\tadd\tstack-[7], r0, r3\n\tsub.s!\tstack-[10], r3, r2\n\tjump.eq\t@.BB0_211\n\tsub!\tstack-[7], r0, r2\n\tjump.eq\t@.BB0_211\n.BB0_209:\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[9], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_47[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tjump\t@.BB0_211\n.BB0_260:\n\tst.1\t0, r3\n\tadd\t32, r0, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_258\n\tadd\t@CPI0_13[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_262:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_262\n\tadd\t64, r3, r2\n.BB0_258:\n.BB0_136:\n\tadd\t128, r0, r1\n\tadd\tr1, r0, stack-[10]\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\tstack-[10], r0, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_274:\n\tand\t@CPI0_6[0], r1, r1\n\tor\tr1, r6, r1\n\tsstore\tr0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_39[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_9[0], r0, r4\n\tjump\t@.BB0_216\n.BB0_150:\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_47[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI0_7[0], r1, r1\n\tsub.s!\t57005, r1, r1\n\tjump.eq\t@.BB0_152\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_47[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r2\n\tand\t@CPI0_7[0], r2, stack-[6]\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_7[0], r1, r1\n\tadd.eq\tstack-[6], r0, r1\n\tsub!\tstack-[10], r1, r2\n\tjump.ne\t@.BB0_158\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_64[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_65[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t33, r0, r3\n.BB0_157:\n\tst.1\tr2, r3\n\tadd\t@CPI0_40[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_62[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_235:\n\tadd\tr2, r0, stack-[8]\n\tst.1\t0, r2\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_47[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_47[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tadd\tstack-[9], r0, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_48[0], r0, r4\n\tadd\tstack-[8], r0, r5\n\tadd\tstack-[10], r0, r6\n.BB0_170:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tjump\t@.BB0_171\n.BB0_178:\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_47[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI0_7[0], r1, r1\n\tsub.s!\t57005, r1, r1\n\tjump.eq\t@.BB0_181\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_56[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t28, r0, r3\n\tjump\t@.BB0_153\n.BB0_158:\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[5]\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_159\n.BB0_163:\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_47[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_6[0], r2, r2\n\tor\tstack-[10], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[8], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_47[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB0_152\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_47[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI0_7[0], r1, r1\n\tsub.s!\t57005, r1, r1\n\tjump.eq\t@.BB0_152\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_47[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd\t@CPI0_0[0], r0, r5\n\tadd.ge\tr5, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr5, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r3, r3\n\tor\tr3, r2, r2\n\tand!\t@CPI0_7[0], r1, r1\n\tadd\tr1, r0, r5\n\tadd.eq\tstack-[6], r0, r5\n\tor\t@CPI0_8[0], r2, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_63[0], r0, r4\n\tadd\tstack-[10], r0, r6\n\tadd\tstack-[9], r0, r7\n\tjump\t@.BB0_170\n.BB0_159:\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_47[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[5], r0, r2\n\tand\t@CPI0_7[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_47[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_163\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_60[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_61[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t62, r0, r3\n\tjump\t@.BB0_157\n.BB0_94:\n\tsub!\tstack-[3], r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_96\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r1\n.BB0_96:\n\tadd\tstack-[3], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n.BB0_54:\n\tadd\tstack-[1], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_4\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[8]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand.eq\t127, r2, r2\n\tadd\tr2, r0, stack-[3]\n\tsub.s!\t31, r2, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_47\n\tadd\tstack-[3], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_61\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[10], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[3], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_61\n.BB0_60:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_60\n.BB0_61:\n\tadd\tstack-[10], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_69\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[10], r0, r2\n\tand!\tstack-[9], r2, r3\n\tadd\t32, r0, r2\n\tadd\t@CPI0_12[0], r0, r1\n\tjump.eq\t@.BB0_66\n\tadd\t@CPI0_12[0], r0, r1\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n\tadd\tstack-[7], r0, r6\n.BB0_64:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_64\n.BB0_66:\n\tsub.s!\tstack-[10], r3, r3\n\tjump.ge\t@.BB0_68\n\tadd\tstack-[10], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[7], r2, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_68:\n\tadd\tstack-[10], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n\tjump\t@.BB0_71\n.BB0_69:\n\tsub!\tstack-[10], r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_71\n\tadd\tstack-[10], r0, r3\n\tshl.s\t3, r3, r1\n\tsub.s\t1, r0, r2\n\tshr\tr2, r1, r1\n\txor\tr1, r2, r1\n\tadd\tstack-[6], r0, r2\n\tld.1\tr2, r2\n\tand\tr2, r1, r1\n\tshl.s\t1, r3, r2\n\tor\tr1, r2, r1\n.BB0_71:\n\tadd\tstack-[8], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[5], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_4\n\tadd\t8, r0, r1\n\tadd\tr1, r0, stack-[8]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand.eq\t127, r2, r2\n\tadd\tr2, r0, stack-[7]\n\tsub.s!\t31, r2, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_47\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_78\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[10], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[7], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_78\n.BB0_77:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_77\n.BB0_78:\n\tadd\tstack-[10], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_86\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[10], r0, r2\n\tand!\tstack-[9], r2, r3\n\tadd\t32, r0, r2\n\tadd\t@CPI0_13[0], r0, r1\n\tjump.eq\t@.BB0_83\n\tadd\t@CPI0_13[0], r0, r1\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n\tadd\tstack-[5], r0, r6\n.BB0_81:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_81\n.BB0_83:\n\tsub.s!\tstack-[10], r3, r3\n\tjump.ge\t@.BB0_85\n\tadd\tstack-[10], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[5], r2, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_85:\n\tadd\tstack-[10], r0, r1\n\tshl.s\t1, r1, r1\n\tjump\t@.BB0_97\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_86:\n\tsub!\tstack-[10], r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_98\n\tadd\tstack-[10], r0, r3\n\tshl.s\t3, r3, r1\n\tsub.s\t1, r0, r2\n\tshr\tr2, r1, r1\n\txor\tr1, r2, r1\n\tadd\tstack-[4], r0, r2\n\tld.1\tr2, r2\n\tand\tr2, r1, r1\n\tshl.s\t1, r3, stack-[1]\n.BB0_97:\n\tor\tstack-[1], r1, r1\n.BB0_98:\n\tadd\tstack-[8], r0, r2\n\tsstore\tr2, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_14[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\nabi_encode_string:\n.func_begin1:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tadd\t64, r1, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB1_5\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\tr4, r1, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_2\n\tsub!\tr4, r3, r2\n\tjump.le\t@.BB1_5\n\tadd\tr3, r1, r2\n\tst.1\tr2, r0\n.BB1_5:\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end1:\n\nabi_decode_addresst_addresst_uint256:\n.func_begin2:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI2_0[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI2_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI2_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB2_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI2_1[0], r1, r2\n\tjump.gt\t@.BB2_1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI2_1[0], r2, r4\n\tjump.gt\t@.BB2_1\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tret\n.BB2_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nfinalize_allocation:\n.func_begin3:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI3_0[0], r1, r3\n\tjump.gt\t@.BB3_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB3_2\n\tst.1\t64, r1\n\tret\n.BB3_2:\n\tadd\t@CPI3_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nmapping_index_access_mapping_address_uint256_of_address:\n.func_begin4:\n\tand\t@CPI4_0[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI4_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_1\n\tld\tr1, r1\n\tret\n.BB4_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nfun_ownerOf:\n.func_begin5:\n\tnop\tstack+=[2]\n\tadd\tr1, r0, stack-[2]\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI5_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB5_5\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tst.1\t32, r1\n\tadd\t@CPI5_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI5_2[0], r1, r1\n\tsub.s!\t57005, r1, r1\n\tjump.eq\t@.BB5_5\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[1], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI5_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tadd\tstack-[2], r0, r2\n\tand\t@CPI5_2[0], r2, r2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI5_2[0], r1, r1\n\tadd.eq\tr2, r0, r1\n\tret\n.BB5_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_5:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI5_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI5_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI5_0[0], r0, r2\n\tsub.s!\t@CPI5_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI5_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nfun_getApproved:\n.func_begin6:\n\tnop\tstack+=[1]\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI6_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI6_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI6_2[0], r1, r1\n\tjump.eq\t@.BB6_3\n\tadd\tstack-[1], r0, r1\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI6_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI6_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI6_2[0], r1, r1\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI6_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI6_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI6_0[0], r0, r2\n\tsub.s!\t@CPI6_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI6_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nrequire_helper_stringliteral_eb80:\n.func_begin7:\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB7_1\n\tret\n.BB7_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI7_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI7_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t46, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI7_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI7_3[0], r0, r2\n\tsub.s!\t@CPI7_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI7_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\nfun_transfer:\n.func_begin8:\n\tnop\tstack+=[7]\n\tadd\tr2, r0, stack-[3]\n\tadd\tr1, r0, stack-[5]\n\tadd\tr3, r0, stack-[7]\n\tst.1\t0, r3\n\tadd\t7, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB8_5\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI8_2[0], r1, r1\n\tsub.s!\t57005, r1, r1\n\tjump.eq\t@.BB8_5\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tadd\tstack-[7], r0, r2\n\tand\t@CPI8_2[0], r2, r3\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI8_2[0], r1, r1\n\tadd\tr1, r0, r2\n\tadd.eq\tr3, r0, r2\n\tadd\tstack-[5], r0, r1\n\tand\t@CPI8_2[0], r1, r1\n\tadd\tr2, r0, stack-[4]\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB8_8\n\tadd\tr3, r0, stack-[1]\n\tadd\tstack-[3], r0, r1\n\tand!\t@CPI8_2[0], r1, stack-[5]\n\tjump.eq\t@.BB8_11\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI8_7[0], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB8_5\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI8_2[0], r1, r1\n\tsub.s!\t57005, r1, r1\n\tjump.eq\t@.BB8_5\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI8_0[0], r3, r4\n\tadd\t@CPI8_0[0], r0, r5\n\tadd.ge\tr5, r0, r3\n\tsub.s!\t@CPI8_0[0], r2, r4\n\tadd.ge\tr5, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r3, r3\n\tor\tr3, r2, r2\n\tand!\t@CPI8_2[0], r1, r1\n\tadd\tr1, r0, r5\n\tadd.eq\tstack-[1], r0, r5\n\tor\t@CPI8_8[0], r2, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\tr3, r0, stack-[3]\n\tadd\t@CPI8_9[0], r0, r4\n\tadd\tr0, r0, r6\n\tadd\tstack-[7], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB8_1\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI8_2[0], r1, r1\n\tjump.eq\t@.BB8_25\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB8_23\n\tsub.s\t1, r2, r2\n\tsstore\tr1, r2\n.BB8_25:\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.eq\t@.BB8_23\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI8_7[0], r2, r2\n\tadd\tstack-[5], r0, r6\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r3\n\tadd\t@CPI8_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI8_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI8_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI8_10[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[7], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB8_1\n\tret\n.BB8_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_5:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI8_15[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI8_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI8_0[0], r0, r2\n\tsub.s!\t@CPI8_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI8_16[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_23:\n\tadd\t@CPI8_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI8_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI8_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tjump\t@.BB8_9\n.BB8_11:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI8_13[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI8_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n.BB8_9:\n\tst.1\tr2, r3\n\tadd\t@CPI8_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI8_0[0], r0, r2\n\tsub.s!\t@CPI8_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI8_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nfun_safeTransferFrom:\n.func_begin9:\n\tnop\tstack+=[11]\n\tadd\tr4, r0, stack-[1]\n\tadd\tr2, r0, stack-[3]\n\tadd\tr1, r0, stack-[7]\n\tadd\tr3, r0, stack-[9]\n\tst.1\t0, r3\n\tadd\t7, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB9_5\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[8]\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI9_2[0], r1, r1\n\tsub.s!\t57005, r1, r1\n\tjump.eq\t@.BB9_5\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[8], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tcontext.caller\tr2\n\tadd\tstack-[9], r0, r3\n\tand\t@CPI9_2[0], r3, stack-[4]\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI9_2[0], r1, r1\n\tadd.eq\tstack-[4], r0, r1\n\tand\t@CPI9_2[0], r2, stack-[2]\n\tsub!\tstack-[2], r1, r2\n\tjump.eq\t@.BB9_17\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\t@CPI9_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB9_17\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[8], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI9_2[0], r1, r1\n\tjump.eq\t@.BB9_5\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI9_2[0], r1, r1\n\tsub.s!\tstack-[2], r1, r1\n\tjump.ne\t@.BB9_15\n.BB9_17:\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB9_5\n\tadd\tstack-[8], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI9_2[0], r1, r1\n\tsub.s!\t57005, r1, r1\n\tjump.eq\t@.BB9_5\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[8], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI9_2[0], r1, r1\n\tadd\tr1, r0, r2\n\tadd.eq\tstack-[4], r0, r2\n\tadd\tstack-[7], r0, r1\n\tand\t@CPI9_2[0], r1, r1\n\tadd\tr2, r0, stack-[6]\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB9_23\n\tadd\tstack-[3], r0, r1\n\tand!\t@CPI9_2[0], r1, stack-[7]\n\tjump.eq\t@.BB9_25\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI9_9[0], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\t@CPI9_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB9_5\n\tadd\tstack-[8], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI9_2[0], r1, r1\n\tsub.s!\t57005, r1, r1\n\tjump.eq\t@.BB9_5\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[8], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tld.1\t64, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI9_0[0], r3, r4\n\tadd\t@CPI9_0[0], r0, r5\n\tadd.ge\tr5, r0, r3\n\tsub.s!\t@CPI9_0[0], r2, r4\n\tadd.ge\tr5, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r3, r3\n\tor\tr3, r2, r2\n\tand!\t@CPI9_2[0], r1, r1\n\tadd\tr1, r0, r5\n\tadd.eq\tstack-[4], r0, r5\n\tor\t@CPI9_10[0], r2, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\tr3, r0, stack-[5]\n\tadd\t@CPI9_11[0], r0, r4\n\tadd\tr0, r0, r6\n\tadd\tstack-[9], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB9_1\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[8], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI9_2[0], r1, r1\n\tjump.eq\t@.BB9_40\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB9_37\n\tsub.s\t1, r2, r2\n\tsstore\tr1, r2\n.BB9_40:\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.eq\t@.BB9_37\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[8], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI9_9[0], r2, r2\n\tadd\tstack-[7], r0, r6\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd\t@CPI9_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI9_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI9_10[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI9_12[0], r0, r4\n\tadd\tstack-[6], r0, r5\n\tadd\tstack-[9], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB9_1\n\tcontext.sp\tr1\n\tadd\tr1, r0, stack-[8]\n\tadd\t@CPI9_13[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_14[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB9_46\n\tld.1\t64, r10\n\tadd\t100, r10, r1\n\tadd\t128, r0, r7\n\tst.1\tr1, r7\n\tadd\t68, r10, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r10, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI9_15[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t4, r10, r1\n\tadd\tstack-[2], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[1], r0, r6\n\tld.1\tr6, r1\n\tadd\t132, r10, r2\n\tst.1\tr2, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB9_52\n\tadd\t164, r10, r2\n\tadd\tr0, r0, r3\n.BB9_49:\n\tadd\tr3, r2, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB9_49\n\tsub!\tr3, r1, r3\n\tjump.le\t@.BB9_52\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n.BB9_52:\n\tcontext.gas_left\tr6\n\tadd\tstack-[7], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB9_54\n\tcontext.sp\tr5\n\tsub.s\t11, r5, r5\n\tmul\t32, r5, r5, r0\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tadd\t0, r0, stack-[11]\n\tjump\t@.BB9_59\n.BB9_46:\n\tcontext.sp\tr1\n\tsub\tstack-[8], r1, r1\n\tnop\tstack+=[r1]\n\tjump\t@.BB9_76\n.BB9_54:\n\tadd\tr7, r0, stack-[6]\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\t@CPI9_0[0], r0, r3\n\tsub.s!\t@CPI9_0[0], r10, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr10, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t164, r1, r1\n\tsub.s!\t@CPI9_0[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI9_0[0], r6, r4\n\tadd.lt\tr6, r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tadd\tr10, r0, stack-[9]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI9_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB9_78\n\tadd\tr0, r0, r7\n.BB9_56:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB9_56\n.BB9_78:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB9_58\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB9_58:\n\tadd\tr3, r0, stack[@returndatasize]\n\tcontext.sp\tr5\n\tsub.s\t10, r5, r5\n\tmul\t32, r5, r5, r0\n\tadd\t0, r0, stack-[10]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_64\n.BB9_59:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI9_17[0], r1, r4\n\tjump.gt\t@.BB9_61\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB9_61\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB9_1\n\tld.1\tr10, r1\n\tand\t@CPI9_18[0], r1, r2\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB9_1\n\tshr.s\t5, r5, r2\n\tadd\tr1, r0, stack[r2]\n\tcontext.sp\tr2\n\tsub\tstack-[8], r2, r2\n\tnop\tstack+=[r2]\n\tsub.s!\t@CPI9_15[0], r1, r1\n\tjump.ne\t@.BB9_74\n.BB9_76:\n\tret\n.BB9_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_5:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI9_23[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI9_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI9_0[0], r0, r2\n\tsub.s!\t@CPI9_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI9_24[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_37:\n\tadd\t@CPI9_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tjump\t@.BB9_38\n.BB9_23:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI9_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI9_8[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tjump\t@.BB9_16\n.BB9_25:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI9_21[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI9_22[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n.BB9_16:\n\tst.1\tr2, r3\n\tadd\t@CPI9_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI9_0[0], r0, r2\n\tsub.s!\t@CPI9_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI9_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_64:\n\tadd\t96, r0, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB9_71\n\tadd\t63, r3, r2\n\tand\t@CPI9_16[0], r2, r4\n\tld.1\t64, r2\n\tadd\tr2, r4, r4\n\tsub!\tr4, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI9_17[0], r4, r6\n\tjump.gt\t@.BB9_61\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB9_61\n\tst.1\t64, r4\n\tand\t31, r3, r4\n\tst.1.inc\tr2, r3, r8\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB9_77\n\tadd\tr0, r0, r5\n.BB9_69:\n\tshl.s\t5, r5, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB9_69\n.BB9_77:\n\tadd\tr8, r0, stack-[6]\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB9_71\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tstack-[6], r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB9_71:\n\tld.1\tr2, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB9_72\n.BB9_74:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[9]\n\tadd\t@CPI9_5[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_stringliteral_1e76, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI9_0[0], r0, r2\n\tsub.s!\t@CPI9_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n.BB9_73:\n\tsub.s!\t@CPI9_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_61:\n\tadd\t@CPI9_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB9_38:\n\tst.1\t4, r1\n\tadd\t@CPI9_20[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_15:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI9_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI9_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t46, r0, r3\n\tjump\t@.BB9_16\n.BB9_72:\n\tadd\t@CPI9_0[0], r0, r2\n\tsub.s!\t@CPI9_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[6], r0, r4\n\tjump\t@.BB9_73\n.func_end9:\n\nabi_encode_stringliteral_1e76:\n.func_begin10:\n\tadd\t96, r1, r2\n\tadd\t@CPI10_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t@CPI10_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t50, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end10:\n\nfun_isApprovedOrOwner:\n.func_begin11:\n\tnop\tstack+=[3]\n\tadd\tr1, r0, stack-[1]\n\tadd\tr2, r0, stack-[3]\n\tst.1\t0, r2\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI11_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.eq\t@.BB11_5\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI11_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI11_2[0], r1, r1\n\tsub.s!\t57005, r1, r1\n\tjump.eq\t@.BB11_5\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI11_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tadd\tstack-[3], r0, r2\n\tand\t@CPI11_2[0], r2, r2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI11_2[0], r1, r1\n\tadd.ne\tr1, r0, r2\n\tadd\t1, r0, r1\n\tadd\tstack-[1], r0, r3\n\tand\t@CPI11_2[0], r3, stack-[1]\n\tsub!\tstack-[1], r2, r3\n\tjump.eq\t@.BB11_15\n\tst.1\t0, r2\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI11_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_0[0], r1, r2\n\tadd.ge\t@CPI11_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB11_15\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI11_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI11_2[0], r1, r1\n\tjump.eq\t@.BB11_5\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI11_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI11_2[0], r1, r1\n\tsub.s!\tstack-[1], r1, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n.BB11_15:\n\tret\n.BB11_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB11_5:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI11_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI11_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI11_0[0], r0, r2\n\tsub.s!\t@CPI11_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI11_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\n__sha3:\n.func_begin12:\n\tadd\t@CPI12_0[0], r0, r3\n\tsub.s!\t@CPI12_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI12_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI12_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_2\n\tld\tr1, r1\n\tret\n.BB12_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\n__farcall:\n.func_begin13:\n.tmp0:\n\tfar_call\tr1, r2, @.BB13_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB13_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end13:\n\n__staticcall:\n.func_begin14:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB14_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB14_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end14:\n\n\t.data\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI4_1:\nCPI5_0:\nCPI6_0:\nCPI7_3:\nCPI8_0:\nCPI9_0:\nCPI11_0:\nCPI12_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -18446744073709551457\nCPI0_2:\n\t.cell -18446744073709551489\nCPI0_3:\nCPI9_16:\n\t.cell 8589934560\nCPI0_4:\nCPI3_0:\nCPI9_17:\n\t.cell 18446744073709551615\nCPI0_5:\nCPI2_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_6:\nCPI8_7:\nCPI9_9:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_7:\nCPI2_1:\nCPI4_0:\nCPI5_2:\nCPI6_2:\nCPI8_2:\nCPI9_2:\nCPI11_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_8:\nCPI8_8:\nCPI9_10:\nCPI12_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_9:\n\t.cell -52524777015005588113349992707137368332388074750292320778649315033004770043936\nCPI0_10:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_11:\n\t.cell -35707666377435648211887908874984608119992236509074197713628505308453184860938\nCPI0_12:\n\t.cell 29102676481673041902632991033461445430619272659676223336789171408008386403022\nCPI0_13:\n\t.cell -5442482557903504250613150719145357533886713417884903185095341029921719619869\nCPI0_14:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_15:\n\t.cell 1889567280\nCPI0_16:\n\t.cell 2720838756\nCPI0_17:\n\t.cell 3363526364\nCPI0_18:\n\t.cell 3363526365\nCPI0_19:\n\t.cell 3917867461\nCPI0_20:\n\t.cell 4076725131\nCPI0_21:\n\t.cell 2720838757\nCPI0_22:\n\t.cell 3096268766\nCPI0_23:\n\t.cell 2376452954\nCPI0_24:\n\t.cell 2376452955\nCPI0_25:\n\t.cell 2514000705\nCPI0_26:\n\t.cell 1889567281\nCPI0_27:\n\t.cell 1901074598\nCPI0_28:\n\t.cell 306824586\nCPI0_29:\n\t.cell 1115958797\nCPI0_30:\n\t.cell 1115958798\nCPI0_31:\n\t.cell 1666326814\nCPI0_32:\n\t.cell 306824587\nCPI0_33:\n\t.cell 599290589\nCPI0_34:\n\t.cell 135795451\nCPI0_35:\n\t.cell 135795452\nCPI0_36:\n\t.cell 157198259\nCPI0_37:\n\t.cell 33540519\nCPI0_38:\n\t.cell 117300739\nCPI0_39:\n\t.cell 904625697166532776746648320380374280103671755200316908919445616496643932160\nCPI0_40:\nCPI5_4:\nCPI6_4:\nCPI7_2:\nCPI8_5:\nCPI9_5:\nCPI11_4:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_41:\n\t.cell 35943731656364841964517558219894961445653631979235167635064085396828900499553\nCPI0_42:\n\t.cell 45408759099000846574684193736602357774271237157169010951590501707763511459840\nCPI0_43:\n\t.cell 10458117454244075803782624051200\nCPI0_44:\n\t.cell 2535301200456458802993406410752\nCPI0_45:\nCPI3_1:\nCPI8_11:\nCPI9_19:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_46:\nCPI3_2:\nCPI8_12:\nCPI9_20:\n\t.cell 2852213850513516153367582212096\nCPI0_47:\nCPI4_2:\nCPI5_1:\nCPI6_1:\nCPI8_1:\nCPI9_1:\nCPI11_1:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_48:\n\t.cell 10488878412788366941768124514102328501031624832915735463117339209566108871729\nCPI0_49:\n\t.cell 31354931916645375393762213565866891172307618523953520621822726397682830540800\nCPI0_50:\n\t.cell 7922816253787617000789217640448\nCPI0_51:\n\t.cell 2535301202817642044428229017600\nCPI0_52:\n\t.cell 35943731656364841964516503116990081338611484598491072354577564874054038349170\nCPI0_53:\n\t.cell 2361183241434822606848\nCPI0_54:\n\t.cell 31354931916645375393761059704421056284766179208589378268252292504104988604001\nCPI0_55:\n\t.cell 49035997637886268239882041675796387503892600671578232905754119059317383495680\nCPI0_56:\n\t.cell 31354931916645375394227994539589573020889145011472493424756597455838364303360\nCPI0_57:\nCPI5_5:\nCPI6_5:\nCPI8_16:\nCPI9_24:\nCPI11_5:\n\t.cell 7922816251426433759354395033600\nCPI0_58:\nCPI8_10:\nCPI9_12:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI0_59:\n\t.cell 31354931916645375394055781497097123966713745074512196778955490624888853853043\nCPI0_60:\n\t.cell 48576686418507356219831364983007919279578195479598191958095172491531881545728\nCPI0_61:\n\t.cell 31354931916645375393762213565866891172284950498046585739320112041512459596911\nCPI0_62:\nCPI7_4:\nCPI8_6:\nCPI9_6:\n\t.cell 10458117451882892562347801444352\nCPI0_63:\nCPI8_9:\nCPI9_11:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI0_64:\n\t.cell 51563664738492368274558954261681333965909290046418063673820955378523815542784\nCPI0_65:\n\t.cell 31354931916645375393762213565866890849608307089744918678309194418033790512741\nCPI0_66:\nCPI5_3:\nCPI6_3:\nCPI8_15:\nCPI9_23:\nCPI11_3:\n\t.cell 31354931916645375393958183653158686846599388074356949121886454872141515980800\nCPI0_67:\nCPI9_18:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_68:\n\t.cell -57591534043048631271602713168962198724648561309353517944097662808962438791168\nCPI0_69:\n\t.cell 41326688264978518566617017154793646184809722027297161851759941631668658372608\nCPI0_70:\n\t.cell 904250603428552709895185118199468575982109441609966099573332780532423983104\nCPI7_0:\nCPI9_3:\n\t.cell 51620966041236425454300223973180400554375694480679556984629941846732647170048\nCPI7_1:\nCPI9_4:\n\t.cell 31354931916645375393809815203201166297542482068262457279726729202739757674085\nCPI8_3:\nCPI9_7:\n\t.cell 50417742920509558439106150551775209266858149941038353264781520106005609840640\nCPI8_4:\nCPI9_8:\n\t.cell 31354931916645375394228278154242914900316605976059021079503402663591234728992\nCPI8_13:\nCPI9_21:\n\t.cell 51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI8_14:\nCPI9_22:\n\t.cell 31354931916645375394228278154242914900316678601111040334909412358260906878052\nCPI9_13:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI9_14:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI9_15:\n\t.cell 9518847204935358166548570266051330015907116135037852959641967396525866745856\nCPI10_0:\n\t.cell 44958151438609599421424650306347963631972141104775375727422033337783813144576\nCPI10_1:\n\t.cell 31354931916645375394228278154242914900316678601109191929828695483653754540645\n","bytecode":{"object":"0002000000000002000a000000000002000000000401034f0001000000040355000000000000001f0000008001000039000000400010043f00000000010400190000006001100270000002f5011001970000000102200190000000370000c13d000000040210008c000006190000413d000000000204043b000000e002200270000003040320009c000001720000a13d000003050320009c000001900000a13d000003060320009c000001c50000a13d000003070320009c0000027a0000613d000003080320009c000002940000613d000003090220009c000006190000c13d0000000002000416000000000202004b000006190000c13d000000040110008a000000200110008c000006190000413d0000000401400370000000000601043b000002fc0160009c000006190000213d000000000100041a000002fc021001970000000005000411000000000252004b0000033f0000c13d000000000206004b0000042d0000c13d0000031d01000041000000800010043f0000002001000039000000840010043f0000002601000039000000a40010043f0000031e01000041000000c40010043f0000031f01000041000002dc0000013d0000000002000416000000000202004b000006190000c13d000002f602100041000002f70220009c000000430000213d000003220100004100000000001004350000004101000039000000040010043f000003230100004100000bd0000104300000009f02100039000002f802200197000000400020043f0000001f0210018f0000000503100272000000520000613d00000000050000190000000506500210000000000764034f000000000707043b000000800660003900000000007604350000000105500039000000000635004b0000004a0000413d000000000502004b000000610000613d0000000503300210000000000434034f00000003022002100000008003300039000000000503043300000000052501cf000000000525022f000000000404043b0000010002200089000000000424022f00000000022401cf000000000252019f0000000000230435000000600210008c000006190000413d000000800500043d000002f90250009c000006190000213d00000080021000390000009f03500039000000000323004b000006190000813d00000080045000390000000003040433000002f90630009c0000003d0000213d0000003f06300039000000200900008a000000000696016f000000400a00043d00000000066a00190000000007a6004b00000000070000190000000107004039000002f90860009c0000003d0000213d00000001077001900000003d0000c13d000900000009001d000000400060043f000a0000000a001d00000000063a0436000800000006001d0000000005350019000000a005500039000000000525004b000006190000213d000000000503004b000000930000613d00000000050000190000000a0800002900000020055000390000000006850019000000000745001900000000070704330000000000760435000000000635004b000000870000413d000000000435004b000000930000a13d0000000a0330002900000020033000390000000000030435000000a00500043d000002f90350009c000006190000213d0000001f03500039000002fa04000041000000000613004b00000000060000190000000006048019000002fa03300197000000000703004b0000000004008019000002fa0330009c00000000030600190000000003046019000000000303004b000006190000c13d00000080045000390000000003040433000002f90630009c00000009070000290000003d0000213d0000003f06300039000000000676016f000000400900043d0000000006690019000000000796004b00000000070000190000000107004039000002f90860009c0000003d0000213d00000001077001900000003d0000c13d000000400060043f000700000009001d0000000006390436000600000006001d0000000005350019000000a005500039000000000525004b000006190000213d000000000503004b000000cb0000613d0000000005000019000000070800002900000020055000390000000006850019000000000745001900000000070704330000000000760435000000000635004b000000bf0000413d000000000435004b000000cb0000a13d000000070330002900000020033000390000000000030435000000c00400043d000002f90340009c000006190000213d0000001f03400039000002fa05000041000000000113004b00000000010000190000000001058019000002fa03300197000000000603004b0000000005008019000002fa0330009c0000000001056019000000000101004b000006190000c13d00000080034000390000000001030433000002f90510009c00000009060000290000003d0000213d0000003f05100039000000000565016f000000400600043d0000000005560019000500000006001d000000000665004b00000000060000190000000106004039000002f90750009c0000003d0000213d00000001066001900000003d0000c13d000000400050043f00000005050000290000000005150436000400000005001d0000000004140019000000a004400039000000000224004b000006190000213d000000000201004b000001030000613d0000000002000019000000050600002900000020022000390000000004620019000000000532001900000000050504330000000000540435000000000412004b000000f70000413d000000000212004b000001030000a13d000000050110002900000020011000390000000000010435000000000100041a000002fb021001970000000006000411000000000262019f000000000020041b000000400200043d000002f5030000410000000004000414000002f50540009c0000000004038019000002f50520009c00000000020380190000004002200210000000c003400210000000000223019f000002fc05100197000002fd012001c70000800d020000390000000303000039000002fe040000410bce0bc40000040f0000000101200190000006190000613d0000000a010000290000000001010433000300000001001d000002f90110009c0000003d0000213d0000000101000039000100000001001d000000000101041a000000010210019000000001011002700000007f0110618f000200000001001d0000001f0110008c00000000010000190000000101002039000000010110018f000000000112004b000002900000c13d0000000201000029000000200110008c0000014c0000413d00000001010000390000000000100435000002f5010000410000000002000414000002f50320009c0000000001024019000000c001100210000002ff011001c700008010020000390bce0bc90000040f0000000102200190000006190000613d00000003030000290000001f023000390000000502200270000000200330008c0000000002004019000000000301043b00000002010000290000001f01100039000000050110027000000000011300190000000002230019000000000312004b0000014c0000813d000000000002041b0000000102200039000000000312004b000001480000413d00000003010000290000001f0110008c0000054c0000a13d0000000101000039000000000010043500000003020000290000000903200180000000200200003900000300010000410000000a06000029000001620000613d00000300010000410000002002000039000000000400001900000000056200190000000005050433000000000051041b000000200220003900000001011000390000002004400039000000000534004b0000015a0000413d000000030330006c0000016e0000813d00000003030000290000000303300210000000f80330018f000000010400008a000000000334022f000000000343013f0000000a022000290000000002020433000000000232016f000000000021041b0000000301000029000000010110021000000001011001bf000005590000013d000003110320009c000001af0000213d000003170320009c0000021c0000213d0000031a0320009c000002b00000613d0000031b0120009c000006190000c13d0000000001000416000000000101004b000006190000c13d0000000103000039000000000203041a000000010420019000000001012002700000007f0110618f0000001f0510008c00000000050000190000000105002039000000000552013f0000000105500190000002900000c13d000000800010043f000000000404004b0000038d0000c13d000001000100008a000000000112016f000000a00010043f00000040020000390000041b0000013d0000030c0320009c000002520000213d0000030f0320009c000002c50000613d000003100120009c000006190000c13d0000000001000416000000000101004b000006190000c13d000000000100041a000002fc021001970000000005000411000000000252004b0000033f0000c13d000002fb01100197000000000010041b000002f5010000410000000002000414000002f50320009c0000000001024019000000c0011002100000031c011001c70000800d020000390000000303000039000002fe0400004100000000060000190bce0bc40000040f0000000101200190000006190000613d0000032a0100004100000bcf0001042e000003120320009c0000026c0000213d000003150320009c000002df0000613d000003160220009c000006190000c13d0000000002000416000000000202004b000006190000c13d0bce06470000040f000a00000001001d000900000002001d0000000002030019000800000002001d00000000010004110bce0b160000040f0bce070d0000040f0000000a01000029000000090200002900000008030000290bce07250000040f000003390000013d0000030a0320009c000002ec0000613d0000030b0220009c000006190000c13d0000000002000416000000000202004b000006190000c13d000000040210008a000000800220008c000006190000413d0000000402400370000000000502043b000002fc0250009c000006190000213d0000002402400370000000000202043b000002fc0320009c000006190000213d0000006403400370000000000603043b000002f90360009c000006190000213d0000002303600039000002fa07000041000000000813004b00000000080000190000000008078019000002fa03300197000000000903004b0000000007008019000002fa0330009c00000000030800190000000003076019000000000303004b000006190000c13d0000000407600039000000000374034f000000000303043b000002f90830009c0000003d0000213d000000bf08300039000000200900008a000000000898016f000002f90980009c0000003d0000213d000000400080043f000000800030043f00000000063600190000002406600039000000000116004b000006190000213d0000002001700039000000000114034f0000001f0630018f0000000507300272000002060000613d00000000080000190000000509800210000000000a91034f000000000a0a043b000000a0099000390000000000a904350000000108800039000000000978004b000001fe0000413d000000000806004b000002150000613d0000000507700210000000000171034f0000000306600210000000a007700039000000000807043300000000086801cf000000000868022f000000000101043b0000010006600089000000000161022f00000000016101cf000000000181019f0000000000170435000000a00130003900000000000104350000004401400370000000000301043b00000080040000390000000001050019000003380000013d000003180320009c0000030a0000613d000003190220009c000006190000c13d0000000002000416000000000202004b000006190000c13d000000040110008a000000400110008c000006190000413d0000000401400370000000000101043b000a00000001001d000002fc0110009c000006190000213d0000002401400370000000000101043b000900000001001d00000000001004350000000701000039000800000001001d000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000006190000613d000000000101043b000000000101041a000000ff011001900000043a0000c13d000000400100043d0000004402100039000003370300004100000000003204350000002402100039000000180300003900000000003204350000031d020000410000000000210435000000040210003900000020030000390000000000320435000002f502000041000002f50310009c000000000102801900000040011002100000032e011001c700000bd0000104300000030d0120009c0000031c0000613d0000030e0120009c000006190000c13d0000000001000416000000000101004b000006190000c13d0000000203000039000000000203041a000000010420019000000001012002700000007f0110618f0000001f0510008c00000000050000190000000105002039000000000552013f0000000105500190000002900000c13d000000800010043f000000000404004b0000039d0000c13d000001000100008a000000000112016f000000a00010043f0000004002000039000003ac0000013d000003130320009c000003240000613d000003140220009c000006190000c13d0000000002000416000000000202004b000006190000c13d000000040110008a000000200110008c000006190000413d0000000401400370000000000101043b0bce06860000040f000003130000013d0000000002000416000000000202004b000006190000c13d000000040110008a000000200110008c000006190000413d0000000401400370000000000101043b00000000001004350000000301000039000000200010043f0000000803000039000000000203041a000000010420019000000001012002700000007f0110618f0000001f0510008c00000000050000190000000105002039000000000552013f0000000105500190000003480000613d000003220100004100000000001004350000002201000039000000400000013d0000000002000416000000000202004b000006190000c13d000000040110008a000000400110008c000006190000413d0000000401400370000000000101043b000002fc0210009c000006190000213d0000002402400370000000000202043b000a00000002001d000002fc0220009c000006190000213d00000000001004350000000601000039000000200010043f000000400200003900000000010000190bce0bae0000040f0000000a020000290bce06750000040f000000000101041a000000ff011001900000000001000019000000010100c039000003140000013d0000000002000416000000000202004b000006190000c13d000000040110008a000000200110008c000006190000413d0000000401400370000000000101043b0000033802100197000000000212004b000006190000c13d0000000102000039000003390310009c000002c30000613d0000033a0310009c000002c30000613d0000033b0110009c00000000020000190000000102006039000000010120018f000003210000013d0000000002000416000000000202004b000006190000c13d000000040110008a000000200110008c000006190000413d0000000401400370000000000101043b000a00000001001d000002fc0110009c000006190000213d0000000a02000029000000000102004b000003ad0000c13d0000031d01000041000000800010043f0000002001000039000000840010043f0000002901000039000000a40010043f0000032b01000041000000c40010043f0000032c01000041000000e40010043f000003200100004100000bd0000104300000000001000416000000000101004b000006190000c13d0000000002000411000000000102004b000003500000c13d0000031d01000041000000800010043f0000002001000039000000840010043f000000a40010043f0000033001000041000003450000013d0000000002000416000000000202004b000006190000c13d000000040110008a000000400110008c000006190000413d0000000401400370000000000101043b000a00000001001d000002fc0110009c000006190000213d0000002401400370000000000201043b000000000102004b0000000001000019000000010100c039000900000002001d000000000112004b000006190000c13d00000000020004110000000a0120006c000004770000c13d0000031d01000041000000800010043f0000002001000039000000840010043f0000001901000039000000a40010043f0000032601000041000003450000013d0000000002000416000000000202004b000006190000c13d000000040110008a000000200110008c000006190000413d0000000401400370000000000101043b0bce06d40000040f000002fc01100197000000400200043d0000000000120435000002f501000041000002f50320009c0000000001024019000000400110021000000321011001c700000bcf0001042e0000000001000416000000000101004b000006190000c13d000000000100041a000002fc01100197000000800010043f000003280100004100000bcf0001042e0000000002000416000000000202004b000006190000c13d000000040110008a000000600110008c000006190000413d0000000401400370000000000101043b000002fc0210009c000006190000213d0000002402400370000000000202043b000002fc0320009c000006190000213d0000004403400370000000000303043b000000a004000039000000400040043f000000800000043f00000080040000390bce08620000040f000002f501000041000000400200043d000002f50320009c0000000001024019000000400110021000000bcf0001042e0000031d01000041000000800010043f0000002001000039000000840010043f000000a40010043f0000032901000041000000c40010043f000003270100004100000bd000010430000000800010043f000000000404004b0000040c0000c13d000001000100008a000000000112016f000000a00010043f00000040020000390000041b0000013d000a00000002001d00000000002004350000000701000039000900000001001d000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000006190000613d000000000101043b000000000101041a000000ff01100190000004ae0000c13d0000000a0100002900000000001004350000000901000029000000200010043f000002f5030000410000000001000414000002f50210009c0000000001038019000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000006190000613d000000000101043b000000000201041a000001000300008a000000000232016f00000001022001bf000000000021041b000000400100043d0000000002000414000002f50320009c000002f5040000410000000002048019000002f50310009c00000000010480190009004000100218000000c00120021000000009011001af000002fd011001c70000800d0200003900000004030000390000032f0400004100000000050000190000000a0600002900000000070600190bce0bc40000040f0000000101200190000006190000613d000000090100002900000bcf0001042e00000000003004350000002002000039000000000301004b0000041b0000613d000003000200004100000000040000190000000003040019000000000402041a000000a005300039000000000045043500000001022000390000002004300039000000000514004b000003930000413d00000040023000390000041b0000013d00000000003004350000002002000039000000000301004b000003ac0000613d000003010200004100000000040000190000000003040019000000000402041a000000a005300039000000000045043500000001022000390000002004300039000000000514004b000003a30000413d00000040023000390000041b0000013d00000000002004350000000401000039000900000001001d000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000006190000613d000000000101043b000000000101041a000000000101004b000003fb0000c13d0000000a0100002900000000001004350000000301000039000800000001001d000000200010043f000002f5030000410000000001000414000002f50210009c0000000001038019000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000006190000613d000000000101043b000000000101041a000700000001001d0000000a0100002900000000001004350000000701000039000000200010043f0000000001000414000002f50210009c000002f501008041000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000703000029000702fc0030019b0000000102200190000006190000613d000000000101043b000000000101041a000000ff01100190000003fb0000613d0000000801000029000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000006190000613d000000000101043b000000000101041a000002fc011001970000dead0110008c000003fb0000613d000000010100003900000007030000290000000a0230006c000003140000613d000000070200006b000003140000613d0000000a0100002900000000001004350000000901000029000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000006190000613d000000000101043b000000000101041a000003140000013d00000000003004350000002002000039000000000301004b0000041b0000613d000003020200004100000000040000190000000003040019000000000402041a000000a005300039000000000045043500000001022000390000002004300039000000000514004b000004120000413d00000040023000390000008001000039000a00000001001d0bce06620000040f000000400100043d000900000001001d0000000a020000290bce062f0000040f00000009040000290000000001410049000002f502000041000002f50310009c0000000001028019000002f50340009c000000000204401900000040022002100000006001100210000000000121019f00000bcf0001042e000002fb01100197000000000161019f000000000010041b000002f5010000410000000002000414000002f50320009c0000000001024019000000c0011002100000031c011001c70000800d020000390000000303000039000002fe04000041000001aa0000013d0000000301000039000700000001001d000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000006190000613d000000000101043b000000000101041a000002fc011001970000dead0110008c000002400000613d000000090100002900000000001004350000000701000029000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000006190000613d0000000902000029000602fc0020019b000000000101043b000000000101041a000002fc0110019800000006010060290000000a0210006b000004c60000c13d000000400100043d0000006402100039000003350300004100000000003204350000004402100039000003360300004100000000003204350000002402100039000000210300003900000000003204350000031d020000410000000000210435000000040210003900000020030000390000000000320435000002f502000041000002f50310009c0000000001028019000000400110021000000333011001c700000bd000010430000800000002001d00000000002004350000000601000039000000200010043f000002f5030000410000000001000414000002f50210009c0000000001038019000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000006190000613d000000000101043b0000000a020000290000000000200435000000200010043f0000000001000414000002f50210009c000002f501008041000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000006190000613d000000000101043b000000000201041a000001000300008a000000000232016f0000000903000029000000000232019f000000000021041b000000400100043d0000000000310435000002f5020000410000000003000414000002f50430009c0000000003028019000002f50410009c00000000010280190000004001100210000000c002300210000000000112019f000002ff011001c70000800d020000390000000303000039000003250400004100000008050000290000000a060000290bce0bc40000040f0000000101200190000006190000613d000003390000013d0000000301000039000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000006190000613d000000000101043b000000000101041a000002fc011001970000dead0110008c000003630000613d000000400100043d00000044021000390000032d03000041000000000032043500000024021000390000001c03000039000002460000013d0000000002000411000500000002001d000000000212004b000005230000c13d000000090100002900000000001004350000000501000039000000200010043f000002f5030000410000000001000414000002f50210009c0000000001038019000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000006190000613d000000000101043b000000000201041a000002fb022001970000000a022001af000000000021041b000000090100002900000000001004350000000801000029000000200010043f0000000001000414000002f50210009c000002f501008041000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000006190000613d000000000101043b000000000101041a000000ff01100190000002400000613d0000000701000029000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000006190000613d000000000101043b000000000101041a000002fc011001970000dead0110008c000002400000613d000000090100002900000000001004350000000701000029000000200010043f000002f5030000410000000001000414000002f50210009c0000000001038019000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000006190000613d000000000101043b000000000101041a000000400200043d0000000003000414000002f50430009c000002f5050000410000000003058019000002f50420009c00000000020580190000004002200210000000c003300210000000000223019f000002fc0110019800000000050100190000000605006029000002fd012001c70000800d02000039000000040300003900000334040000410000000a060000290000000907000029000004aa0000013d00000000001004350000000601000039000000200010043f000002f5030000410000000001000414000002f50210009c0000000001038019000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000006190000613d000000000101043b0000000502000029000002fc022001970000000000200435000000200010043f0000000001000414000002f50210009c000002f501008041000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000006190000613d000000000101043b000000000101041a000000ff01100190000004ca0000c13d000000400100043d00000064021000390000033103000041000000000032043500000044021000390000033203000041000000000032043500000024021000390000003e030000390000046b0000013d000000030100006b0000000001000019000005510000613d0000000801000029000000000101043300000003040000290000000302400210000000010300008a000000000223022f000000000232013f000000000121016f0000000102400210000000000121019f0000000102000029000000000012041b00000007010000290000000001010433000a00000001001d000002f90110009c0000003d0000213d0000000201000039000800000001001d000000000101041a000000010210019000000001021002700000007f0220618f000300000002001d0000001f0220008c00000000020000190000000102002039000000000121013f0000000101100190000002900000c13d0000000301000029000000200110008c0000058d0000413d00000008010000290000000000100435000002f5010000410000000002000414000002f50320009c0000000001024019000000c001100210000002ff011001c700008010020000390bce0bc90000040f0000000102200190000006190000613d0000000a030000290000001f023000390000000502200270000000200330008c0000000002004019000000000301043b00000003010000290000001f01100039000000050110027000000000011300190000000002230019000000000312004b0000058d0000813d000000000002041b0000000102200039000000000312004b000005890000413d0000000a01000029000000200110008c000005b30000413d000000080100002900000000001004350000000a02000029000000090320018000000020020000390000030101000041000005a30000613d000003010100004100000020020000390000000004000019000000070600002900000000056200190000000005050433000000000051041b000000200220003900000001011000390000002004400039000000000534004b0000059b0000413d0000000a0330006c000005af0000813d0000000a030000290000000303300210000000f80330018f000000010400008a000000000334022f000000000343013f00000007022000290000000002020433000000000232016f000000000021041b0000000a01000029000000010110021000000001011001bf000005c00000013d0000000a0100006b0000000001000019000005c00000613d0000000a030000290000000301300210000000010200008a000000000112022f000000000121013f00000006020000290000000002020433000000000112016f0000000102300210000000000121019f0000000802000029000000000012041b00000005010000290000000001010433000a00000001001d000002f90110009c0000003d0000213d0000000801000039000800000001001d000000000101041a000000010210019000000001021002700000007f0220618f000700000002001d0000001f0220008c00000000020000190000000102002039000000000121013f0000000101100190000002900000c13d0000000701000029000000200110008c000005f40000413d00000008010000290000000000100435000002f5010000410000000002000414000002f50320009c0000000001024019000000c001100210000002ff011001c700008010020000390bce0bc90000040f0000000102200190000006190000613d0000000a030000290000001f023000390000000502200270000000200330008c0000000002004019000000000301043b00000007010000290000001f01100039000000050110027000000000011300190000000002230019000000000312004b000005f40000813d000000000002041b0000000102200039000000000312004b000005f00000413d0000000a01000029000000200110008c0000061b0000413d000000080100002900000000001004350000000a020000290000000903200180000000200200003900000302010000410000060a0000613d000003020100004100000020020000390000000004000019000000050600002900000000056200190000000005050433000000000051041b000000200220003900000001011000390000002004400039000000000534004b000006020000413d0000000a0330006c000006160000813d0000000a030000290000000303300210000000f80330018f000000010400008a000000000334022f000000000343013f00000005022000290000000002020433000000000232016f000000000021041b0000000a010000290000000101100210000006270000013d000000000100001900000bd0000104300000000a0100006b0000000001000019000006280000613d0000000a030000290000000301300210000000010200008a000000000112022f000000000121013f00000004020000290000000002020433000000000112016f000100010030021800000001011001af0000000802000029000000000012041b000000200100003900000100001004430000012000000443000003030100004100000bcf0001042e00000020030000390000000004310436000000000302043300000000003404350000004001100039000000000403004b000006420000613d000000000400001900000000051400190000002004400039000000000624001900000000060604330000000000650435000000000534004b000006370000413d000000000234004b000006420000a13d000000000213001900000000000204350000001f02300039000000200300008a000000000232016f0000000001210019000000000001042d000000040110008a000002fa020000410000005f0310008c00000000030000190000000003022019000002fa01100197000000000401004b0000000002008019000002fa0110009c00000000010300190000000001026019000000000101004b000006600000613d00000001030003670000000401300370000000000101043b000002fc0210009c000006600000213d0000002402300370000000000202043b000002fc0420009c000006600000213d0000004403300370000000000303043b000000000001042d000000000100001900000bd0000104300000001f02200039000000200300008a000000000232016f0000000001120019000000000221004b00000000020000190000000102004039000002f90310009c0000066f0000213d00000001022001900000066f0000c13d000000400010043f000000000001042d000003220100004100000000001004350000004101000039000000040010043f000003230100004100000bd000010430000002fc022001970000000000200435000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000006840000613d000000000101043b000000000001042d000000000100001900000bd0000104300002000000000002000200000001001d00000000001004350000000701000039000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000006c00000613d000000000101043b000000000101041a000000ff01100190000006c20000613d0000000301000039000100000001001d000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000006c00000613d000000000101043b000000000101041a000002fc011001970000dead0110008c000006c20000613d000000020100002900000000001004350000000101000029000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000006c00000613d0000000202000029000002fc02200197000000000101043b000000000101041a000002fc011001980000000001026019000000000001042d000000000100001900000bd000010430000000400100043d0000004402100039000003370300004100000000003204350000002402100039000000180300003900000000003204350000031d020000410000000000210435000000040210003900000020030000390000000000320435000002f502000041000002f50310009c000000000102801900000040011002100000032e011001c700000bd0000104300001000000000002000100000001001d00000000001004350000000301000039000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000006f90000613d000000000101043b000000000101041a000002fc01100198000006fb0000613d000000010100002900000000001004350000000501000039000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000006f90000613d000000000101043b000000000101041a000002fc01100197000000000001042d000000000100001900000bd000010430000000400100043d0000004402100039000003370300004100000000003204350000002402100039000000180300003900000000003204350000031d020000410000000000210435000000040210003900000020030000390000000000320435000002f502000041000002f50310009c000000000102801900000040011002100000032e011001c700000bd000010430000000000101004b000007100000613d000000000001042d000000400100043d00000064021000390000033c03000041000000000032043500000044021000390000033d03000041000000000032043500000024021000390000002e0300003900000000003204350000031d020000410000000000210435000000040210003900000020030000390000000000320435000002f502000041000002f50310009c0000000001028019000000400110021000000333011001c700000bd0000104300007000000000002000300000002001d000500000001001d000700000003001d00000000003004350000000701000039000200000001001d000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000008290000613d000000000101043b000000000101041a000000ff011001900000082b0000613d0000000301000039000600000001001d000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000008290000613d000000000101043b000000000101041a000002fc011001970000dead0110008c0000082b0000613d000000070100002900000000001004350000000601000029000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000008290000613d0000000702000029000002fc03200197000000000101043b000000000101041a000002fc01100198000000000201001900000000020360190000000501000029000002fc01100197000400000002001d000000000112004b000008430000c13d000100000003001d0000000301000029000502fc0010019c0000084d0000613d000000070100002900000000001004350000000501000039000000200010043f000002f5030000410000000001000414000002f50210009c0000000001038019000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000008290000613d000000000101043b000000000201041a000002fb02200197000000000021041b000000070100002900000000001004350000000201000029000000200010043f0000000001000414000002f50210009c000002f501008041000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000008290000613d000000000101043b000000000101041a000000ff011001900000082b0000613d0000000601000029000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000008290000613d000000000101043b000000000101041a000002fc011001970000dead0110008c0000082b0000613d000000070100002900000000001004350000000601000029000000200010043f000002f5030000410000000001000414000002f50210009c0000000001038019000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000008290000613d000000000101043b000000000101041a000000400200043d0000000003000414000002f50430009c000002f5050000410000000003058019000002f50420009c00000000020580190000004002200210000000c003300210000000000223019f000002fc0110019800000000050100190000000105006029000002fd012001c70000800d020000390000000403000039000300000003001d0000033404000041000000000600001900000007070000290bce0bc40000040f0000000101200190000008290000613d000000070100002900000000001004350000000601000029000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000008290000613d000000000101043b000000000101041a000002fc01100198000007ec0000613d000000040100002900000000001004350000000301000029000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000008290000613d000000000101043b000000000201041a000000000302004b0000083d0000613d000000010220008a000000000021041b000000050100002900000000001004350000000301000029000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000008290000613d000000000101043b000000000201041a000000010300008a000000000332004b0000083d0000613d0000000102200039000000000021041b000000070100002900000000001004350000000601000029000000200010043f000002f5030000410000000001000414000002f50210009c0000000001038019000000c00110021000000324011001c700008010020000390bce0bc90000040f0000000102200190000008290000613d000000000101043b000000000201041a000002fb022001970000000506000029000000000262019f000000000021041b000000400100043d0000000002000414000002f50320009c000002f5040000410000000002048019000002f50310009c00000000010480190000004001100210000000c002200210000000000112019f000002fd011001c70000800d0200003900000004030000390000032f04000041000000040500002900000007070000290bce0bc40000040f0000000101200190000008290000613d000000000001042d000000000100001900000bd000010430000000400100043d0000004402100039000003370300004100000000003204350000002402100039000000180300003900000000003204350000031d020000410000000000210435000000040210003900000020030000390000000000320435000002f502000041000002f50310009c000000000102801900000040011002100000032e011001c700000bd000010430000003220100004100000000001004350000001101000039000000040010043f000003230100004100000bd000010430000000400100043d00000064021000390000033e03000041000000000032043500000044021000390000033f03000041000000000032043500000024021000390000002503000039000008560000013d000000400100043d0000006402100039000003400300004100000000003204350000004402100039000003410300004100000000003204350000002402100039000000240300003900000000003204350000031d020000410000000000210435000000040210003900000020030000390000000000320435000002f502000041000002f50310009c0000000001028019000000400110021000000333011001c700000bd000010430000b000000000002000100000004001d000300000002001d000700000001001d000900000003001d00000000003004350000000701000039000500000001001d000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f000000010220019000000a7d0000613d000000000101043b000000000101041a000000ff0110019000000a7f0000613d0000000301000039000800000001001d000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f000000010220019000000a7d0000613d000000000101043b000000000101041a000002fc011001970000dead0110008c00000a7f0000613d000000090100002900000000001004350000000801000029000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f000000010220019000000a7d0000613d00000000020004110000000903000029000402fc0030019b000000000101043b000000000101041a000002fc011001980000000401006029000202fc0020019b000000020210006b000008e60000613d00000000001004350000000601000039000000200010043f000002f5030000410000000001000414000002f50210009c0000000001038019000000c00110021000000324011001c700008010020000390bce0bc90000040f000000010220019000000a7d0000613d000000000101043b00000002020000290000000000200435000000200010043f0000000001000414000002f50210009c000002f501008041000000c00110021000000324011001c700008010020000390bce0bc90000040f000000010220019000000a7d0000613d000000000101043b000000000101041a000000ff01100190000008e60000c13d000000090100002900000000001004350000000801000029000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f000000010220019000000a7d0000613d000000000101043b000000000101041a000002fc0110019800000a7f0000613d000000090100002900000000001004350000000501000039000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f000000010220019000000a7d0000613d000000000101043b000000000101041a000002fc01100197000000020110006c00000afa0000c13d000000090100002900000000001004350000000501000029000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f000000010220019000000a7d0000613d000000000101043b000000000101041a000000ff0110019000000a7f0000613d0000000801000029000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f000000010220019000000a7d0000613d000000000101043b000000000101041a000002fc011001970000dead0110008c00000a7f0000613d000000090100002900000000001004350000000801000029000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f000000010220019000000a7d0000613d000000000101043b000000000101041a000002fc01100198000000000201001900000004020060290000000701000029000002fc01100197000600000002001d000000000112004b00000a950000c13d0000000301000029000702fc0010019c00000a9f0000613d000000090100002900000000001004350000000501000039000000200010043f000002f5030000410000000001000414000002f50210009c0000000001038019000000c00110021000000324011001c700008010020000390bce0bc90000040f000000010220019000000a7d0000613d000000000101043b000000000201041a000002fb02200197000000000021041b000000090100002900000000001004350000000501000029000000200010043f0000000001000414000002f50210009c000002f501008041000000c00110021000000324011001c700008010020000390bce0bc90000040f000000010220019000000a7d0000613d000000000101043b000000000101041a000000ff0110019000000a7f0000613d0000000801000029000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f000000010220019000000a7d0000613d000000000101043b000000000101041a000002fc011001970000dead0110008c00000a7f0000613d000000090100002900000000001004350000000801000029000000200010043f000002f5030000410000000001000414000002f50210009c0000000001038019000000c00110021000000324011001c700008010020000390bce0bc90000040f000000010220019000000a7d0000613d000000000101043b000000000101041a000000400200043d0000000003000414000002f50430009c000002f5050000410000000003058019000002f50420009c00000000020580190000004002200210000000c003300210000000000223019f000002fc0110019800000000050100190000000405006029000002fd012001c70000800d020000390000000403000039000500000003001d0000033404000041000000000600001900000009070000290bce0bc40000040f000000010120019000000a7d0000613d000000090100002900000000001004350000000801000029000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f000000010220019000000a7d0000613d000000000101043b000000000101041a000002fc01100198000009a50000613d000000060100002900000000001004350000000501000029000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f000000010220019000000a7d0000613d000000000101043b000000000201041a000000000302004b00000a910000613d000000010220008a000000000021041b000000070100002900000000001004350000000501000029000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f000000010220019000000a7d0000613d000000000101043b000000000201041a000000010300008a000000000332004b00000a910000613d0000000102200039000000000021041b000000090100002900000000001004350000000801000029000000200010043f000002f5030000410000000001000414000002f50210009c0000000001038019000000c00110021000000324011001c700008010020000390bce0bc90000040f000000010220019000000a7d0000613d000000000101043b000000000201041a000002fb022001970000000706000029000000000262019f000000000021041b000000400100043d0000000002000414000002f50320009c000002f5040000410000000002048019000002f50310009c00000000010480190000004001100210000000c002200210000000000112019f000002fd011001c70000800d0200003900000004030000390000032f04000041000000060500002900000009070000290bce0bc40000040f000000010120019000000a7d0000613d0000000001000415000800000001001d0000034201000041000000000010043900000003010000290000000400100443000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000343011001c700008002020000390bce0bc90000040f000000010220019000000a7d0000613d000000000101043b000000000101004b00000a230000613d000000400a00043d0000006401a00039000000800700003900000000007104350000004401a00039000000090200002900000000002104350000002401a0003900000006020000290000000000210435000003440100004100000000001a04350000000401a0003900000002020000290000000000210435000000010600002900000000010604330000008402a000390000000000120435000000000201004b00000a160000613d000000a402a00039000000000300001900000000042300190000002003300039000000000563001900000000050504330000000000540435000000000413004b00000a0b0000413d000000000313004b00000a160000a13d0000000002210019000000000002043500000000060004140000000702000029000000040320008c00000a270000c13d00000000050004150000000b0550008a00000020055000c90000000003000031000000200130008c00000020040000390000000004034019000b00000000001d00000a640000013d00000000010004150000000801100069000000000100000200000a7c0000013d000600000007001d0000001f01100039000000200300008a000000000131016f000002f503000041000002f504a0009c000000000403001900000000040a40190000004004400210000000a401100039000002f50510009c00000000010380190000006001100210000000000141019f000002f50460009c0000000003064019000000c003300210000000000113019f00090000000a001d0bce0bc40000040f000000090a00002900000000030100190000006003300270000002f503300197000000200430008c000000200400003900000000040340190000001f0540018f000000050640027200000a4e0000613d0000000007000019000000050870021000000000098a0019000000000881034f000000000808043b00000000008904350000000107700039000000000867004b00000a460000413d000000000705004b00000a5d0000613d0000000506600210000000000761034f00000000066a00190000000305500210000000000806043300000000085801cf000000000858022f000000000707043b0000010005500089000000000757022f00000000055701cf000000000585019f0000000000560435000000000003001f00000000050004150000000a0550008a00000020055000c9000a00000000001d000000010220019000000ab40000613d0000001f01400039000000600210018f0000000001a20019000000000221004b00000000020000190000000102004039000002f90410009c00000af40000213d000000010220019000000af40000c13d000000400010043f000000200130008c00000a7d0000413d00000000010a04330000033802100197000000000212004b00000a7d0000c13d0000000502500270000000000201001f000000000200041500000008022000690000000002000002000003440110009c00000ae30000c13d000000000001042d000000000100001900000bd000010430000000400100043d0000004402100039000003370300004100000000003204350000002402100039000000180300003900000000003204350000031d020000410000000000210435000000040210003900000020030000390000000000320435000002f502000041000002f50310009c000000000102801900000040011002100000032e011001c700000bd00001043000000322010000410000000000100435000000110100003900000af70000013d000000400100043d00000064021000390000033e03000041000000000032043500000044021000390000033f0300004100000000003204350000002402100039000000250300003900000aa80000013d000000400100043d0000006402100039000003400300004100000000003204350000004402100039000003410300004100000000003204350000002402100039000000240300003900000000003204350000031d020000410000000000210435000000040210003900000020030000390000000000320435000002f502000041000002f50310009c0000000001028019000000400110021000000333011001c700000bd0000104300000006002000039000000000403004b00000ae00000613d0000003f02300039000002f804200197000000400200043d0000000004420019000000000524004b00000000050000190000000105004039000002f90640009c00000af40000213d000000010550019000000af40000c13d000000400040043f0000001f0430018f0000000008320436000000050330027200000ad00000613d000000000500001900000005065002100000000007680019000000000661034f000000000606043b00000000006704350000000105500039000000000635004b00000ac80000413d000600000008001d000000000504004b00000ae00000613d0000000503300210000000000131034f00000006033000290000000304400210000000000503043300000000054501cf000000000545022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000151019f00000000001304350000000001020433000000000201004b00000b040000c13d000000400200043d000900000002001d0000031d01000041000000000012043500000004012000390bce0b090000040f00000009040000290000000001410049000002f502000041000002f50310009c0000000001028019000002f50340009c000000000204401900000040022002100000006001100210000000000121019f00000bd000010430000003220100004100000000001004350000004101000039000000040010043f000003230100004100000bd000010430000000400100043d00000064021000390000033c03000041000000000032043500000044021000390000033d03000041000000000032043500000024021000390000002e0300003900000aa80000013d000002f502000041000002f50310009c0000000001028019000000060400002900000aee0000013d000000600210003900000345030000410000000000320435000000400210003900000346030000410000000000320435000000200210003900000032030000390000000000320435000000200200003900000000002104350000008001100039000000000001042d0003000000000002000100000001001d000300000002001d00000000002004350000000701000039000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f000000010220019000000b9a0000613d000000000101043b000000000101041a000000ff0110019000000b9c0000613d0000000301000039000200000001001d000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f000000010220019000000b9a0000613d000000000101043b000000000101041a000002fc011001970000dead0110008c00000b9c0000613d000000030100002900000000001004350000000201000029000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f000000010220019000000b9a0000613d0000000302000029000002fc02200197000000000101043b000000000101041a000002fc01100198000000000201c01900000001010000390000000103000029000102fc0030019b000000010320006b00000b990000613d00000000002004350000000601000039000000200010043f000002f5030000410000000001000414000002f50210009c0000000001038019000000c00110021000000324011001c700008010020000390bce0bc90000040f000000010220019000000b9a0000613d000000000101043b00000001020000290000000000200435000000200010043f0000000001000414000002f50210009c000002f501008041000000c00110021000000324011001c700008010020000390bce0bc90000040f000000010220019000000b9a0000613d000000000101043b000000000101041a000000ff0110019000000b990000c13d000000030100002900000000001004350000000201000029000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f000000010220019000000b9a0000613d000000000101043b000000000101041a000002fc0110019800000b9c0000613d000000030100002900000000001004350000000501000039000000200010043f000002f5010000410000000002000414000002f50320009c0000000001024019000000c00110021000000324011001c700008010020000390bce0bc90000040f000000010220019000000b9a0000613d000000000101043b000000000101041a000002fc01100197000000010110006c00000000010000190000000101006039000000000001042d000000000100001900000bd000010430000000400100043d0000004402100039000003370300004100000000003204350000002402100039000000180300003900000000003204350000031d020000410000000000210435000000040210003900000020030000390000000000320435000002f502000041000002f50310009c000000000102801900000040011002100000032e011001c700000bd000010430000002f503000041000002f50410009c00000000010380190000004001100210000002f50420009c00000000020380190000006002200210000000000112019f0000000002000414000002f50420009c0000000002038019000000c002200210000000000112019f000002fd011001c700008010020000390bce0bc90000040f000000010220019000000bc20000613d000000000101043b000000000001042d000000000100001900000bd00001043000000bc7002104210000000102000039000000000001042d0000000002000019000000000001042d00000bcc002104230000000102000039000000000001042d0000000002000019000000000001042d00000bce0000043200000bcf0001042e00000bd00001043000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000009fffffffffffffffffffffffffffffffffffffffffffffffff000000000000007f00000000000000000000000000000000000000000000000000000001ffffffe0000000000000000000000000000000000000000000000000ffffffffffffffff8000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffff02000000000000000000000000000000000000000000000000000000000000008be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e00200000000000000000000000000000000000020000000000000000000000000b10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acef3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee300000002000000000000000000000000000000400000010000000000000000000000000000000000000000000000000000000000000000000000000070a0823000000000000000000000000000000000000000000000000000000000a22cb46400000000000000000000000000000000000000000000000000000000c87b56dc00000000000000000000000000000000000000000000000000000000c87b56dd00000000000000000000000000000000000000000000000000000000e985e9c500000000000000000000000000000000000000000000000000000000f2fde38b00000000000000000000000000000000000000000000000000000000a22cb46500000000000000000000000000000000000000000000000000000000b88d4fde000000000000000000000000000000000000000000000000000000008da5cb5a000000000000000000000000000000000000000000000000000000008da5cb5b0000000000000000000000000000000000000000000000000000000095d89b410000000000000000000000000000000000000000000000000000000070a0823100000000000000000000000000000000000000000000000000000000715018a6000000000000000000000000000000000000000000000000000000001249c58a0000000000000000000000000000000000000000000000000000000042842e0d0000000000000000000000000000000000000000000000000000000042842e0e000000000000000000000000000000000000000000000000000000006352211e000000000000000000000000000000000000000000000000000000001249c58b0000000000000000000000000000000000000000000000000000000023b872dd00000000000000000000000000000000000000000000000000000000081812fb00000000000000000000000000000000000000000000000000000000081812fc00000000000000000000000000000000000000000000000000000000095ea7b30000000000000000000000000000000000000000000000000000000001ffc9a70000000000000000000000000000000000000000000000000000000006fdde03020000000000000000000000000000000000000000000080000000000000000008c379a0000000000000000000000000000000000000000000000000000000004f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573730000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008400000080000000000000000000000000000000000000000000000000000000200000000000000000000000004e487b71000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024000000000000000000000000020000000000000000000000000000000000004000000000000000000000000017307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c314552433732313a20617070726f766520746f2063616c6c657200000000000000000000000000000000000000000000000000006400000080000000000000000000000000000000000000000000000000000000200000008000000000000000004f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657200000000000000000000000000000000000000000000008000000000000000004552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e657200000000000000000000000000000000000000000000004552433732313a20746f6b656e20616c7265616479206d696e746564000000000000000000000000000000000000000000000064000000000000000000000000ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef4552433732313a206d696e7420746f20746865207a65726f20616464726573736b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00004552433732313a20617070726f76652063616c6c6572206973206e6f7420746f00000000000000000000000000000000000000840000000000000000000000008c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92572000000000000000000000000000000000000000000000000000000000000004552433732313a20617070726f76616c20746f2063757272656e74206f776e654552433732313a20696e76616c696420746f6b656e2049440000000000000000ffffffff0000000000000000000000000000000000000000000000000000000080ac58cd000000000000000000000000000000000000000000000000000000005b5e139f0000000000000000000000000000000000000000000000000000000001ffc9a70000000000000000000000000000000000000000000000000000000072206e6f7220617070726f7665640000000000000000000000000000000000004552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e656f776e65720000000000000000000000000000000000000000000000000000004552433732313a207472616e736665722066726f6d20696e636f72726563742072657373000000000000000000000000000000000000000000000000000000004552433732313a207472616e7366657220746f20746865207a65726f206164641806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b830200000200000000000000000000000000000024000000000000000000000000150b7a020000000000000000000000000000000000000000000000000000000063656976657220696d706c656d656e74657200000000000000000000000000004552433732313a207472616e7366657220746f206e6f6e2045524337323152650000000000000000000000000000000000000000000000000000000000000000dadb8ee51040b98335b825c51d64b1b631e528744647f386af3b9e9cec8d7a7f"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","mint()":"1249c58b","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"irOptimized":"/// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 1:\"@openzeppelin/contracts/token/ERC721/IERC721.sol\", 3:\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\", 5:\"@openzeppelin/contracts/utils/Context.sol\", 7:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 8:\"@openzeppelin/contracts/utils/introspection/IERC165.sol\", 11:\"contracts/ERC721All.sol\", 12:\"contracts/lib/ERC721.sol\"\nobject \"ERC721All_2225\" {\n    code {\n        {\n            /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"ERC721All_2225\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 96)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n            let offset := mload(memoryDataOffset)\n            let _2 := sub(shl(64, 1), 1)\n            if gt(offset, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n            let value0 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n            let offset_1 := mload(add(memoryDataOffset, 32))\n            if gt(offset_1, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n            let value1 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1)\n            let offset_2 := mload(add(memoryDataOffset, 64))\n            if gt(offset_2, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n            constructor_ERC721All(value0, value1, abi_decode_string_fromMemory(add(memoryDataOffset, offset_2), _1))\n            let _3 := mload(64)\n            let _4 := datasize(\"ERC721All_2225_deployed\")\n            codecopy(_3, dataoffset(\"ERC721All_2225_deployed\"), _4)\n            return(_3, _4)\n        }\n        function panic_error_0x41()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_string_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n            let _1 := mload(offset)\n            if gt(_1, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            let _2 := 0x20\n            let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n            mstore(array_1, _1)\n            if gt(add(add(offset, _1), _2), end)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n            for { } lt(i, _1) { i := add(i, _2) }\n            {\n                mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n            }\n            if gt(i, _1)\n            {\n                mstore(add(add(array_1, _1), _2), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n            array := array_1\n        }\n        function extract_byte_array_length(data) -> length\n        {\n            length := shr(1, data)\n            let outOfPlaceEncoding := and(data, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(0, 0x24)\n            }\n        }\n        function array_dataslot_string_storage_1586() -> data\n        {\n            mstore(0, /** @src 12:2303:2316  \"_name = name_\" */ 0x01)\n            /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n            data := keccak256(0, 0x20)\n        }\n        function array_dataslot_string_storage_2878() -> data\n        {\n            mstore(0, /** @src 12:2326:2343  \"_symbol = symbol_\" */ 0x02)\n            /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n            data := keccak256(0, 0x20)\n        }\n        function array_dataslot_string_storage() -> data\n        {\n            mstore(0, /** @src 11:635:658  \"_baseTokenURI = baseUri\" */ 0x08)\n            /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n            data := keccak256(0, 0x20)\n        }\n        function clean_up_bytearray_end_slots_string_storage_1585(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src 12:2303:2316  \"_name = name_\"\n                let _1 := 0x01\n                /// @src -1:-1:-1\n                let _2 := 0\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                mstore(/** @src -1:-1:-1 */ _2, /** @src 12:2303:2316  \"_name = name_\" */ _1)\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _2, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _3 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { }\n                lt(start, _3)\n                {\n                    start := add(start, /** @src 12:2303:2316  \"_name = name_\" */ _1)\n                }\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _2)\n                }\n            }\n        }\n        /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n        function clean_up_bytearray_end_slots_string_storage_2877(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 12:2326:2343  \"_symbol = symbol_\" */ 0x02)\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _1)\n                }\n            }\n        }\n        /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n        function clean_up_bytearray_end_slots_string_storage(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 11:635:658  \"_baseTokenURI = baseUri\" */ 0x08)\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _1)\n                }\n            }\n        }\n        /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n        function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n        {\n            used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n        }\n        function copy_byte_array_to_storage_from_string_to_string_1587(src)\n        {\n            let newLen := mload(src)\n            if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            clean_up_bytearray_end_slots_string_storage_2877(extract_byte_array_length(sload(/** @src 12:2326:2343  \"_symbol = symbol_\" */ 0x02)), /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ newLen)\n            let srcOffset := 0\n            let srcOffset_1 := 0x20\n            srcOffset := srcOffset_1\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage_2878()\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n                {\n                    sstore(dstPtr, mload(add(src, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, srcOffset_1)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(src, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src 12:2326:2343  \"_symbol = symbol_\" */ 0x02, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(src, srcOffset))\n                }\n                sstore(/** @src 12:2326:2343  \"_symbol = symbol_\" */ 0x02, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n        }\n        function copy_byte_array_to_storage_from_string_to_string(src)\n        {\n            let newLen := mload(src)\n            if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            clean_up_bytearray_end_slots_string_storage(extract_byte_array_length(sload(/** @src 11:635:658  \"_baseTokenURI = baseUri\" */ 0x08)), /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ newLen)\n            let srcOffset := 0\n            let srcOffset_1 := 0x20\n            srcOffset := srcOffset_1\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage()\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n                {\n                    sstore(dstPtr, mload(add(src, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, srcOffset_1)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(src, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src 11:635:658  \"_baseTokenURI = baseUri\" */ 0x08, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(src, srcOffset))\n                }\n                sstore(/** @src 11:635:658  \"_baseTokenURI = baseUri\" */ 0x08, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n        }\n        /// @ast-id 1897 @src 11:505:663  \"constructor(...\"\n        function constructor_ERC721All(var_name_mpos, var_symbol_mpos, var_baseUri_mpos)\n        {\n            /// @src 0:2518:2524  \"_owner\"\n            let _1 := 0x00\n            /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n            let _2 := sload(/** @src 0:2518:2524  \"_owner\" */ _1)\n            /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n            sstore(/** @src 0:2518:2524  \"_owner\" */ _1, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ or(and(_2, not(sub(shl(160, 1), 1))), /** @src 5:719:729  \"msg.sender\" */ caller()))\n            /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ mload(64), /** @src 0:2518:2524  \"_owner\" */ _1, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ and(_2, sub(shl(160, 1), 1)), /** @src 5:719:729  \"msg.sender\" */ caller())\n            /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n            let newLen := mload(var_name_mpos)\n            if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            /// @src 12:2303:2316  \"_name = name_\"\n            let _3 := 0x01\n            /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n            clean_up_bytearray_end_slots_string_storage_1585(extract_byte_array_length(sload(/** @src 12:2303:2316  \"_name = name_\" */ _3)), /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ newLen)\n            let srcOffset := /** @src 0:2518:2524  \"_owner\" */ _1\n            /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n            let srcOffset_1 := 0x20\n            srcOffset := srcOffset_1\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage_1586()\n                let i := /** @src 0:2518:2524  \"_owner\" */ _1\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n                {\n                    sstore(dstPtr, mload(add(var_name_mpos, srcOffset)))\n                    dstPtr := add(dstPtr, /** @src 12:2303:2316  \"_name = name_\" */ _3)\n                    /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                    srcOffset := add(srcOffset, srcOffset_1)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(var_name_mpos, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src 12:2303:2316  \"_name = name_\" */ _3, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ add(shl(/** @src 12:2303:2316  \"_name = name_\" */ _3, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ newLen), /** @src 12:2303:2316  \"_name = name_\" */ _3))\n            }\n            default /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n            {\n                let value := /** @src 0:2518:2524  \"_owner\" */ _1\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                if newLen\n                {\n                    value := mload(add(var_name_mpos, srcOffset))\n                }\n                sstore(/** @src 12:2303:2316  \"_name = name_\" */ _3, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n            copy_byte_array_to_storage_from_string_to_string_1587(var_symbol_mpos)\n            copy_byte_array_to_storage_from_string_to_string(var_baseUri_mpos)\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 5:\"@openzeppelin/contracts/utils/Context.sol\", 7:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 11:\"contracts/ERC721All.sol\", 12:\"contracts/lib/ERC721.sol\"\n    object \"ERC721All_2225_deployed\" {\n        code {\n            {\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                mstore(64, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x01ffc9a7 {\n                        external_fun_supportsInterface()\n                    }\n                    case 0x06fdde03 { external_fun_name() }\n                    case 0x081812fc { external_fun_getApproved() }\n                    case 0x095ea7b3 { external_fun_approve() }\n                    case 0x1249c58b { external_fun_mint() }\n                    case 0x23b872dd { external_fun_transferFrom() }\n                    case 0x42842e0e {\n                        external_fun_safeTransferFrom()\n                    }\n                    case 0x6352211e { external_fun_ownerOf() }\n                    case 0x70a08231 { external_fun_balanceOf() }\n                    case 0x715018a6 {\n                        external_fun_renounceOwnership()\n                    }\n                    case 0x8da5cb5b { external_fun_owner() }\n                    case 0x95d89b41 { external_fun_symbol() }\n                    case 0xa22cb465 {\n                        external_fun_setApprovalForAll()\n                    }\n                    case 0xb88d4fde {\n                        external_fun_safeTransferFrom_2613()\n                    }\n                    case 0xc87b56dd { external_fun_tokenURI() }\n                    case 0xe985e9c5 {\n                        external_fun_isApprovedForAll()\n                    }\n                    case 0xf2fde38b {\n                        external_fun_transferOwnership()\n                    }\n                }\n                revert(0, 0)\n            }\n            function validator_revert_bytes4(value)\n            {\n                if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n            }\n            function abi_encode_bool(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, iszero(iszero(value0)))\n            }\n            function external_fun_supportsInterface()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                let value := calldataload(4)\n                validator_revert_bytes4(value)\n                /// @src 12:2554:2594  \"interfaceId == type(IERC721).interfaceId\"\n                let _1 := /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ and(/** @src 12:2554:2594  \"interfaceId == type(IERC721).interfaceId\" */ value, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ shl(224, 0xffffffff))\n                /// @src 12:2554:2658  \"interfaceId == type(IERC721).interfaceId ||...\"\n                let expr := /** @src 12:2554:2594  \"interfaceId == type(IERC721).interfaceId\" */ eq(_1, /** @src 12:2569:2594  \"type(IERC721).interfaceId\" */ shl(224, 0x80ac58cd))\n                /// @src 12:2554:2658  \"interfaceId == type(IERC721).interfaceId ||...\"\n                if iszero(expr)\n                {\n                    expr := /** @src 12:2610:2658  \"interfaceId == type(IERC721Metadata).interfaceId\" */ eq(_1, /** @src 12:2625:2658  \"type(IERC721Metadata).interfaceId\" */ shl(224, 0x5b5e139f))\n                }\n                /// @src 12:2554:2710  \"interfaceId == type(IERC721).interfaceId ||...\"\n                let expr_1 := expr\n                if iszero(expr)\n                {\n                    expr_1 := /** @src 7:937:977  \"interfaceId == type(IERC165).interfaceId\" */ eq(_1, /** @src 7:952:977  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                }\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(expr_1)))\n                return(memPos, 32)\n            }\n            function array_storeLengthForEncoding_string(pos, length) -> updated_pos\n            {\n                mstore(pos, length)\n                updated_pos := add(pos, 0x20)\n            }\n            function abi_encode_string_memory_ptr(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                if gt(i, length)\n                {\n                    mstore(add(add(pos, length), 0x20), 0)\n                }\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                mstore(headStart, 32)\n                tail := abi_encode_string_memory_ptr(value0, add(headStart, 32))\n            }\n            function external_fun_name()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := 0\n                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                let memPtr := mload(64)\n                let ret := _1\n                /// @src 12:3403:3408  \"_name\"\n                let _2 := 0x01\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                let slotValue := sload(/** @src 12:3403:3408  \"_name\" */ _2)\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                let length := _1\n                length := shr(/** @src 12:3403:3408  \"_name\" */ _2, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ slotValue)\n                let outOfPlaceEncoding := and(slotValue, /** @src 12:3403:3408  \"_name\" */ _2)\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _3 := 32\n                if eq(outOfPlaceEncoding, lt(length, _3))\n                {\n                    mstore(_1, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(_1, 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _3)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage_6026()\n                    let i := _1\n                    for { } lt(i, length) { i := add(i, _3) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, /** @src 12:3403:3408  \"_name\" */ _2)\n                    }\n                    /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_string(memPos, memPtr), memPos))\n            }\n            function cleanup_address(value) -> cleaned\n            {\n                cleaned := and(value, sub(shl(160, 1), 1))\n            }\n            function external_fun_getApproved()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                let ret := fun_getApproved(calldataload(4))\n                let memPos := mload(64)\n                mstore(memPos, and(ret, sub(shl(160, 1), 1)))\n                return(memPos, 32)\n            }\n            function abi_decode_address_6028() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function external_fun_approve()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                let value0 := abi_decode_address_6028()\n                let value1 := calldataload(36)\n                /// @src 12:4410:4426  \"ownerOf(tokenId)\"\n                let expr := fun_ownerOf(value1)\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 12:4444:4455  \"to != owner\"\n                let _2 := /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ and(/** @src 12:4444:4455  \"to != owner\" */ expr, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ _1)\n                if /** @src 12:4444:4455  \"to != owner\" */ eq(/** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ and(/** @src 12:4444:4455  \"to != owner\" */ value0, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ _1), /** @src 12:4444:4455  \"to != owner\" */ _2)\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 33)\n                    mstore(add(memPtr, 68), \"ERC721: approval to current owne\")\n                    mstore(add(memPtr, 100), \"r\")\n                    revert(memPtr, 132)\n                }\n                /// @src 12:4525:4587  \"_msgSender() == owner || isApprovedForAll(owner, _msgSender())\"\n                let expr_1 := /** @src 12:4525:4546  \"_msgSender() == owner\" */ eq(/** @src 5:719:729  \"msg.sender\" */ caller(), /** @src 12:4525:4546  \"_msgSender() == owner\" */ _2)\n                /// @src 12:4525:4587  \"_msgSender() == owner || isApprovedForAll(owner, _msgSender())\"\n                if iszero(expr_1)\n                {\n                    expr_1 := /** @src 12:5348:5383  \"_operatorApprovals[owner][operator]\" */ read_from_storage_split_offset_bool(mapping_index_access_mapping_address_uint256_of_address(/** @src 12:5348:5373  \"_operatorApprovals[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_6030(/** @src 12:4550:4587  \"isApprovedForAll(owner, _msgSender())\" */ expr), /** @src 5:719:729  \"msg.sender\" */ caller()))\n                }\n                /// @src 12:4504:4675  \"require(...\"\n                require_helper_stringliteral_8a33(expr_1)\n                /// @src 12:4699:4706  \"tokenId\"\n                fun_approve(value0, value1)\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                return(mload(64), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n            function external_fun_mint()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := 0\n                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                if /** @src 11:1647:1669  \"receiver != address(0)\" */ iszero(/** @src 5:719:729  \"msg.sender\" */ caller())\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 32)\n                    mstore(add(memPtr, 68), \"ERC721: mint to the zero address\")\n                    revert(memPtr, 100)\n                }\n                if iszero(/** @src 11:1720:1744  \"!_isTokenActive(tokenId)\" */ iszero(/** @src 11:1721:1744  \"_isTokenActive(tokenId)\" */ fun_isTokenActive(/** @src 5:719:729  \"msg.sender\" */ caller())))\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 28)\n                    mstore(add(memPtr_1, 68), \"ERC721: token already minted\")\n                    revert(memPtr_1, 100)\n                }\n                /// @src 11:1812:1841  \"_activeTokens[tokenId] = true\"\n                update_storage_value_offsett_bool_to_bool_6032(/** @src 11:1812:1834  \"_activeTokens[tokenId]\" */ mapping_index_access_mapping_uint256_address_of_uint256(/** @src 5:719:729  \"msg.sender\" */ caller()))\n                /// @src 11:1880:1919  \"Transfer(address(0), receiver, tokenId)\"\n                let _2 := /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ mload(64)\n                /// @src 11:1880:1919  \"Transfer(address(0), receiver, tokenId)\"\n                log4(_2, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ _1, /** @src 11:1880:1919  \"Transfer(address(0), receiver, tokenId)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ _1, /** @src 5:719:729  \"msg.sender\" */ caller(), caller())\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                return(_2, _1)\n            }\n            function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                value1 := value_1\n                value2 := calldataload(68)\n            }\n            function external_fun_transferFrom()\n            {\n                if callvalue() { revert(0, 0) }\n                let param, param_1, param_2 := abi_decode_addresst_addresst_uint256(calldatasize())\n                /// @src 12:5633:5733  \"require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\")\"\n                require_helper_stringliteral_eb80(/** @src 12:5641:5682  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ fun_isApprovedOrOwner(/** @src 5:719:729  \"msg.sender\" */ caller(), /** @src 12:5641:5682  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ param_2))\n                /// @src 12:5764:5771  \"tokenId\"\n                fun_transfer(param, param_1, param_2)\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                return(mload(64), 0)\n            }\n            function external_fun_safeTransferFrom()\n            {\n                if callvalue() { revert(0, 0) }\n                let param, param_1, param_2 := abi_decode_addresst_addresst_uint256(calldatasize())\n                let memPtr := mload(64)\n                let newFreePtr := add(memPtr, 0x20)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n                mstore(memPtr, 0)\n                /// @src 12:5978:6017  \"safeTransferFrom(from, to, tokenId, \\\"\\\")\"\n                fun_safeTransferFrom(param, param_1, param_2, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ memPtr)\n                return(mload(64), 0)\n            }\n            function external_fun_ownerOf()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                let ret := fun_ownerOf(calldataload(4))\n                let memPos := mload(64)\n                mstore(memPos, and(ret, sub(shl(160, 1), 1)))\n                return(memPos, 32)\n            }\n            function external_fun_balanceOf()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                let ret := fun_balanceOf(abi_decode_address_6028())\n                let memPos := mload(64)\n                mstore(memPos, ret)\n                return(memPos, 32)\n            }\n            function external_fun_renounceOwnership()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := 0\n                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                fun_checkOwner()\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                let _2 := sload(_1)\n                sstore(_1, and(_2, shl(160, 0xffffffffffffffffffffffff)))\n                let _3 := mload(64)\n                /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                log3(/** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ _3, _1, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ and(_2, sub(shl(160, 1), 1)), _1)\n                return(_3, _1)\n            }\n            function external_fun_owner()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let cleaned := and(sload(0), sub(shl(160, 1), 1))\n                let memPos := mload(64)\n                mstore(memPos, cleaned)\n                return(memPos, 32)\n            }\n            function external_fun_symbol()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := 0\n                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                let memPtr := mload(64)\n                let ret := _1\n                let slotValue := sload(/** @src 12:3567:3574  \"_symbol\" */ 0x02)\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                let length := _1\n                let _2 := 1\n                length := shr(_2, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _2)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _3 := 32\n                if eq(outOfPlaceEncoding, lt(length, _3))\n                {\n                    mstore(_1, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(_1, 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _3)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage_6039()\n                    let i := _1\n                    for { } lt(i, length) { i := add(i, _3) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _2)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_string(memPos, memPtr), memPos))\n            }\n            function external_fun_setApprovalForAll()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                let value0 := abi_decode_address_6028()\n                let value := calldataload(36)\n                if iszero(eq(value, iszero(iszero(value))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                let _1 := and(/** @src 12:12300:12317  \"owner != operator\" */ value0, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ sub(shl(160, 1), 1))\n                if /** @src 12:12300:12317  \"owner != operator\" */ eq(/** @src 5:719:729  \"msg.sender\" */ caller(), /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ _1)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 25)\n                    mstore(add(memPtr, 68), \"ERC721: approve to caller\")\n                    revert(memPtr, 100)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 5:719:729  \"msg.sender\" */ caller())\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                mstore(32, /** @src 12:12357:12375  \"_operatorApprovals\" */ 0x06)\n                /// @src 12:12357:12403  \"_operatorApprovals[owner][operator] = approved\"\n                update_storage_value_offsett_bool_to_bool(/** @src 12:12357:12392  \"_operatorApprovals[owner][operator]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ 64), /** @src 12:12357:12392  \"_operatorApprovals[owner][operator]\" */ value0), /** @src 12:12357:12403  \"_operatorApprovals[owner][operator] = approved\" */ value)\n                /// @src 12:12418:12459  \"ApprovalForAll(owner, operator, approved)\"\n                let _2 := /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ mload(64)\n                /// @src 12:12418:12459  \"ApprovalForAll(owner, operator, approved)\"\n                log3(_2, sub(abi_encode_bool(_2, value), _2), 0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, /** @src 5:719:729  \"msg.sender\" */ caller(), /** @src 12:12418:12459  \"ApprovalForAll(owner, operator, approved)\" */ _1)\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                return(mload(64), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function external_fun_safeTransferFrom_2613()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 128)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                let value0 := abi_decode_address_6028()\n                let value1 := abi_decode_address()\n                let offset := calldataload(100)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                if iszero(slt(add(offset, 35), calldatasize()))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                let _1 := calldataload(add(4, offset))\n                let _2 := array_allocation_size_bytes(_1)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _2)\n                mstore(memPtr, _1)\n                if gt(add(add(offset, _1), 36), calldatasize())\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                calldatacopy(add(memPtr, 32), add(offset, 36), _1)\n                mstore(add(add(memPtr, _1), 32), /** @src -1:-1:-1 */ 0)\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                fun_safeTransferFrom(value0, value1, calldataload(68), memPtr)\n                return(mload(64), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n            function external_fun_tokenURI()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := 32\n                if slt(add(calldatasize(), not(3)), _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                let _2 := 0\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                mstore(/** @src -1:-1:-1 */ _2, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ calldataload(4))\n                mstore(_1, /** @src 11:3285:3292  \"_owners\" */ 0x03)\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                let memPtr := mload(0x40)\n                let ret := /** @src -1:-1:-1 */ _2\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                let slotValue := sload(/** @src 11:3153:3166  \"_baseTokenURI\" */ 0x08)\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                let length := /** @src -1:-1:-1 */ _2\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                let _3 := 1\n                length := shr(_3, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _3)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, _1))\n                {\n                    mstore(/** @src -1:-1:-1 */ _2, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ _2, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _1)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage()\n                    let i := /** @src -1:-1:-1 */ _2\n                    /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                    for { } lt(i, length) { i := add(i, _1) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _3)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n                let memPos := mload(0x40)\n                return(memPos, sub(abi_encode_string(memPos, memPtr), memPos))\n            }\n            function external_fun_isApprovedForAll()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                let value0 := abi_decode_address_6028()\n                let value1 := abi_decode_address()\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ and(value0, sub(shl(160, 1), 1)))\n                mstore(32, /** @src 12:5348:5366  \"_operatorApprovals\" */ 0x06)\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                let value := and(sload(/** @src 12:5348:5383  \"_operatorApprovals[owner][operator]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ 64), value1)), 0xff)\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(value)))\n                return(memPos, 32)\n            }\n            function external_fun_transferOwnership()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                let value0 := abi_decode_address_6028()\n                /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                fun_checkOwner()\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 0:2162:2184  \"newOwner != address(0)\" */ value0, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ _1)\n                if /** @src 0:2162:2184  \"newOwner != address(0)\" */ iszero(/** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 38)\n                    mstore(add(memPtr, 68), \"Ownable: new owner is the zero a\")\n                    mstore(add(memPtr, 100), \"ddress\")\n                    revert(memPtr, 132)\n                }\n                let _3 := sload(/** @src 0:2518:2524  \"_owner\" */ 0x00)\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                sstore(/** @src 0:2518:2524  \"_owner\" */ 0x00, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ or(and(_3, shl(160, 0xffffffffffffffffffffffff)), _2))\n                let _4 := mload(64)\n                /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                log3(/** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ _4, /** @src 0:2518:2524  \"_owner\" */ 0x00, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ and(_3, _1), /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ _2)\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                return(_4, /** @src 0:2518:2524  \"_owner\" */ 0x00)\n            }\n            /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n            function read_from_storage_split_offset_address(slot) -> value\n            {\n                value := and(sload(slot), sub(shl(160, 1), 1))\n            }\n            /// @ast-id 54 @src 0:1359:1489  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                let cleaned := and(sload(/** @src 0:1273:1279  \"_owner\" */ 0x00), /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ sub(shl(160, 1), 1))\n                if iszero(/** @src 0:1422:1445  \"owner() == _msgSender()\" */ eq(/** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ cleaned, /** @src 5:719:729  \"msg.sender\" */ caller()))\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 32)\n                    mstore(add(memPtr, 68), \"Ownable: caller is not the owner\")\n                    revert(memPtr, 100)\n                }\n            }\n            function update_storage_value_offsett_address_to_address(slot, value)\n            {\n                sstore(slot, or(and(sload(slot), shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_6030(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 12:5348:5366  \"_operatorApprovals\" */ 0x06)\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_6052(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 11:882:891  \"_balances\" */ 0x04)\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address(slot, key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            /// @ast-id 1934 @src 11:720:984  \"function balanceOf(address owner) public view override returns (uint256) {...\"\n            function fun_balanceOf(var_owner) -> var\n            {\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 11:807:826  \"owner != address(0)\" */ var_owner, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ _1)\n                if /** @src 11:807:826  \"owner != address(0)\" */ iszero(/** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 41)\n                    mstore(add(memPtr, 68), \"ERC721: address zero is not a va\")\n                    mstore(add(memPtr, 100), \"lid owner\")\n                    revert(memPtr, 132)\n                }\n                /// @src 11:882:926  \"_balances[owner] == 0 && _hasOwnToken(owner)\"\n                let expr := /** @src 11:882:903  \"_balances[owner] == 0\" */ iszero(/** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ sload(/** @src 11:882:898  \"_balances[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_6052(var_owner)))\n                /// @src 11:882:926  \"_balances[owner] == 0 && _hasOwnToken(owner)\"\n                if expr\n                {\n                    /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ _2)\n                    mstore(0x20, /** @src 11:2735:2742  \"_owners\" */ 0x03)\n                    /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                    let cleaned := and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ 0x40)), _1)\n                    /// @src 11:2770:2855  \"_isTokenActive(ownerTokenId) && (currentOwner == owner || currentOwner == address(0))\"\n                    let expr_1 := /** @src 11:2770:2798  \"_isTokenActive(ownerTokenId)\" */ fun_isTokenActive(_2)\n                    /// @src 11:2770:2855  \"_isTokenActive(ownerTokenId) && (currentOwner == owner || currentOwner == address(0))\"\n                    if expr_1\n                    {\n                        /// @src 11:2803:2854  \"currentOwner == owner || currentOwner == address(0)\"\n                        let expr_2 := /** @src 11:2803:2824  \"currentOwner == owner\" */ eq(cleaned, _2)\n                        /// @src 11:2803:2854  \"currentOwner == owner || currentOwner == address(0)\"\n                        if iszero(expr_2)\n                        {\n                            expr_2 := /** @src 11:2828:2854  \"currentOwner == address(0)\" */ iszero(cleaned)\n                        }\n                        /// @src 11:2770:2855  \"_isTokenActive(ownerTokenId) && (currentOwner == owner || currentOwner == address(0))\"\n                        expr_1 := expr_2\n                    }\n                    /// @src 11:882:926  \"_balances[owner] == 0 && _hasOwnToken(owner)\"\n                    expr := expr_1\n                }\n                /// @src 11:878:951  \"if (_balances[owner] == 0 && _hasOwnToken(owner)) {...\"\n                if expr\n                {\n                    /// @src 11:936:944  \"return 1\"\n                    var := /** @src 11:943:944  \"1\" */ 0x01\n                    /// @src 11:936:944  \"return 1\"\n                    leave\n                }\n                /// @src 11:956:979  \"return _balances[owner]\"\n                var := /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ sload(/** @src 11:963:979  \"_balances[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_6052(var_owner))\n            }\n            /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n            function require_helper_stringliteral_b08d(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 24)\n                    mstore(add(memPtr, 68), \"ERC721: invalid token ID\")\n                    revert(memPtr, 100)\n                }\n            }\n            function mapping_index_access_mapping_uint256_address_of_uint256(key) -> dataSlot\n            {\n                mstore(0, key)\n                mstore(0x20, /** @src 11:1812:1825  \"_activeTokens\" */ 0x07)\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_uint256_address_of_uint256_6061(key) -> dataSlot\n            {\n                mstore(0, key)\n                mstore(0x20, /** @src 11:2378:2385  \"_owners\" */ 0x03)\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            /// @ast-id 1977 @src 11:1039:1445  \"function ownerOf(uint256 tokenId) public view override returns (address) {...\"\n            function fun_ownerOf(var_tokenId) -> var\n            {\n                /// @src 11:1118:1178  \"require(_isTokenActive(tokenId), \\\"ERC721: invalid token ID\\\")\"\n                require_helper_stringliteral_b08d(/** @src 11:1126:1149  \"_isTokenActive(tokenId)\" */ fun_isTokenActive(var_tokenId))\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ var_tokenId)\n                mstore(0x20, /** @src 11:1328:1335  \"_owners\" */ 0x03)\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 11:1312:1344  \"address owner = _owners[tokenId]\"\n                let var_owner := /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ 0x40)), _1)\n                /// @src 11:1350:1423  \"if (owner == address(0)) {...\"\n                if /** @src 11:1354:1373  \"owner == address(0)\" */ iszero(/** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ var_owner)\n                /// @src 11:1350:1423  \"if (owner == address(0)) {...\"\n                {\n                    /// @src 11:1383:1416  \"owner = address(uint160(tokenId))\"\n                    var_owner := /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ and(/** @src 11:1399:1415  \"uint160(tokenId)\" */ var_tokenId, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ _1)\n                }\n                /// @src 11:1428:1440  \"return owner\"\n                var := var_owner\n            }\n            /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n            function update_storage_value_offsett_bool_to_bool_6032(slot)\n            {\n                sstore(slot, or(and(sload(slot), not(255)), /** @src 11:1837:1841  \"true\" */ 0x01))\n            }\n            /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n            function update_storage_value_offsett_bool_to_bool(slot, value)\n            {\n                let value_1 := and(sload(slot), not(255))\n                sstore(slot, or(value_1, and(iszero(iszero(value)), 255)))\n            }\n            function read_from_storage_split_offset_bool(slot) -> value\n            {\n                value := and(sload(slot), 0xff)\n            }\n            /// @ast-id 2179 @src 11:2865:3061  \"function _isTokenActive(uint256 tokenId) internal view returns (bool) {...\"\n            function fun_isTokenActive(var_tokenId) -> var_\n            {\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ var_tokenId)\n                mstore(0x20, /** @src 11:2996:3009  \"_activeTokens\" */ 0x07)\n                /// @src 11:2996:3055  \"_activeTokens[tokenId] && _owners[tokenId] != _NULL_ADDRESS\"\n                let expr := /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ 0x40)), 0xff)\n                /// @src 11:2996:3055  \"_activeTokens[tokenId] && _owners[tokenId] != _NULL_ADDRESS\"\n                if expr\n                {\n                    /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                    mstore(0x20, /** @src 11:3022:3029  \"_owners\" */ 0x03)\n                    /// @src 11:2996:3055  \"_activeTokens[tokenId] && _owners[tokenId] != _NULL_ADDRESS\"\n                    expr := /** @src 11:3022:3055  \"_owners[tokenId] != _NULL_ADDRESS\" */ iszero(eq(/** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ 0x40)), sub(shl(160, 1), 1)), /** @src 12:1554:1596  \"0x000000000000000000000000000000000000dEaD\" */ 0xdead))\n                }\n                /// @src 11:2988:3056  \"return (_activeTokens[tokenId] && _owners[tokenId] != _NULL_ADDRESS)\"\n                var_ := expr\n            }\n            /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n            function array_dataslot_string_storage_6026() -> data\n            {\n                mstore(0, /** @src 12:3403:3408  \"_name\" */ 0x01)\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                data := 80084422859880547211683076133703299733277748156566366325829078699459944778998\n            }\n            function array_dataslot_string_storage_6039() -> data\n            {\n                mstore(0, /** @src 12:3567:3574  \"_symbol\" */ 0x02)\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                data := 29102676481673041902632991033461445430619272659676223336789171408008386403022\n            }\n            function array_dataslot_string_storage() -> data\n            {\n                mstore(0, /** @src 11:3153:3166  \"_baseTokenURI\" */ 0x08)\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                data := 110349606679412691172957834289542550319383271247755660854362242977991410020067\n            }\n            function require_helper_stringliteral_8a33(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 62)\n                    mstore(add(memPtr, 68), \"ERC721: approve caller is not to\")\n                    mstore(add(memPtr, 100), \"ken owner nor approved for all\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 2502 @src 12:4775:4942  \"function getApproved(uint256 tokenId) public view virtual override returns (address) {...\"\n            function fun_getApproved(var_tokenId) -> var\n            {\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ var_tokenId)\n                mstore(0x20, /** @src 12:7962:7969  \"_owners\" */ 0x03)\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 12:12623:12676  \"require(_exists(tokenId), \\\"ERC721: invalid token ID\\\")\"\n                require_helper_stringliteral_b08d(/** @src 12:7962:7992  \"_owners[tokenId] != address(0)\" */ iszero(iszero(/** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ 0x40)), _1))))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ var_tokenId)\n                mstore(0x20, /** @src 12:4911:4926  \"_tokenApprovals\" */ 0x05)\n                /// @src 12:4904:4935  \"return _tokenApprovals[tokenId]\"\n                var := /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ 0x40)), _1)\n            }\n            function require_helper_stringliteral_eb80(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 46)\n                    mstore(add(memPtr, 68), \"ERC721: caller is not token owne\")\n                    mstore(add(memPtr, 100), \"r nor approved\")\n                    revert(memPtr, 132)\n                }\n            }\n            function require_helper_stringliteral_455f(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC721: transfer to the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n            }\n            function panic_error_0x11()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x11)\n                revert(0, 0x24)\n            }\n            function checked_sub_uint256(x) -> diff\n            {\n                if lt(x, /** @src 11:2437:2438  \"1\" */ 0x01)\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                { panic_error_0x11() }\n                diff := add(x, not(0))\n            }\n            function checked_add_uint256(x) -> sum\n            {\n                if gt(x, not(1)) { panic_error_0x11() }\n                sum := add(x, /** @src 11:2467:2468  \"1\" */ 0x01)\n            }\n            /// @ast-id 2119 @src 11:1928:2584  \"function _transfer(...\"\n            function fun_transfer(var_from, var_to, var_tokenId)\n            {\n                /// @src 11:2038:2054  \"ownerOf(tokenId)\"\n                let expr := fun_ownerOf(var_tokenId)\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 11:2038:2062  \"ownerOf(tokenId) == from\" */ var_from, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ _1)\n                if iszero(/** @src 11:2038:2062  \"ownerOf(tokenId) == from\" */ eq(/** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ and(/** @src 11:2038:2062  \"ownerOf(tokenId) == from\" */ expr, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ _1), _2))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC721: transfer from incorrect \")\n                    mstore(add(memPtr, 100), \"owner\")\n                    revert(memPtr, 132)\n                }\n                let _3 := and(/** @src 11:2118:2134  \"to != address(0)\" */ var_to, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ _1)\n                /// @src 11:2110:2175  \"require(to != address(0), \\\"ERC721: transfer to the zero address\\\")\"\n                require_helper_stringliteral_455f(/** @src 11:2118:2134  \"to != address(0)\" */ iszero(iszero(/** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ _3)))\n                /// @src 11:2296:2303  \"tokenId\"\n                fun_approve_6060(var_tokenId)\n                /// @src 11:2374:2445  \"if (_owners[tokenId] != address(0)) {...\"\n                if /** @src 11:2378:2408  \"_owners[tokenId] != address(0)\" */ iszero(iszero(cleanup_address(/** @src 11:2378:2394  \"_owners[tokenId]\" */ read_from_storage_split_offset_address(mapping_index_access_mapping_uint256_address_of_uint256_6061(var_tokenId)))))\n                /// @src 11:2374:2445  \"if (_owners[tokenId] != address(0)) {...\"\n                {\n                    /// @src 11:2418:2433  \"_balances[from]\"\n                    let _4 := mapping_index_access_mapping_address_uint256_of_address_6052(var_from)\n                    /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                    sstore(_4, /** @src 11:2418:2438  \"_balances[from] -= 1\" */ checked_sub_uint256(/** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ sload(/** @src 11:2418:2438  \"_balances[from] -= 1\" */ _4)))\n                }\n                /// @src 11:2450:2463  \"_balances[to]\"\n                let _5 := mapping_index_access_mapping_address_uint256_of_address_6052(var_to)\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                sstore(_5, /** @src 11:2450:2468  \"_balances[to] += 1\" */ checked_add_uint256(/** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ sload(/** @src 11:2450:2468  \"_balances[to] += 1\" */ _5)))\n                /// @src 11:2474:2495  \"_owners[tokenId] = to\"\n                update_storage_value_offsett_address_to_address(/** @src 11:2474:2490  \"_owners[tokenId]\" */ mapping_index_access_mapping_uint256_address_of_uint256_6061(var_tokenId), /** @src 11:2474:2495  \"_owners[tokenId] = to\" */ var_to)\n                /// @src 11:2507:2534  \"Transfer(from, to, tokenId)\"\n                log4(/** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ mload(64), /** @src 11:2132:2133  \"0\" */ 0x00, /** @src 11:2507:2534  \"Transfer(from, to, tokenId)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _3, var_tokenId)\n            }\n            /// @ast-id 2613 @src 12:6090:6405  \"function safeTransferFrom(...\"\n            function fun_safeTransferFrom(var_from, var_to, var_tokenId, var_data_2592_mpos)\n            {\n                /// @src 12:6250:6350  \"require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\")\"\n                require_helper_stringliteral_eb80(/** @src 12:6258:6299  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ fun_isApprovedOrOwner(/** @src 5:719:729  \"msg.sender\" */ caller(), /** @src 12:6258:6299  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ var_tokenId))\n                /// @src 12:7436:7443  \"tokenId\"\n                fun_transfer(var_from, var_to, var_tokenId)\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                if iszero(/** @src 12:7462:7509  \"_checkOnERC721Received(from, to, tokenId, data)\" */ fun_checkOnERC721Received(var_from, var_to, var_tokenId, var_data_2592_mpos))\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    revert(memPtr, sub(abi_encode_stringliteral_1e76(add(memPtr, 4)), memPtr))\n                }\n            }\n            function abi_encode_stringliteral_1e76(headStart) -> tail\n            {\n                mstore(headStart, 32)\n                mstore(add(headStart, 32), 50)\n                mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n                mstore(add(headStart, 96), \"ceiver implementer\")\n                tail := add(headStart, 128)\n            }\n            /// @ast-id 2693 @src 12:8157:8411  \"function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {...\"\n            function fun_isApprovedOrOwner(var_spender, var_tokenId) -> var\n            {\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 12:8316:8332  \"spender == owner\"\n                let _2 := /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ and(/** @src 12:8282:8298  \"ownerOf(tokenId)\" */ fun_ownerOf(var_tokenId), /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ _1)\n                /// @src 12:8316:8332  \"spender == owner\"\n                let _3 := /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ and(/** @src 12:8316:8332  \"spender == owner\" */ var_spender, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ _1)\n                /// @src 12:8316:8368  \"spender == owner || isApprovedForAll(owner, spender)\"\n                let expr := /** @src 12:8316:8332  \"spender == owner\" */ eq(_3, _2)\n                /// @src 12:8316:8368  \"spender == owner || isApprovedForAll(owner, spender)\"\n                if iszero(expr)\n                {\n                    /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ _2)\n                    mstore(0x20, /** @src 12:5348:5366  \"_operatorApprovals\" */ 0x06)\n                    /// @src 12:8316:8368  \"spender == owner || isApprovedForAll(owner, spender)\"\n                    expr := /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ and(sload(/** @src 12:5348:5383  \"_operatorApprovals[owner][operator]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ 0x40), /** @src 12:8336:8368  \"isApprovedForAll(owner, spender)\" */ var_spender)), /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ 0xff)\n                }\n                /// @src 12:8316:8403  \"spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender\"\n                let expr_1 := expr\n                if iszero(expr)\n                {\n                    expr_1 := /** @src 12:8372:8403  \"getApproved(tokenId) == spender\" */ eq(/** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ and(/** @src 12:8372:8392  \"getApproved(tokenId)\" */ fun_getApproved(var_tokenId), /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ _1), /** @src 12:8372:8403  \"getApproved(tokenId) == spender\" */ _3)\n                }\n                /// @src 12:8308:8404  \"return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender)\"\n                var := expr_1\n            }\n            /// @ast-id 2960 @src 12:11859:12023  \"function _approve(address to, uint256 tokenId) internal virtual {...\"\n            function fun_approve_6060(var_tokenId)\n            {\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                mstore(0, var_tokenId)\n                mstore(0x20, /** @src 12:11933:11948  \"_tokenApprovals\" */ 0x05)\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                let _1 := keccak256(0, 0x40)\n                sstore(_1, and(sload(_1), shl(160, 0xffffffffffffffffffffffff)))\n                /// @src 12:11977:12016  \"Approval(ownerOf(tokenId), to, tokenId)\"\n                log4(/** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ mload(0x40), 0, /** @src 12:11977:12016  \"Approval(ownerOf(tokenId), to, tokenId)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ and(/** @src 12:11986:12002  \"ownerOf(tokenId)\" */ fun_ownerOf(var_tokenId), /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ sub(shl(160, 1), 1)), 0, /** @src 12:11977:12016  \"Approval(ownerOf(tokenId), to, tokenId)\" */ var_tokenId)\n            }\n            /// @ast-id 2960 @src 12:11859:12023  \"function _approve(address to, uint256 tokenId) internal virtual {...\"\n            function fun_approve(var_to, var_tokenId)\n            {\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ var_tokenId)\n                mstore(0x20, /** @src 12:11933:11948  \"_tokenApprovals\" */ 0x05)\n                /// @src 12:11933:11962  \"_tokenApprovals[tokenId] = to\"\n                update_storage_value_offsett_address_to_address(/** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ 0x40), /** @src 12:11933:11962  \"_tokenApprovals[tokenId] = to\" */ var_to)\n                /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 12:11986:12002  \"ownerOf(tokenId)\" */ fun_ownerOf(var_tokenId), /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ _1)\n                /// @src 12:11977:12016  \"Approval(ownerOf(tokenId), to, tokenId)\"\n                log4(/** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ mload(0x40), /** @src -1:-1:-1 */ 0, /** @src 12:11977:12016  \"Approval(ownerOf(tokenId), to, tokenId)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, _2, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ and(/** @src 12:11977:12016  \"Approval(ownerOf(tokenId), to, tokenId)\" */ var_to, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ _1), /** @src 12:11977:12016  \"Approval(ownerOf(tokenId), to, tokenId)\" */ var_tokenId)\n            }\n            /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n            function abi_decode_bytes4_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                validator_revert_bytes4(value)\n                value0 := value\n            }\n            function abi_encode_address_address_uint256_bytes(headStart, value0, value1, value2, value3) -> tail\n            {\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n                mstore(add(headStart, 64), value2)\n                mstore(add(headStart, 96), 128)\n                tail := abi_encode_string_memory_ptr(value3, add(headStart, 128))\n            }\n            function extract_returndata() -> data\n            {\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _1 := returndatasize()\n                    let _2 := array_allocation_size_bytes(_1)\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, _2)\n                    mstore(memPtr, _1)\n                    data := memPtr\n                    returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ returndatasize())\n                }\n            }\n            /// @ast-id 3070 @src 12:13235:14069  \"function _checkOnERC721Received(...\"\n            function fun_checkOnERC721Received(var_from, var_to, var_tokenId, var_data_mpos) -> var\n            {\n                /// @src 12:13384:13388  \"bool\"\n                var := /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ 0\n                /// @src 12:13400:14063  \"if (to.code.length > 0) {...\"\n                switch /** @src 12:13404:13422  \"to.code.length > 0\" */ iszero(iszero(/** @src 12:13404:13418  \"to.code.length\" */ extcodesize(var_to)))\n                case /** @src 12:13400:14063  \"if (to.code.length > 0) {...\" */ 0 {\n                    /// @src 12:14041:14052  \"return true\"\n                    var := /** @src 12:14048:14052  \"true\" */ 0x01\n                    /// @src 12:14041:14052  \"return true\"\n                    leave\n                }\n                default /// @src 12:13400:14063  \"if (to.code.length > 0) {...\"\n                {\n                    /// @src 12:13442:13513  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    let _1 := /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ mload(64)\n                    let _2 := shl(225, 0x0a85bd01)\n                    /// @src 12:13442:13513  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    mstore(_1, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ _2)\n                    /// @src 12:13442:13513  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    let trySuccessCondition := call(gas(), /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ and(/** @src 12:13442:13461  \"IERC721Receiver(to)\" */ var_to, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ sub(shl(160, 1), 1)), 0, /** @src 12:13442:13513  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _1, sub(abi_encode_address_address_uint256_bytes(add(_1, 4), /** @src 5:719:729  \"msg.sender\" */ caller(), /** @src 12:13442:13513  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ var_from, var_tokenId, var_data_mpos), _1), _1, 32)\n                    let expr := /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ 0\n                    /// @src 12:13442:13513  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    if trySuccessCondition\n                    {\n                        let _3 := 32\n                        if gt(_3, returndatasize()) { _3 := returndatasize() }\n                        finalize_allocation(_1, _3)\n                        expr := abi_decode_bytes4_fromMemory(_1, add(_1, _3))\n                    }\n                    /// @src 12:13438:14011  \"try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {...\"\n                    switch iszero(trySuccessCondition)\n                    case 0 {\n                        /// @src 12:13556:13614  \"return retval == IERC721Receiver.onERC721Received.selector\"\n                        var := /** @src 12:13563:13614  \"retval == IERC721Receiver.onERC721Received.selector\" */ eq(/** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ and(/** @src 12:13563:13614  \"retval == IERC721Receiver.onERC721Received.selector\" */ expr, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ shl(224, 0xffffffff)), _2)\n                        /// @src 12:13556:13614  \"return retval == IERC721Receiver.onERC721Received.selector\"\n                        leave\n                    }\n                    default /// @src 12:13438:14011  \"try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {...\"\n                    {\n                        /// @src 12:13630:14011  \"catch (bytes memory reason) {...\"\n                        let var_reason_mpos := extract_returndata()\n                        /// @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\"\n                        let _4 := mload(/** @src 12:13680:13693  \"reason.length\" */ var_reason_mpos)\n                        /// @src 12:13676:13997  \"if (reason.length == 0) {...\"\n                        switch /** @src 12:13680:13698  \"reason.length == 0\" */ iszero(_4)\n                        case /** @src 12:13676:13997  \"if (reason.length == 0) {...\" */ 0 {\n                            /// @src 12:13884:13979  \"assembly {...\"\n                            revert(add(/** @src 12:13442:13513  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ 32, /** @src 12:13884:13979  \"assembly {...\" */ var_reason_mpos), _4)\n                        }\n                        default /// @src 12:13676:13997  \"if (reason.length == 0) {...\"\n                        {\n                            /// @src 12:13722:13782  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            let _5 := /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ mload(64)\n                            /// @src 12:13722:13782  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            mstore(_5, /** @src 11:344:3410  \"contract ERC721All is Ownable, ERC721 {...\" */ shl(229, 4594637))\n                            /// @src 12:13722:13782  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            revert(_5, sub(abi_encode_stringliteral_1e76(add(_5, /** @src 12:13442:13513  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ 4)), /** @src 12:13722:13782  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\" */ _5))\n                        }\n                    }\n                }\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212209750585fe09c889909bdc62bc64504765fc7e82eff0ab8a7efa06ac43d23998664736f6c634300080d0033\"\n    }\n}\n","hash":"010003494358816b438ef391832989438c5c24b71a28c2b8227117913e491780","factoryDependencies":{}}},"contracts/lib/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}. NOTE:  The only changes made here are:    - change scope of \\\"_owners\\\" from private to internal    - change scope of \\\"_balances\\\" from private to internal    - remove \\\"ERC721\\\" scope-resolution from \\\"ownerOf\\\" calls in order to override \\\"ownerOf\\\"    - modify the _burn function to burn to an alternate Null Address (prevents reassignment back to Pre-Mint Receiver)\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/lib/ERC721.sol\":{\"keccak256\":\"0x726960336df673d5fd509dde21ba3bed24645291d201f74762b945fe4d5aa016\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb5cefbd15159da2ee1fa6e6050be9dfa19cdfe72b7eb0d09d63f1bf252605\",\"dweb:/ipfs/QmaAziN1hCNgW54ofjDyME3FM7p96M4dXC7d3gBTLWVZkw\"]}},\"version\":1}","zk_version":"1.3.16"},"devdoc":{"details":"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}. NOTE:  The only changes made here are:    - change scope of \"_owners\" from private to internal    - change scope of \"_balances\" from private to internal    - remove \"ERC721\" scope-resolution from \"ownerOf\" calls in order to override \"ownerOf\"    - modify the _burn function to burn to an alternate Null Address (prevents reassignment back to Pre-Mint Receiver)","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"constructor":{"details":"Initializes the contract by setting a `name` and a `symbol` to the token collection."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":2254,"contract":"contracts/lib/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":2256,"contract":"contracts/lib/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":2260,"contract":"contracts/lib/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":2264,"contract":"contracts/lib/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":2268,"contract":"contracts/lib/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":2274,"contract":"contracts/lib/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ERC721.sol:ERC721\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[7]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tadd\t0, r0, stack[@returndatasize]\n\tadd\t128, r0, r3\n\tst.1\t64, r3\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r4, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_10[0], r2, r3\n\tjump.le\t@.BB0_73\n\tsub.s!\t@CPI0_11[0], r2, r3\n\tjump.le\t@.BB0_81\n\tsub.s!\t@CPI0_12[0], r2, r3\n\tjump.gt\t@.BB0_87\n\tsub.s!\t@CPI0_15[0], r2, r3\n\tjump.eq\t@.BB0_159\n\tsub.s!\t@CPI0_16[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t128, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r5\n\tsub.s!\t@CPI0_27[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_27[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t100, r1, r3\n\tld\tr3, r6\n\tsub.s!\t@CPI0_4[0], r6, r3\n\tjump.gt\t@.BB0_2\n\tadd\t35, r6, r3\n\tadd\t@CPI0_5[0], r0, r7\n\tsub!\tr3, r4, r8\n\tadd\tr0, r0, r8\n\tadd.ge\tr7, r0, r8\n\tand\t@CPI0_5[0], r3, r3\n\tsub!\tr3, r0, r9\n\tadd.ge\tr0, r0, r7\n\tsub.s!\t@CPI0_5[0], r3, r3\n\tadd\tr8, r0, r3\n\tadd.eq\tr7, r0, r3\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_2\n\tadd\t4, r6, r7\n\tptr.add\tr1, r7, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_4[0], r3, r8\n\tjump.gt\t@.BB0_4\n\tadd\t191, r3, r8\n\tsub.s\t32, r0, r9\n\tand\tr8, r9, r8\n\tsub.s!\t@CPI0_4[0], r8, r9\n\tjump.gt\t@.BB0_4\n\tst.1\t64, r8\n\tst.1\t128, r3\n\tadd\tr6, r3, r6\n\tadd\t36, r6, r6\n\tsub!\tr6, r4, r4\n\tjump.gt\t@.BB0_2\n\tadd\t32, r7, r4\n\tptr.add\tr1, r4, r4\n\tand\t31, r3, r6\n\tshr.s!\t5, r3, r7\n\tjump.eq\t@.BB0_191\n\tadd\tr0, r0, r8\n.BB0_179:\n\tshl.s\t5, r8, r9\n\tptr.add\tr4, r9, r10\n\tld\tr10, r10\n\tadd\t160, r9, r9\n\tst.1\tr9, r10\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB0_179\n.BB0_191:\n\tsub!\tr6, r0, r8\n\tjump.eq\t@.BB0_181\n\tshl.s\t5, r7, r7\n\tptr.add\tr4, r7, r4\n\tshl.s\t3, r6, r6\n\tadd\t160, r7, r7\n\tld.1\tr7, r8\n\tshl\tr8, r6, r8\n\tshr\tr8, r6, r8\n\tld\tr4, r4\n\tsub\t256, r6, r6\n\tshr\tr4, r6, r4\n\tshl\tr4, r6, r4\n\tor\tr4, r8, r4\n\tst.1\tr7, r4\n.BB0_181:\n\tadd\t160, r3, r3\n\tst.1\tr3, r0\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r3\n\tjump\t@.BB0_182\n.BB0_1:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_1[0], r4, r2\n\tsub.s!\t@CPI0_2[0], r2, r2\n\tjump.gt\t@.BB0_6\n.BB0_4:\n\tadd\t@CPI0_29[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB0_5:\n\tst.1\t4, r1\n\tadd\t@CPI0_30[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_6:\n\tadd\t159, r4, r2\n\tand\t@CPI0_3[0], r2, r2\n\tst.1\t64, r2\n\tand\t31, r4, r2\n\tshr.s!\t5, r4, r3\n\tjump.eq\t@.BB0_192\n\tadd\tr0, r0, r5\n.BB0_8:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_8\n.BB0_192:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tshl.s\t3, r2, r2\n\tadd\t128, r3, r3\n\tld.1\tr3, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB0_10:\n\tsub.s!\t64, r4, r1\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r5\n\tsub.s!\t@CPI0_4[0], r5, r1\n\tjump.gt\t@.BB0_2\n\tadd\t128, r4, r1\n\tadd\t159, r5, r2\n\tsub!\tr2, r1, r2\n\tjump.ge\t@.BB0_2\n\tadd\t128, r5, r3\n\tld.1\tr3, r2\n\tsub.s!\t@CPI0_4[0], r2, r6\n\tjump.gt\t@.BB0_4\n\tadd\t63, r2, r6\n\tsub.s\t32, r0, r9\n\tand\tr6, r9, r6\n\tld.1\t64, r10\n\tadd\tr10, r6, r6\n\tsub!\tr6, r10, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_4[0], r6, r8\n\tjump.gt\t@.BB0_4\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r6\n\tst.1.inc\tr10, r2, r11\n\tadd\tr5, r2, r5\n\tadd\t160, r5, r5\n\tsub!\tr5, r1, r5\n\tjump.gt\t@.BB0_2\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_22\n\tadd\tr0, r0, r5\n.BB0_19:\n\tadd\t32, r5, r5\n\tadd\tr5, r10, r6\n\tadd\tr5, r3, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB0_19\n\tsub!\tr5, r2, r3\n\tjump.le\t@.BB0_22\n\tadd\tr10, r2, r2\n\tadd\t32, r2, r2\n\tst.1\tr2, r0\n.BB0_22:\n\tld.1\t160, r5\n\tsub.s!\t@CPI0_4[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tadd\t31, r5, r2\n\tadd\t@CPI0_5[0], r0, r3\n\tsub!\tr2, r4, r4\n\tadd\tr0, r0, r4\n\tadd.ge\tr3, r0, r4\n\tand\t@CPI0_5[0], r2, r2\n\tsub!\tr2, r0, r6\n\tadd.ge\tr0, r0, r3\n\tsub.s!\t@CPI0_5[0], r2, r2\n\tadd\tr4, r0, r2\n\tadd.eq\tr3, r0, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t128, r5, r3\n\tld.1\tr3, r2\n\tsub.s!\t@CPI0_4[0], r2, r4\n\tjump.gt\t@.BB0_4\n\tadd\t63, r2, r4\n\tand\tr4, r9, r4\n\tld.1\t64, r8\n\tadd\tr8, r4, r4\n\tsub!\tr4, r8, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI0_4[0], r4, r7\n\tjump.gt\t@.BB0_4\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r4\n\tst.1.inc\tr8, r2, r4\n\tadd\tr4, r0, stack-[6]\n\tadd\tr5, r2, r4\n\tadd\t160, r4, r4\n\tsub!\tr4, r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tr11, r0, stack-[3]\n\tadd\tr10, r0, stack-[7]\n\tadd\tr9, r0, stack-[4]\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB0_33\n\tadd\tr0, r0, r1\n.BB0_30:\n\tadd\t32, r1, r1\n\tadd\tr1, r8, r4\n\tadd\tr1, r3, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr1, r2, r4\n\tjump.lt\t@.BB0_30\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB0_33\n\tadd\tr8, r2, r1\n\tadd\t32, r1, r1\n\tst.1\tr1, r0\n.BB0_33:\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_4\n\tadd\tr8, r0, stack-[1]\n\tsload\tr0, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand.eq\t127, r1, r1\n\tadd\tr1, r0, stack-[2]\n\tsub.s!\t31, r1, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_35\n\tadd\tstack-[2], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_41\n\tst.1\t0, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[5], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[2], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_41\n.BB0_40:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_40\n.BB0_41:\n\tadd\tstack-[5], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_68\n\tadd\tstack-[5], r0, r2\n\tand!\tstack-[4], r2, r3\n\tadd\t32, r0, r2\n\tadd\t@CPI0_7[0], r0, r1\n\tst.1\t0, r0\n\tjump.eq\t@.BB0_65\n\tadd\t@CPI0_7[0], r0, r1\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n\tadd\tstack-[7], r0, r6\n.BB0_63:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_63\n.BB0_65:\n\tsub.s!\tstack-[5], r3, r3\n\tjump.ge\t@.BB0_67\n\tadd\tstack-[5], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[7], r2, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_67:\n\tadd\tstack-[5], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n\tjump\t@.BB0_42\n.BB0_73:\n\tsub.s!\t@CPI0_20[0], r2, r3\n\tjump.gt\t@.BB0_77\n\tsub.s!\t@CPI0_24[0], r2, r3\n\tjump.eq\t@.BB0_89\n\tsub.s!\t@CPI0_25[0], r2, r3\n\tjump.eq\t@.BB0_97\n\tsub.s!\t@CPI0_26[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_getApproved, @DEFAULT_UNWIND\n\tjump\t@.BB0_110\n.BB0_81:\n\tsub.s!\t@CPI0_17[0], r2, r3\n\tjump.eq\t@.BB0_141\n\tsub.s!\t@CPI0_18[0], r2, r3\n\tjump.eq\t@.BB0_144\n\tsub.s!\t@CPI0_19[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r1\n\tand.eq\t127, r1, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_35\n\tst.1\t128, r1\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_156\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tst.1\t160, r1\n\tadd\t64, r0, r2\n\tjump\t@.BB0_154\n.BB0_77:\n\tsub.s!\t@CPI0_21[0], r2, r3\n\tjump.eq\t@.BB0_112\n\tsub.s!\t@CPI0_22[0], r2, r3\n\tjump.eq\t@.BB0_134\n\tsub.s!\t@CPI0_23[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t96, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r5\n\tsub.s!\t@CPI0_27[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_27[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r3\n\tadd\t160, r0, r1\n\tst.1\t64, r1\n\tst.1\t128, r0\n.BB0_182:\n\tadd\t128, r0, r4\n\tadd\tr5, r0, r1\n\tnear_call\tr0, @fun_safeTransferFrom, @DEFAULT_UNWIND\n\tjump\t@.BB0_133\n.BB0_87:\n\tsub.s!\t@CPI0_13[0], r2, r3\n\tjump.eq\t@.BB0_183\n\tsub.s!\t@CPI0_14[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_27[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI0_27[0], r3, r1\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r2\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tadd\tr3, r0, stack-[7]\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tjump\t@.BB0_111\n.BB0_159:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_27[0], r3, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r4\n\tsub!\tr4, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tsub!\tr4, r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.caller\tr2\n\tsub!\tr2, r3, r1\n\tjump.ne\t@.BB0_165\n\tadd\t@CPI0_33[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t25, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_34[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_35[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_89:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_50[0], r1, r2\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r2\n\tsub.s!\t@CPI0_51[0], r1, r3\n\tjump.eq\t@.BB0_95\n\tsub.s!\t@CPI0_52[0], r1, r3\n\tjump.eq\t@.BB0_95\n\tsub.s!\t@CPI0_53[0], r1, r1\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n.BB0_95:\n\tand\t1, r2, r1\n\tjump\t@.BB0_96\n.BB0_97:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r1\n\tand.eq\t127, r1, r1\n\tsub.s!\t31, r1, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\txor\tr2, r4, r4\n\tand!\t1, r4, r4\n\tjump.eq\t@.BB0_99\n.BB0_35:\n\tadd\t@CPI0_29[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tjump\t@.BB0_5\n.BB0_141:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_ownerOf, @DEFAULT_UNWIND\n.BB0_110:\n\tand\t@CPI0_27[0], r1, r1\n.BB0_111:\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_144:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_27[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_149\n\tadd\t@CPI0_33[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t41, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_37[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_38[0], r0, r1\n\tst.1\t228, r1\n\tadd\t@CPI0_39[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_112:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[7]\n\tsub.s!\t@CPI0_27[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_27[0], r1, r1\n\tjump.ne\t@.BB0_118\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_46[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_33[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n.BB0_130:\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_47[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_134:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tr4, r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[7]\n\tadd\tr2, r0, stack-[6]\n\tadd\tr3, r0, r2\n\tadd\tr2, r0, stack-[5]\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_isApprovedOrOwner, @DEFAULT_UNWIND\n\tnear_call\tr0, @require_helper_stringliteral_eb80, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r1\n\tadd\tstack-[6], r0, r2\n\tadd\tstack-[5], r0, r3\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n.BB0_133:\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_183:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_requireMinted, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[7]\n\tnear_call\tr0, @finalize_allocation_8170, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r1\n\tst.1\tr1, r0\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[6]\n\tnear_call\tr0, @finalize_allocation_8170, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r1\n\tst.1\tr1, r0\n\tadd\t32, r0, r2\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[7]\n\tst.1.inc\tr3, r2, r2\n\tnear_call\tr0, @abi_encode_string_to_string, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tjump\t@.BB0_102\n.BB0_99:\n\tst.1\t128, r1\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_104\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tst.1\t160, r1\n\tadd\t64, r0, r2\n\tjump\t@.BB0_101\n.BB0_156:\n\tst.1\t0, r3\n\tadd\t32, r0, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_154\n\tadd\t@CPI0_8[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_158:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_158\n\tadd\t64, r3, r2\n.BB0_154:\n\tjump\t@.BB0_101\n.BB0_149:\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n.BB0_96:\n\tst.1\t128, r1\n\tadd\t@CPI0_36[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_104:\n\tadd\t32, r0, r2\n\tst.1\t0, r0\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_101\n\tadd\t@CPI0_7[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_106:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_106\n\tadd\t64, r3, r2\n.BB0_101:\n\tadd\t128, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[6]\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r4\n.BB0_102:\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_165:\n\tadd\tr2, r0, stack-[5]\n\tst.1\t0, r2\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r5\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr5, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr3, r0, stack-[7]\n\tadd\tr4, r0, stack-[6]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tst.1\t0, r3\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r4\n\tadd\tstack-[7], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\tr2, r4, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r4\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_32[0], r0, r4\n\tadd\tstack-[5], r0, r5\n.BB0_132:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tjump\t@.BB0_133\n.BB0_118:\n\tsub!\tstack-[7], r1, r2\n\tjump.ne\t@.BB0_121\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_48[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_49[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t33, r0, r3\n.BB0_120:\n\tst.1\tr2, r3\n\tadd\t@CPI0_33[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_121:\n\tcontext.caller\tr3\n\tsub!\tr3, r1, r2\n\tjump.ne\t@.BB0_122\n.BB0_126:\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_43[0], r2, r2\n\tor\tstack-[7], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_27[0], r1, r5\n\tjump.ne\t@.BB0_131\n\tadd\t68, r2, r1\n\tadd\t@CPI0_46[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t36, r2, r1\n\tadd\t24, r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI0_33[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\t32, r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tjump\t@.BB0_130\n.BB0_122:\n\tadd\tr3, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tand\t@CPI0_27[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_126\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_40[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_41[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t62, r0, r3\n\tjump\t@.BB0_120\n.BB0_131:\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_44[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_45[0], r0, r4\n\tadd\tstack-[7], r0, r6\n\tadd\tstack-[6], r0, r7\n\tjump\t@.BB0_132\n.BB0_68:\n\tsub!\tstack-[5], r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_70\n\tadd\tstack-[3], r0, r1\n\tld.1\tr1, r1\n.BB0_70:\n\tadd\tstack-[5], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n.BB0_42:\n\tsstore\tr0, r1\n\tadd\tstack-[1], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_4\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand.eq\t127, r2, r2\n\tadd\tr2, r0, stack-[3]\n\tsub.s!\t31, r2, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_35\n\tadd\tstack-[3], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_49\n\tadd\t1, r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[7], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[3], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_49\n.BB0_48:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_48\n.BB0_49:\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_57\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r2\n\tand!\tstack-[4], r2, r3\n\tadd\t32, r0, r2\n\tadd\t@CPI0_8[0], r0, r1\n\tjump.eq\t@.BB0_54\n\tadd\t@CPI0_8[0], r0, r1\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n\tadd\tstack-[1], r0, r6\n.BB0_52:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_52\n.BB0_54:\n\tsub.s!\tstack-[7], r3, r3\n\tjump.ge\t@.BB0_56\n\tadd\tstack-[7], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[1], r2, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_56:\n\tadd\tstack-[7], r0, r1\n\tshl.s\t1, r1, r1\n\tadd\tstack-[5], r0, r2\n\tjump\t@.BB0_59\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_57:\n\tsub!\tstack-[7], r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_60\n\tadd\tstack-[7], r0, r3\n\tshl.s\t3, r3, r1\n\tsub.s\t1, r0, r2\n\tshr\tr2, r1, r1\n\txor\tr1, r2, r1\n\tadd\tstack-[6], r0, r2\n\tld.1\tr2, r2\n\tand\tr2, r1, r1\n\tshl.s\t1, r3, r2\n.BB0_59:\n\tor\tr1, r2, r1\n.BB0_60:\n\tadd\tstack-[5], r0, r2\n\tsstore\tr2, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_9[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\nabi_encode_string_to_string:\n.func_begin1:\n\tld.1\tr1, r3\n\tst.1.inc\tr2, r3, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB1_4\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\tr2, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_2\n\tsub!\tr4, r3, r1\n\tjump.le\t@.BB1_4\n\tadd\tr2, r3, r1\n\tst.1\tr1, r0\n\tjump\t@.BB1_6\n.BB1_4:\n.BB1_6:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\tr2, r1, r1\n\tret\n.func_end1:\n\nabi_encode_string:\n.func_begin2:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tadd\t64, r1, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB2_5\n\tadd\tr0, r0, r4\n.BB2_2:\n\tadd\tr4, r1, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB2_2\n\tsub!\tr4, r3, r2\n\tjump.le\t@.BB2_5\n\tadd\tr3, r1, r2\n\tst.1\tr2, r0\n.BB2_5:\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end2:\n\nabi_decode_addresst_addresst_uint256:\n.func_begin3:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI3_0[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI3_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI3_0[0], r1, r1\n\tadd\tr3, r0, r1\n\tadd.eq\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB3_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_1[0], r1, r2\n\tjump.gt\t@.BB3_1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI3_1[0], r2, r4\n\tjump.gt\t@.BB3_1\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tret\n.BB3_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nfinalize_allocation_8170:\n.func_begin4:\n\tsub.s!\t@CPI4_0[0], r1, r2\n\tjump.ge\t@.BB4_1\n\tadd\t32, r1, r1\n\tst.1\t64, r1\n\tret\n.BB4_1:\n\tadd\t@CPI4_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nfinalize_allocation:\n.func_begin5:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI5_0[0], r1, r3\n\tjump.gt\t@.BB5_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB5_2\n\tst.1\t64, r1\n\tret\n.BB5_2:\n\tadd\t@CPI5_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nmapping_index_access_mapping_address_uint256_of_address:\n.func_begin6:\n\tand\t@CPI6_0[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI6_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_1[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI6_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_1\n\tld\tr1, r1\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nfun_ownerOf:\n.func_begin7:\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI7_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI7_2[0], r1, r1\n\tjump.eq\t@.BB7_3\n\tret\n.BB7_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI7_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI7_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI7_0[0], r0, r2\n\tsub.s!\t@CPI7_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI7_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\nfun_getApproved:\n.func_begin8:\n\tnop\tstack+=[1]\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI8_2[0], r1, r1\n\tjump.eq\t@.BB8_3\n\tadd\tstack-[1], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI8_2[0], r1, r1\n\tret\n.BB8_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI8_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI8_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI8_0[0], r0, r2\n\tsub.s!\t@CPI8_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI8_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nrequire_helper_stringliteral_eb80:\n.func_begin9:\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB9_1\n\tret\n.BB9_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI9_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI9_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t46, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI9_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI9_3[0], r0, r2\n\tsub.s!\t@CPI9_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI9_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nfun_safeTransferFrom:\n.func_begin10:\n\tnop\tstack+=[10]\n\tadd\tr4, r0, stack-[1]\n\tadd\tr2, r0, stack-[4]\n\tadd\tr1, r0, stack-[6]\n\tadd\tr3, r0, stack-[8]\n\tst.1\t0, r3\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t32, r1\n\tadd\t@CPI10_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI10_2[0], r1, r1\n\tjump.eq\t@.BB10_3\n\tcontext.caller\tr2\n\tand\t@CPI10_2[0], r2, stack-[3]\n\tsub!\tstack-[3], r1, r2\n\tjump.eq\t@.BB10_14\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI10_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI10_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI10_0[0], r1, r2\n\tadd.ge\t@CPI10_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB10_14\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI10_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI10_2[0], r1, r1\n\tjump.eq\t@.BB10_3\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI10_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI10_2[0], r1, r1\n\tsub.s!\tstack-[3], r1, r1\n\tjump.ne\t@.BB10_12\n.BB10_14:\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI10_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI10_2[0], r1, r2\n\tjump.eq\t@.BB10_3\n\tadd\tstack-[6], r0, r1\n\tand\t@CPI10_2[0], r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB10_17\n\tadd\tr2, r0, stack-[6]\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI10_2[0], r1, stack-[5]\n\tjump.eq\t@.BB10_19\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI10_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI10_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI10_9[0], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI10_0[0], r1, r2\n\tadd.ge\t@CPI10_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld.1\t64, r2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI10_2[0], r1, r5\n\tjump.eq\t@.BB10_23\n\tadd\t@CPI10_0[0], r0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI10_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI10_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI10_10[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI10_11[0], r0, r4\n\tadd\tr0, r0, r6\n\tadd\tstack-[8], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB10_1\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI10_0[0], r1, r2\n\tadd.ge\t@CPI10_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB10_28\n\tsub.s\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI10_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.eq\t@.BB10_28\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI10_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI10_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI10_9[0], r2, r2\n\tadd\tstack-[5], r0, r6\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_0[0], r2, r3\n\tadd\t@CPI10_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI10_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI10_10[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI10_12[0], r0, r4\n\tadd\tstack-[6], r0, r5\n\tadd\tstack-[8], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB10_1\n\tcontext.sp\tr1\n\tadd\tr1, r0, stack-[7]\n\tadd\t@CPI10_13[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[4], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI10_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_14[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB10_36\n\tld.1\t64, r10\n\tadd\t100, r10, r1\n\tadd\t128, r0, r7\n\tst.1\tr1, r7\n\tadd\t68, r10, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r10, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI10_15[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t4, r10, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[1], r0, r6\n\tld.1\tr6, r1\n\tadd\t132, r10, r2\n\tst.1\tr2, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB10_42\n\tadd\t164, r10, r2\n\tadd\tr0, r0, r3\n.BB10_39:\n\tadd\tr3, r2, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB10_39\n\tsub!\tr3, r1, r3\n\tjump.le\t@.BB10_42\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n.BB10_42:\n\tcontext.gas_left\tr6\n\tadd\tstack-[5], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB10_44\n\tcontext.sp\tr5\n\tsub.s\t10, r5, r5\n\tmul\t32, r5, r5, r0\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tadd\t0, r0, stack-[10]\n\tjump\t@.BB10_49\n.BB10_36:\n\tcontext.sp\tr1\n\tsub\tstack-[7], r1, r1\n\tnop\tstack+=[r1]\n\tjump\t@.BB10_66\n.BB10_44:\n\tadd\tr7, r0, stack-[6]\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\t@CPI10_0[0], r0, r3\n\tsub.s!\t@CPI10_0[0], r10, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr10, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t164, r1, r1\n\tsub.s!\t@CPI10_0[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI10_0[0], r6, r4\n\tadd.lt\tr6, r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tadd\tr10, r0, stack-[8]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI10_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\t32, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB10_68\n\tadd\tr0, r0, r7\n.BB10_46:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB10_46\n.BB10_68:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB10_48\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB10_48:\n\tadd\tr3, r0, stack[@returndatasize]\n\tcontext.sp\tr5\n\tsub.s\t9, r5, r5\n\tmul\t32, r5, r5, r0\n\tadd\t0, r0, stack-[9]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_54\n.BB10_49:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI10_17[0], r1, r4\n\tjump.gt\t@.BB10_51\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB10_51\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB10_1\n\tld.1\tr10, r1\n\tand\t@CPI10_18[0], r1, r2\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB10_1\n\tshr.s\t5, r5, r2\n\tadd\tr1, r0, stack[r2]\n\tcontext.sp\tr2\n\tsub\tstack-[7], r2, r2\n\tnop\tstack+=[r2]\n\tsub.s!\t@CPI10_15[0], r1, r1\n\tjump.ne\t@.BB10_64\n.BB10_66:\n\tret\n.BB10_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI10_21[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI10_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI10_0[0], r0, r2\n\tsub.s!\t@CPI10_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tjump\t@.BB10_24\n.BB10_28:\n\tadd\t@CPI10_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tjump\t@.BB10_29\n.BB10_17:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI10_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI10_8[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tjump\t@.BB10_13\n.BB10_19:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI10_23[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI10_24[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n.BB10_13:\n\tst.1\tr2, r3\n\tadd\t@CPI10_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI10_0[0], r0, r2\n\tsub.s!\t@CPI10_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI10_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_23:\n\tadd\t68, r2, r1\n\tadd\t@CPI10_21[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t36, r2, r1\n\tadd\t24, r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI10_5[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\t32, r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI10_0[0], r0, r1\n\tsub.s!\t@CPI10_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n.BB10_24:\n\tshl.s\t64, r1, r1\n\tor\t@CPI10_22[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_54:\n\tadd\t96, r0, r2\n\tsub!\tr3, r0, r4\n\tjump.ne\t@.BB10_55\n.BB10_61:\n\tld.1\tr2, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB10_62\n.BB10_64:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[8]\n\tadd\t@CPI10_5[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_stringliteral_1e76, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI10_0[0], r0, r2\n\tsub.s!\t@CPI10_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n.BB10_63:\n\tsub.s!\t@CPI10_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_12:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI10_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI10_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t46, r0, r3\n\tjump\t@.BB10_13\n.BB10_55:\n\tadd\t63, r3, r2\n\tand\t@CPI10_16[0], r2, r4\n\tld.1\t64, r2\n\tadd\tr2, r4, r4\n\tsub!\tr4, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI10_17[0], r4, r6\n\tjump.gt\t@.BB10_51\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB10_51\n\tst.1\t64, r4\n\tand\t31, r3, r4\n\tst.1.inc\tr2, r3, r8\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB10_67\n\tadd\tr0, r0, r5\n.BB10_59:\n\tshl.s\t5, r5, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB10_59\n.BB10_67:\n\tadd\tr8, r0, stack-[6]\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB10_61\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tstack-[6], r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n\tjump\t@.BB10_61\n.BB10_51:\n\tadd\t@CPI10_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB10_29:\n\tst.1\t4, r1\n\tadd\t@CPI10_20[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_62:\n\tadd\t@CPI10_0[0], r0, r2\n\tsub.s!\t@CPI10_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[6], r0, r4\n\tjump\t@.BB10_63\n.func_end10:\n\nabi_encode_stringliteral_1e76:\n.func_begin11:\n\tadd\t96, r1, r2\n\tadd\t@CPI11_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t@CPI11_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t50, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end11:\n\nfun_isApprovedOrOwner:\n.func_begin12:\n\tnop\tstack+=[3]\n\tadd\tr1, r0, stack-[3]\n\tadd\tr2, r0, stack-[2]\n\tst.1\t0, r2\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tst.1\t32, r1\n\tadd\t@CPI12_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI12_2[0], r1, r2\n\tjump.eq\t@.BB12_3\n\tadd\t1, r0, r1\n\tadd\tstack-[3], r0, r3\n\tand\t@CPI12_2[0], r3, stack-[3]\n\tsub!\tstack-[3], r2, r3\n\tjump.eq\t@.BB12_12\n\tst.1\t0, r2\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI12_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI12_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI12_0[0], r1, r2\n\tadd.ge\t@CPI12_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB12_12\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[1], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI12_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI12_2[0], r1, r1\n\tjump.eq\t@.BB12_3\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI12_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI12_2[0], r1, r1\n\tsub.s!\tstack-[3], r1, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n.BB12_12:\n\tret\n.BB12_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI12_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_0[0], r0, r2\n\tsub.s!\t@CPI12_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\nfun_transfer:\n.func_begin13:\n\tnop\tstack+=[5]\n\tadd\tr2, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tadd\tr3, r0, stack-[5]\n\tst.1\t0, r3\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t32, r1\n\tadd\t@CPI13_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI13_2[0], r1, r2\n\tjump.eq\t@.BB13_3\n\tadd\tstack-[3], r0, r1\n\tand\t@CPI13_2[0], r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB13_5\n\tadd\tr2, r0, stack-[3]\n\tadd\tstack-[2], r0, r1\n\tand!\t@CPI13_2[0], r1, stack-[2]\n\tjump.eq\t@.BB13_8\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI13_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI13_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI13_7[0], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[4], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI13_0[0], r1, r2\n\tadd.ge\t@CPI13_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n\tld.1\t64, r2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI13_2[0], r1, r5\n\tjump.eq\t@.BB13_12\n\tadd\t@CPI13_0[0], r0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI13_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI13_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI13_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI13_9[0], r0, r4\n\tadd\tr0, r0, r6\n\tadd\tstack-[5], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB13_1\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI13_0[0], r1, r2\n\tadd.ge\t@CPI13_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB13_17\n\tsub.s\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[1], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI13_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.eq\t@.BB13_17\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[4], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI13_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI13_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI13_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI13_7[0], r2, r2\n\tadd\tstack-[2], r0, r6\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_0[0], r2, r3\n\tadd\t@CPI13_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI13_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI13_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI13_10[0], r0, r4\n\tadd\tstack-[3], r0, r5\n\tadd\tstack-[5], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB13_1\n\tret\n.BB13_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_17:\n\tadd\t@CPI13_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI13_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI13_13[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_0[0], r0, r2\n\tsub.s!\t@CPI13_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tjump\t@.BB13_13\n.BB13_5:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tjump\t@.BB13_6\n.BB13_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI13_15[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI13_16[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n.BB13_6:\n\tst.1\tr2, r3\n\tadd\t@CPI13_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI13_0[0], r0, r2\n\tsub.s!\t@CPI13_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB13_12:\n\tadd\t68, r2, r1\n\tadd\t@CPI13_13[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t36, r2, r1\n\tadd\t24, r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI13_5[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\t32, r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI13_0[0], r0, r1\n\tsub.s!\t@CPI13_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n.BB13_13:\n\tshl.s\t64, r1, r1\n\tor\t@CPI13_14[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\nfun_requireMinted:\n.func_begin14:\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI14_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI14_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI14_2[0], r1, r1\n\tjump.eq\t@.BB14_3\n\tret\n.BB14_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB14_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI14_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI14_0[0], r0, r2\n\tsub.s!\t@CPI14_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI14_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end14:\n\n__sha3:\n.func_begin15:\n\tadd\t@CPI15_0[0], r0, r3\n\tsub.s!\t@CPI15_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI15_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI15_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_2\n\tld\tr1, r1\n\tret\n.BB15_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end15:\n\n__farcall:\n.func_begin16:\n.tmp0:\n\tfar_call\tr1, r2, @.BB16_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB16_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end16:\n\n__staticcall:\n.func_begin17:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB17_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB17_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end17:\n\n\t.data\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI6_1:\nCPI7_0:\nCPI8_0:\nCPI9_3:\nCPI10_0:\nCPI12_0:\nCPI13_0:\nCPI14_0:\nCPI15_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -18446744073709551457\nCPI0_2:\n\t.cell -18446744073709551489\nCPI0_3:\nCPI10_16:\n\t.cell 8589934560\nCPI0_4:\nCPI5_0:\nCPI10_17:\n\t.cell 18446744073709551615\nCPI0_5:\nCPI3_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_6:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_7:\n\t.cell 18569430475105882587588266137607568536673111973893317399460219858819262702947\nCPI0_8:\n\t.cell -35707666377435648211887908874984608119992236509074197713628505308453184860938\nCPI0_9:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_10:\n\t.cell 1666326813\nCPI0_11:\n\t.cell 2720838756\nCPI0_12:\n\t.cell 3363526364\nCPI0_13:\n\t.cell 3363526365\nCPI0_14:\n\t.cell 3917867461\nCPI0_15:\n\t.cell 2720838757\nCPI0_16:\n\t.cell 3096268766\nCPI0_17:\n\t.cell 1666326814\nCPI0_18:\n\t.cell 1889567281\nCPI0_19:\n\t.cell 2514000705\nCPI0_20:\n\t.cell 157198258\nCPI0_21:\n\t.cell 157198259\nCPI0_22:\n\t.cell 599290589\nCPI0_23:\n\t.cell 1115958798\nCPI0_24:\n\t.cell 33540519\nCPI0_25:\n\t.cell 117300739\nCPI0_26:\n\t.cell 135795452\nCPI0_27:\nCPI3_1:\nCPI6_0:\nCPI7_2:\nCPI8_2:\nCPI10_2:\nCPI12_2:\nCPI13_2:\nCPI14_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_28:\n\t.cell 2535301200456458802993406410752\nCPI0_29:\nCPI4_1:\nCPI5_1:\nCPI10_19:\nCPI13_11:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_30:\nCPI4_2:\nCPI5_2:\nCPI10_20:\nCPI13_12:\n\t.cell 2852213850513516153367582212096\nCPI0_31:\nCPI6_2:\nCPI7_1:\nCPI8_1:\nCPI10_1:\nCPI12_1:\nCPI13_1:\nCPI14_1:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_32:\n\t.cell 10488878412788366941768124514102328501031624832915735463117339209566108871729\nCPI0_33:\nCPI7_4:\nCPI8_4:\nCPI9_2:\nCPI10_5:\nCPI12_4:\nCPI13_5:\nCPI14_4:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_34:\n\t.cell 31354931916645375393762213565866891172307618523953520621822726397682830540800\nCPI0_35:\n\t.cell 7922816253787617000789217640448\nCPI0_36:\n\t.cell 2535301202817642044428229017600\nCPI0_37:\n\t.cell 31354931916645375393761059704421056284766179208589378268252292504104988604001\nCPI0_38:\n\t.cell 49035997637886268239882041675796387503892600671578232905754119059317383495680\nCPI0_39:\n\t.cell 10458117454244075803782624051200\nCPI0_40:\n\t.cell 48576686418507356219831364983007919279578195479598191958095172491531881545728\nCPI0_41:\n\t.cell 31354931916645375393762213565866891172284950498046585739320112041512459596911\nCPI0_42:\nCPI9_4:\nCPI10_6:\nCPI13_6:\n\t.cell 10458117451882892562347801444352\nCPI0_43:\nCPI10_9:\nCPI13_7:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_44:\nCPI10_10:\nCPI13_8:\nCPI15_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_45:\nCPI10_11:\nCPI13_9:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI0_46:\nCPI7_3:\nCPI8_3:\nCPI10_21:\nCPI12_3:\nCPI13_13:\nCPI14_3:\n\t.cell 31354931916645375393958183653158686846599388074356949121886454872141515980800\nCPI0_47:\nCPI7_5:\nCPI8_5:\nCPI10_22:\nCPI12_5:\nCPI13_14:\nCPI14_5:\n\t.cell 7922816251426433759354395033600\nCPI0_48:\n\t.cell 51563664738492368274558954261681333965909290046418063673820955378523815542784\nCPI0_49:\n\t.cell 31354931916645375393762213565866890849608307089744918678309194418033790512741\nCPI0_50:\nCPI10_18:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_51:\n\t.cell -57591534043048631271602713168962198724648561309353517944097662808962438791168\nCPI0_52:\n\t.cell 41326688264978518566617017154793646184809722027297161851759941631668658372608\nCPI0_53:\n\t.cell 904250603428552709895185118199468575982109441609966099573332780532423983104\nCPI4_0:\n\t.cell 18446744073709551584\nCPI9_0:\nCPI10_3:\n\t.cell 51620966041236425454300223973180400554375694480679556984629941846732647170048\nCPI9_1:\nCPI10_4:\n\t.cell 31354931916645375393809815203201166297542482068262457279726729202739757674085\nCPI10_7:\nCPI13_3:\n\t.cell 50417742920509558439106150551775209266858149941038353264781520106005609840640\nCPI10_8:\nCPI13_4:\n\t.cell 31354931916645375394228278154242914900316605976059021079503402663591234728992\nCPI10_12:\nCPI13_10:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI10_13:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI10_14:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI10_15:\n\t.cell 9518847204935358166548570266051330015907116135037852959641967396525866745856\nCPI10_23:\nCPI13_15:\n\t.cell 51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI10_24:\nCPI13_16:\n\t.cell 31354931916645375394228278154242914900316678601111040334909412358260906878052\nCPI11_0:\n\t.cell 44958151438609599421424650306347963631972141104775375727422033337783813144576\nCPI11_1:\n\t.cell 31354931916645375394228278154242914900316678601109191929828695483653754540645\n","bytecode":{"object":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":"/// @use-src 1:\"@openzeppelin/contracts/token/ERC721/IERC721.sol\", 3:\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\", 5:\"@openzeppelin/contracts/utils/Context.sol\", 7:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 8:\"@openzeppelin/contracts/utils/introspection/IERC165.sol\", 12:\"contracts/lib/ERC721.sol\"\nobject \"ERC721_3093\" {\n    code {\n        {\n            /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"ERC721_3093\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let offset := mload(memoryDataOffset)\n            let _2 := sub(shl(64, 1), 1)\n            if gt(offset, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let value0 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n            let _3 := 32\n            let offset_1 := mload(add(memoryDataOffset, _3))\n            if gt(offset_1, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let _4 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1)\n            let newLen := mload(value0)\n            if gt(newLen, _2) { panic_error_0x41() }\n            /// @src 12:2303:2316  \"_name = name_\"\n            let _5 := 0x00\n            /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            clean_up_bytearray_end_slots_string_storage(extract_byte_array_length(sload(/** @src 12:2303:2316  \"_name = name_\" */ _5)), /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ newLen)\n            let srcOffset := /** @src 12:2303:2316  \"_name = name_\" */ _5\n            /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            srcOffset := _3\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage_998()\n                let i := /** @src 12:2303:2316  \"_name = name_\" */ _5\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                for { } lt(i, loopEnd) { i := add(i, _3) }\n                {\n                    sstore(dstPtr, mload(add(value0, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, _3)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(value0, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src 12:2303:2316  \"_name = name_\" */ _5, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := /** @src 12:2303:2316  \"_name = name_\" */ _5\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                if newLen\n                {\n                    value := mload(add(value0, srcOffset))\n                }\n                sstore(/** @src 12:2303:2316  \"_name = name_\" */ _5, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n            copy_byte_array_to_storage_from_string_to_string(_4)\n            let _6 := mload(64)\n            let _7 := datasize(\"ERC721_3093_deployed\")\n            codecopy(_6, dataoffset(\"ERC721_3093_deployed\"), _7)\n            return(_6, _7)\n        }\n        function panic_error_0x41()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_string_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n            let _1 := mload(offset)\n            if gt(_1, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            let _2 := 0x20\n            let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n            mstore(array_1, _1)\n            if gt(add(add(offset, _1), _2), end)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            for { } lt(i, _1) { i := add(i, _2) }\n            {\n                mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n            }\n            if gt(i, _1)\n            {\n                mstore(add(add(array_1, _1), _2), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            array := array_1\n        }\n        function extract_byte_array_length(data) -> length\n        {\n            length := shr(1, data)\n            let outOfPlaceEncoding := and(data, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(0, 0x24)\n            }\n        }\n        function array_dataslot_string_storage_998() -> data\n        {\n            mstore(/** @src 12:2303:2316  \"_name = name_\" */ 0x00, 0x00)\n            /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            data := keccak256(/** @src 12:2303:2316  \"_name = name_\" */ 0x00, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x20)\n        }\n        function array_dataslot_string_storage() -> data\n        {\n            mstore(0, /** @src 12:2326:2343  \"_symbol = symbol_\" */ 0x01)\n            /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            data := keccak256(0, 0x20)\n        }\n        function clean_up_bytearray_end_slots_string_storage(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src 12:2303:2316  \"_name = name_\"\n                let _1 := 0x00\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(/** @src 12:2303:2316  \"_name = name_\" */ _1, _1)\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let data := keccak256(/** @src 12:2303:2316  \"_name = name_\" */ _1, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src 12:2303:2316  \"_name = name_\" */ _1)\n                }\n            }\n        }\n        /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n        function clean_up_bytearray_end_slots_string_storage_1902(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src 12:2326:2343  \"_symbol = symbol_\"\n                let _1 := 0x01\n                /// @src -1:-1:-1\n                let _2 := 0\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ _2, /** @src 12:2326:2343  \"_symbol = symbol_\" */ _1)\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _2, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _3 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { }\n                lt(start, _3)\n                {\n                    start := add(start, /** @src 12:2326:2343  \"_symbol = symbol_\" */ _1)\n                }\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _2)\n                }\n            }\n        }\n        /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n        function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n        {\n            used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n        }\n        function copy_byte_array_to_storage_from_string_to_string(src)\n        {\n            let newLen := mload(src)\n            if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            /// @src 12:2326:2343  \"_symbol = symbol_\"\n            let _1 := 0x01\n            /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            clean_up_bytearray_end_slots_string_storage_1902(extract_byte_array_length(sload(/** @src 12:2326:2343  \"_symbol = symbol_\" */ _1)), /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ newLen)\n            let srcOffset := 0\n            let srcOffset_1 := 0x20\n            srcOffset := srcOffset_1\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage()\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n                {\n                    sstore(dstPtr, mload(add(src, srcOffset)))\n                    dstPtr := add(dstPtr, /** @src 12:2326:2343  \"_symbol = symbol_\" */ _1)\n                    /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                    srcOffset := add(srcOffset, srcOffset_1)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(src, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src 12:2326:2343  \"_symbol = symbol_\" */ _1, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ add(shl(/** @src 12:2326:2343  \"_symbol = symbol_\" */ _1, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ newLen), /** @src 12:2326:2343  \"_symbol = symbol_\" */ _1))\n            }\n            default /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(src, srcOffset))\n                }\n                sstore(/** @src 12:2326:2343  \"_symbol = symbol_\" */ _1, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n        }\n    }\n    /// @use-src 5:\"@openzeppelin/contracts/utils/Context.sol\", 6:\"@openzeppelin/contracts/utils/Strings.sol\", 7:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 9:\"@openzeppelin/contracts/utils/math/Math.sol\", 12:\"contracts/lib/ERC721.sol\"\n    object \"ERC721_3093_deployed\" {\n        code {\n            {\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(64, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x01ffc9a7 {\n                        external_fun_supportsInterface()\n                    }\n                    case 0x06fdde03 { external_fun_name() }\n                    case 0x081812fc { external_fun_getApproved() }\n                    case 0x095ea7b3 { external_fun_approve() }\n                    case 0x23b872dd { external_fun_transferFrom() }\n                    case 0x42842e0e {\n                        external_fun_safeTransferFrom()\n                    }\n                    case 0x6352211e { external_fun_ownerOf() }\n                    case 0x70a08231 { external_fun_balanceOf() }\n                    case 0x95d89b41 { external_fun_symbol() }\n                    case 0xa22cb465 {\n                        external_fun_setApprovalForAll()\n                    }\n                    case 0xb88d4fde {\n                        external_fun_safeTransferFrom_2613()\n                    }\n                    case 0xc87b56dd { external_fun_tokenURI() }\n                    case 0xe985e9c5 {\n                        external_fun_isApprovedForAll()\n                    }\n                }\n                revert(0, 0)\n            }\n            function validator_revert_bytes4(value)\n            {\n                if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n            }\n            function abi_encode_bool(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, iszero(iszero(value0)))\n            }\n            function external_fun_supportsInterface()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let value := calldataload(4)\n                validator_revert_bytes4(value)\n                /// @src 12:2554:2594  \"interfaceId == type(IERC721).interfaceId\"\n                let _1 := /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 12:2554:2594  \"interfaceId == type(IERC721).interfaceId\" */ value, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(224, 0xffffffff))\n                /// @src 12:2554:2658  \"interfaceId == type(IERC721).interfaceId ||...\"\n                let expr := /** @src 12:2554:2594  \"interfaceId == type(IERC721).interfaceId\" */ eq(_1, /** @src 12:2569:2594  \"type(IERC721).interfaceId\" */ shl(224, 0x80ac58cd))\n                /// @src 12:2554:2658  \"interfaceId == type(IERC721).interfaceId ||...\"\n                if iszero(expr)\n                {\n                    expr := /** @src 12:2610:2658  \"interfaceId == type(IERC721Metadata).interfaceId\" */ eq(_1, /** @src 12:2625:2658  \"type(IERC721Metadata).interfaceId\" */ shl(224, 0x5b5e139f))\n                }\n                /// @src 12:2554:2710  \"interfaceId == type(IERC721).interfaceId ||...\"\n                let expr_1 := expr\n                if iszero(expr)\n                {\n                    expr_1 := /** @src 7:937:977  \"interfaceId == type(IERC165).interfaceId\" */ eq(_1, /** @src 7:952:977  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                }\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(expr_1)))\n                return(memPos, 32)\n            }\n            function array_storeLengthForEncoding_string(pos, length) -> updated_pos\n            {\n                mstore(pos, length)\n                updated_pos := add(pos, 0x20)\n            }\n            function abi_encode_string_to_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                if gt(i, length)\n                {\n                    mstore(add(add(pos, length), 0x20), 0)\n                }\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                mstore(headStart, 32)\n                tail := abi_encode_string_to_string(value0, add(headStart, 32))\n            }\n            function external_fun_name()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := 0\n                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                let memPtr := mload(64)\n                let ret := _1\n                let slotValue := sload(_1)\n                let length := _1\n                let _2 := 1\n                length := shr(_2, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _2)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _3 := 32\n                if eq(outOfPlaceEncoding, lt(length, _3))\n                {\n                    mstore(_1, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(_1, 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _3)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage_5444()\n                    let i := _1\n                    for { } lt(i, length) { i := add(i, _3) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _2)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_string(memPos, memPtr), memPos))\n            }\n            function external_fun_getApproved()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let ret := fun_getApproved(calldataload(4))\n                let memPos := mload(64)\n                mstore(memPos, and(ret, sub(shl(160, 1), 1)))\n                return(memPos, 32)\n            }\n            function abi_decode_address_5446() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function external_fun_approve()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let value0 := abi_decode_address_5446()\n                let value1 := calldataload(36)\n                /// @src 12:4410:4426  \"ownerOf(tokenId)\"\n                let expr := fun_ownerOf(value1)\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 12:4444:4455  \"to != owner\"\n                let _2 := /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 12:4444:4455  \"to != owner\" */ expr, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                if /** @src 12:4444:4455  \"to != owner\" */ eq(/** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 12:4444:4455  \"to != owner\" */ value0, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1), /** @src 12:4444:4455  \"to != owner\" */ _2)\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 33)\n                    mstore(add(memPtr, 68), \"ERC721: approval to current owne\")\n                    mstore(add(memPtr, 100), \"r\")\n                    revert(memPtr, 132)\n                }\n                /// @src 12:4525:4587  \"_msgSender() == owner || isApprovedForAll(owner, _msgSender())\"\n                let expr_1 := /** @src 12:4525:4546  \"_msgSender() == owner\" */ eq(/** @src 5:719:729  \"msg.sender\" */ caller(), /** @src 12:4525:4546  \"_msgSender() == owner\" */ _2)\n                /// @src 12:4525:4587  \"_msgSender() == owner || isApprovedForAll(owner, _msgSender())\"\n                if iszero(expr_1)\n                {\n                    expr_1 := /** @src 12:5348:5383  \"_operatorApprovals[owner][operator]\" */ read_from_storage_split_offset_bool(mapping_index_access_mapping_address_uint256_of_address(/** @src 12:5348:5373  \"_operatorApprovals[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_5448(/** @src 12:4550:4587  \"isApprovedForAll(owner, _msgSender())\" */ expr), /** @src 5:719:729  \"msg.sender\" */ caller()))\n                }\n                /// @src 12:4504:4675  \"require(...\"\n                require_helper_stringliteral_8a33(expr_1)\n                /// @src 12:4699:4706  \"tokenId\"\n                fun_approve(value0, value1)\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                return(mload(64), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                value1 := value_1\n                value2 := calldataload(68)\n            }\n            function external_fun_transferFrom()\n            {\n                if callvalue() { revert(0, 0) }\n                let param, param_1, param_2 := abi_decode_addresst_addresst_uint256(calldatasize())\n                /// @src 12:5633:5733  \"require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\")\"\n                require_helper_stringliteral_eb80(/** @src 12:5641:5682  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ fun_isApprovedOrOwner(/** @src 5:719:729  \"msg.sender\" */ caller(), /** @src 12:5641:5682  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ param_2))\n                /// @src 12:5764:5771  \"tokenId\"\n                fun_transfer(param, param_1, param_2)\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                return(mload(64), 0)\n            }\n            function external_fun_safeTransferFrom()\n            {\n                if callvalue() { revert(0, 0) }\n                let param, param_1, param_2 := abi_decode_addresst_addresst_uint256(calldatasize())\n                let memPtr := mload(64)\n                let newFreePtr := add(memPtr, 0x20)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n                mstore(memPtr, 0)\n                /// @src 12:5978:6017  \"safeTransferFrom(from, to, tokenId, \\\"\\\")\"\n                fun_safeTransferFrom(param, param_1, param_2, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ memPtr)\n                return(mload(64), 0)\n            }\n            function external_fun_ownerOf()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let ret := fun_ownerOf(calldataload(4))\n                let memPos := mload(64)\n                mstore(memPos, and(ret, sub(shl(160, 1), 1)))\n                return(memPos, 32)\n            }\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, value0)\n            }\n            function external_fun_balanceOf()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _1 := and(abi_decode_address_5446(), sub(shl(160, 1), 1))\n                if /** @src 12:2875:2894  \"owner != address(0)\" */ iszero(/** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 41)\n                    mstore(add(memPtr, 68), \"ERC721: address zero is not a va\")\n                    mstore(add(memPtr, 100), \"lid owner\")\n                    revert(memPtr, 132)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                mstore(32, /** @src 12:2957:2966  \"_balances\" */ 0x03)\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _2 := sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40))\n                let memPos := mload(0x40)\n                return(memPos, sub(abi_encode_uint256(memPos, _2), memPos))\n            }\n            function external_fun_symbol()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := 0\n                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                let memPtr := mload(64)\n                let ret := _1\n                /// @src 12:3567:3574  \"_symbol\"\n                let _2 := 0x01\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let slotValue := sload(/** @src 12:3567:3574  \"_symbol\" */ _2)\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let length := _1\n                length := shr(/** @src 12:3567:3574  \"_symbol\" */ _2, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ slotValue)\n                let outOfPlaceEncoding := and(slotValue, /** @src 12:3567:3574  \"_symbol\" */ _2)\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _3 := 32\n                if eq(outOfPlaceEncoding, lt(length, _3))\n                {\n                    mstore(_1, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(_1, 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _3)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage()\n                    let i := _1\n                    for { } lt(i, length) { i := add(i, _3) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, /** @src 12:3567:3574  \"_symbol\" */ _2)\n                    }\n                    /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_string(memPos, memPtr), memPos))\n            }\n            function external_fun_setApprovalForAll()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let value0 := abi_decode_address_5446()\n                let value := calldataload(36)\n                if iszero(eq(value, iszero(iszero(value))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _1 := and(/** @src 12:12300:12317  \"owner != operator\" */ value0, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ sub(shl(160, 1), 1))\n                if /** @src 12:12300:12317  \"owner != operator\" */ eq(/** @src 5:719:729  \"msg.sender\" */ caller(), /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 25)\n                    mstore(add(memPtr, 68), \"ERC721: approve to caller\")\n                    revert(memPtr, 100)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 5:719:729  \"msg.sender\" */ caller())\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(32, /** @src 12:12357:12375  \"_operatorApprovals\" */ 0x05)\n                /// @src 12:12357:12403  \"_operatorApprovals[owner][operator] = approved\"\n                update_storage_value_offsett_bool_to_bool(/** @src 12:12357:12392  \"_operatorApprovals[owner][operator]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 64), /** @src 12:12357:12392  \"_operatorApprovals[owner][operator]\" */ value0), /** @src 12:12357:12403  \"_operatorApprovals[owner][operator] = approved\" */ value)\n                /// @src 12:12418:12459  \"ApprovalForAll(owner, operator, approved)\"\n                let _2 := /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ mload(64)\n                /// @src 12:12418:12459  \"ApprovalForAll(owner, operator, approved)\"\n                log3(_2, sub(abi_encode_bool(_2, value), _2), 0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, /** @src 5:719:729  \"msg.sender\" */ caller(), /** @src 12:12418:12459  \"ApprovalForAll(owner, operator, approved)\" */ _1)\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                return(mload(64), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation_8170(memPtr)\n            {\n                let newFreePtr := add(memPtr, 32)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function external_fun_safeTransferFrom_2613()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 128)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let value0 := abi_decode_address_5446()\n                let value1 := abi_decode_address()\n                let offset := calldataload(100)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                if iszero(slt(add(offset, 35), calldatasize()))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _1 := calldataload(add(4, offset))\n                let _2 := array_allocation_size_bytes(_1)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _2)\n                mstore(memPtr, _1)\n                if gt(add(add(offset, _1), 36), calldatasize())\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                calldatacopy(add(memPtr, 32), add(offset, 36), _1)\n                mstore(add(add(memPtr, _1), 32), /** @src -1:-1:-1 */ 0)\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                fun_safeTransferFrom(value0, value1, calldataload(68), memPtr)\n                return(mload(64), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            function external_fun_tokenURI()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:3760:3767  \"tokenId\"\n                fun_requireMinted(/** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ calldataload(4))\n                let memPtr := mload(64)\n                finalize_allocation_8170(memPtr)\n                mstore(memPtr, /** @src -1:-1:-1 */ 0)\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let memPtr_1 := mload(64)\n                finalize_allocation_8170(memPtr_1)\n                mstore(memPtr_1, /** @src -1:-1:-1 */ 0)\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let memPos := mload(64)\n                mstore(memPos, 32)\n                return(memPos, sub(abi_encode_string_to_string(memPtr_1, add(memPos, 32)), memPos))\n            }\n            function external_fun_isApprovedForAll()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let value0 := abi_decode_address_5446()\n                let value1 := abi_decode_address()\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(value0, sub(shl(160, 1), 1)))\n                mstore(32, /** @src 12:5348:5366  \"_operatorApprovals\" */ 0x05)\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let value := and(sload(/** @src 12:5348:5383  \"_operatorApprovals[owner][operator]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 64), value1)), 0xff)\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(value)))\n                return(memPos, 32)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_5448(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 12:5348:5366  \"_operatorApprovals\" */ 0x05)\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_5497(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 12:11569:11578  \"_balances\" */ 0x03)\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address(slot, key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_uint256_address_of_uint256(key) -> dataSlot\n            {\n                mstore(0, key)\n                mstore(0x20, /** @src 12:11627:11634  \"_owners\" */ 0x02)\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function require_helper_stringliteral_b08d(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 24)\n                    mstore(add(memPtr, 68), \"ERC721: invalid token ID\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 2374 @src 12:3037:3255  \"function ownerOf(uint256 tokenId) public view virtual override returns (address) {...\"\n            function fun_ownerOf(var_tokenId) -> var\n            {\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ var_tokenId)\n                mstore(0x20, /** @src 12:3144:3151  \"_owners\" */ 0x02)\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let cleaned := and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40)), sub(shl(160, 1), 1))\n                /// @src 12:3170:3226  \"require(owner != address(0), \\\"ERC721: invalid token ID\\\")\"\n                require_helper_stringliteral_b08d(/** @src 12:3178:3197  \"owner != address(0)\" */ iszero(iszero(/** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ cleaned)))\n                /// @src 12:3236:3248  \"return owner\"\n                var := cleaned\n            }\n            /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            function array_dataslot_string_storage_5444() -> data\n            {\n                mstore(0, 0)\n                data := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n            }\n            function array_dataslot_string_storage() -> data\n            {\n                mstore(0, /** @src 12:3567:3574  \"_symbol\" */ 0x01)\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                data := 80084422859880547211683076133703299733277748156566366325829078699459944778998\n            }\n            function require_helper_stringliteral_8a33(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 62)\n                    mstore(add(memPtr, 68), \"ERC721: approve caller is not to\")\n                    mstore(add(memPtr, 100), \"ken owner nor approved for all\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 2502 @src 12:4775:4942  \"function getApproved(uint256 tokenId) public view virtual override returns (address) {...\"\n            function fun_getApproved(var_tokenId) -> var\n            {\n                /// @src 12:4885:4892  \"tokenId\"\n                fun_requireMinted(var_tokenId)\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ var_tokenId)\n                mstore(0x20, /** @src 12:4911:4926  \"_tokenApprovals\" */ 0x04)\n                /// @src 12:4904:4935  \"return _tokenApprovals[tokenId]\"\n                var := /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40)), sub(shl(160, 1), 1))\n            }\n            function read_from_storage_split_offset_bool(slot) -> value\n            {\n                value := and(sload(slot), 0xff)\n            }\n            function require_helper_stringliteral_eb80(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 46)\n                    mstore(add(memPtr, 68), \"ERC721: caller is not token owne\")\n                    mstore(add(memPtr, 100), \"r nor approved\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 2613 @src 12:6090:6405  \"function safeTransferFrom(...\"\n            function fun_safeTransferFrom(var_from, var_to, var_tokenId, var_data_2592_mpos)\n            {\n                /// @src 12:6250:6350  \"require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\")\"\n                require_helper_stringliteral_eb80(/** @src 12:6258:6299  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ fun_isApprovedOrOwner(/** @src 5:719:729  \"msg.sender\" */ caller(), /** @src 12:6258:6299  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ var_tokenId))\n                /// @src 12:7436:7443  \"tokenId\"\n                fun_transfer(var_from, var_to, var_tokenId)\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                if iszero(/** @src 12:7462:7509  \"_checkOnERC721Received(from, to, tokenId, data)\" */ fun_checkOnERC721Received(var_from, var_to, var_tokenId, var_data_2592_mpos))\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    revert(memPtr, sub(abi_encode_stringliteral_1e76(add(memPtr, 4)), memPtr))\n                }\n            }\n            function abi_encode_stringliteral_1e76(headStart) -> tail\n            {\n                mstore(headStart, 32)\n                mstore(add(headStart, 32), 50)\n                mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n                mstore(add(headStart, 96), \"ceiver implementer\")\n                tail := add(headStart, 128)\n            }\n            /// @ast-id 2693 @src 12:8157:8411  \"function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {...\"\n            function fun_isApprovedOrOwner(var_spender, var_tokenId) -> var\n            {\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 12:8316:8332  \"spender == owner\"\n                let _2 := /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 12:8282:8298  \"ownerOf(tokenId)\" */ fun_ownerOf(var_tokenId), /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                /// @src 12:8316:8332  \"spender == owner\"\n                let _3 := /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 12:8316:8332  \"spender == owner\" */ var_spender, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                /// @src 12:8316:8368  \"spender == owner || isApprovedForAll(owner, spender)\"\n                let expr := /** @src 12:8316:8332  \"spender == owner\" */ eq(_3, _2)\n                /// @src 12:8316:8368  \"spender == owner || isApprovedForAll(owner, spender)\"\n                if iszero(expr)\n                {\n                    /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _2)\n                    mstore(0x20, /** @src 12:5348:5366  \"_operatorApprovals\" */ 0x05)\n                    /// @src 12:8316:8368  \"spender == owner || isApprovedForAll(owner, spender)\"\n                    expr := /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(sload(/** @src 12:5348:5383  \"_operatorApprovals[owner][operator]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40), /** @src 12:8336:8368  \"isApprovedForAll(owner, spender)\" */ var_spender)), /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0xff)\n                }\n                /// @src 12:8316:8403  \"spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender\"\n                let expr_1 := expr\n                if iszero(expr)\n                {\n                    expr_1 := /** @src 12:8372:8403  \"getApproved(tokenId) == spender\" */ eq(/** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 12:8372:8392  \"getApproved(tokenId)\" */ fun_getApproved(var_tokenId), /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1), /** @src 12:8372:8403  \"getApproved(tokenId) == spender\" */ _3)\n                }\n                /// @src 12:8308:8404  \"return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender)\"\n                var := expr_1\n            }\n            /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            function require_helper_stringliteral_455f(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC721: transfer to the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n            }\n            function panic_error_0x11()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x11)\n                revert(0, 0x24)\n            }\n            function checked_sub_uint256(x) -> diff\n            {\n                if lt(x, /** @src 12:11588:11589  \"1\" */ 0x01)\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                { panic_error_0x11() }\n                diff := add(x, not(0))\n            }\n            function checked_add_uint256(x) -> sum\n            {\n                if gt(x, not(1)) { panic_error_0x11() }\n                sum := add(x, /** @src 12:11588:11589  \"1\" */ 0x01)\n            }\n            /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            function update_storage_value_offsett_address_to_address(slot, value)\n            {\n                sstore(slot, or(and(sload(slot), shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n            }\n            /// @ast-id 2937 @src 12:11149:11747  \"function _transfer(...\"\n            function fun_transfer(var_from, var_to, var_tokenId)\n            {\n                /// @src 12:11276:11292  \"ownerOf(tokenId)\"\n                let expr := fun_ownerOf(var_tokenId)\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 12:11276:11300  \"ownerOf(tokenId) == from\" */ var_from, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                if iszero(/** @src 12:11276:11300  \"ownerOf(tokenId) == from\" */ eq(/** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 12:11276:11300  \"ownerOf(tokenId) == from\" */ expr, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1), _2))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC721: transfer from incorrect \")\n                    mstore(add(memPtr, 100), \"owner\")\n                    revert(memPtr, 132)\n                }\n                let _3 := and(/** @src 12:11360:11376  \"to != address(0)\" */ var_to, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                /// @src 12:11352:11417  \"require(to != address(0), \\\"ERC721: transfer to the zero address\\\")\"\n                require_helper_stringliteral_455f(/** @src 12:11360:11376  \"to != address(0)\" */ iszero(iszero(/** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _3)))\n                /// @src 12:11550:11557  \"tokenId\"\n                fun_approve_5496(var_tokenId)\n                /// @src 12:11569:11584  \"_balances[from]\"\n                let _4 := mapping_index_access_mapping_address_uint256_of_address_5497(var_from)\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                sstore(_4, /** @src 12:11569:11589  \"_balances[from] -= 1\" */ checked_sub_uint256(/** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ sload(/** @src 12:11569:11589  \"_balances[from] -= 1\" */ _4)))\n                /// @src 12:11599:11612  \"_balances[to]\"\n                let _5 := mapping_index_access_mapping_address_uint256_of_address_5497(var_to)\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                sstore(_5, /** @src 12:11599:11617  \"_balances[to] += 1\" */ checked_add_uint256(/** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ sload(/** @src 12:11599:11617  \"_balances[to] += 1\" */ _5)))\n                /// @src 12:11627:11648  \"_owners[tokenId] = to\"\n                update_storage_value_offsett_address_to_address(/** @src 12:11627:11643  \"_owners[tokenId]\" */ mapping_index_access_mapping_uint256_address_of_uint256(var_tokenId), /** @src 12:11627:11648  \"_owners[tokenId] = to\" */ var_to)\n                /// @src 12:11664:11691  \"Transfer(from, to, tokenId)\"\n                log4(/** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ mload(64), /** @src 12:11374:11375  \"0\" */ 0x00, /** @src 12:11664:11691  \"Transfer(from, to, tokenId)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _3, var_tokenId)\n            }\n            /// @ast-id 2960 @src 12:11859:12023  \"function _approve(address to, uint256 tokenId) internal virtual {...\"\n            function fun_approve_5496(var_tokenId)\n            {\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(0, var_tokenId)\n                mstore(0x20, /** @src 12:11933:11948  \"_tokenApprovals\" */ 0x04)\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _1 := keccak256(0, 0x40)\n                sstore(_1, and(sload(_1), shl(160, 0xffffffffffffffffffffffff)))\n                /// @src 12:11977:12016  \"Approval(ownerOf(tokenId), to, tokenId)\"\n                log4(/** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ mload(0x40), 0, /** @src 12:11977:12016  \"Approval(ownerOf(tokenId), to, tokenId)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 12:11986:12002  \"ownerOf(tokenId)\" */ fun_ownerOf(var_tokenId), /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ sub(shl(160, 1), 1)), 0, /** @src 12:11977:12016  \"Approval(ownerOf(tokenId), to, tokenId)\" */ var_tokenId)\n            }\n            /// @ast-id 2960 @src 12:11859:12023  \"function _approve(address to, uint256 tokenId) internal virtual {...\"\n            function fun_approve(var_to, var_tokenId)\n            {\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ var_tokenId)\n                mstore(0x20, /** @src 12:11933:11948  \"_tokenApprovals\" */ 0x04)\n                /// @src 12:11933:11962  \"_tokenApprovals[tokenId] = to\"\n                update_storage_value_offsett_address_to_address(/** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40), /** @src 12:11933:11962  \"_tokenApprovals[tokenId] = to\" */ var_to)\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 12:11986:12002  \"ownerOf(tokenId)\" */ fun_ownerOf(var_tokenId), /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                /// @src 12:11977:12016  \"Approval(ownerOf(tokenId), to, tokenId)\"\n                log4(/** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ mload(0x40), /** @src -1:-1:-1 */ 0, /** @src 12:11977:12016  \"Approval(ownerOf(tokenId), to, tokenId)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, _2, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 12:11977:12016  \"Approval(ownerOf(tokenId), to, tokenId)\" */ var_to, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1), /** @src 12:11977:12016  \"Approval(ownerOf(tokenId), to, tokenId)\" */ var_tokenId)\n            }\n            /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            function update_storage_value_offsett_bool_to_bool(slot, value)\n            {\n                let value_1 := and(sload(slot), not(255))\n                sstore(slot, or(value_1, and(iszero(iszero(value)), 255)))\n            }\n            /// @ast-id 3006 @src 12:12550:12683  \"function _requireMinted(uint256 tokenId) internal view virtual {...\"\n            function fun_requireMinted(var_tokenId)\n            {\n                /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ var_tokenId)\n                mstore(0x20, /** @src 12:7962:7969  \"_owners\" */ 0x02)\n                /// @src 12:12623:12676  \"require(_exists(tokenId), \\\"ERC721: invalid token ID\\\")\"\n                require_helper_stringliteral_b08d(/** @src 12:7962:7992  \"_owners[tokenId] != address(0)\" */ iszero(iszero(/** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40)), sub(shl(160, 1), 1)))))\n            }\n            function abi_decode_bytes4_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                validator_revert_bytes4(value)\n                value0 := value\n            }\n            function abi_encode_address_address_uint256_bytes(headStart, value0, value1, value2, value3) -> tail\n            {\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n                mstore(add(headStart, 64), value2)\n                mstore(add(headStart, 96), 128)\n                tail := abi_encode_string_to_string(value3, add(headStart, 128))\n            }\n            function extract_returndata() -> data\n            {\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _1 := returndatasize()\n                    let _2 := array_allocation_size_bytes(_1)\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, _2)\n                    mstore(memPtr, _1)\n                    data := memPtr\n                    returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ returndatasize())\n                }\n            }\n            /// @ast-id 3070 @src 12:13235:14069  \"function _checkOnERC721Received(...\"\n            function fun_checkOnERC721Received(var_from, var_to, var_tokenId, var_data_mpos) -> var\n            {\n                /// @src 12:13384:13388  \"bool\"\n                var := /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0\n                /// @src 12:13400:14063  \"if (to.code.length > 0) {...\"\n                switch /** @src 12:13404:13422  \"to.code.length > 0\" */ iszero(iszero(/** @src 12:13404:13418  \"to.code.length\" */ extcodesize(var_to)))\n                case /** @src 12:13400:14063  \"if (to.code.length > 0) {...\" */ 0 {\n                    /// @src 12:14041:14052  \"return true\"\n                    var := /** @src 12:14048:14052  \"true\" */ 0x01\n                    /// @src 12:14041:14052  \"return true\"\n                    leave\n                }\n                default /// @src 12:13400:14063  \"if (to.code.length > 0) {...\"\n                {\n                    /// @src 12:13442:13513  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    let _1 := /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ mload(64)\n                    let _2 := shl(225, 0x0a85bd01)\n                    /// @src 12:13442:13513  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    mstore(_1, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _2)\n                    /// @src 12:13442:13513  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    let trySuccessCondition := call(gas(), /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 12:13442:13461  \"IERC721Receiver(to)\" */ var_to, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ sub(shl(160, 1), 1)), 0, /** @src 12:13442:13513  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _1, sub(abi_encode_address_address_uint256_bytes(add(_1, 4), /** @src 5:719:729  \"msg.sender\" */ caller(), /** @src 12:13442:13513  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ var_from, var_tokenId, var_data_mpos), _1), _1, 32)\n                    let expr := /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0\n                    /// @src 12:13442:13513  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    if trySuccessCondition\n                    {\n                        let _3 := 32\n                        if gt(_3, returndatasize()) { _3 := returndatasize() }\n                        finalize_allocation(_1, _3)\n                        expr := abi_decode_bytes4_fromMemory(_1, add(_1, _3))\n                    }\n                    /// @src 12:13438:14011  \"try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {...\"\n                    switch iszero(trySuccessCondition)\n                    case 0 {\n                        /// @src 12:13556:13614  \"return retval == IERC721Receiver.onERC721Received.selector\"\n                        var := /** @src 12:13563:13614  \"retval == IERC721Receiver.onERC721Received.selector\" */ eq(/** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 12:13563:13614  \"retval == IERC721Receiver.onERC721Received.selector\" */ expr, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(224, 0xffffffff)), _2)\n                        /// @src 12:13556:13614  \"return retval == IERC721Receiver.onERC721Received.selector\"\n                        leave\n                    }\n                    default /// @src 12:13438:14011  \"try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {...\"\n                    {\n                        /// @src 12:13630:14011  \"catch (bytes memory reason) {...\"\n                        let var_reason_mpos := extract_returndata()\n                        /// @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        let _4 := mload(/** @src 12:13680:13693  \"reason.length\" */ var_reason_mpos)\n                        /// @src 12:13676:13997  \"if (reason.length == 0) {...\"\n                        switch /** @src 12:13680:13698  \"reason.length == 0\" */ iszero(_4)\n                        case /** @src 12:13676:13997  \"if (reason.length == 0) {...\" */ 0 {\n                            /// @src 12:13884:13979  \"assembly {...\"\n                            revert(add(/** @src 12:13442:13513  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ 32, /** @src 12:13884:13979  \"assembly {...\" */ var_reason_mpos), _4)\n                        }\n                        default /// @src 12:13676:13997  \"if (reason.length == 0) {...\"\n                        {\n                            /// @src 12:13722:13782  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            let _5 := /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ mload(64)\n                            /// @src 12:13722:13782  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            mstore(_5, /** @src 12:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(229, 4594637))\n                            /// @src 12:13722:13782  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            revert(_5, sub(abi_encode_stringliteral_1e76(add(_5, /** @src 12:13442:13513  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ 4)), /** @src 12:13722:13782  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\" */ _5))\n                        }\n                    }\n                }\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122028eb259d88088f63e7141f33e6c52ed345be3dcd7a108b65898ef099157ed9c564736f6c634300080d0033\"\n    }\n}\n","hash":"0100027f31376672f3a69bfdf54a3bb6613b7d8bc524f0356ad805bc2bbc15f9","factoryDependencies":{}}}}}}