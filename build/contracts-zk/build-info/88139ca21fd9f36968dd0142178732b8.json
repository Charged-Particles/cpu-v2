{"id":"88139ca21fd9f36968dd0142178732b8","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n     * that `ownerOf(tokenId)` is `a`.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\n        _balances[account] += amount;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/interfaces/IAccount.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.13;\n\ninterface IAccount {\n    function owner() external view returns (address);\n\n    function token()\n        external\n        view\n        returns (address tokenContract, uint256 tokenId);\n\n    function executeCall(\n        address to,\n        uint256 value,\n        bytes calldata data\n    ) external payable returns (bytes memory);\n}\n"},"contracts/interfaces/IChargedParticles.sol":{"content":"// SPDX-License-Identifier: MIT\n\n// IChargedParticles.sol -- Part of the Charged Particles Protocol\n// Copyright (c) 2021 Firma Lux, Inc. <https://charged.fi>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\npragma solidity >=0.6.0;\n\n/**\n * @notice Interface for Charged Particles\n */\ninterface IChargedParticles {\n\n  /***********************************|\n  |             Public API            |\n  |__________________________________*/\n\n  function getStateAddress() external view returns (address stateAddress);\n  function getSettingsAddress() external view returns (address settingsAddress);\n  function getManagersAddress() external view returns (address managersAddress);\n\n  function getFeesForDeposit(uint256 assetAmount) external view returns (uint256 protocolFee);\n  function baseParticleMass(address contractAddress, uint256 tokenId, string calldata walletManagerId, address assetToken) external returns (uint256);\n  function currentParticleCharge(address contractAddress, uint256 tokenId, string calldata walletManagerId, address assetToken) external returns (uint256);\n  function currentParticleKinetics(address contractAddress, uint256 tokenId, string calldata walletManagerId, address assetToken) external returns (uint256);\n  function currentParticleCovalentBonds(address contractAddress, uint256 tokenId, string calldata basketManagerId) external view returns (uint256);\n\n  /***********************************|\n  |        Particle Mechanics         |\n  |__________________________________*/\n\n  function energizeParticle(\n      address contractAddress,\n      uint256 tokenId,\n      string calldata walletManagerId,\n      address assetToken,\n      uint256 assetAmount,\n      address referrer\n  ) external returns (uint256 yieldTokensAmount);\n\n  function dischargeParticle(\n      address receiver,\n      address contractAddress,\n      uint256 tokenId,\n      string calldata walletManagerId,\n      address assetToken\n  ) external returns (uint256 creatorAmount, uint256 receiverAmount);\n\n  function dischargeParticleAmount(\n      address receiver,\n      address contractAddress,\n      uint256 tokenId,\n      string calldata walletManagerId,\n      address assetToken,\n      uint256 assetAmount\n  ) external returns (uint256 creatorAmount, uint256 receiverAmount);\n\n  function dischargeParticleForCreator(\n      address receiver,\n      address contractAddress,\n      uint256 tokenId,\n      string calldata walletManagerId,\n      address assetToken,\n      uint256 assetAmount\n  ) external returns (uint256 receiverAmount);\n\n  function releaseParticle(\n      address receiver,\n      address contractAddress,\n      uint256 tokenId,\n      string calldata walletManagerId,\n      address assetToken\n  ) external returns (uint256 creatorAmount, uint256 receiverAmount);\n\n  function releaseParticleAmount(\n    address receiver,\n    address contractAddress,\n    uint256 tokenId,\n    string calldata walletManagerId,\n    address assetToken,\n    uint256 assetAmount\n  ) external returns (uint256 creatorAmount, uint256 receiverAmount);\n\n  function covalentBond(\n    address contractAddress,\n    uint256 tokenId,\n    string calldata basketManagerId,\n    address nftTokenAddress,\n    uint256 nftTokenId,\n    uint256 nftTokenAmount\n  ) external returns (bool success);\n\n  function breakCovalentBond(\n    address receiver,\n    address contractAddress,\n    uint256 tokenId,\n    string calldata basketManagerId,\n    address nftTokenAddress,\n    uint256 nftTokenId,\n    uint256 nftTokenAmount\n  ) external returns (bool success);\n}\n"},"contracts/interfaces/IERC6551Account.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.13;\n\ninterface IERC6551AccountProxy {\n    function implementation() external view returns (address);\n}\n\n/// @dev the ERC-165 identifier for this interface is `0xeff4d378`\ninterface IERC6551Account {\n    event TransactionExecuted(address indexed target, uint256 indexed value, bytes data);\n\n    receive() external payable;\n\n    function executeCall(\n        address to,\n        uint256 value,\n        bytes calldata data\n    ) external payable returns (bytes memory);\n\n    function token()\n        external\n        view\n        returns (uint256 chainId, address tokenContract, uint256 tokenId);\n\n    function owner() external view returns (address);\n}\n"},"contracts/interfaces/IRegistry.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.13;\n\ninterface IRegistry {\n    function createAccount(\n        address implementation,\n        uint256 chainId,\n        address tokenContract,\n        uint256 tokenId,\n        uint256 salt,\n        bytes calldata initData\n    ) external returns (address);\n\n    function account(\n        address implementation,\n        uint256 chainId,\n        address tokenContract,\n        uint256 tokenId,\n        uint256 salt\n    ) external view returns (address);\n}\n"},"contracts/lib/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// Modifed from: OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\n// Modified by: Rob Secord (https://twitter.com/robsecord)\n// Co-founder @ Charged Particles - Visit: https://charged.fi\n// Co-founder @ Taggr             - Visit: https://taggr.io\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\nimport \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n *\n * NOTE:\n *  The only changes made here are:\n *    - change scope of \"_owners\" from private to internal\n *    - change scope of \"_balances\" from private to internal\n *    - remove \"ERC721\" scope-resolution from \"ownerOf\" calls in order to override \"ownerOf\"\n *    - modify the _burn function to burn to an alternate Null Address (prevents reassignment back to Pre-Mint Receiver)\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    address constant internal _NULL_ADDRESS = 0x000000000000000000000000000000000000dEaD;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) internal _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) internal _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner nor approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        // Prevent re-assigning the token back to the Pre-Mint Receiver\n        _owners[tokenId] = _NULL_ADDRESS;\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n"},"contracts/lib/ERC721iEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// Modified from: OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/ERC721Enumerable.sol)\n// Modified by: Rob Secord (https://twitter.com/robsecord)\n// Co-founder @ Charged Particles - Visit: https://charged.fi\n// Co-founder @ Taggr             - Visit: https://taggr.io\n\npragma solidity ^0.8.0;\n\nimport \"./ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\";\n\n/**\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds\n * enumerability of all the token ids in the contract as well as all token ids owned by each\n * account.\n *\n * @dev This implementation also includes support for pre-minting a max-supply of tokens up-front.\n *\n * Note on pre-mint:\n *  Assumes a Max-Supply which is entirely pre-minted to initial address with sequential Token IDs.\n *  For this reason, the \"allTokens\" state vars are unneccesary and have been removed.\n *  Also defines 2 light-weight state vars: \"_preMintReceiver\" & \"_maxSupply\"\n *  Overrides \"ownerOf\" & \"_exists\"\n */\nabstract contract ERC721iEnumerable is ERC721, IERC721Enumerable {\n  // Mapping from owner to list of owned token IDs\n  mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\n\n  // Mapping from token ID to index of the owner tokens list\n  mapping(uint256 => uint256) private _ownedTokensIndex;\n\n  // Tracking for the Pre-Mint Receiver\n  address internal _preMintReceiver;\n\n  // Max-Supply for Pre-Mint\n  uint256 internal _maxSupply;\n\n  /**\n    * @dev See {IERC165-supportsInterface}.\n    *\n    * Note on Pre-Mint: this implementation maintains the exact same interface for IERC721Enumerable\n    */\n  function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\n    return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\n  }\n\n  /**\n    * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n    * note: Fix contributed by surfer77\n    */\n  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {\n    require(index < ERC721.balanceOf(owner), \"ERC721Enumerable: owner index out of bounds\");\n    if (owner == address(_preMintReceiver)) {\n      uint256 supply = totalSupply();\n      uint256 matched = 0;\n      for (uint256 i = 1; i < supply; i++) {\n        if (ownerOf(i) == address(_preMintReceiver)) {\n          matched += 1;\n          if (matched - 1 == index) {\n            return i;\n          }\n        }\n      }\n    }\n    return _ownedTokens[owner][index];\n  }\n\n  /**\n    * @dev See {IERC721Enumerable-totalSupply}.\n    */\n  function totalSupply() public view virtual override returns (uint256) {\n    // The Total Supply is simply the Max Supply\n    return _maxSupply;\n  }\n\n  /**\n    * @dev See {IERC721Enumerable-tokenByIndex}.\n    */\n  function tokenByIndex(uint256 index) public view virtual override returns (uint256) {\n    require(index < _maxSupply, \"ERC721Enumerable: global index out of bounds\");\n    // Array index is 0-based, whereas Token ID is 1-based (sequential).\n    return index + 1;\n  }\n\n  /**\n    * @dev Override the ERC721 \"ownerOf\" function to account for the Pre-Mint Receiver.\n    */\n  function ownerOf(uint256 tokenId) public view virtual override(IERC721, ERC721) returns (address) {\n    // Anything beyond the Pre-Minted supply will use the standard \"ownerOf\"\n    if (tokenId > _maxSupply) {\n      return super.ownerOf(tokenId);\n    }\n\n    // Since we have Pre-Minted the Max-Supply to the \"Pre-Mint Receiver\" account, we know:\n    //  - if the \"_owners\" mapping has not been assigned, then the owner is the Pre-Mint Receiver.\n    //  - after the NFT is transferred, the \"_owners\" mapping will be updated with the new owner.\n    address owner_ = _owners[tokenId];\n    if (owner_ == address(0)) {\n      owner_ = _preMintReceiver;\n    }\n    return owner_;\n  }\n\n  /**\n    * @dev Override the ERC721 \"_exists\" function to account for the Pre-Minted Max-Supply.\n    */\n  function _exists(uint256 tokenId) internal view virtual override(ERC721) returns (bool) {\n    // Anything beyond the Pre-Minted supply will use the standard \"_exists\"\n    if (tokenId > _maxSupply) {\n      return super._exists(tokenId);\n    }\n\n    // We know the Max-Supply has been Pre-Minted with Sequential Token IDs\n    return (tokenId > 0 && tokenId <= _maxSupply);\n  }\n\n  /**\n    * @dev See {IERC721Enumerable-_beforeTokenTransfer}.\n    */\n  function _beforeTokenTransfer(\n    address from,\n    address to,\n    uint256 tokenId\n  ) internal virtual override {\n    super._beforeTokenTransfer(from, to, tokenId);\n\n    if (from != to) {\n      _removeTokenFromOwnerEnumeration(from, tokenId);\n      _addTokenToOwnerEnumeration(to, tokenId);\n    }\n  }\n\n  /**\n    * @dev See {IERC721Enumerable-_addTokenToOwnerEnumeration}.\n    */\n  function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\n    uint256 length = ERC721.balanceOf(to);\n    _ownedTokens[to][length] = tokenId;\n    _ownedTokensIndex[tokenId] = length;\n  }\n\n  /**\n    * @dev See {IERC721Enumerable-_removeTokenFromOwnerEnumeration}.\n    */\n  function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\n    // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\n    // then delete the last slot (swap and pop).\n\n    uint256 lastTokenIndex = ERC721.balanceOf(from) - 1;\n    uint256 tokenIndex = _ownedTokensIndex[tokenId];\n\n    // When the token to delete is the last token, the swap operation is unnecessary\n    if (tokenIndex != lastTokenIndex) {\n      uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\n\n      _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n      _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n    }\n\n    // This also deletes the contents at the last position of the array\n    delete _ownedTokensIndex[tokenId];\n    delete _ownedTokens[from][lastTokenIndex];\n  }\n}\n"},"contracts/mock/ERC20Mock.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract ERC20Mock is ERC20, Ownable {\n    constructor()\n        ERC20(\"MyToken\", \"MTK\")\n        Ownable()\n    {}\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount);\n    }\n}"},"contracts/mock/NFTMock.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.8;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n\ncontract NFTMock is ERC721 {\n    // solhint-disable-next-line no-empty-blocks\n    constructor(string memory name_, string memory symbol_) ERC721(name_, symbol_) {\n    }\n\n    function mint(address to, uint256 tokenId) external {\n        _mint(to, tokenId);\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout"],"":["ast"]}},"libraries":{}}},"output":{"errors":[],"version":"0.8.17","long_version":"0.8.17+commit.8df45f5f.Darwin.appleclang","zk_version":"1.3.17","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"id":0,"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2273],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":2274,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2273,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,2273],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1868:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2134:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[]}],"src":"102:2514:0"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"id":1,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2273],"ERC20":[699],"IERC20":[777],"IERC20Metadata":[802]},"id":700,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":115,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":700,"sourceUnit":778,"src":"130:22:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":116,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":700,"sourceUnit":803,"src":"153:41:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":117,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":700,"sourceUnit":2274,"src":"195:33:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":119,"name":"Context","nameLocations":["1550:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":2273,"src":"1550:7:1"},"id":120,"nodeType":"InheritanceSpecifier","src":"1550:7:1"},{"baseName":{"id":121,"name":"IERC20","nameLocations":["1559:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":777,"src":"1559:6:1"},"id":122,"nodeType":"InheritanceSpecifier","src":"1559:6:1"},{"baseName":{"id":123,"name":"IERC20Metadata","nameLocations":["1567:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":802,"src":"1567:14:1"},"id":124,"nodeType":"InheritanceSpecifier","src":"1567:14:1"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":118,"nodeType":"StructuredDocumentation","src":"230:1301:1","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":699,"linearizedBaseContracts":[699,802,777,2273],"name":"ERC20","nameLocation":"1541:5:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":128,"mutability":"mutable","name":"_balances","nameLocation":"1624:9:1","nodeType":"VariableDeclaration","scope":699,"src":"1588:45:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":127,"keyType":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1588:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":126,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":134,"mutability":"mutable","name":"_allowances","nameLocation":"1696:11:1","nodeType":"VariableDeclaration","scope":699,"src":"1640:67:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":133,"keyType":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1640:47:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":132,"keyType":{"id":130,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":131,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":136,"mutability":"mutable","name":"_totalSupply","nameLocation":"1730:12:1","nodeType":"VariableDeclaration","scope":699,"src":"1714:28:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":135,"name":"uint256","nodeType":"ElementaryTypeName","src":"1714:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":138,"mutability":"mutable","name":"_name","nameLocation":"1764:5:1","nodeType":"VariableDeclaration","scope":699,"src":"1749:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":137,"name":"string","nodeType":"ElementaryTypeName","src":"1749:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":140,"mutability":"mutable","name":"_symbol","nameLocation":"1790:7:1","nodeType":"VariableDeclaration","scope":699,"src":"1775:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":139,"name":"string","nodeType":"ElementaryTypeName","src":"1775:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":156,"nodeType":"Block","src":"2036:57:1","statements":[{"expression":{"id":150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":148,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"2046:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":149,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"2054:5:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2046:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":151,"nodeType":"ExpressionStatement","src":"2046:13:1"},{"expression":{"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":152,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2069:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":153,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"2079:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2069:17:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":155,"nodeType":"ExpressionStatement","src":"2069:17:1"}]},"documentation":{"id":141,"nodeType":"StructuredDocumentation","src":"1804:171:1","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":157,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":143,"mutability":"mutable","name":"name_","nameLocation":"2006:5:1","nodeType":"VariableDeclaration","scope":157,"src":"1992:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":142,"name":"string","nodeType":"ElementaryTypeName","src":"1992:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":145,"mutability":"mutable","name":"symbol_","nameLocation":"2027:7:1","nodeType":"VariableDeclaration","scope":157,"src":"2013:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":144,"name":"string","nodeType":"ElementaryTypeName","src":"2013:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1991:44:1"},"returnParameters":{"id":147,"nodeType":"ParameterList","parameters":[],"src":"2036:0:1"},"scope":699,"src":"1980:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[789],"body":{"id":166,"nodeType":"Block","src":"2227:29:1","statements":[{"expression":{"id":164,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"2244:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":163,"id":165,"nodeType":"Return","src":"2237:12:1"}]},"documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"2099:54:1","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":167,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2167:4:1","nodeType":"FunctionDefinition","overrides":{"id":160,"nodeType":"OverrideSpecifier","overrides":[],"src":"2194:8:1"},"parameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"2171:2:1"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":167,"src":"2212:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":161,"name":"string","nodeType":"ElementaryTypeName","src":"2212:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2211:15:1"},"scope":699,"src":"2158:98:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[795],"body":{"id":176,"nodeType":"Block","src":"2440:31:1","statements":[{"expression":{"id":174,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2457:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":173,"id":175,"nodeType":"Return","src":"2450:14:1"}]},"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"2262:102:1","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":177,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2378:6:1","nodeType":"FunctionDefinition","overrides":{"id":170,"nodeType":"OverrideSpecifier","overrides":[],"src":"2407:8:1"},"parameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"2384:2:1"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":177,"src":"2425:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":171,"name":"string","nodeType":"ElementaryTypeName","src":"2425:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2424:15:1"},"scope":699,"src":"2369:102:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[801],"body":{"id":186,"nodeType":"Block","src":"3169:26:1","statements":[{"expression":{"hexValue":"3138","id":184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3186:2:1","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":183,"id":185,"nodeType":"Return","src":"3179:9:1"}]},"documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"2477:622:1","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":187,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3113:8:1","nodeType":"FunctionDefinition","overrides":{"id":180,"nodeType":"OverrideSpecifier","overrides":[],"src":"3144:8:1"},"parameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"3121:2:1"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":187,"src":"3162:5:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":181,"name":"uint8","nodeType":"ElementaryTypeName","src":"3162:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3161:7:1"},"scope":699,"src":"3104:91:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[726],"body":{"id":196,"nodeType":"Block","src":"3325:36:1","statements":[{"expression":{"id":194,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"3342:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":193,"id":195,"nodeType":"Return","src":"3335:19:1"}]},"documentation":{"id":188,"nodeType":"StructuredDocumentation","src":"3201:49:1","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":197,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3264:11:1","nodeType":"FunctionDefinition","overrides":{"id":190,"nodeType":"OverrideSpecifier","overrides":[],"src":"3298:8:1"},"parameters":{"id":189,"nodeType":"ParameterList","parameters":[],"src":"3275:2:1"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":197,"src":"3316:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":191,"name":"uint256","nodeType":"ElementaryTypeName","src":"3316:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3315:9:1"},"scope":699,"src":"3255:106:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[734],"body":{"id":210,"nodeType":"Block","src":"3502:42:1","statements":[{"expression":{"baseExpression":{"id":206,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"3519:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":208,"indexExpression":{"id":207,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"3529:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3519:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":205,"id":209,"nodeType":"Return","src":"3512:25:1"}]},"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"3367:47:1","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":211,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3428:9:1","nodeType":"FunctionDefinition","overrides":{"id":202,"nodeType":"OverrideSpecifier","overrides":[],"src":"3475:8:1"},"parameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":200,"mutability":"mutable","name":"account","nameLocation":"3446:7:1","nodeType":"VariableDeclaration","scope":211,"src":"3438:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":199,"name":"address","nodeType":"ElementaryTypeName","src":"3438:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:17:1"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":211,"src":"3493:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":203,"name":"uint256","nodeType":"ElementaryTypeName","src":"3493:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3492:9:1"},"scope":699,"src":"3419:125:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[744],"body":{"id":235,"nodeType":"Block","src":"3825:104:1","statements":[{"assignments":[223],"declarations":[{"constant":false,"id":223,"mutability":"mutable","name":"owner","nameLocation":"3843:5:1","nodeType":"VariableDeclaration","scope":235,"src":"3835:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":222,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":226,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":224,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"3851:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3851:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3835:28:1"},{"expression":{"arguments":[{"id":228,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"3883:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":229,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"3890:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":230,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"3894:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":227,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"3873:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3873:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":232,"nodeType":"ExpressionStatement","src":"3873:28:1"},{"expression":{"hexValue":"74727565","id":233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3918:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":221,"id":234,"nodeType":"Return","src":"3911:11:1"}]},"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3550:185:1","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":236,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3749:8:1","nodeType":"FunctionDefinition","overrides":{"id":218,"nodeType":"OverrideSpecifier","overrides":[],"src":"3801:8:1"},"parameters":{"id":217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"to","nameLocation":"3766:2:1","nodeType":"VariableDeclaration","scope":236,"src":"3758:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"3758:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":216,"mutability":"mutable","name":"amount","nameLocation":"3778:6:1","nodeType":"VariableDeclaration","scope":236,"src":"3770:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":215,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3757:28:1"},"returnParameters":{"id":221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":236,"src":"3819:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":219,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:1"},"scope":699,"src":"3740:189:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[754],"body":{"id":253,"nodeType":"Block","src":"4085:51:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":247,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4102:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":249,"indexExpression":{"id":248,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"4114:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":251,"indexExpression":{"id":250,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"4121:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":246,"id":252,"nodeType":"Return","src":"4095:34:1"}]},"documentation":{"id":237,"nodeType":"StructuredDocumentation","src":"3935:47:1","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":254,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3996:9:1","nodeType":"FunctionDefinition","overrides":{"id":243,"nodeType":"OverrideSpecifier","overrides":[],"src":"4058:8:1"},"parameters":{"id":242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":239,"mutability":"mutable","name":"owner","nameLocation":"4014:5:1","nodeType":"VariableDeclaration","scope":254,"src":"4006:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":238,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":241,"mutability":"mutable","name":"spender","nameLocation":"4029:7:1","nodeType":"VariableDeclaration","scope":254,"src":"4021:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4005:32:1"},"returnParameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":254,"src":"4076:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4076:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4075:9:1"},"scope":699,"src":"3987:149:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[764],"body":{"id":278,"nodeType":"Block","src":"4533:108:1","statements":[{"assignments":[266],"declarations":[{"constant":false,"id":266,"mutability":"mutable","name":"owner","nameLocation":"4551:5:1","nodeType":"VariableDeclaration","scope":278,"src":"4543:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":269,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"4559:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4559:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4543:28:1"},{"expression":{"arguments":[{"id":271,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"4590:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":272,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"4597:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":273,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"4606:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":270,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"4581:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4581:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":275,"nodeType":"ExpressionStatement","src":"4581:32:1"},{"expression":{"hexValue":"74727565","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4630:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":264,"id":277,"nodeType":"Return","src":"4623:11:1"}]},"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"4142:297:1","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":279,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4453:7:1","nodeType":"FunctionDefinition","overrides":{"id":261,"nodeType":"OverrideSpecifier","overrides":[],"src":"4509:8:1"},"parameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"spender","nameLocation":"4469:7:1","nodeType":"VariableDeclaration","scope":279,"src":"4461:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"4461:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":259,"mutability":"mutable","name":"amount","nameLocation":"4486:6:1","nodeType":"VariableDeclaration","scope":279,"src":"4478:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":258,"name":"uint256","nodeType":"ElementaryTypeName","src":"4478:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4460:33:1"},"returnParameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":279,"src":"4527:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":262,"name":"bool","nodeType":"ElementaryTypeName","src":"4527:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4526:6:1"},"scope":699,"src":"4444:197:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[776],"body":{"id":311,"nodeType":"Block","src":"5306:153:1","statements":[{"assignments":[293],"declarations":[{"constant":false,"id":293,"mutability":"mutable","name":"spender","nameLocation":"5324:7:1","nodeType":"VariableDeclaration","scope":311,"src":"5316:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":292,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":296,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":294,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"5334:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5334:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5316:30:1"},{"expression":{"arguments":[{"id":298,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"5372:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":299,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"5378:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":300,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"5387:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":297,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"5356:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5356:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":302,"nodeType":"ExpressionStatement","src":"5356:38:1"},{"expression":{"arguments":[{"id":304,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"5414:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":305,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"5420:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":306,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"5424:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":303,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"5404:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5404:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":308,"nodeType":"ExpressionStatement","src":"5404:27:1"},{"expression":{"hexValue":"74727565","id":309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5448:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":291,"id":310,"nodeType":"Return","src":"5441:11:1"}]},"documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"4647:551:1","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":312,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5212:12:1","nodeType":"FunctionDefinition","overrides":{"id":288,"nodeType":"OverrideSpecifier","overrides":[],"src":"5282:8:1"},"parameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"from","nameLocation":"5233:4:1","nodeType":"VariableDeclaration","scope":312,"src":"5225:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"5225:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":284,"mutability":"mutable","name":"to","nameLocation":"5247:2:1","nodeType":"VariableDeclaration","scope":312,"src":"5239:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":283,"name":"address","nodeType":"ElementaryTypeName","src":"5239:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":286,"mutability":"mutable","name":"amount","nameLocation":"5259:6:1","nodeType":"VariableDeclaration","scope":312,"src":"5251:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":285,"name":"uint256","nodeType":"ElementaryTypeName","src":"5251:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5224:42:1"},"returnParameters":{"id":291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":312,"src":"5300:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":289,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5299:6:1"},"scope":699,"src":"5203:256:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":340,"nodeType":"Block","src":"5948:140:1","statements":[{"assignments":[323],"declarations":[{"constant":false,"id":323,"mutability":"mutable","name":"owner","nameLocation":"5966:5:1","nodeType":"VariableDeclaration","scope":340,"src":"5958:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"5958:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":326,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":324,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"5974:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5974:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5958:28:1"},{"expression":{"arguments":[{"id":328,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"6005:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":329,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6012:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":331,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"6031:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":332,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6038:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":330,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"6021:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6021:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":334,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"6049:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6021:38:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":327,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"5996:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5996:64:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":337,"nodeType":"ExpressionStatement","src":"5996:64:1"},{"expression":{"hexValue":"74727565","id":338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6077:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":321,"id":339,"nodeType":"Return","src":"6070:11:1"}]},"documentation":{"id":313,"nodeType":"StructuredDocumentation","src":"5465:384:1","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":341,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5863:17:1","nodeType":"FunctionDefinition","parameters":{"id":318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"mutability":"mutable","name":"spender","nameLocation":"5889:7:1","nodeType":"VariableDeclaration","scope":341,"src":"5881:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":314,"name":"address","nodeType":"ElementaryTypeName","src":"5881:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":317,"mutability":"mutable","name":"addedValue","nameLocation":"5906:10:1","nodeType":"VariableDeclaration","scope":341,"src":"5898:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":316,"name":"uint256","nodeType":"ElementaryTypeName","src":"5898:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5880:37:1"},"returnParameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":341,"src":"5942:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":319,"name":"bool","nodeType":"ElementaryTypeName","src":"5942:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5941:6:1"},"scope":699,"src":"5854:234:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":381,"nodeType":"Block","src":"6674:328:1","statements":[{"assignments":[352],"declarations":[{"constant":false,"id":352,"mutability":"mutable","name":"owner","nameLocation":"6692:5:1","nodeType":"VariableDeclaration","scope":381,"src":"6684:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"6684:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":355,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":353,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"6700:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6700:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6684:28:1"},{"assignments":[357],"declarations":[{"constant":false,"id":357,"mutability":"mutable","name":"currentAllowance","nameLocation":"6730:16:1","nodeType":"VariableDeclaration","scope":381,"src":"6722:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":356,"name":"uint256","nodeType":"ElementaryTypeName","src":"6722:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":362,"initialValue":{"arguments":[{"id":359,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"6759:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":360,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"6766:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":358,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"6749:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6749:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6722:52:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":364,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"6792:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":365,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"6812:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6792:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6829:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":363,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6784:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6784:85:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":369,"nodeType":"ExpressionStatement","src":"6784:85:1"},{"id":378,"nodeType":"UncheckedBlock","src":"6879:95:1","statements":[{"expression":{"arguments":[{"id":371,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"6912:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":372,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"6919:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":373,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"6928:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":374,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"6947:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6928:34:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":370,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"6903:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6903:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":377,"nodeType":"ExpressionStatement","src":"6903:60:1"}]},{"expression":{"hexValue":"74727565","id":379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6991:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":350,"id":380,"nodeType":"Return","src":"6984:11:1"}]},"documentation":{"id":342,"nodeType":"StructuredDocumentation","src":"6094:476:1","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":382,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6584:17:1","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"spender","nameLocation":"6610:7:1","nodeType":"VariableDeclaration","scope":382,"src":"6602:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":343,"name":"address","nodeType":"ElementaryTypeName","src":"6602:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":346,"mutability":"mutable","name":"subtractedValue","nameLocation":"6627:15:1","nodeType":"VariableDeclaration","scope":382,"src":"6619:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":345,"name":"uint256","nodeType":"ElementaryTypeName","src":"6619:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6601:42:1"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":382,"src":"6668:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":348,"name":"bool","nodeType":"ElementaryTypeName","src":"6668:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6667:6:1"},"scope":699,"src":"6575:427:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":458,"nodeType":"Block","src":"7534:710:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":393,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"7552:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7568:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7560:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"7560:7:1","typeDescriptions":{}}},"id":397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7560:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7552:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7572:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":392,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7544:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7544:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":401,"nodeType":"ExpressionStatement","src":"7544:68:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":403,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"7630:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7644:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7636:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":404,"name":"address","nodeType":"ElementaryTypeName","src":"7636:7:1","typeDescriptions":{}}},"id":407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7636:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7630:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7648:37:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":402,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7622:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7622:64:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":411,"nodeType":"ExpressionStatement","src":"7622:64:1"},{"expression":{"arguments":[{"id":413,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"7718:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":414,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"7724:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":415,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"7728:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":412,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"7697:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7697:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":417,"nodeType":"ExpressionStatement","src":"7697:38:1"},{"assignments":[419],"declarations":[{"constant":false,"id":419,"mutability":"mutable","name":"fromBalance","nameLocation":"7754:11:1","nodeType":"VariableDeclaration","scope":458,"src":"7746:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":418,"name":"uint256","nodeType":"ElementaryTypeName","src":"7746:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":423,"initialValue":{"baseExpression":{"id":420,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"7768:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":422,"indexExpression":{"id":421,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"7778:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7768:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7746:37:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":425,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"7801:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":426,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"7816:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7824:40:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":424,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7793:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7793:72:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":430,"nodeType":"ExpressionStatement","src":"7793:72:1"},{"id":445,"nodeType":"UncheckedBlock","src":"7875:273:1","statements":[{"expression":{"id":437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":431,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"7899:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":433,"indexExpression":{"id":432,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"7909:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7899:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":434,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"7917:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":435,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"7931:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7917:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:38:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":438,"nodeType":"ExpressionStatement","src":"7899:38:1"},{"expression":{"id":443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":439,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"8114:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":441,"indexExpression":{"id":440,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"8124:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8114:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":442,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"8131:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8114:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":444,"nodeType":"ExpressionStatement","src":"8114:23:1"}]},{"eventCall":{"arguments":[{"id":447,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"8172:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":448,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"8178:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":449,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"8182:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":446,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"8163:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8163:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":451,"nodeType":"EmitStatement","src":"8158:31:1"},{"expression":{"arguments":[{"id":453,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"8220:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":454,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"8226:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":455,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"8230:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":452,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"8200:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8200:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":457,"nodeType":"ExpressionStatement","src":"8200:37:1"}]},"documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"7008:443:1","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":459,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7465:9:1","nodeType":"FunctionDefinition","parameters":{"id":390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"mutability":"mutable","name":"from","nameLocation":"7483:4:1","nodeType":"VariableDeclaration","scope":459,"src":"7475:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":384,"name":"address","nodeType":"ElementaryTypeName","src":"7475:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":387,"mutability":"mutable","name":"to","nameLocation":"7497:2:1","nodeType":"VariableDeclaration","scope":459,"src":"7489:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"7489:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":389,"mutability":"mutable","name":"amount","nameLocation":"7509:6:1","nodeType":"VariableDeclaration","scope":459,"src":"7501:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":388,"name":"uint256","nodeType":"ElementaryTypeName","src":"7501:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7474:42:1"},"returnParameters":{"id":391,"nodeType":"ParameterList","parameters":[],"src":"7534:0:1"},"scope":699,"src":"7456:788:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":515,"nodeType":"Block","src":"8585:470:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":468,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"8603:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8622:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8614:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":469,"name":"address","nodeType":"ElementaryTypeName","src":"8614:7:1","typeDescriptions":{}}},"id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8614:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8603:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8626:33:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":467,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8595:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8595:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":476,"nodeType":"ExpressionStatement","src":"8595:65:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8700:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8692:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"8692:7:1","typeDescriptions":{}}},"id":481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8692:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":482,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"8704:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":483,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"8713:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":477,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"8671:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8671:49:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"8671:49:1"},{"expression":{"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":486,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"8731:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":487,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"8747:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8731:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":489,"nodeType":"ExpressionStatement","src":"8731:22:1"},{"id":496,"nodeType":"UncheckedBlock","src":"8763:175:1","statements":[{"expression":{"id":494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":490,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"8899:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":492,"indexExpression":{"id":491,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"8909:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8899:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":493,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"8921:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8899:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":495,"nodeType":"ExpressionStatement","src":"8899:28:1"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8969:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8961:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":498,"name":"address","nodeType":"ElementaryTypeName","src":"8961:7:1","typeDescriptions":{}}},"id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8961:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":502,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"8973:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":503,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"8982:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":497,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"8952:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":505,"nodeType":"EmitStatement","src":"8947:42:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9028:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9020:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"9020:7:1","typeDescriptions":{}}},"id":510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9020:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":511,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"9032:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":512,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"9041:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":506,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"9000:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9000:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":514,"nodeType":"ExpressionStatement","src":"9000:48:1"}]},"documentation":{"id":460,"nodeType":"StructuredDocumentation","src":"8250:265:1","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":516,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8529:5:1","nodeType":"FunctionDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":462,"mutability":"mutable","name":"account","nameLocation":"8543:7:1","nodeType":"VariableDeclaration","scope":516,"src":"8535:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":461,"name":"address","nodeType":"ElementaryTypeName","src":"8535:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":464,"mutability":"mutable","name":"amount","nameLocation":"8560:6:1","nodeType":"VariableDeclaration","scope":516,"src":"8552:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":463,"name":"uint256","nodeType":"ElementaryTypeName","src":"8552:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8534:33:1"},"returnParameters":{"id":466,"nodeType":"ParameterList","parameters":[],"src":"8585:0:1"},"scope":699,"src":"8520:535:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":587,"nodeType":"Block","src":"9440:594:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":525,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9458:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9477:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9469:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"9469:7:1","typeDescriptions":{}}},"id":529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9469:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9458:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9481:35:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":524,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9450:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9450:67:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"9450:67:1"},{"expression":{"arguments":[{"id":535,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9549:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9566:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9558:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":536,"name":"address","nodeType":"ElementaryTypeName","src":"9558:7:1","typeDescriptions":{}}},"id":539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9558:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":540,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9570:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":534,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"9528:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9528:49:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":542,"nodeType":"ExpressionStatement","src":"9528:49:1"},{"assignments":[544],"declarations":[{"constant":false,"id":544,"mutability":"mutable","name":"accountBalance","nameLocation":"9596:14:1","nodeType":"VariableDeclaration","scope":587,"src":"9588:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":543,"name":"uint256","nodeType":"ElementaryTypeName","src":"9588:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":548,"initialValue":{"baseExpression":{"id":545,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"9613:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":547,"indexExpression":{"id":546,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9623:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9613:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9588:43:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":550,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"9649:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":551,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9667:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9649:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9675:36:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":549,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9641:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9641:71:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":555,"nodeType":"ExpressionStatement","src":"9641:71:1"},{"id":568,"nodeType":"UncheckedBlock","src":"9722:194:1","statements":[{"expression":{"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":556,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"9746:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":558,"indexExpression":{"id":557,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9756:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9746:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":559,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"9767:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":560,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9784:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9767:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9746:44:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":563,"nodeType":"ExpressionStatement","src":"9746:44:1"},{"expression":{"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":564,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"9883:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":565,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9899:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9883:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":567,"nodeType":"ExpressionStatement","src":"9883:22:1"}]},{"eventCall":{"arguments":[{"id":570,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9940:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9957:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9949:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":571,"name":"address","nodeType":"ElementaryTypeName","src":"9949:7:1","typeDescriptions":{}}},"id":574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9949:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":575,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"9961:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":569,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"9931:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9931:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":577,"nodeType":"EmitStatement","src":"9926:42:1"},{"expression":{"arguments":[{"id":579,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"9999:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10016:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10008:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"10008:7:1","typeDescriptions":{}}},"id":583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10008:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":584,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"10020:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":578,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"9979:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9979:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":586,"nodeType":"ExpressionStatement","src":"9979:48:1"}]},"documentation":{"id":517,"nodeType":"StructuredDocumentation","src":"9061:309:1","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":588,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9384:5:1","nodeType":"FunctionDefinition","parameters":{"id":522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":519,"mutability":"mutable","name":"account","nameLocation":"9398:7:1","nodeType":"VariableDeclaration","scope":588,"src":"9390:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"9390:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":521,"mutability":"mutable","name":"amount","nameLocation":"9415:6:1","nodeType":"VariableDeclaration","scope":588,"src":"9407:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":520,"name":"uint256","nodeType":"ElementaryTypeName","src":"9407:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9389:33:1"},"returnParameters":{"id":523,"nodeType":"ParameterList","parameters":[],"src":"9440:0:1"},"scope":699,"src":"9375:659:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":632,"nodeType":"Block","src":"10540:257:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":599,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"10558:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10575:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10567:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":600,"name":"address","nodeType":"ElementaryTypeName","src":"10567:7:1","typeDescriptions":{}}},"id":603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10567:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10558:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10579:38:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":598,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10550:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10550:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"ExpressionStatement","src":"10550:68:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":609,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"10636:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10655:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10647:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":610,"name":"address","nodeType":"ElementaryTypeName","src":"10647:7:1","typeDescriptions":{}}},"id":613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10647:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10636:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10659:36:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":608,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10628:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10628:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":617,"nodeType":"ExpressionStatement","src":"10628:68:1"},{"expression":{"id":624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":618,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"10707:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":621,"indexExpression":{"id":619,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"10719:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10707:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":622,"indexExpression":{"id":620,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"10726:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10707:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":623,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"10737:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10707:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":625,"nodeType":"ExpressionStatement","src":"10707:36:1"},{"eventCall":{"arguments":[{"id":627,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"10767:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":628,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"10774:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":629,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"10783:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":626,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"10758:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10758:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":631,"nodeType":"EmitStatement","src":"10753:37:1"}]},"documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"10040:412:1","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":633,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10466:8:1","nodeType":"FunctionDefinition","parameters":{"id":596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"mutability":"mutable","name":"owner","nameLocation":"10483:5:1","nodeType":"VariableDeclaration","scope":633,"src":"10475:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":593,"mutability":"mutable","name":"spender","nameLocation":"10498:7:1","nodeType":"VariableDeclaration","scope":633,"src":"10490:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"10490:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":595,"mutability":"mutable","name":"amount","nameLocation":"10515:6:1","nodeType":"VariableDeclaration","scope":633,"src":"10507:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":594,"name":"uint256","nodeType":"ElementaryTypeName","src":"10507:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10474:48:1"},"returnParameters":{"id":597,"nodeType":"ParameterList","parameters":[],"src":"10540:0:1"},"scope":699,"src":"10457:340:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":675,"nodeType":"Block","src":"11168:321:1","statements":[{"assignments":[644],"declarations":[{"constant":false,"id":644,"mutability":"mutable","name":"currentAllowance","nameLocation":"11186:16:1","nodeType":"VariableDeclaration","scope":675,"src":"11178:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":643,"name":"uint256","nodeType":"ElementaryTypeName","src":"11178:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":649,"initialValue":{"arguments":[{"id":646,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"11215:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":647,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"11222:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":645,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"11205:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11205:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11178:52:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":650,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"11244:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11269:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":652,"name":"uint256","nodeType":"ElementaryTypeName","src":"11269:7:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":651,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11264:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11264:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11278:3:1","memberName":"max","nodeType":"MemberAccess","src":"11264:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11244:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":674,"nodeType":"IfStatement","src":"11240:243:1","trueBody":{"id":673,"nodeType":"Block","src":"11283:200:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":658,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"11305:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":659,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"11325:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11305:26:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11333:31:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":657,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11297:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11297:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":663,"nodeType":"ExpressionStatement","src":"11297:68:1"},{"id":672,"nodeType":"UncheckedBlock","src":"11379:94:1","statements":[{"expression":{"arguments":[{"id":665,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"11416:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":666,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"11423:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":667,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"11432:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":668,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"11451:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11432:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":664,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"11407:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11407:51:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":671,"nodeType":"ExpressionStatement","src":"11407:51:1"}]}]}}]},"documentation":{"id":634,"nodeType":"StructuredDocumentation","src":"10803:270:1","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":676,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11087:15:1","nodeType":"FunctionDefinition","parameters":{"id":641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"mutability":"mutable","name":"owner","nameLocation":"11111:5:1","nodeType":"VariableDeclaration","scope":676,"src":"11103:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":635,"name":"address","nodeType":"ElementaryTypeName","src":"11103:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":638,"mutability":"mutable","name":"spender","nameLocation":"11126:7:1","nodeType":"VariableDeclaration","scope":676,"src":"11118:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":637,"name":"address","nodeType":"ElementaryTypeName","src":"11118:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":640,"mutability":"mutable","name":"amount","nameLocation":"11143:6:1","nodeType":"VariableDeclaration","scope":676,"src":"11135:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":639,"name":"uint256","nodeType":"ElementaryTypeName","src":"11135:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11102:48:1"},"returnParameters":{"id":642,"nodeType":"ParameterList","parameters":[],"src":"11168:0:1"},"scope":699,"src":"11078:411:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":686,"nodeType":"Block","src":"12162:2:1","statements":[]},"documentation":{"id":677,"nodeType":"StructuredDocumentation","src":"11495:573:1","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":687,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12082:20:1","nodeType":"FunctionDefinition","parameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":679,"mutability":"mutable","name":"from","nameLocation":"12111:4:1","nodeType":"VariableDeclaration","scope":687,"src":"12103:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":678,"name":"address","nodeType":"ElementaryTypeName","src":"12103:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":681,"mutability":"mutable","name":"to","nameLocation":"12125:2:1","nodeType":"VariableDeclaration","scope":687,"src":"12117:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"12117:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":683,"mutability":"mutable","name":"amount","nameLocation":"12137:6:1","nodeType":"VariableDeclaration","scope":687,"src":"12129:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":682,"name":"uint256","nodeType":"ElementaryTypeName","src":"12129:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12102:42:1"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[],"src":"12162:0:1"},"scope":699,"src":"12073:91:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":697,"nodeType":"Block","src":"12840:2:1","statements":[]},"documentation":{"id":688,"nodeType":"StructuredDocumentation","src":"12170:577:1","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":698,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12761:19:1","nodeType":"FunctionDefinition","parameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":690,"mutability":"mutable","name":"from","nameLocation":"12789:4:1","nodeType":"VariableDeclaration","scope":698,"src":"12781:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"12781:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":692,"mutability":"mutable","name":"to","nameLocation":"12803:2:1","nodeType":"VariableDeclaration","scope":698,"src":"12795:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":691,"name":"address","nodeType":"ElementaryTypeName","src":"12795:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":694,"mutability":"mutable","name":"amount","nameLocation":"12815:6:1","nodeType":"VariableDeclaration","scope":698,"src":"12807:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":693,"name":"uint256","nodeType":"ElementaryTypeName","src":"12807:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12780:42:1"},"returnParameters":{"id":696,"nodeType":"ParameterList","parameters":[],"src":"12840:0:1"},"scope":699,"src":"12752:90:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":700,"src":"1532:11312:1","usedErrors":[]}],"src":"105:12740:1"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"id":2,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[777]},"id":778,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":701,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":702,"nodeType":"StructuredDocumentation","src":"131:70:2","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":777,"linearizedBaseContracts":[777],"name":"IERC20","nameLocation":"212:6:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":703,"nodeType":"StructuredDocumentation","src":"225:158:2","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":711,"name":"Transfer","nameLocation":"394:8:2","nodeType":"EventDefinition","parameters":{"id":710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":705,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:2","nodeType":"VariableDeclaration","scope":711,"src":"403:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":704,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":707,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:2","nodeType":"VariableDeclaration","scope":711,"src":"425:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":706,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":709,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:2","nodeType":"VariableDeclaration","scope":711,"src":"445:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":708,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:2"},"src":"388:72:2"},{"anonymous":false,"documentation":{"id":712,"nodeType":"StructuredDocumentation","src":"466:148:2","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":720,"name":"Approval","nameLocation":"625:8:2","nodeType":"EventDefinition","parameters":{"id":719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:2","nodeType":"VariableDeclaration","scope":720,"src":"634:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":716,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:2","nodeType":"VariableDeclaration","scope":720,"src":"657:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":718,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:2","nodeType":"VariableDeclaration","scope":720,"src":"682:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":717,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:2"},"src":"619:78:2"},{"documentation":{"id":721,"nodeType":"StructuredDocumentation","src":"703:66:2","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":726,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:2","nodeType":"FunctionDefinition","parameters":{"id":722,"nodeType":"ParameterList","parameters":[],"src":"794:2:2"},"returnParameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":726,"src":"820:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":723,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:2"},"scope":777,"src":"774:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":727,"nodeType":"StructuredDocumentation","src":"835:72:2","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":734,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:2","nodeType":"FunctionDefinition","parameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":729,"mutability":"mutable","name":"account","nameLocation":"939:7:2","nodeType":"VariableDeclaration","scope":734,"src":"931:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:2"},"returnParameters":{"id":733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":734,"src":"971:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":731,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:2"},"scope":777,"src":"912:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":735,"nodeType":"StructuredDocumentation","src":"986:202:2","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":744,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:2","nodeType":"FunctionDefinition","parameters":{"id":740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":737,"mutability":"mutable","name":"to","nameLocation":"1219:2:2","nodeType":"VariableDeclaration","scope":744,"src":"1211:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":736,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":739,"mutability":"mutable","name":"amount","nameLocation":"1231:6:2","nodeType":"VariableDeclaration","scope":744,"src":"1223:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":738,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:2"},"returnParameters":{"id":743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":744,"src":"1257:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":741,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:2"},"scope":777,"src":"1193:70:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":745,"nodeType":"StructuredDocumentation","src":"1269:264:2","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":754,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:2","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"owner","nameLocation":"1565:5:2","nodeType":"VariableDeclaration","scope":754,"src":"1557:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":746,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":749,"mutability":"mutable","name":"spender","nameLocation":"1580:7:2","nodeType":"VariableDeclaration","scope":754,"src":"1572:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":748,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:2"},"returnParameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":754,"src":"1612:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":751,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:2"},"scope":777,"src":"1538:83:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":755,"nodeType":"StructuredDocumentation","src":"1627:642:2","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":764,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:2","nodeType":"FunctionDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":757,"mutability":"mutable","name":"spender","nameLocation":"2299:7:2","nodeType":"VariableDeclaration","scope":764,"src":"2291:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":759,"mutability":"mutable","name":"amount","nameLocation":"2316:6:2","nodeType":"VariableDeclaration","scope":764,"src":"2308:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":758,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:2"},"returnParameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":764,"src":"2342:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":761,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:2"},"scope":777,"src":"2274:74:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":765,"nodeType":"StructuredDocumentation","src":"2354:287:2","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":776,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:2","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"mutability":"mutable","name":"from","nameLocation":"2676:4:2","nodeType":"VariableDeclaration","scope":776,"src":"2668:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":769,"mutability":"mutable","name":"to","nameLocation":"2690:2:2","nodeType":"VariableDeclaration","scope":776,"src":"2682:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":768,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":771,"mutability":"mutable","name":"amount","nameLocation":"2702:6:2","nodeType":"VariableDeclaration","scope":776,"src":"2694:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:2"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":776,"src":"2728:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":773,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:2"},"scope":777,"src":"2646:88:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":778,"src":"202:2534:2","usedErrors":[]}],"src":"106:2631:2"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"id":3,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[777],"IERC20Metadata":[802]},"id":803,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":779,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":780,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":803,"sourceUnit":778,"src":"135:23:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":782,"name":"IERC20","nameLocations":["305:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":777,"src":"305:6:3"},"id":783,"nodeType":"InheritanceSpecifier","src":"305:6:3"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":781,"nodeType":"StructuredDocumentation","src":"160:116:3","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":802,"linearizedBaseContracts":[802,777],"name":"IERC20Metadata","nameLocation":"287:14:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":784,"nodeType":"StructuredDocumentation","src":"318:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":789,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:3","nodeType":"FunctionDefinition","parameters":{"id":785,"nodeType":"ParameterList","parameters":[],"src":"390:2:3"},"returnParameters":{"id":788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":789,"src":"416:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":786,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:3"},"scope":802,"src":"377:54:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":790,"nodeType":"StructuredDocumentation","src":"437:56:3","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":795,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:3","nodeType":"FunctionDefinition","parameters":{"id":791,"nodeType":"ParameterList","parameters":[],"src":"513:2:3"},"returnParameters":{"id":794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":795,"src":"539:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":792,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:3"},"scope":802,"src":"498:56:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":796,"nodeType":"StructuredDocumentation","src":"560:65:3","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":801,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:3","nodeType":"FunctionDefinition","parameters":{"id":797,"nodeType":"ParameterList","parameters":[],"src":"647:2:3"},"returnParameters":{"id":800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":801,"src":"673:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":798,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:3"},"scope":802,"src":"630:50:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":803,"src":"277:405:3","usedErrors":[]}],"src":"110:573:3"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"id":4,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Address":[2251],"Context":[2273],"ERC165":[2526],"ERC721":[1729],"IERC165":[2538],"IERC721":[1845],"IERC721Metadata":[1921],"IERC721Receiver":[1863],"Math":[3404],"SignedMath":[3509],"Strings":[2502]},"id":1730,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":804,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":805,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1730,"sourceUnit":1846,"src":"132:23:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":806,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1730,"sourceUnit":1864,"src":"156:31:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":807,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1730,"sourceUnit":1922,"src":"188:42:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":808,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1730,"sourceUnit":2252,"src":"231:33:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":809,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1730,"sourceUnit":2274,"src":"265:33:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":810,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1730,"sourceUnit":2503,"src":"299:33:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":811,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1730,"sourceUnit":2527,"src":"333:46:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":813,"name":"Context","nameLocations":["647:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":2273,"src":"647:7:4"},"id":814,"nodeType":"InheritanceSpecifier","src":"647:7:4"},{"baseName":{"id":815,"name":"ERC165","nameLocations":["656:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":2526,"src":"656:6:4"},"id":816,"nodeType":"InheritanceSpecifier","src":"656:6:4"},{"baseName":{"id":817,"name":"IERC721","nameLocations":["664:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":1845,"src":"664:7:4"},"id":818,"nodeType":"InheritanceSpecifier","src":"664:7:4"},{"baseName":{"id":819,"name":"IERC721Metadata","nameLocations":["673:15:4"],"nodeType":"IdentifierPath","referencedDeclaration":1921,"src":"673:15:4"},"id":820,"nodeType":"InheritanceSpecifier","src":"673:15:4"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":812,"nodeType":"StructuredDocumentation","src":"381:246:4","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1729,"linearizedBaseContracts":[1729,1921,1845,2526,2538,2273],"name":"ERC721","nameLocation":"637:6:4","nodeType":"ContractDefinition","nodes":[{"global":false,"id":823,"libraryName":{"id":821,"name":"Address","nameLocations":["701:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":2251,"src":"701:7:4"},"nodeType":"UsingForDirective","src":"695:26:4","typeName":{"id":822,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"global":false,"id":826,"libraryName":{"id":824,"name":"Strings","nameLocations":["732:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":2502,"src":"732:7:4"},"nodeType":"UsingForDirective","src":"726:26:4","typeName":{"id":825,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":828,"mutability":"mutable","name":"_name","nameLocation":"791:5:4","nodeType":"VariableDeclaration","scope":1729,"src":"776:20:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":827,"name":"string","nodeType":"ElementaryTypeName","src":"776:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":830,"mutability":"mutable","name":"_symbol","nameLocation":"838:7:4","nodeType":"VariableDeclaration","scope":1729,"src":"823:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":829,"name":"string","nodeType":"ElementaryTypeName","src":"823:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":834,"mutability":"mutable","name":"_owners","nameLocation":"934:7:4","nodeType":"VariableDeclaration","scope":1729,"src":"898:43:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":833,"keyType":{"id":831,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"898:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":832,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":838,"mutability":"mutable","name":"_balances","nameLocation":"1028:9:4","nodeType":"VariableDeclaration","scope":1729,"src":"992:45:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":837,"keyType":{"id":835,"name":"address","nodeType":"ElementaryTypeName","src":"1000:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"992:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":836,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":842,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1129:15:4","nodeType":"VariableDeclaration","scope":1729,"src":"1093:51:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":841,"keyType":{"id":839,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1093:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":848,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1252:18:4","nodeType":"VariableDeclaration","scope":1729,"src":"1199:71:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":847,"keyType":{"id":843,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:44:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":846,"keyType":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1218:24:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":845,"name":"bool","nodeType":"ElementaryTypeName","src":"1237:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":864,"nodeType":"Block","src":"1446:57:4","statements":[{"expression":{"id":858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":856,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"1456:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":857,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"1464:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1456:13:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":859,"nodeType":"ExpressionStatement","src":"1456:13:4"},{"expression":{"id":862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":860,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"1479:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":861,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"1489:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1479:17:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":863,"nodeType":"ExpressionStatement","src":"1479:17:4"}]},"documentation":{"id":849,"nodeType":"StructuredDocumentation","src":"1277:108:4","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":865,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"name_","nameLocation":"1416:5:4","nodeType":"VariableDeclaration","scope":865,"src":"1402:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":850,"name":"string","nodeType":"ElementaryTypeName","src":"1402:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":853,"mutability":"mutable","name":"symbol_","nameLocation":"1437:7:4","nodeType":"VariableDeclaration","scope":865,"src":"1423:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":852,"name":"string","nodeType":"ElementaryTypeName","src":"1423:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1401:44:4"},"returnParameters":{"id":855,"nodeType":"ParameterList","parameters":[],"src":"1446:0:4"},"scope":1729,"src":"1390:113:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2525,2537],"body":{"id":895,"nodeType":"Block","src":"1678:192:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":876,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"1707:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":878,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"1727:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1845_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1845_$","typeString":"type(contract IERC721)"}],"id":877,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1722:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1722:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1845","typeString":"type(contract IERC721)"}},"id":880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1736:11:4","memberName":"interfaceId","nodeType":"MemberAccess","src":"1722:25:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1707:40:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":882,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"1763:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":884,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"1783:15:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1921_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1921_$","typeString":"type(contract IERC721Metadata)"}],"id":883,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1778:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1778:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1921","typeString":"type(contract IERC721Metadata)"}},"id":886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1800:11:4","memberName":"interfaceId","nodeType":"MemberAccess","src":"1778:33:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1763:48:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:104:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":891,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"1851:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":889,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1827:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1729_$","typeString":"type(contract super ERC721)"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1833:17:4","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2525,"src":"1827:23:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1827:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:156:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":875,"id":894,"nodeType":"Return","src":"1688:175:4"}]},"documentation":{"id":866,"nodeType":"StructuredDocumentation","src":"1509:56:4","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":896,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1579:17:4","nodeType":"FunctionDefinition","overrides":{"id":872,"nodeType":"OverrideSpecifier","overrides":[{"id":870,"name":"ERC165","nameLocations":["1646:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":2526,"src":"1646:6:4"},{"id":871,"name":"IERC165","nameLocations":["1654:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":2538,"src":"1654:7:4"}],"src":"1637:25:4"},"parameters":{"id":869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":868,"mutability":"mutable","name":"interfaceId","nameLocation":"1604:11:4","nodeType":"VariableDeclaration","scope":896,"src":"1597:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":867,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1597:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1596:20:4"},"returnParameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":896,"src":"1672:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":873,"name":"bool","nodeType":"ElementaryTypeName","src":"1672:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1671:6:4"},"scope":1729,"src":"1570:300:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1770],"body":{"id":919,"nodeType":"Block","src":"2010:123:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":906,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"2028:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2045:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2037:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":907,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:4","typeDescriptions":{}}},"id":910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2037:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2028:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2049:43:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""},"value":"ERC721: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""}],"id":905,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2020:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2020:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":914,"nodeType":"ExpressionStatement","src":"2020:73:4"},{"expression":{"baseExpression":{"id":915,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"2110:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":917,"indexExpression":{"id":916,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"2120:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2110:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":904,"id":918,"nodeType":"Return","src":"2103:23:4"}]},"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"1876:48:4","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":920,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1938:9:4","nodeType":"FunctionDefinition","overrides":{"id":901,"nodeType":"OverrideSpecifier","overrides":[],"src":"1983:8:4"},"parameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"owner","nameLocation":"1956:5:4","nodeType":"VariableDeclaration","scope":920,"src":"1948:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":898,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1947:15:4"},"returnParameters":{"id":904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":920,"src":"2001:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":902,"name":"uint256","nodeType":"ElementaryTypeName","src":"2001:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2000:9:4"},"scope":1729,"src":"1929:204:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1778],"body":{"id":947,"nodeType":"Block","src":"2271:138:4","statements":[{"assignments":[930],"declarations":[{"constant":false,"id":930,"mutability":"mutable","name":"owner","nameLocation":"2289:5:4","nodeType":"VariableDeclaration","scope":947,"src":"2281:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":929,"name":"address","nodeType":"ElementaryTypeName","src":"2281:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":934,"initialValue":{"arguments":[{"id":932,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"2306:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":931,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"2297:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2297:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2281:33:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":936,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"2332:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2341:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:4","typeDescriptions":{}}},"id":940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2341:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2332:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2353:26:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":935,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2324:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2324:56:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":944,"nodeType":"ExpressionStatement","src":"2324:56:4"},{"expression":{"id":945,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"2397:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":928,"id":946,"nodeType":"Return","src":"2390:12:4"}]},"documentation":{"id":921,"nodeType":"StructuredDocumentation","src":"2139:46:4","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":948,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2199:7:4","nodeType":"FunctionDefinition","overrides":{"id":925,"nodeType":"OverrideSpecifier","overrides":[],"src":"2244:8:4"},"parameters":{"id":924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":923,"mutability":"mutable","name":"tokenId","nameLocation":"2215:7:4","nodeType":"VariableDeclaration","scope":948,"src":"2207:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":922,"name":"uint256","nodeType":"ElementaryTypeName","src":"2207:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2206:17:4"},"returnParameters":{"id":928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":948,"src":"2262:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":926,"name":"address","nodeType":"ElementaryTypeName","src":"2262:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2261:9:4"},"scope":1729,"src":"2190:219:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1906],"body":{"id":957,"nodeType":"Block","src":"2540:29:4","statements":[{"expression":{"id":955,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"2557:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":954,"id":956,"nodeType":"Return","src":"2550:12:4"}]},"documentation":{"id":949,"nodeType":"StructuredDocumentation","src":"2415:51:4","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":958,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2480:4:4","nodeType":"FunctionDefinition","overrides":{"id":951,"nodeType":"OverrideSpecifier","overrides":[],"src":"2507:8:4"},"parameters":{"id":950,"nodeType":"ParameterList","parameters":[],"src":"2484:2:4"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":958,"src":"2525:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":952,"name":"string","nodeType":"ElementaryTypeName","src":"2525:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2524:15:4"},"scope":1729,"src":"2471:98:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1912],"body":{"id":967,"nodeType":"Block","src":"2704:31:4","statements":[{"expression":{"id":965,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"2721:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":964,"id":966,"nodeType":"Return","src":"2714:14:4"}]},"documentation":{"id":959,"nodeType":"StructuredDocumentation","src":"2575:53:4","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":968,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2642:6:4","nodeType":"FunctionDefinition","overrides":{"id":961,"nodeType":"OverrideSpecifier","overrides":[],"src":"2671:8:4"},"parameters":{"id":960,"nodeType":"ParameterList","parameters":[],"src":"2648:2:4"},"returnParameters":{"id":964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":968,"src":"2689:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":962,"name":"string","nodeType":"ElementaryTypeName","src":"2689:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2688:15:4"},"scope":1729,"src":"2633:102:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1920],"body":{"id":1006,"nodeType":"Block","src":"2889:188:4","statements":[{"expression":{"arguments":[{"id":978,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"2914:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":977,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"2899:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2899:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":980,"nodeType":"ExpressionStatement","src":"2899:23:4"},{"assignments":[982],"declarations":[{"constant":false,"id":982,"mutability":"mutable","name":"baseURI","nameLocation":"2947:7:4","nodeType":"VariableDeclaration","scope":1006,"src":"2933:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":981,"name":"string","nodeType":"ElementaryTypeName","src":"2933:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":985,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":983,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"2957:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2957:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2933:34:4"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":988,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"2990:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2984:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":986,"name":"bytes","nodeType":"ElementaryTypeName","src":"2984:5:4","typeDescriptions":{}}},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2984:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2999:6:4","memberName":"length","nodeType":"MemberAccess","src":"2984:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3008:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2984:25:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3068:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2984:86:4","trueExpression":{"arguments":[{"arguments":[{"id":997,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"3036:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":998,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"3045:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3053:8:4","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2332,"src":"3045:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3045:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":995,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3019:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3023:12:4","memberName":"encodePacked","nodeType":"MemberAccess","src":"3019:16:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3019:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3012:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":993,"name":"string","nodeType":"ElementaryTypeName","src":"3012:6:4","typeDescriptions":{}}},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3012:53:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":976,"id":1005,"nodeType":"Return","src":"2977:93:4"}]},"documentation":{"id":969,"nodeType":"StructuredDocumentation","src":"2741:55:4","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1007,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2810:8:4","nodeType":"FunctionDefinition","overrides":{"id":973,"nodeType":"OverrideSpecifier","overrides":[],"src":"2856:8:4"},"parameters":{"id":972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":971,"mutability":"mutable","name":"tokenId","nameLocation":"2827:7:4","nodeType":"VariableDeclaration","scope":1007,"src":"2819:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":970,"name":"uint256","nodeType":"ElementaryTypeName","src":"2819:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2818:17:4"},"returnParameters":{"id":976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1007,"src":"2874:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":974,"name":"string","nodeType":"ElementaryTypeName","src":"2874:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2873:15:4"},"scope":1729,"src":"2801:276:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1015,"nodeType":"Block","src":"3385:26:4","statements":[{"expression":{"hexValue":"","id":1013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3402:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1012,"id":1014,"nodeType":"Return","src":"3395:9:4"}]},"documentation":{"id":1008,"nodeType":"StructuredDocumentation","src":"3083:231:4","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":1016,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3328:8:4","nodeType":"FunctionDefinition","parameters":{"id":1009,"nodeType":"ParameterList","parameters":[],"src":"3336:2:4"},"returnParameters":{"id":1012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1016,"src":"3370:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1010,"name":"string","nodeType":"ElementaryTypeName","src":"3370:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3369:15:4"},"scope":1729,"src":"3319:92:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1818],"body":{"id":1058,"nodeType":"Block","src":"3538:336:4","statements":[{"assignments":[1026],"declarations":[{"constant":false,"id":1026,"mutability":"mutable","name":"owner","nameLocation":"3556:5:4","nodeType":"VariableDeclaration","scope":1058,"src":"3548:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1025,"name":"address","nodeType":"ElementaryTypeName","src":"3548:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1031,"initialValue":{"arguments":[{"id":1029,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"3579:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1027,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"3564:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1729_$","typeString":"type(contract ERC721)"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3571:7:4","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":948,"src":"3564:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3564:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3548:39:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1033,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"3605:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1034,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"3611:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3605:11:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":1036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3618:35:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":1032,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3597:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3597:57:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1038,"nodeType":"ExpressionStatement","src":"3597:57:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1040,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"3686:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3686:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1042,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"3702:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3686:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1045,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"3728:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1046,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"3735:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3735:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1044,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"3711:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3686:62:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","id":1050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3762:63:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""},"value":"ERC721: approve caller is not token owner or approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""}],"id":1039,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3665:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3665:170:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1052,"nodeType":"ExpressionStatement","src":"3665:170:4"},{"expression":{"arguments":[{"id":1054,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"3855:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1055,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"3859:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1053,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"3846:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3846:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1057,"nodeType":"ExpressionStatement","src":"3846:21:4"}]},"documentation":{"id":1017,"nodeType":"StructuredDocumentation","src":"3417:46:4","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":1059,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3477:7:4","nodeType":"FunctionDefinition","overrides":{"id":1023,"nodeType":"OverrideSpecifier","overrides":[],"src":"3529:8:4"},"parameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1019,"mutability":"mutable","name":"to","nameLocation":"3493:2:4","nodeType":"VariableDeclaration","scope":1059,"src":"3485:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1018,"name":"address","nodeType":"ElementaryTypeName","src":"3485:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"tokenId","nameLocation":"3505:7:4","nodeType":"VariableDeclaration","scope":1059,"src":"3497:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1020,"name":"uint256","nodeType":"ElementaryTypeName","src":"3497:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3484:29:4"},"returnParameters":{"id":1024,"nodeType":"ParameterList","parameters":[],"src":"3538:0:4"},"scope":1729,"src":"3468:406:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1834],"body":{"id":1076,"nodeType":"Block","src":"4020:82:4","statements":[{"expression":{"arguments":[{"id":1069,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"4045:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1068,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"4030:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4030:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1071,"nodeType":"ExpressionStatement","src":"4030:23:4"},{"expression":{"baseExpression":{"id":1072,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"4071:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1074,"indexExpression":{"id":1073,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"4087:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4071:24:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1067,"id":1075,"nodeType":"Return","src":"4064:31:4"}]},"documentation":{"id":1060,"nodeType":"StructuredDocumentation","src":"3880:50:4","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":1077,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3944:11:4","nodeType":"FunctionDefinition","overrides":{"id":1064,"nodeType":"OverrideSpecifier","overrides":[],"src":"3993:8:4"},"parameters":{"id":1063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"tokenId","nameLocation":"3964:7:4","nodeType":"VariableDeclaration","scope":1077,"src":"3956:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1061,"name":"uint256","nodeType":"ElementaryTypeName","src":"3956:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3955:17:4"},"returnParameters":{"id":1067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1077,"src":"4011:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1065,"name":"address","nodeType":"ElementaryTypeName","src":"4011:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4010:9:4"},"scope":1729,"src":"3935:167:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1826],"body":{"id":1093,"nodeType":"Block","src":"4253:69:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1087,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"4282:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4282:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1089,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"4296:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1090,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"4306:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1086,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"4263:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1092,"nodeType":"ExpressionStatement","src":"4263:52:4"}]},"documentation":{"id":1078,"nodeType":"StructuredDocumentation","src":"4108:56:4","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":1094,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4178:17:4","nodeType":"FunctionDefinition","overrides":{"id":1084,"nodeType":"OverrideSpecifier","overrides":[],"src":"4244:8:4"},"parameters":{"id":1083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"mutability":"mutable","name":"operator","nameLocation":"4204:8:4","nodeType":"VariableDeclaration","scope":1094,"src":"4196:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1079,"name":"address","nodeType":"ElementaryTypeName","src":"4196:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1082,"mutability":"mutable","name":"approved","nameLocation":"4219:8:4","nodeType":"VariableDeclaration","scope":1094,"src":"4214:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1081,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4195:33:4"},"returnParameters":{"id":1085,"nodeType":"ParameterList","parameters":[],"src":"4253:0:4"},"scope":1729,"src":"4169:153:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1844],"body":{"id":1111,"nodeType":"Block","src":"4491:59:4","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1105,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"4508:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1107,"indexExpression":{"id":1106,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"4527:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:25:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1109,"indexExpression":{"id":1108,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"4534:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1104,"id":1110,"nodeType":"Return","src":"4501:42:4"}]},"documentation":{"id":1095,"nodeType":"StructuredDocumentation","src":"4328:55:4","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":1112,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4397:16:4","nodeType":"FunctionDefinition","overrides":{"id":1101,"nodeType":"OverrideSpecifier","overrides":[],"src":"4467:8:4"},"parameters":{"id":1100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1097,"mutability":"mutable","name":"owner","nameLocation":"4422:5:4","nodeType":"VariableDeclaration","scope":1112,"src":"4414:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1096,"name":"address","nodeType":"ElementaryTypeName","src":"4414:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1099,"mutability":"mutable","name":"operator","nameLocation":"4437:8:4","nodeType":"VariableDeclaration","scope":1112,"src":"4429:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1098,"name":"address","nodeType":"ElementaryTypeName","src":"4429:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4413:33:4"},"returnParameters":{"id":1104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1112,"src":"4485:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1102,"name":"bool","nodeType":"ElementaryTypeName","src":"4485:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4484:6:4"},"scope":1729,"src":"4388:162:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1810],"body":{"id":1138,"nodeType":"Block","src":"4701:207:4","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1125,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"4790:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4790:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1127,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"4804:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1124,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"4771:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":1129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4814:47:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":1123,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4763:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4763:99:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1131,"nodeType":"ExpressionStatement","src":"4763:99:4"},{"expression":{"arguments":[{"id":1133,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"4883:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1134,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"4889:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1135,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"4893:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1132,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"4873:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1137,"nodeType":"ExpressionStatement","src":"4873:28:4"}]},"documentation":{"id":1113,"nodeType":"StructuredDocumentation","src":"4556:51:4","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":1139,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4621:12:4","nodeType":"FunctionDefinition","overrides":{"id":1121,"nodeType":"OverrideSpecifier","overrides":[],"src":"4692:8:4"},"parameters":{"id":1120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1115,"mutability":"mutable","name":"from","nameLocation":"4642:4:4","nodeType":"VariableDeclaration","scope":1139,"src":"4634:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"4634:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1117,"mutability":"mutable","name":"to","nameLocation":"4656:2:4","nodeType":"VariableDeclaration","scope":1139,"src":"4648:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1116,"name":"address","nodeType":"ElementaryTypeName","src":"4648:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1119,"mutability":"mutable","name":"tokenId","nameLocation":"4668:7:4","nodeType":"VariableDeclaration","scope":1139,"src":"4660:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1118,"name":"uint256","nodeType":"ElementaryTypeName","src":"4660:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4633:43:4"},"returnParameters":{"id":1122,"nodeType":"ParameterList","parameters":[],"src":"4701:0:4"},"scope":1729,"src":"4612:296:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1800],"body":{"id":1157,"nodeType":"Block","src":"5067:56:4","statements":[{"expression":{"arguments":[{"id":1151,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"5094:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1152,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"5100:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1153,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"5104:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5113:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1150,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1158,1188],"referencedDeclaration":1188,"src":"5077:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5077:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1156,"nodeType":"ExpressionStatement","src":"5077:39:4"}]},"documentation":{"id":1140,"nodeType":"StructuredDocumentation","src":"4914:55:4","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":1158,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4983:16:4","nodeType":"FunctionDefinition","overrides":{"id":1148,"nodeType":"OverrideSpecifier","overrides":[],"src":"5058:8:4"},"parameters":{"id":1147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"mutability":"mutable","name":"from","nameLocation":"5008:4:4","nodeType":"VariableDeclaration","scope":1158,"src":"5000:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1141,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1144,"mutability":"mutable","name":"to","nameLocation":"5022:2:4","nodeType":"VariableDeclaration","scope":1158,"src":"5014:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1143,"name":"address","nodeType":"ElementaryTypeName","src":"5014:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1146,"mutability":"mutable","name":"tokenId","nameLocation":"5034:7:4","nodeType":"VariableDeclaration","scope":1158,"src":"5026:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1145,"name":"uint256","nodeType":"ElementaryTypeName","src":"5026:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4999:43:4"},"returnParameters":{"id":1149,"nodeType":"ParameterList","parameters":[],"src":"5067:0:4"},"scope":1729,"src":"4974:149:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1790],"body":{"id":1187,"nodeType":"Block","src":"5301:164:4","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1173,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"5338:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5338:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1175,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"5352:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1172,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"5319:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5319:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":1177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5362:47:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":1171,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5311:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5311:99:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1179,"nodeType":"ExpressionStatement","src":"5311:99:4"},{"expression":{"arguments":[{"id":1181,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"5434:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1182,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"5440:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1183,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"5444:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1184,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"5453:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1180,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"5420:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5420:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1186,"nodeType":"ExpressionStatement","src":"5420:38:4"}]},"documentation":{"id":1159,"nodeType":"StructuredDocumentation","src":"5129:55:4","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":1188,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5198:16:4","nodeType":"FunctionDefinition","overrides":{"id":1169,"nodeType":"OverrideSpecifier","overrides":[],"src":"5292:8:4"},"parameters":{"id":1168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1161,"mutability":"mutable","name":"from","nameLocation":"5223:4:4","nodeType":"VariableDeclaration","scope":1188,"src":"5215:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1160,"name":"address","nodeType":"ElementaryTypeName","src":"5215:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1163,"mutability":"mutable","name":"to","nameLocation":"5237:2:4","nodeType":"VariableDeclaration","scope":1188,"src":"5229:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1162,"name":"address","nodeType":"ElementaryTypeName","src":"5229:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1165,"mutability":"mutable","name":"tokenId","nameLocation":"5249:7:4","nodeType":"VariableDeclaration","scope":1188,"src":"5241:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1164,"name":"uint256","nodeType":"ElementaryTypeName","src":"5241:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1167,"mutability":"mutable","name":"data","nameLocation":"5271:4:4","nodeType":"VariableDeclaration","scope":1188,"src":"5258:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1166,"name":"bytes","nodeType":"ElementaryTypeName","src":"5258:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5214:62:4"},"returnParameters":{"id":1170,"nodeType":"ParameterList","parameters":[],"src":"5301:0:4"},"scope":1729,"src":"5189:276:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1216,"nodeType":"Block","src":"6428:165:4","statements":[{"expression":{"arguments":[{"id":1201,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"6448:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1202,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"6454:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1203,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"6458:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1200,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"6438:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6438:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1205,"nodeType":"ExpressionStatement","src":"6438:28:4"},{"expression":{"arguments":[{"arguments":[{"id":1208,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"6507:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1209,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"6513:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1210,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"6517:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1211,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"6526:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1207,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"6484:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6484:47:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6533:52:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1206,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6476:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6476:110:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1215,"nodeType":"ExpressionStatement","src":"6476:110:4"}]},"documentation":{"id":1189,"nodeType":"StructuredDocumentation","src":"5471:850:4","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1217,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"6335:13:4","nodeType":"FunctionDefinition","parameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1191,"mutability":"mutable","name":"from","nameLocation":"6357:4:4","nodeType":"VariableDeclaration","scope":1217,"src":"6349:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1190,"name":"address","nodeType":"ElementaryTypeName","src":"6349:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1193,"mutability":"mutable","name":"to","nameLocation":"6371:2:4","nodeType":"VariableDeclaration","scope":1217,"src":"6363:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1192,"name":"address","nodeType":"ElementaryTypeName","src":"6363:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1195,"mutability":"mutable","name":"tokenId","nameLocation":"6383:7:4","nodeType":"VariableDeclaration","scope":1217,"src":"6375:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1194,"name":"uint256","nodeType":"ElementaryTypeName","src":"6375:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1197,"mutability":"mutable","name":"data","nameLocation":"6405:4:4","nodeType":"VariableDeclaration","scope":1217,"src":"6392:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1196,"name":"bytes","nodeType":"ElementaryTypeName","src":"6392:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6348:62:4"},"returnParameters":{"id":1199,"nodeType":"ParameterList","parameters":[],"src":"6428:0:4"},"scope":1729,"src":"6326:267:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1229,"nodeType":"Block","src":"6777:40:4","statements":[{"expression":{"baseExpression":{"id":1225,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"6794:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1227,"indexExpression":{"id":1226,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"6802:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6794:16:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1224,"id":1228,"nodeType":"Return","src":"6787:23:4"}]},"documentation":{"id":1218,"nodeType":"StructuredDocumentation","src":"6599:98:4","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"},"id":1230,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"6711:8:4","nodeType":"FunctionDefinition","parameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1220,"mutability":"mutable","name":"tokenId","nameLocation":"6728:7:4","nodeType":"VariableDeclaration","scope":1230,"src":"6720:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1219,"name":"uint256","nodeType":"ElementaryTypeName","src":"6720:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6719:17:4"},"returnParameters":{"id":1224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1230,"src":"6768:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1222,"name":"address","nodeType":"ElementaryTypeName","src":"6768:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6767:9:4"},"scope":1729,"src":"6702:115:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1247,"nodeType":"Block","src":"7191:55:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1239,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"7217:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1238,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"7208:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7208:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7237:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7229:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1241,"name":"address","nodeType":"ElementaryTypeName","src":"7229:7:4","typeDescriptions":{}}},"id":1244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7229:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7208:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1237,"id":1246,"nodeType":"Return","src":"7201:38:4"}]},"documentation":{"id":1231,"nodeType":"StructuredDocumentation","src":"6823:292:4","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":1248,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7129:7:4","nodeType":"FunctionDefinition","parameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"tokenId","nameLocation":"7145:7:4","nodeType":"VariableDeclaration","scope":1248,"src":"7137:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1232,"name":"uint256","nodeType":"ElementaryTypeName","src":"7137:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7136:17:4"},"returnParameters":{"id":1237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1248,"src":"7185:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1235,"name":"bool","nodeType":"ElementaryTypeName","src":"7185:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7184:6:4"},"scope":1729,"src":"7120:126:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1281,"nodeType":"Block","src":"7503:162:4","statements":[{"assignments":[1259],"declarations":[{"constant":false,"id":1259,"mutability":"mutable","name":"owner","nameLocation":"7521:5:4","nodeType":"VariableDeclaration","scope":1281,"src":"7513:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1258,"name":"address","nodeType":"ElementaryTypeName","src":"7513:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1264,"initialValue":{"arguments":[{"id":1262,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"7544:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1260,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"7529:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1729_$","typeString":"type(contract ERC721)"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7536:7:4","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":948,"src":"7529:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7529:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7513:39:4"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1265,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"7570:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1266,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"7581:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7570:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1269,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1259,"src":"7607:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1270,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"7614:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1268,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"7590:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7590:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7570:52:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1274,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"7638:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1273,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"7626:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7626:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1276,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"7650:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7626:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7570:87:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1279,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7569:89:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1257,"id":1280,"nodeType":"Return","src":"7562:96:4"}]},"documentation":{"id":1249,"nodeType":"StructuredDocumentation","src":"7252:147:4","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":1282,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"7413:18:4","nodeType":"FunctionDefinition","parameters":{"id":1254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1251,"mutability":"mutable","name":"spender","nameLocation":"7440:7:4","nodeType":"VariableDeclaration","scope":1282,"src":"7432:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1250,"name":"address","nodeType":"ElementaryTypeName","src":"7432:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1253,"mutability":"mutable","name":"tokenId","nameLocation":"7457:7:4","nodeType":"VariableDeclaration","scope":1282,"src":"7449:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1252,"name":"uint256","nodeType":"ElementaryTypeName","src":"7449:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7431:34:4"},"returnParameters":{"id":1257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1282,"src":"7497:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1255,"name":"bool","nodeType":"ElementaryTypeName","src":"7497:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7496:6:4"},"scope":1729,"src":"7404:261:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1296,"nodeType":"Block","src":"8060:43:4","statements":[{"expression":{"arguments":[{"id":1291,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"8080:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1292,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"8084:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8093:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1290,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1297,1326],"referencedDeclaration":1326,"src":"8070:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8070:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1295,"nodeType":"ExpressionStatement","src":"8070:26:4"}]},"documentation":{"id":1283,"nodeType":"StructuredDocumentation","src":"7671:319:4","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1297,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8004:9:4","nodeType":"FunctionDefinition","parameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1285,"mutability":"mutable","name":"to","nameLocation":"8022:2:4","nodeType":"VariableDeclaration","scope":1297,"src":"8014:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1284,"name":"address","nodeType":"ElementaryTypeName","src":"8014:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1287,"mutability":"mutable","name":"tokenId","nameLocation":"8034:7:4","nodeType":"VariableDeclaration","scope":1297,"src":"8026:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1286,"name":"uint256","nodeType":"ElementaryTypeName","src":"8026:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8013:29:4"},"returnParameters":{"id":1289,"nodeType":"ParameterList","parameters":[],"src":"8060:0:4"},"scope":1729,"src":"7995:108:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1325,"nodeType":"Block","src":"8408:195:4","statements":[{"expression":{"arguments":[{"id":1308,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"8424:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1309,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"8428:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1307,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"8418:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8418:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1311,"nodeType":"ExpressionStatement","src":"8418:18:4"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":1316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8498:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8490:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"8490:7:4","typeDescriptions":{}}},"id":1317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8490:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1318,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"8502:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1319,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"8506:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1320,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1304,"src":"8515:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1313,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"8467:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8467:53:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8534:52:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1312,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8446:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8446:150:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1324,"nodeType":"ExpressionStatement","src":"8446:150:4"}]},"documentation":{"id":1298,"nodeType":"StructuredDocumentation","src":"8109:210:4","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1326,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8333:9:4","nodeType":"FunctionDefinition","parameters":{"id":1305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1300,"mutability":"mutable","name":"to","nameLocation":"8351:2:4","nodeType":"VariableDeclaration","scope":1326,"src":"8343:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1299,"name":"address","nodeType":"ElementaryTypeName","src":"8343:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1302,"mutability":"mutable","name":"tokenId","nameLocation":"8363:7:4","nodeType":"VariableDeclaration","scope":1326,"src":"8355:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1301,"name":"uint256","nodeType":"ElementaryTypeName","src":"8355:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1304,"mutability":"mutable","name":"data","nameLocation":"8385:4:4","nodeType":"VariableDeclaration","scope":1326,"src":"8372:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1303,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8342:48:4"},"returnParameters":{"id":1306,"nodeType":"ParameterList","parameters":[],"src":"8408:0:4"},"scope":1729,"src":"8324:279:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1402,"nodeType":"Block","src":"8986:859:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1335,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"9004:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9018:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9010:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1336,"name":"address","nodeType":"ElementaryTypeName","src":"9010:7:4","typeDescriptions":{}}},"id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9010:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9004:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":1341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9022:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":1334,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8996:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8996:61:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1343,"nodeType":"ExpressionStatement","src":"8996:61:4"},{"expression":{"arguments":[{"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9075:17:4","subExpression":{"arguments":[{"id":1346,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"9084:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1345,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"9076:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9076:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":1349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9094:30:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":1344,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9067:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9067:58:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1351,"nodeType":"ExpressionStatement","src":"9067:58:4"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9157:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1353,"name":"address","nodeType":"ElementaryTypeName","src":"9157:7:4","typeDescriptions":{}}},"id":1356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9157:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1357,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"9169:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1358,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"9173:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9182:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1352,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"9136:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9136:48:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1361,"nodeType":"ExpressionStatement","src":"9136:48:4"},{"expression":{"arguments":[{"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9279:17:4","subExpression":{"arguments":[{"id":1364,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"9288:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1363,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"9280:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9280:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":1367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9298:30:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":1362,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9271:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9271:58:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1369,"nodeType":"ExpressionStatement","src":"9271:58:4"},{"id":1376,"nodeType":"UncheckedBlock","src":"9340:360:4","statements":[{"expression":{"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1370,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"9671:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1372,"indexExpression":{"id":1371,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"9681:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9671:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9688:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9671:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1375,"nodeType":"ExpressionStatement","src":"9671:18:4"}]},{"expression":{"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1377,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"9710:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1379,"indexExpression":{"id":1378,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"9718:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9710:16:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1380,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"9729:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9710:21:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1382,"nodeType":"ExpressionStatement","src":"9710:21:4"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9764:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9756:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1384,"name":"address","nodeType":"ElementaryTypeName","src":"9756:7:4","typeDescriptions":{}}},"id":1387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9756:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1388,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"9768:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1389,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"9772:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1383,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"9747:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9747:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1391,"nodeType":"EmitStatement","src":"9742:38:4"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9819:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9811:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1393,"name":"address","nodeType":"ElementaryTypeName","src":"9811:7:4","typeDescriptions":{}}},"id":1396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9811:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1397,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"9823:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1398,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"9827:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9836:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1392,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"9791:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9791:47:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1401,"nodeType":"ExpressionStatement","src":"9791:47:4"}]},"documentation":{"id":1327,"nodeType":"StructuredDocumentation","src":"8609:311:4","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":1403,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8934:5:4","nodeType":"FunctionDefinition","parameters":{"id":1332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1329,"mutability":"mutable","name":"to","nameLocation":"8948:2:4","nodeType":"VariableDeclaration","scope":1403,"src":"8940:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1328,"name":"address","nodeType":"ElementaryTypeName","src":"8940:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1331,"mutability":"mutable","name":"tokenId","nameLocation":"8960:7:4","nodeType":"VariableDeclaration","scope":1403,"src":"8952:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1330,"name":"uint256","nodeType":"ElementaryTypeName","src":"8952:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8939:29:4"},"returnParameters":{"id":1333,"nodeType":"ParameterList","parameters":[],"src":"8986:0:4"},"scope":1729,"src":"8925:920:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1469,"nodeType":"Block","src":"10220:713:4","statements":[{"assignments":[1410],"declarations":[{"constant":false,"id":1410,"mutability":"mutable","name":"owner","nameLocation":"10238:5:4","nodeType":"VariableDeclaration","scope":1469,"src":"10230:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1409,"name":"address","nodeType":"ElementaryTypeName","src":"10230:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1415,"initialValue":{"arguments":[{"id":1413,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"10261:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1411,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"10246:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1729_$","typeString":"type(contract ERC721)"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10253:7:4","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":948,"src":"10246:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10246:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10230:39:4"},{"expression":{"arguments":[{"id":1417,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"10301:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10316:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10308:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1418,"name":"address","nodeType":"ElementaryTypeName","src":"10308:7:4","typeDescriptions":{}}},"id":1421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10308:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1422,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"10320:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10329:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1416,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"10280:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10280:51:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1425,"nodeType":"ExpressionStatement","src":"10280:51:4"},{"expression":{"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1426,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"10433:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1429,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"10456:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1427,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"10441:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1729_$","typeString":"type(contract ERC721)"}},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10448:7:4","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":948,"src":"10441:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10441:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10433:31:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1432,"nodeType":"ExpressionStatement","src":"10433:31:4"},{"expression":{"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10502:31:4","subExpression":{"baseExpression":{"id":1433,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"10509:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1435,"indexExpression":{"id":1434,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"10525:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10509:24:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1437,"nodeType":"ExpressionStatement","src":"10502:31:4"},{"id":1444,"nodeType":"UncheckedBlock","src":"10544:237:4","statements":[{"expression":{"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1438,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"10749:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1440,"indexExpression":{"id":1439,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"10759:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10749:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10769:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10749:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1443,"nodeType":"ExpressionStatement","src":"10749:21:4"}]},{"expression":{"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10790:23:4","subExpression":{"baseExpression":{"id":1445,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"10797:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1447,"indexExpression":{"id":1446,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"10805:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10797:16:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1449,"nodeType":"ExpressionStatement","src":"10790:23:4"},{"eventCall":{"arguments":[{"id":1451,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"10838:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10853:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10845:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1452,"name":"address","nodeType":"ElementaryTypeName","src":"10845:7:4","typeDescriptions":{}}},"id":1455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10845:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1456,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"10857:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1450,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"10829:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10829:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1458,"nodeType":"EmitStatement","src":"10824:41:4"},{"expression":{"arguments":[{"id":1460,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"10896:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10911:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10903:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1461,"name":"address","nodeType":"ElementaryTypeName","src":"10903:7:4","typeDescriptions":{}}},"id":1464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10903:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1465,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"10915:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10924:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1459,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"10876:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10876:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1468,"nodeType":"ExpressionStatement","src":"10876:50:4"}]},"documentation":{"id":1404,"nodeType":"StructuredDocumentation","src":"9851:315:4","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1470,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"10180:5:4","nodeType":"FunctionDefinition","parameters":{"id":1407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1406,"mutability":"mutable","name":"tokenId","nameLocation":"10194:7:4","nodeType":"VariableDeclaration","scope":1470,"src":"10186:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1405,"name":"uint256","nodeType":"ElementaryTypeName","src":"10186:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10185:17:4"},"returnParameters":{"id":1408,"nodeType":"ParameterList","parameters":[],"src":"10220:0:4"},"scope":1729,"src":"10171:762:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1554,"nodeType":"Block","src":"11336:1124:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1483,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"11369:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1481,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"11354:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1729_$","typeString":"type(contract ERC721)"}},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11361:7:4","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":948,"src":"11354:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11354:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1485,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"11381:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11354:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11387:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":1480,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11346:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11346:81:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1489,"nodeType":"ExpressionStatement","src":"11346:81:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1491,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"11445:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11459:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11451:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1492,"name":"address","nodeType":"ElementaryTypeName","src":"11451:7:4","typeDescriptions":{}}},"id":1495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11451:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11445:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":1497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11463:38:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":1490,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11437:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11437:65:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1499,"nodeType":"ExpressionStatement","src":"11437:65:4"},{"expression":{"arguments":[{"id":1501,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"11534:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1502,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"11540:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1503,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"11544:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11553:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1500,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"11513:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11513:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1506,"nodeType":"ExpressionStatement","src":"11513:42:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1510,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"11670:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1508,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"11655:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1729_$","typeString":"type(contract ERC721)"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11662:7:4","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":948,"src":"11655:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11655:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1512,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"11682:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11655:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":1514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11688:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":1507,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11647:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11647:81:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1516,"nodeType":"ExpressionStatement","src":"11647:81:4"},{"expression":{"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"11790:31:4","subExpression":{"baseExpression":{"id":1517,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"11797:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1519,"indexExpression":{"id":1518,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"11813:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11797:24:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1521,"nodeType":"ExpressionStatement","src":"11790:31:4"},{"id":1534,"nodeType":"UncheckedBlock","src":"11832:496:4","statements":[{"expression":{"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1522,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"12265:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1524,"indexExpression":{"id":1523,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"12275:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12265:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12284:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12265:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1527,"nodeType":"ExpressionStatement","src":"12265:20:4"},{"expression":{"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1528,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"12299:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1530,"indexExpression":{"id":1529,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"12309:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12299:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12299:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1533,"nodeType":"ExpressionStatement","src":"12299:18:4"}]},{"expression":{"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1535,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"12337:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1537,"indexExpression":{"id":1536,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"12345:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12337:16:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1538,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"12356:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12337:21:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1540,"nodeType":"ExpressionStatement","src":"12337:21:4"},{"eventCall":{"arguments":[{"id":1542,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"12383:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1543,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"12389:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1544,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"12393:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1541,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"12374:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12374:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1546,"nodeType":"EmitStatement","src":"12369:32:4"},{"expression":{"arguments":[{"id":1548,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"12432:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1549,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"12438:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1550,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"12442:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1547,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"12412:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12412:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1553,"nodeType":"ExpressionStatement","src":"12412:41:4"}]},"documentation":{"id":1471,"nodeType":"StructuredDocumentation","src":"10939:313:4","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1555,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11266:9:4","nodeType":"FunctionDefinition","parameters":{"id":1478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1473,"mutability":"mutable","name":"from","nameLocation":"11284:4:4","nodeType":"VariableDeclaration","scope":1555,"src":"11276:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1472,"name":"address","nodeType":"ElementaryTypeName","src":"11276:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1475,"mutability":"mutable","name":"to","nameLocation":"11298:2:4","nodeType":"VariableDeclaration","scope":1555,"src":"11290:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1474,"name":"address","nodeType":"ElementaryTypeName","src":"11290:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1477,"mutability":"mutable","name":"tokenId","nameLocation":"11310:7:4","nodeType":"VariableDeclaration","scope":1555,"src":"11302:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1476,"name":"uint256","nodeType":"ElementaryTypeName","src":"11302:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11275:43:4"},"returnParameters":{"id":1479,"nodeType":"ParameterList","parameters":[],"src":"11336:0:4"},"scope":1729,"src":"11257:1203:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1578,"nodeType":"Block","src":"12636:107:4","statements":[{"expression":{"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1563,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"12646:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1565,"indexExpression":{"id":1564,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"12662:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12646:24:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1566,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"12673:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12646:29:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1568,"nodeType":"ExpressionStatement","src":"12646:29:4"},{"eventCall":{"arguments":[{"arguments":[{"id":1572,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"12714:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1570,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"12699:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1729_$","typeString":"type(contract ERC721)"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12706:7:4","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":948,"src":"12699:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12699:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1574,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"12724:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1575,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"12728:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1569,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"12690:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12690:46:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1577,"nodeType":"EmitStatement","src":"12685:51:4"}]},"documentation":{"id":1556,"nodeType":"StructuredDocumentation","src":"12466:101:4","text":" @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."},"id":1579,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"12581:8:4","nodeType":"FunctionDefinition","parameters":{"id":1561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1558,"mutability":"mutable","name":"to","nameLocation":"12598:2:4","nodeType":"VariableDeclaration","scope":1579,"src":"12590:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1557,"name":"address","nodeType":"ElementaryTypeName","src":"12590:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1560,"mutability":"mutable","name":"tokenId","nameLocation":"12610:7:4","nodeType":"VariableDeclaration","scope":1579,"src":"12602:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1559,"name":"uint256","nodeType":"ElementaryTypeName","src":"12602:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12589:29:4"},"returnParameters":{"id":1562,"nodeType":"ParameterList","parameters":[],"src":"12636:0:4"},"scope":1729,"src":"12572:171:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1610,"nodeType":"Block","src":"12972:184:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1590,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"12990:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1591,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"12999:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12990:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":1593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13009:27:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":1589,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12982:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12982:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1595,"nodeType":"ExpressionStatement","src":"12982:55:4"},{"expression":{"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1596,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"13047:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1599,"indexExpression":{"id":1597,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"13066:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13047:25:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1600,"indexExpression":{"id":1598,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"13073:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13047:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1601,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"13085:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13047:46:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1603,"nodeType":"ExpressionStatement","src":"13047:46:4"},{"eventCall":{"arguments":[{"id":1605,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"13123:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1606,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"13130:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1607,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"13140:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1604,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"13108:14:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13108:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1609,"nodeType":"EmitStatement","src":"13103:46:4"}]},"documentation":{"id":1580,"nodeType":"StructuredDocumentation","src":"12749:125:4","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":1611,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"12888:18:4","nodeType":"FunctionDefinition","parameters":{"id":1587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1582,"mutability":"mutable","name":"owner","nameLocation":"12915:5:4","nodeType":"VariableDeclaration","scope":1611,"src":"12907:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1581,"name":"address","nodeType":"ElementaryTypeName","src":"12907:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1584,"mutability":"mutable","name":"operator","nameLocation":"12930:8:4","nodeType":"VariableDeclaration","scope":1611,"src":"12922:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1583,"name":"address","nodeType":"ElementaryTypeName","src":"12922:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1586,"mutability":"mutable","name":"approved","nameLocation":"12945:8:4","nodeType":"VariableDeclaration","scope":1611,"src":"12940:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1585,"name":"bool","nodeType":"ElementaryTypeName","src":"12940:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12906:48:4"},"returnParameters":{"id":1588,"nodeType":"ParameterList","parameters":[],"src":"12972:0:4"},"scope":1729,"src":"12879:277:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1624,"nodeType":"Block","src":"13303:70:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":1619,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"13329:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1618,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"13321:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13321:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":1621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13339:26:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":1617,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13313:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13313:53:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1623,"nodeType":"ExpressionStatement","src":"13313:53:4"}]},"documentation":{"id":1612,"nodeType":"StructuredDocumentation","src":"13162:73:4","text":" @dev Reverts if the `tokenId` has not been minted yet."},"id":1625,"implemented":true,"kind":"function","modifiers":[],"name":"_requireMinted","nameLocation":"13249:14:4","nodeType":"FunctionDefinition","parameters":{"id":1615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"tokenId","nameLocation":"13272:7:4","nodeType":"VariableDeclaration","scope":1625,"src":"13264:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1613,"name":"uint256","nodeType":"ElementaryTypeName","src":"13264:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13263:17:4"},"returnParameters":{"id":1616,"nodeType":"ParameterList","parameters":[],"src":"13303:0:4"},"scope":1729,"src":"13240:133:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1686,"nodeType":"Block","src":"14080:676:4","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1639,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"14094:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14097:10:4","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1939,"src":"14094:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14094:15:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1684,"nodeType":"Block","src":"14714:36:4","statements":[{"expression":{"hexValue":"74727565","id":1682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14735:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1638,"id":1683,"nodeType":"Return","src":"14728:11:4"}]},"id":1685,"nodeType":"IfStatement","src":"14090:660:4","trueBody":{"id":1681,"nodeType":"Block","src":"14111:597:4","statements":[{"clauses":[{"block":{"id":1661,"nodeType":"Block","src":"14225:91:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1655,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"14250:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1656,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"14260:15:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1863_$","typeString":"type(contract IERC721Receiver)"}},"id":1657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14276:16:4","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1862,"src":"14260:32:4","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14293:8:4","memberName":"selector","nodeType":"MemberAccess","src":"14260:41:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"14250:51:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1638,"id":1660,"nodeType":"Return","src":"14243:58:4"}]},"errorName":"","id":1662,"nodeType":"TryCatchClause","parameters":{"id":1654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1653,"mutability":"mutable","name":"retval","nameLocation":"14217:6:4","nodeType":"VariableDeclaration","scope":1662,"src":"14210:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1652,"name":"bytes4","nodeType":"ElementaryTypeName","src":"14210:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"14209:15:4"},"src":"14201:115:4"},{"block":{"id":1678,"nodeType":"Block","src":"14345:353:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1666,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"14367:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14374:6:4","memberName":"length","nodeType":"MemberAccess","src":"14367:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14384:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14367:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1676,"nodeType":"Block","src":"14494:190:4","statements":[{"AST":{"nodeType":"YulBlock","src":"14580:86:4","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14617:2:4","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"14621:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14613:3:4"},"nodeType":"YulFunctionCall","src":"14613:15:4"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"14636:6:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14630:5:4"},"nodeType":"YulFunctionCall","src":"14630:13:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14606:6:4"},"nodeType":"YulFunctionCall","src":"14606:38:4"},"nodeType":"YulExpressionStatement","src":"14606:38:4"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1664,"isOffset":false,"isSlot":false,"src":"14621:6:4","valueSize":1},{"declaration":1664,"isOffset":false,"isSlot":false,"src":"14636:6:4","valueSize":1}],"id":1675,"nodeType":"InlineAssembly","src":"14571:95:4"}]},"id":1677,"nodeType":"IfStatement","src":"14363:321:4","trueBody":{"id":1674,"nodeType":"Block","src":"14387:101:4","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14416:52:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1670,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"14409:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14409:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1673,"nodeType":"ExpressionStatement","src":"14409:60:4"}]}}]},"errorName":"","id":1679,"nodeType":"TryCatchClause","parameters":{"id":1665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1664,"mutability":"mutable","name":"reason","nameLocation":"14337:6:4","nodeType":"VariableDeclaration","scope":1679,"src":"14324:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1663,"name":"bytes","nodeType":"ElementaryTypeName","src":"14324:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14323:21:4"},"src":"14317:381:4"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1646,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"14166:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14166:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1648,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"14180:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1649,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"14186:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1650,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"14195:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1643,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"14145:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1642,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"14129:15:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1863_$","typeString":"type(contract IERC721Receiver)"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14129:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1863","typeString":"contract IERC721Receiver"}},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14149:16:4","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1862,"src":"14129:36:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14129:71:4","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1680,"nodeType":"TryStatement","src":"14125:573:4"}]}}]},"documentation":{"id":1626,"nodeType":"StructuredDocumentation","src":"13379:541:4","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":1687,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"13934:22:4","nodeType":"FunctionDefinition","parameters":{"id":1635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1628,"mutability":"mutable","name":"from","nameLocation":"13974:4:4","nodeType":"VariableDeclaration","scope":1687,"src":"13966:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1627,"name":"address","nodeType":"ElementaryTypeName","src":"13966:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1630,"mutability":"mutable","name":"to","nameLocation":"13996:2:4","nodeType":"VariableDeclaration","scope":1687,"src":"13988:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1629,"name":"address","nodeType":"ElementaryTypeName","src":"13988:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1632,"mutability":"mutable","name":"tokenId","nameLocation":"14016:7:4","nodeType":"VariableDeclaration","scope":1687,"src":"14008:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1631,"name":"uint256","nodeType":"ElementaryTypeName","src":"14008:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1634,"mutability":"mutable","name":"data","nameLocation":"14046:4:4","nodeType":"VariableDeclaration","scope":1687,"src":"14033:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1633,"name":"bytes","nodeType":"ElementaryTypeName","src":"14033:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13956:100:4"},"returnParameters":{"id":1638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1687,"src":"14074:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1636,"name":"bool","nodeType":"ElementaryTypeName","src":"14074:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14073:6:4"},"scope":1729,"src":"13925:831:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1699,"nodeType":"Block","src":"15586:2:4","statements":[]},"documentation":{"id":1688,"nodeType":"StructuredDocumentation","src":"14762:705:4","text":" @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1700,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"15481:20:4","nodeType":"FunctionDefinition","parameters":{"id":1697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1690,"mutability":"mutable","name":"from","nameLocation":"15510:4:4","nodeType":"VariableDeclaration","scope":1700,"src":"15502:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1689,"name":"address","nodeType":"ElementaryTypeName","src":"15502:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1692,"mutability":"mutable","name":"to","nameLocation":"15524:2:4","nodeType":"VariableDeclaration","scope":1700,"src":"15516:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1691,"name":"address","nodeType":"ElementaryTypeName","src":"15516:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1694,"mutability":"mutable","name":"firstTokenId","nameLocation":"15536:12:4","nodeType":"VariableDeclaration","scope":1700,"src":"15528:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1693,"name":"uint256","nodeType":"ElementaryTypeName","src":"15528:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1696,"mutability":"mutable","name":"batchSize","nameLocation":"15558:9:4","nodeType":"VariableDeclaration","scope":1700,"src":"15550:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1695,"name":"uint256","nodeType":"ElementaryTypeName","src":"15550:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15501:67:4"},"returnParameters":{"id":1698,"nodeType":"ParameterList","parameters":[],"src":"15586:0:4"},"scope":1729,"src":"15472:116:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1712,"nodeType":"Block","src":"16407:2:4","statements":[]},"documentation":{"id":1701,"nodeType":"StructuredDocumentation","src":"15594:695:4","text":" @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1713,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"16303:19:4","nodeType":"FunctionDefinition","parameters":{"id":1710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1703,"mutability":"mutable","name":"from","nameLocation":"16331:4:4","nodeType":"VariableDeclaration","scope":1713,"src":"16323:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1702,"name":"address","nodeType":"ElementaryTypeName","src":"16323:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1705,"mutability":"mutable","name":"to","nameLocation":"16345:2:4","nodeType":"VariableDeclaration","scope":1713,"src":"16337:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1704,"name":"address","nodeType":"ElementaryTypeName","src":"16337:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1707,"mutability":"mutable","name":"firstTokenId","nameLocation":"16357:12:4","nodeType":"VariableDeclaration","scope":1713,"src":"16349:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1706,"name":"uint256","nodeType":"ElementaryTypeName","src":"16349:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1709,"mutability":"mutable","name":"batchSize","nameLocation":"16379:9:4","nodeType":"VariableDeclaration","scope":1713,"src":"16371:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1708,"name":"uint256","nodeType":"ElementaryTypeName","src":"16371:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16322:67:4"},"returnParameters":{"id":1711,"nodeType":"ParameterList","parameters":[],"src":"16407:0:4"},"scope":1729,"src":"16294:115:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1727,"nodeType":"Block","src":"16958:45:4","statements":[{"expression":{"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1721,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"16968:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1723,"indexExpression":{"id":1722,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"16978:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16968:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1724,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"16990:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16968:28:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1726,"nodeType":"ExpressionStatement","src":"16968:28:4"}]},"documentation":{"id":1714,"nodeType":"StructuredDocumentation","src":"16415:409:4","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n that `ownerOf(tokenId)` is `a`."},"id":1728,"implemented":true,"kind":"function","modifiers":[],"name":"__unsafe_increaseBalance","nameLocation":"16891:24:4","nodeType":"FunctionDefinition","parameters":{"id":1719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1716,"mutability":"mutable","name":"account","nameLocation":"16924:7:4","nodeType":"VariableDeclaration","scope":1728,"src":"16916:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1715,"name":"address","nodeType":"ElementaryTypeName","src":"16916:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1718,"mutability":"mutable","name":"amount","nameLocation":"16941:6:4","nodeType":"VariableDeclaration","scope":1728,"src":"16933:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1717,"name":"uint256","nodeType":"ElementaryTypeName","src":"16933:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16915:33:4"},"returnParameters":{"id":1720,"nodeType":"ParameterList","parameters":[],"src":"16958:0:4"},"scope":1729,"src":"16882:121:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1730,"src":"628:16377:4","usedErrors":[]}],"src":"107:16899:4"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"id":5,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[2538],"IERC721":[1845]},"id":1846,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1731,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:5"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1732,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1846,"sourceUnit":2539,"src":"133:47:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1734,"name":"IERC165","nameLocations":["271:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":2538,"src":"271:7:5"},"id":1735,"nodeType":"InheritanceSpecifier","src":"271:7:5"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1733,"nodeType":"StructuredDocumentation","src":"182:67:5","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":1845,"linearizedBaseContracts":[1845,2538],"name":"IERC721","nameLocation":"260:7:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1736,"nodeType":"StructuredDocumentation","src":"285:88:5","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1744,"name":"Transfer","nameLocation":"384:8:5","nodeType":"EventDefinition","parameters":{"id":1743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1738,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:5","nodeType":"VariableDeclaration","scope":1744,"src":"393:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1737,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1740,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:5","nodeType":"VariableDeclaration","scope":1744,"src":"415:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1739,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1742,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:5","nodeType":"VariableDeclaration","scope":1744,"src":"435:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1741,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:5"},"src":"378:82:5"},{"anonymous":false,"documentation":{"id":1745,"nodeType":"StructuredDocumentation","src":"466:94:5","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1753,"name":"Approval","nameLocation":"571:8:5","nodeType":"EventDefinition","parameters":{"id":1752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1747,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:5","nodeType":"VariableDeclaration","scope":1753,"src":"580:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1746,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1749,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:5","nodeType":"VariableDeclaration","scope":1753,"src":"603:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1748,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1751,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:5","nodeType":"VariableDeclaration","scope":1753,"src":"629:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1750,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:5"},"src":"565:89:5"},{"anonymous":false,"documentation":{"id":1754,"nodeType":"StructuredDocumentation","src":"660:117:5","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1762,"name":"ApprovalForAll","nameLocation":"788:14:5","nodeType":"EventDefinition","parameters":{"id":1761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1756,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:5","nodeType":"VariableDeclaration","scope":1762,"src":"803:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1755,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1758,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:5","nodeType":"VariableDeclaration","scope":1762,"src":"826:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1757,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1760,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:5","nodeType":"VariableDeclaration","scope":1762,"src":"852:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1759,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:5"},"src":"782:85:5"},{"documentation":{"id":1763,"nodeType":"StructuredDocumentation","src":"873:76:5","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1770,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:5","nodeType":"FunctionDefinition","parameters":{"id":1766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1765,"mutability":"mutable","name":"owner","nameLocation":"981:5:5","nodeType":"VariableDeclaration","scope":1770,"src":"973:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1764,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:5"},"returnParameters":{"id":1769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1768,"mutability":"mutable","name":"balance","nameLocation":"1019:7:5","nodeType":"VariableDeclaration","scope":1770,"src":"1011:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1767,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:5"},"scope":1845,"src":"954:74:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1771,"nodeType":"StructuredDocumentation","src":"1034:131:5","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1778,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:5","nodeType":"FunctionDefinition","parameters":{"id":1774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1773,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:5","nodeType":"VariableDeclaration","scope":1778,"src":"1187:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1772,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:5"},"returnParameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1776,"mutability":"mutable","name":"owner","nameLocation":"1235:5:5","nodeType":"VariableDeclaration","scope":1778,"src":"1227:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1775,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:5"},"scope":1845,"src":"1170:72:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1779,"nodeType":"StructuredDocumentation","src":"1248:556:5","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1790,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:5","nodeType":"FunctionDefinition","parameters":{"id":1788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1781,"mutability":"mutable","name":"from","nameLocation":"1843:4:5","nodeType":"VariableDeclaration","scope":1790,"src":"1835:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1780,"name":"address","nodeType":"ElementaryTypeName","src":"1835:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1783,"mutability":"mutable","name":"to","nameLocation":"1857:2:5","nodeType":"VariableDeclaration","scope":1790,"src":"1849:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1782,"name":"address","nodeType":"ElementaryTypeName","src":"1849:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1785,"mutability":"mutable","name":"tokenId","nameLocation":"1869:7:5","nodeType":"VariableDeclaration","scope":1790,"src":"1861:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1784,"name":"uint256","nodeType":"ElementaryTypeName","src":"1861:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1787,"mutability":"mutable","name":"data","nameLocation":"1893:4:5","nodeType":"VariableDeclaration","scope":1790,"src":"1878:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1786,"name":"bytes","nodeType":"ElementaryTypeName","src":"1878:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:64:5"},"returnParameters":{"id":1789,"nodeType":"ParameterList","parameters":[],"src":"1907:0:5"},"scope":1845,"src":"1809:99:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1791,"nodeType":"StructuredDocumentation","src":"1914:687:5","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1800,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2615:16:5","nodeType":"FunctionDefinition","parameters":{"id":1798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1793,"mutability":"mutable","name":"from","nameLocation":"2640:4:5","nodeType":"VariableDeclaration","scope":1800,"src":"2632:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1792,"name":"address","nodeType":"ElementaryTypeName","src":"2632:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1795,"mutability":"mutable","name":"to","nameLocation":"2654:2:5","nodeType":"VariableDeclaration","scope":1800,"src":"2646:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1794,"name":"address","nodeType":"ElementaryTypeName","src":"2646:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1797,"mutability":"mutable","name":"tokenId","nameLocation":"2666:7:5","nodeType":"VariableDeclaration","scope":1800,"src":"2658:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1796,"name":"uint256","nodeType":"ElementaryTypeName","src":"2658:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2631:43:5"},"returnParameters":{"id":1799,"nodeType":"ParameterList","parameters":[],"src":"2683:0:5"},"scope":1845,"src":"2606:78:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1801,"nodeType":"StructuredDocumentation","src":"2690:732:5","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1810,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3436:12:5","nodeType":"FunctionDefinition","parameters":{"id":1808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1803,"mutability":"mutable","name":"from","nameLocation":"3457:4:5","nodeType":"VariableDeclaration","scope":1810,"src":"3449:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1802,"name":"address","nodeType":"ElementaryTypeName","src":"3449:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1805,"mutability":"mutable","name":"to","nameLocation":"3471:2:5","nodeType":"VariableDeclaration","scope":1810,"src":"3463:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1804,"name":"address","nodeType":"ElementaryTypeName","src":"3463:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1807,"mutability":"mutable","name":"tokenId","nameLocation":"3483:7:5","nodeType":"VariableDeclaration","scope":1810,"src":"3475:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1806,"name":"uint256","nodeType":"ElementaryTypeName","src":"3475:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3448:43:5"},"returnParameters":{"id":1809,"nodeType":"ParameterList","parameters":[],"src":"3500:0:5"},"scope":1845,"src":"3427:74:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1811,"nodeType":"StructuredDocumentation","src":"3507:452:5","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1818,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3973:7:5","nodeType":"FunctionDefinition","parameters":{"id":1816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1813,"mutability":"mutable","name":"to","nameLocation":"3989:2:5","nodeType":"VariableDeclaration","scope":1818,"src":"3981:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1812,"name":"address","nodeType":"ElementaryTypeName","src":"3981:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1815,"mutability":"mutable","name":"tokenId","nameLocation":"4001:7:5","nodeType":"VariableDeclaration","scope":1818,"src":"3993:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1814,"name":"uint256","nodeType":"ElementaryTypeName","src":"3993:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3980:29:5"},"returnParameters":{"id":1817,"nodeType":"ParameterList","parameters":[],"src":"4018:0:5"},"scope":1845,"src":"3964:55:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1819,"nodeType":"StructuredDocumentation","src":"4025:309:5","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1826,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4348:17:5","nodeType":"FunctionDefinition","parameters":{"id":1824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1821,"mutability":"mutable","name":"operator","nameLocation":"4374:8:5","nodeType":"VariableDeclaration","scope":1826,"src":"4366:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1820,"name":"address","nodeType":"ElementaryTypeName","src":"4366:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1823,"mutability":"mutable","name":"approved","nameLocation":"4389:8:5","nodeType":"VariableDeclaration","scope":1826,"src":"4384:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1822,"name":"bool","nodeType":"ElementaryTypeName","src":"4384:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:33:5"},"returnParameters":{"id":1825,"nodeType":"ParameterList","parameters":[],"src":"4407:0:5"},"scope":1845,"src":"4339:69:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1827,"nodeType":"StructuredDocumentation","src":"4414:139:5","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1834,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4567:11:5","nodeType":"FunctionDefinition","parameters":{"id":1830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1829,"mutability":"mutable","name":"tokenId","nameLocation":"4587:7:5","nodeType":"VariableDeclaration","scope":1834,"src":"4579:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1828,"name":"uint256","nodeType":"ElementaryTypeName","src":"4579:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4578:17:5"},"returnParameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"operator","nameLocation":"4627:8:5","nodeType":"VariableDeclaration","scope":1834,"src":"4619:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1831,"name":"address","nodeType":"ElementaryTypeName","src":"4619:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4618:18:5"},"scope":1845,"src":"4558:79:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1835,"nodeType":"StructuredDocumentation","src":"4643:138:5","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1844,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4795:16:5","nodeType":"FunctionDefinition","parameters":{"id":1840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1837,"mutability":"mutable","name":"owner","nameLocation":"4820:5:5","nodeType":"VariableDeclaration","scope":1844,"src":"4812:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1836,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1839,"mutability":"mutable","name":"operator","nameLocation":"4835:8:5","nodeType":"VariableDeclaration","scope":1844,"src":"4827:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1838,"name":"address","nodeType":"ElementaryTypeName","src":"4827:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4811:33:5"},"returnParameters":{"id":1843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1844,"src":"4868:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1841,"name":"bool","nodeType":"ElementaryTypeName","src":"4868:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4867:6:5"},"scope":1845,"src":"4786:88:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1846,"src":"250:4626:5","usedErrors":[]}],"src":"108:4769:5"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"id":6,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1863]},"id":1864,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1847,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1848,"nodeType":"StructuredDocumentation","src":"141:152:6","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":1863,"linearizedBaseContracts":[1863],"name":"IERC721Receiver","nameLocation":"304:15:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1849,"nodeType":"StructuredDocumentation","src":"326:493:6","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1862,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:6","nodeType":"FunctionDefinition","parameters":{"id":1858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1851,"mutability":"mutable","name":"operator","nameLocation":"867:8:6","nodeType":"VariableDeclaration","scope":1862,"src":"859:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1850,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1853,"mutability":"mutable","name":"from","nameLocation":"893:4:6","nodeType":"VariableDeclaration","scope":1862,"src":"885:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1852,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1855,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:6","nodeType":"VariableDeclaration","scope":1862,"src":"907:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1854,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1857,"mutability":"mutable","name":"data","nameLocation":"947:4:6","nodeType":"VariableDeclaration","scope":1862,"src":"932:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1856,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:6"},"returnParameters":{"id":1861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1862,"src":"976:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1859,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:6"},"scope":1863,"src":"824:160:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1864,"src":"294:692:6","usedErrors":[]}],"src":"116:871:6"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"id":7,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","exportedSymbols":{"IERC165":[2538],"IERC721":[1845],"IERC721Enumerable":[1894]},"id":1895,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1865,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"129:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1866,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1895,"sourceUnit":1846,"src":"154:24:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1868,"name":"IERC721","nameLocations":["348:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1845,"src":"348:7:7"},"id":1869,"nodeType":"InheritanceSpecifier","src":"348:7:7"}],"canonicalName":"IERC721Enumerable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1867,"nodeType":"StructuredDocumentation","src":"180:136:7","text":" @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1894,"linearizedBaseContracts":[1894,1845,2538],"name":"IERC721Enumerable","nameLocation":"327:17:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1870,"nodeType":"StructuredDocumentation","src":"362:82:7","text":" @dev Returns the total amount of tokens stored by the contract."},"functionSelector":"18160ddd","id":1875,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"458:11:7","nodeType":"FunctionDefinition","parameters":{"id":1871,"nodeType":"ParameterList","parameters":[],"src":"469:2:7"},"returnParameters":{"id":1874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1875,"src":"495:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1872,"name":"uint256","nodeType":"ElementaryTypeName","src":"495:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"494:9:7"},"scope":1894,"src":"449:55:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1876,"nodeType":"StructuredDocumentation","src":"510:171:7","text":" @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"functionSelector":"2f745c59","id":1885,"implemented":false,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"695:19:7","nodeType":"FunctionDefinition","parameters":{"id":1881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1878,"mutability":"mutable","name":"owner","nameLocation":"723:5:7","nodeType":"VariableDeclaration","scope":1885,"src":"715:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1877,"name":"address","nodeType":"ElementaryTypeName","src":"715:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1880,"mutability":"mutable","name":"index","nameLocation":"738:5:7","nodeType":"VariableDeclaration","scope":1885,"src":"730:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1879,"name":"uint256","nodeType":"ElementaryTypeName","src":"730:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"714:30:7"},"returnParameters":{"id":1884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1885,"src":"768:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1882,"name":"uint256","nodeType":"ElementaryTypeName","src":"768:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"767:9:7"},"scope":1894,"src":"686:91:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1886,"nodeType":"StructuredDocumentation","src":"783:164:7","text":" @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."},"functionSelector":"4f6ccce7","id":1893,"implemented":false,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"961:12:7","nodeType":"FunctionDefinition","parameters":{"id":1889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1888,"mutability":"mutable","name":"index","nameLocation":"982:5:7","nodeType":"VariableDeclaration","scope":1893,"src":"974:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1887,"name":"uint256","nodeType":"ElementaryTypeName","src":"974:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"973:15:7"},"returnParameters":{"id":1892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1893,"src":"1012:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1890,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1011:9:7"},"scope":1894,"src":"952:69:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1895,"src":"317:706:7","usedErrors":[]}],"src":"129:895:7"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"id":8,"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[2538],"IERC721":[1845],"IERC721Metadata":[1921]},"id":1922,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1896,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1897,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1922,"sourceUnit":1846,"src":"137:24:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1899,"name":"IERC721","nameLocations":["326:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":1845,"src":"326:7:8"},"id":1900,"nodeType":"InheritanceSpecifier","src":"326:7:8"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1898,"nodeType":"StructuredDocumentation","src":"163:133:8","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1921,"linearizedBaseContracts":[1921,1845,2538],"name":"IERC721Metadata","nameLocation":"307:15:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1901,"nodeType":"StructuredDocumentation","src":"340:58:8","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1906,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"412:4:8","nodeType":"FunctionDefinition","parameters":{"id":1902,"nodeType":"ParameterList","parameters":[],"src":"416:2:8"},"returnParameters":{"id":1905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1906,"src":"442:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1903,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"441:15:8"},"scope":1921,"src":"403:54:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1907,"nodeType":"StructuredDocumentation","src":"463:60:8","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1912,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"537:6:8","nodeType":"FunctionDefinition","parameters":{"id":1908,"nodeType":"ParameterList","parameters":[],"src":"543:2:8"},"returnParameters":{"id":1911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1912,"src":"569:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1909,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"568:15:8"},"scope":1921,"src":"528:56:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1913,"nodeType":"StructuredDocumentation","src":"590:90:8","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1920,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"694:8:8","nodeType":"FunctionDefinition","parameters":{"id":1916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1915,"mutability":"mutable","name":"tokenId","nameLocation":"711:7:8","nodeType":"VariableDeclaration","scope":1920,"src":"703:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1914,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"702:17:8"},"returnParameters":{"id":1919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1920,"src":"743:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1917,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"742:15:8"},"scope":1921,"src":"685:73:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1922,"src":"297:463:8","usedErrors":[]}],"src":"112:649:8"}},"@openzeppelin/contracts/utils/Address.sol":{"id":9,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2251]},"id":2252,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1923,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1924,"nodeType":"StructuredDocumentation","src":"126:67:9","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2251,"linearizedBaseContracts":[2251],"name":"Address","nameLocation":"202:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1938,"nodeType":"Block","src":"1478:254:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1932,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"1702:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:4:9","memberName":"code","nodeType":"MemberAccess","src":"1702:12:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:9","memberName":"length","nodeType":"MemberAccess","src":"1702:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1931,"id":1937,"nodeType":"Return","src":"1695:30:9"}]},"documentation":{"id":1925,"nodeType":"StructuredDocumentation","src":"216:1191:9","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1939,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:9","nodeType":"FunctionDefinition","parameters":{"id":1928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1927,"mutability":"mutable","name":"account","nameLocation":"1440:7:9","nodeType":"VariableDeclaration","scope":1939,"src":"1432:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1926,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:9"},"returnParameters":{"id":1931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1939,"src":"1472:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1929,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:9"},"scope":2251,"src":"1412:320:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1972,"nodeType":"Block","src":"2718:241:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1950,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2251","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2251","typeString":"library Address"}],"id":1949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1948,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:9","typeDescriptions":{}}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2736:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:7:9","memberName":"balance","nodeType":"MemberAccess","src":"2736:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1953,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"2761:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1947,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1957,"nodeType":"ExpressionStatement","src":"2728:73:9"},{"assignments":[1959,null],"declarations":[{"constant":false,"id":1959,"mutability":"mutable","name":"success","nameLocation":"2818:7:9","nodeType":"VariableDeclaration","scope":1972,"src":"2813:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1958,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1966,"initialValue":{"arguments":[{"hexValue":"","id":1964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1960,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"2831:9:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2841:4:9","memberName":"call","nodeType":"MemberAccess","src":"2831:14:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1962,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"2853:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:9"},{"expression":{"arguments":[{"id":1968,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"2882:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1967,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:78:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1971,"nodeType":"ExpressionStatement","src":"2874:78:9"}]},"documentation":{"id":1940,"nodeType":"StructuredDocumentation","src":"1738:904:9","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1973,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:9","nodeType":"FunctionDefinition","parameters":{"id":1945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1942,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:9","nodeType":"VariableDeclaration","scope":1973,"src":"2666:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1941,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1944,"mutability":"mutable","name":"amount","nameLocation":"2701:6:9","nodeType":"VariableDeclaration","scope":1973,"src":"2693:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1943,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:9"},"returnParameters":{"id":1946,"nodeType":"ParameterList","parameters":[],"src":"2718:0:9"},"scope":2251,"src":"2647:312:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1990,"nodeType":"Block","src":"3790:96:9","statements":[{"expression":{"arguments":[{"id":1984,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"3829:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1985,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"3837:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1983,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2031,2075],"referencedDeclaration":2075,"src":"3807:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:72:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1982,"id":1989,"nodeType":"Return","src":"3800:79:9"}]},"documentation":{"id":1974,"nodeType":"StructuredDocumentation","src":"2965:731:9","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1991,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:9","nodeType":"FunctionDefinition","parameters":{"id":1979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1976,"mutability":"mutable","name":"target","nameLocation":"3731:6:9","nodeType":"VariableDeclaration","scope":1991,"src":"3723:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1975,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1978,"mutability":"mutable","name":"data","nameLocation":"3752:4:9","nodeType":"VariableDeclaration","scope":1991,"src":"3739:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1977,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:9"},"returnParameters":{"id":1982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1991,"src":"3776:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1980,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:9"},"scope":2251,"src":"3701:185:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2010,"nodeType":"Block","src":"4255:76:9","statements":[{"expression":{"arguments":[{"id":2004,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"4294:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2005,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"4302:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2007,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"4311:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2003,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2031,2075],"referencedDeclaration":2075,"src":"4272:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2002,"id":2009,"nodeType":"Return","src":"4265:59:9"}]},"documentation":{"id":1992,"nodeType":"StructuredDocumentation","src":"3892:211:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2011,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:9","nodeType":"FunctionDefinition","parameters":{"id":1999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1994,"mutability":"mutable","name":"target","nameLocation":"4147:6:9","nodeType":"VariableDeclaration","scope":2011,"src":"4139:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1993,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1996,"mutability":"mutable","name":"data","nameLocation":"4176:4:9","nodeType":"VariableDeclaration","scope":2011,"src":"4163:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1995,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1998,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:9","nodeType":"VariableDeclaration","scope":2011,"src":"4190:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1997,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:9"},"returnParameters":{"id":2002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2011,"src":"4241:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2000,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:9"},"scope":2251,"src":"4108:223:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2030,"nodeType":"Block","src":"4806:111:9","statements":[{"expression":{"arguments":[{"id":2024,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"4845:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2025,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"4853:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"4859:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":2027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":2023,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2031,2075],"referencedDeclaration":2075,"src":"4823:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:87:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2022,"id":2029,"nodeType":"Return","src":"4816:94:9"}]},"documentation":{"id":2012,"nodeType":"StructuredDocumentation","src":"4337:351:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":2031,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:9","nodeType":"FunctionDefinition","parameters":{"id":2019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"target","nameLocation":"4732:6:9","nodeType":"VariableDeclaration","scope":2031,"src":"4724:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2013,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2016,"mutability":"mutable","name":"data","nameLocation":"4753:4:9","nodeType":"VariableDeclaration","scope":2031,"src":"4740:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2015,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2018,"mutability":"mutable","name":"value","nameLocation":"4767:5:9","nodeType":"VariableDeclaration","scope":2031,"src":"4759:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2017,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:9"},"returnParameters":{"id":2022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2031,"src":"4792:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2020,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:9"},"scope":2251,"src":"4693:224:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2074,"nodeType":"Block","src":"5344:267:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2048,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2251","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2251","typeString":"library Address"}],"id":2047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2046,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:9","typeDescriptions":{}}},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5362:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5376:7:9","memberName":"balance","nodeType":"MemberAccess","src":"5362:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"5387:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":2053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":2045,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:81:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2055,"nodeType":"ExpressionStatement","src":"5354:81:9"},{"assignments":[2057,2059],"declarations":[{"constant":false,"id":2057,"mutability":"mutable","name":"success","nameLocation":"5451:7:9","nodeType":"VariableDeclaration","scope":2074,"src":"5446:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2056,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2059,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:9","nodeType":"VariableDeclaration","scope":2074,"src":"5460:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2058,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2066,"initialValue":{"arguments":[{"id":2064,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"5513:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2060,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"5487:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5494:4:9","memberName":"call","nodeType":"MemberAccess","src":"5487:11:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"5506:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5487:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:9"},{"expression":{"arguments":[{"id":2068,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"5562:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2069,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"5570:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2070,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2059,"src":"5579:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2071,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2040,"src":"5591:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2067,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"5535:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2044,"id":2073,"nodeType":"Return","src":"5528:76:9"}]},"documentation":{"id":2032,"nodeType":"StructuredDocumentation","src":"4923:237:9","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2075,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:9","nodeType":"FunctionDefinition","parameters":{"id":2041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2034,"mutability":"mutable","name":"target","nameLocation":"5213:6:9","nodeType":"VariableDeclaration","scope":2075,"src":"5205:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2033,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2036,"mutability":"mutable","name":"data","nameLocation":"5242:4:9","nodeType":"VariableDeclaration","scope":2075,"src":"5229:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2035,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2038,"mutability":"mutable","name":"value","nameLocation":"5264:5:9","nodeType":"VariableDeclaration","scope":2075,"src":"5256:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2037,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2040,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:9","nodeType":"VariableDeclaration","scope":2075,"src":"5279:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2039,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:9"},"returnParameters":{"id":2044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2043,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2075,"src":"5330:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2042,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:9"},"scope":2251,"src":"5165:446:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2091,"nodeType":"Block","src":"5888:97:9","statements":[{"expression":{"arguments":[{"id":2086,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"5924:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2087,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"5932:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":2088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":2085,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[2092,2121],"referencedDeclaration":2121,"src":"5905:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2084,"id":2090,"nodeType":"Return","src":"5898:80:9"}]},"documentation":{"id":2076,"nodeType":"StructuredDocumentation","src":"5617:166:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2092,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:9","nodeType":"FunctionDefinition","parameters":{"id":2081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2078,"mutability":"mutable","name":"target","nameLocation":"5824:6:9","nodeType":"VariableDeclaration","scope":2092,"src":"5816:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2077,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2080,"mutability":"mutable","name":"data","nameLocation":"5845:4:9","nodeType":"VariableDeclaration","scope":2092,"src":"5832:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2079,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:9"},"returnParameters":{"id":2084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2092,"src":"5874:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2082,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:9"},"scope":2251,"src":"5788:197:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2120,"nodeType":"Block","src":"6327:168:9","statements":[{"assignments":[2105,2107],"declarations":[{"constant":false,"id":2105,"mutability":"mutable","name":"success","nameLocation":"6343:7:9","nodeType":"VariableDeclaration","scope":2120,"src":"6338:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2104,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2107,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:9","nodeType":"VariableDeclaration","scope":2120,"src":"6352:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2106,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2112,"initialValue":{"arguments":[{"id":2110,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"6397:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2108,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"6379:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6386:10:9","memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:9","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:9"},{"expression":{"arguments":[{"id":2114,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"6446:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2115,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"6454:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2116,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"6463:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2117,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"6475:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2113,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"6419:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2103,"id":2119,"nodeType":"Return","src":"6412:76:9"}]},"documentation":{"id":2093,"nodeType":"StructuredDocumentation","src":"5991:173:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2121,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:9","nodeType":"FunctionDefinition","parameters":{"id":2100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2095,"mutability":"mutable","name":"target","nameLocation":"6214:6:9","nodeType":"VariableDeclaration","scope":2121,"src":"6206:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2094,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2097,"mutability":"mutable","name":"data","nameLocation":"6243:4:9","nodeType":"VariableDeclaration","scope":2121,"src":"6230:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2096,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2099,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:9","nodeType":"VariableDeclaration","scope":2121,"src":"6257:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2098,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:9"},"returnParameters":{"id":2103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2121,"src":"6313:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2101,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:9"},"scope":2251,"src":"6169:326:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2137,"nodeType":"Block","src":"6771:101:9","statements":[{"expression":{"arguments":[{"id":2132,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"6809:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2133,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"6817:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":2134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":2131,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[2138,2167],"referencedDeclaration":2167,"src":"6788:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6788:77:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2130,"id":2136,"nodeType":"Return","src":"6781:84:9"}]},"documentation":{"id":2122,"nodeType":"StructuredDocumentation","src":"6501:168:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2138,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:9","nodeType":"FunctionDefinition","parameters":{"id":2127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2124,"mutability":"mutable","name":"target","nameLocation":"6712:6:9","nodeType":"VariableDeclaration","scope":2138,"src":"6704:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2123,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2126,"mutability":"mutable","name":"data","nameLocation":"6733:4:9","nodeType":"VariableDeclaration","scope":2138,"src":"6720:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2125,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:9"},"returnParameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2138,"src":"6757:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2128,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:9"},"scope":2251,"src":"6674:198:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2166,"nodeType":"Block","src":"7213:170:9","statements":[{"assignments":[2151,2153],"declarations":[{"constant":false,"id":2151,"mutability":"mutable","name":"success","nameLocation":"7229:7:9","nodeType":"VariableDeclaration","scope":2166,"src":"7224:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2150,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2153,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:9","nodeType":"VariableDeclaration","scope":2166,"src":"7238:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2152,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2158,"initialValue":{"arguments":[{"id":2156,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"7285:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2154,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"7265:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7272:12:9","memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:9","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:9"},{"expression":{"arguments":[{"id":2160,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"7334:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2161,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"7342:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2162,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"7351:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2163,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"7363:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2159,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"7307:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2149,"id":2165,"nodeType":"Return","src":"7300:76:9"}]},"documentation":{"id":2139,"nodeType":"StructuredDocumentation","src":"6878:175:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2167,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:9","nodeType":"FunctionDefinition","parameters":{"id":2146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2141,"mutability":"mutable","name":"target","nameLocation":"7105:6:9","nodeType":"VariableDeclaration","scope":2167,"src":"7097:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2140,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2143,"mutability":"mutable","name":"data","nameLocation":"7134:4:9","nodeType":"VariableDeclaration","scope":2167,"src":"7121:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2142,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2145,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:9","nodeType":"VariableDeclaration","scope":2167,"src":"7148:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2144,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:9"},"returnParameters":{"id":2149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2167,"src":"7199:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2147,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:9"},"scope":2251,"src":"7058:325:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2205,"nodeType":"Block","src":"7865:434:9","statements":[{"condition":{"id":2181,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"7879:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2203,"nodeType":"Block","src":"8235:58:9","statements":[{"expression":{"arguments":[{"id":2199,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"8257:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2200,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"8269:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2198,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"8249:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8249:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2202,"nodeType":"ExpressionStatement","src":"8249:33:9"}]},"id":2204,"nodeType":"IfStatement","src":"7875:418:9","trueBody":{"id":2197,"nodeType":"Block","src":"7888:341:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2182,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"7906:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7917:6:9","memberName":"length","nodeType":"MemberAccess","src":"7906:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2194,"nodeType":"IfStatement","src":"7902:286:9","trueBody":{"id":2193,"nodeType":"Block","src":"7930:258:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2188,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"8132:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2187,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"8121:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8121:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":2190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":2186,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8113:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2192,"nodeType":"ExpressionStatement","src":"8113:60:9"}]}},{"expression":{"id":2195,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"8208:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2180,"id":2196,"nodeType":"Return","src":"8201:17:9"}]}}]},"documentation":{"id":2168,"nodeType":"StructuredDocumentation","src":"7389:277:9","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":2206,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:9","nodeType":"FunctionDefinition","parameters":{"id":2177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2170,"mutability":"mutable","name":"target","nameLocation":"7724:6:9","nodeType":"VariableDeclaration","scope":2206,"src":"7716:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2169,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2172,"mutability":"mutable","name":"success","nameLocation":"7745:7:9","nodeType":"VariableDeclaration","scope":2206,"src":"7740:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2171,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2174,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:9","nodeType":"VariableDeclaration","scope":2206,"src":"7762:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2173,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2176,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:9","nodeType":"VariableDeclaration","scope":2206,"src":"7795:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2175,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:9"},"returnParameters":{"id":2180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2206,"src":"7851:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2178,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:9"},"scope":2251,"src":"7671:628:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2229,"nodeType":"Block","src":"8680:135:9","statements":[{"condition":{"id":2218,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"8694:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2227,"nodeType":"Block","src":"8751:58:9","statements":[{"expression":{"arguments":[{"id":2223,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"8773:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2224,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"8785:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2222,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"8765:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8765:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2226,"nodeType":"ExpressionStatement","src":"8765:33:9"}]},"id":2228,"nodeType":"IfStatement","src":"8690:119:9","trueBody":{"id":2221,"nodeType":"Block","src":"8703:42:9","statements":[{"expression":{"id":2219,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"8724:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2217,"id":2220,"nodeType":"Return","src":"8717:17:9"}]}}]},"documentation":{"id":2207,"nodeType":"StructuredDocumentation","src":"8305:210:9","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":2230,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:9","nodeType":"FunctionDefinition","parameters":{"id":2214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2209,"mutability":"mutable","name":"success","nameLocation":"8560:7:9","nodeType":"VariableDeclaration","scope":2230,"src":"8555:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2208,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2211,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:9","nodeType":"VariableDeclaration","scope":2230,"src":"8577:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2210,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2213,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:9","nodeType":"VariableDeclaration","scope":2230,"src":"8610:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2212,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:9"},"returnParameters":{"id":2217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2230,"src":"8666:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2215,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:9"},"scope":2251,"src":"8520:295:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2249,"nodeType":"Block","src":"8904:457:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2237,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"8980:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8991:6:9","memberName":"length","nodeType":"MemberAccess","src":"8980:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2247,"nodeType":"Block","src":"9310:45:9","statements":[{"expression":{"arguments":[{"id":2244,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"9331:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2243,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:9","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9324:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2246,"nodeType":"ExpressionStatement","src":"9324:20:9"}]},"id":2248,"nodeType":"IfStatement","src":"8976:379:9","trueBody":{"id":2242,"nodeType":"Block","src":"9003:301:9","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:9","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:9","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:9"},"nodeType":"YulFunctionCall","src":"9202:17:9"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:9","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:9"},"nodeType":"YulFunctionCall","src":"9243:19:9"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:9"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:9"},"nodeType":"YulFunctionCall","src":"9236:44:9"},"nodeType":"YulExpressionStatement","src":"9236:44:9"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2232,"isOffset":false,"isSlot":false,"src":"9208:10:9","valueSize":1},{"declaration":2232,"isOffset":false,"isSlot":false,"src":"9251:10:9","valueSize":1}],"id":2241,"nodeType":"InlineAssembly","src":"9152:142:9"}]}}]},"id":2250,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:9","nodeType":"FunctionDefinition","parameters":{"id":2235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2232,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:9","nodeType":"VariableDeclaration","scope":2250,"src":"8838:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2231,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2234,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:9","nodeType":"VariableDeclaration","scope":2250,"src":"8863:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2233,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:9"},"returnParameters":{"id":2236,"nodeType":"ParameterList","parameters":[],"src":"8904:0:9"},"scope":2251,"src":"8821:540:9","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2252,"src":"194:9169:9","usedErrors":[]}],"src":"101:9263:9"}},"@openzeppelin/contracts/utils/Context.sol":{"id":10,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2273]},"id":2274,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2253,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:10"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2254,"nodeType":"StructuredDocumentation","src":"111:496:10","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2273,"linearizedBaseContracts":[2273],"name":"Context","nameLocation":"626:7:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":2262,"nodeType":"Block","src":"702:34:10","statements":[{"expression":{"expression":{"id":2259,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:10","memberName":"sender","nodeType":"MemberAccess","src":"719:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2258,"id":2261,"nodeType":"Return","src":"712:17:10"}]},"id":2263,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:10","nodeType":"FunctionDefinition","parameters":{"id":2255,"nodeType":"ParameterList","parameters":[],"src":"659:2:10"},"returnParameters":{"id":2258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2263,"src":"693:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2256,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:10"},"scope":2273,"src":"640:96:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2271,"nodeType":"Block","src":"809:32:10","statements":[{"expression":{"expression":{"id":2268,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:10","memberName":"data","nodeType":"MemberAccess","src":"826:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2267,"id":2270,"nodeType":"Return","src":"819:15:10"}]},"id":2272,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:10","nodeType":"FunctionDefinition","parameters":{"id":2264,"nodeType":"ParameterList","parameters":[],"src":"759:2:10"},"returnParameters":{"id":2267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2272,"src":"793:14:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2265,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:10"},"scope":2273,"src":"742:99:10","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2274,"src":"608:235:10","usedErrors":[]}],"src":"86:758:10"}},"@openzeppelin/contracts/utils/Strings.sol":{"id":11,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3404],"SignedMath":[3509],"Strings":[2502]},"id":2503,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2275,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:11"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2276,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2503,"sourceUnit":3405,"src":"126:25:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2277,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2503,"sourceUnit":3510,"src":"152:31:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2278,"nodeType":"StructuredDocumentation","src":"185:34:11","text":" @dev String operations."},"fullyImplemented":true,"id":2502,"linearizedBaseContracts":[2502],"name":"Strings","nameLocation":"228:7:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2281,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:11","nodeType":"VariableDeclaration","scope":2502,"src":"242:54:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2279,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:11","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2284,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:11","nodeType":"VariableDeclaration","scope":2502,"src":"302:43:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2282,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:11","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":2331,"nodeType":"Block","src":"518:625:11","statements":[{"id":2330,"nodeType":"UncheckedBlock","src":"528:609:11","statements":[{"assignments":[2293],"declarations":[{"constant":false,"id":2293,"mutability":"mutable","name":"length","nameLocation":"560:6:11","nodeType":"VariableDeclaration","scope":2330,"src":"552:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2292,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2300,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"580:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2294,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"569:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3404_$","typeString":"type(library Math)"}},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:11","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3241,"src":"569:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:11"},{"assignments":[2302],"declarations":[{"constant":false,"id":2302,"mutability":"mutable","name":"buffer","nameLocation":"618:6:11","nodeType":"VariableDeclaration","scope":2330,"src":"604:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2301,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2307,"initialValue":{"arguments":[{"id":2305,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"638:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2303,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:11"},{"assignments":[2309],"declarations":[{"constant":false,"id":2309,"mutability":"mutable","name":"ptr","nameLocation":"667:3:11","nodeType":"VariableDeclaration","scope":2330,"src":"659:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2308,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2310,"nodeType":"VariableDeclarationStatement","src":"659:11:11"},{"AST":{"nodeType":"YulBlock","src":"740:67:11","statements":[{"nodeType":"YulAssignment","src":"758:35:11","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:11"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:11","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:11"},"nodeType":"YulFunctionCall","src":"777:15:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:11"},"nodeType":"YulFunctionCall","src":"765:28:11"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2302,"isOffset":false,"isSlot":false,"src":"769:6:11","valueSize":1},{"declaration":2293,"isOffset":false,"isSlot":false,"src":"785:6:11","valueSize":1},{"declaration":2309,"isOffset":false,"isSlot":false,"src":"758:3:11","valueSize":1}],"id":2311,"nodeType":"InlineAssembly","src":"731:76:11"},{"body":{"id":2326,"nodeType":"Block","src":"833:267:11","statements":[{"expression":{"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:11","subExpression":{"id":2313,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"851:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2315,"nodeType":"ExpressionStatement","src":"851:5:11"},{"AST":{"nodeType":"YulBlock","src":"934:84:11","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:11"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:11"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:11","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:11"},"nodeType":"YulFunctionCall","src":"974:14:11"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:11"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:11"},"nodeType":"YulFunctionCall","src":"969:30:11"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:11"},"nodeType":"YulFunctionCall","src":"956:44:11"},"nodeType":"YulExpressionStatement","src":"956:44:11"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2281,"isOffset":false,"isSlot":false,"src":"990:8:11","valueSize":1},{"declaration":2309,"isOffset":false,"isSlot":false,"src":"964:3:11","valueSize":1},{"declaration":2287,"isOffset":false,"isSlot":false,"src":"978:5:11","valueSize":1}],"id":2316,"nodeType":"InlineAssembly","src":"925:93:11"},{"expression":{"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"1035:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2320,"nodeType":"ExpressionStatement","src":"1035:11:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"1068:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2325,"nodeType":"IfStatement","src":"1064:21:11","trueBody":{"id":2324,"nodeType":"Break","src":"1080:5:11"}}]},"condition":{"hexValue":"74727565","id":2312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2327,"nodeType":"WhileStatement","src":"820:280:11"},{"expression":{"id":2328,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"1120:6:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2291,"id":2329,"nodeType":"Return","src":"1113:13:11"}]}]},"documentation":{"id":2285,"nodeType":"StructuredDocumentation","src":"352:90:11","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2332,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:11","nodeType":"FunctionDefinition","parameters":{"id":2288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2287,"mutability":"mutable","name":"value","nameLocation":"473:5:11","nodeType":"VariableDeclaration","scope":2332,"src":"465:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2286,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:11"},"returnParameters":{"id":2291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2332,"src":"503:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2289,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:11"},"scope":2502,"src":"447:696:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2359,"nodeType":"Block","src":"1313:103:11","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"1354:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:11","trueExpression":{"hexValue":"2d","id":2347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"1400:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2351,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"1385:10:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$3509_$","typeString":"type(library SignedMath)"}},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:11","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":3508,"src":"1385:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2350,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[2332,2360],"referencedDeclaration":2332,"src":"1376:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2342,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:11","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2340,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:11","typeDescriptions":{}}},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2339,"id":2358,"nodeType":"Return","src":"1323:86:11"}]},"documentation":{"id":2333,"nodeType":"StructuredDocumentation","src":"1149:89:11","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2360,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:11","nodeType":"FunctionDefinition","parameters":{"id":2336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2335,"mutability":"mutable","name":"value","nameLocation":"1268:5:11","nodeType":"VariableDeclaration","scope":2360,"src":"1261:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2334,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:11"},"returnParameters":{"id":2339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2360,"src":"1298:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2337,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:11"},"scope":2502,"src":"1243:173:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2379,"nodeType":"Block","src":"1595:100:11","statements":[{"id":2378,"nodeType":"UncheckedBlock","src":"1605:84:11","statements":[{"expression":{"arguments":[{"id":2369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"1648:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"1667:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2370,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"1655:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3404_$","typeString":"type(library Math)"}},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:11","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3364,"src":"1655:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2368,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2380,2456,2476],"referencedDeclaration":2456,"src":"1636:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2367,"id":2377,"nodeType":"Return","src":"1629:49:11"}]}]},"documentation":{"id":2361,"nodeType":"StructuredDocumentation","src":"1422:94:11","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2380,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:11","nodeType":"FunctionDefinition","parameters":{"id":2364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2363,"mutability":"mutable","name":"value","nameLocation":"1550:5:11","nodeType":"VariableDeclaration","scope":2380,"src":"1542:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2362,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:11"},"returnParameters":{"id":2367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2380,"src":"1580:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2365,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:11"},"scope":2502,"src":"1521:174:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2455,"nodeType":"Block","src":"1908:347:11","statements":[{"assignments":[2391],"declarations":[{"constant":false,"id":2391,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:11","nodeType":"VariableDeclaration","scope":2455,"src":"1918:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2390,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2400,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2395,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"1954:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2392,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:11"},{"expression":{"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2401,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"1975:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2403,"indexExpression":{"hexValue":"30","id":2402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2406,"nodeType":"ExpressionStatement","src":"1975:15:11"},{"expression":{"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2407,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"2000:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2409,"indexExpression":{"hexValue":"31","id":2408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2412,"nodeType":"ExpressionStatement","src":"2000:15:11"},{"body":{"id":2441,"nodeType":"Block","src":"2070:83:11","statements":[{"expression":{"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2427,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"2084:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2429,"indexExpression":{"id":2428,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"2091:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2430,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"2096:8:11","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2434,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"2105:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:11","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2436,"nodeType":"ExpressionStatement","src":"2084:33:11"},{"expression":{"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"2131:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2440,"nodeType":"ExpressionStatement","src":"2131:11:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2421,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"2058:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2442,"initializationExpression":{"assignments":[2414],"declarations":[{"constant":false,"id":2414,"mutability":"mutable","name":"i","nameLocation":"2038:1:11","nodeType":"VariableDeclaration","scope":2442,"src":"2030:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2413,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2420,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2416,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"2046:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:11"},"loopExpression":{"expression":{"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:11","subExpression":{"id":2424,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"2067:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2426,"nodeType":"ExpressionStatement","src":"2065:3:11"},"nodeType":"ForStatement","src":"2025:128:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"2170:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":2447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":2443,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2449,"nodeType":"ExpressionStatement","src":"2162:55:11"},{"expression":{"arguments":[{"id":2452,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"2241:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2450,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:11","typeDescriptions":{}}},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2389,"id":2454,"nodeType":"Return","src":"2227:21:11"}]},"documentation":{"id":2381,"nodeType":"StructuredDocumentation","src":"1701:112:11","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2456,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:11","nodeType":"FunctionDefinition","parameters":{"id":2386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2383,"mutability":"mutable","name":"value","nameLocation":"1847:5:11","nodeType":"VariableDeclaration","scope":2456,"src":"1839:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2382,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2385,"mutability":"mutable","name":"length","nameLocation":"1862:6:11","nodeType":"VariableDeclaration","scope":2456,"src":"1854:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2384,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:11"},"returnParameters":{"id":2389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2456,"src":"1893:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2387,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:11"},"scope":2502,"src":"1818:437:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2475,"nodeType":"Block","src":"2480:76:11","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2469,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"2525:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2467,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:11","typeDescriptions":{}}},"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2465,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:11","typeDescriptions":{}}},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2472,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"2533:15:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2464,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2380,2456,2476],"referencedDeclaration":2456,"src":"2497:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2463,"id":2474,"nodeType":"Return","src":"2490:59:11"}]},"documentation":{"id":2457,"nodeType":"StructuredDocumentation","src":"2261:141:11","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":2476,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:11","nodeType":"FunctionDefinition","parameters":{"id":2460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2459,"mutability":"mutable","name":"addr","nameLocation":"2436:4:11","nodeType":"VariableDeclaration","scope":2476,"src":"2428:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2458,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:11"},"returnParameters":{"id":2463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2476,"src":"2465:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2461,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:11"},"scope":2502,"src":"2407:149:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2500,"nodeType":"Block","src":"2711:66:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2489,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2479,"src":"2744:1:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2487,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:11","typeDescriptions":{}}},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2486,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2495,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"2767:1:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2493,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:11","typeDescriptions":{}}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2492,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2485,"id":2499,"nodeType":"Return","src":"2721:49:11"}]},"documentation":{"id":2477,"nodeType":"StructuredDocumentation","src":"2562:66:11","text":" @dev Returns true if the two strings are equal."},"id":2501,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:11","nodeType":"FunctionDefinition","parameters":{"id":2482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2479,"mutability":"mutable","name":"a","nameLocation":"2662:1:11","nodeType":"VariableDeclaration","scope":2501,"src":"2648:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2478,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2481,"mutability":"mutable","name":"b","nameLocation":"2679:1:11","nodeType":"VariableDeclaration","scope":2501,"src":"2665:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2480,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:11"},"returnParameters":{"id":2485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2501,"src":"2705:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2483,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:11"},"scope":2502,"src":"2633:144:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2503,"src":"220:2559:11","usedErrors":[]}],"src":"101:2679:11"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"id":12,"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2526],"IERC165":[2538]},"id":2527,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2504,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:12"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2505,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2527,"sourceUnit":2539,"src":"124:23:12","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2507,"name":"IERC165","nameLocations":["754:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2538,"src":"754:7:12"},"id":2508,"nodeType":"InheritanceSpecifier","src":"754:7:12"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":2506,"nodeType":"StructuredDocumentation","src":"149:576:12","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":2526,"linearizedBaseContracts":[2526,2538],"name":"ERC165","nameLocation":"744:6:12","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2537],"body":{"id":2524,"nodeType":"Block","src":"920:64:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2517,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"937:11:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2519,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"957:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2538_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2538_$","typeString":"type(contract IERC165)"}],"id":2518,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2538","typeString":"type(contract IERC165)"}},"id":2521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"966:11:12","memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2516,"id":2523,"nodeType":"Return","src":"930:47:12"}]},"documentation":{"id":2509,"nodeType":"StructuredDocumentation","src":"768:56:12","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2525,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:12","nodeType":"FunctionDefinition","overrides":{"id":2513,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:12"},"parameters":{"id":2512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2511,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:12","nodeType":"VariableDeclaration","scope":2525,"src":"856:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2510,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:12"},"returnParameters":{"id":2516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2525,"src":"914:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2514,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:12"},"scope":2526,"src":"829:155:12","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2527,"src":"726:260:12","usedErrors":[]}],"src":"99:888:12"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"id":13,"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2538]},"id":2539,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2528,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2529,"nodeType":"StructuredDocumentation","src":"125:279:13","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2538,"linearizedBaseContracts":[2538],"name":"IERC165","nameLocation":"415:7:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2530,"nodeType":"StructuredDocumentation","src":"429:340:13","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2537,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:13","nodeType":"FunctionDefinition","parameters":{"id":2533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2532,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:13","nodeType":"VariableDeclaration","scope":2537,"src":"801:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2531,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:13"},"returnParameters":{"id":2536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2537,"src":"844:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2534,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:13"},"scope":2538,"src":"774:76:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2539,"src":"405:447:13","usedErrors":[]}],"src":"100:753:13"}},"@openzeppelin/contracts/utils/math/Math.sol":{"id":14,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3404]},"id":3405,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2540,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2541,"nodeType":"StructuredDocumentation","src":"128:73:14","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3404,"linearizedBaseContracts":[3404],"name":"Math","nameLocation":"210:4:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2545,"members":[{"id":2542,"name":"Down","nameLocation":"245:4:14","nodeType":"EnumValue","src":"245:4:14"},{"id":2543,"name":"Up","nameLocation":"287:2:14","nodeType":"EnumValue","src":"287:2:14"},{"id":2544,"name":"Zero","nameLocation":"318:4:14","nodeType":"EnumValue","src":"318:4:14"}],"name":"Rounding","nameLocation":"226:8:14","nodeType":"EnumDefinition","src":"221:122:14"},{"body":{"id":2562,"nodeType":"Block","src":"480:37:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2555,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"497:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2556,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"501:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2559,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"509:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:14","trueExpression":{"id":2558,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"505:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2554,"id":2561,"nodeType":"Return","src":"490:20:14"}]},"documentation":{"id":2546,"nodeType":"StructuredDocumentation","src":"349:59:14","text":" @dev Returns the largest of two numbers."},"id":2563,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:14","nodeType":"FunctionDefinition","parameters":{"id":2551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2548,"mutability":"mutable","name":"a","nameLocation":"434:1:14","nodeType":"VariableDeclaration","scope":2563,"src":"426:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2547,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2550,"mutability":"mutable","name":"b","nameLocation":"445:1:14","nodeType":"VariableDeclaration","scope":2563,"src":"437:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2549,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:14"},"returnParameters":{"id":2554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2563,"src":"471:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2552,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:14"},"scope":3404,"src":"413:104:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2580,"nodeType":"Block","src":"655:37:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2573,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"672:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2574,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"676:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2577,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"684:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:14","trueExpression":{"id":2576,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"680:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2572,"id":2579,"nodeType":"Return","src":"665:20:14"}]},"documentation":{"id":2564,"nodeType":"StructuredDocumentation","src":"523:60:14","text":" @dev Returns the smallest of two numbers."},"id":2581,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:14","nodeType":"FunctionDefinition","parameters":{"id":2569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2566,"mutability":"mutable","name":"a","nameLocation":"609:1:14","nodeType":"VariableDeclaration","scope":2581,"src":"601:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2565,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2568,"mutability":"mutable","name":"b","nameLocation":"620:1:14","nodeType":"VariableDeclaration","scope":2581,"src":"612:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2567,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:14"},"returnParameters":{"id":2572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2581,"src":"646:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2570,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:14"},"scope":3404,"src":"588:104:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2603,"nodeType":"Block","src":"876:82:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2591,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"931:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2592,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"935:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2594,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2595,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"941:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2596,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"945:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2598,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2590,"id":2602,"nodeType":"Return","src":"923:28:14"}]},"documentation":{"id":2582,"nodeType":"StructuredDocumentation","src":"698:102:14","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2604,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:14","nodeType":"FunctionDefinition","parameters":{"id":2587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2584,"mutability":"mutable","name":"a","nameLocation":"830:1:14","nodeType":"VariableDeclaration","scope":2604,"src":"822:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2583,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2586,"mutability":"mutable","name":"b","nameLocation":"841:1:14","nodeType":"VariableDeclaration","scope":2604,"src":"833:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2585,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:14"},"returnParameters":{"id":2590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2604,"src":"867:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2588,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:14"},"scope":3404,"src":"805:153:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2628,"nodeType":"Block","src":"1228:123:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2614,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"1316:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2618,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"1330:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2621,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2622,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"1339:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:14","trueExpression":{"hexValue":"30","id":2617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2613,"id":2627,"nodeType":"Return","src":"1309:35:14"}]},"documentation":{"id":2605,"nodeType":"StructuredDocumentation","src":"964:188:14","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":2629,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:14","nodeType":"FunctionDefinition","parameters":{"id":2610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2607,"mutability":"mutable","name":"a","nameLocation":"1182:1:14","nodeType":"VariableDeclaration","scope":2629,"src":"1174:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2606,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2609,"mutability":"mutable","name":"b","nameLocation":"1193:1:14","nodeType":"VariableDeclaration","scope":2629,"src":"1185:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2608,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:14"},"returnParameters":{"id":2613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2629,"src":"1219:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2611,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:14"},"scope":3404,"src":"1157:194:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2751,"nodeType":"Block","src":"1765:4115:14","statements":[{"id":2750,"nodeType":"UncheckedBlock","src":"1775:4099:14","statements":[{"assignments":[2642],"declarations":[{"constant":false,"id":2642,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:14","nodeType":"VariableDeclaration","scope":2750,"src":"2096:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2641,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2643,"nodeType":"VariableDeclarationStatement","src":"2096:13:14"},{"assignments":[2645],"declarations":[{"constant":false,"id":2645,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:14","nodeType":"VariableDeclaration","scope":2750,"src":"2168:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2644,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2646,"nodeType":"VariableDeclarationStatement","src":"2168:13:14"},{"AST":{"nodeType":"YulBlock","src":"2248:157:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:14"},"nodeType":"YulFunctionCall","src":"2289:6:14"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:14"},"nodeType":"YulFunctionCall","src":"2276:20:14"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:14","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:14"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:14"},"nodeType":"YulFunctionCall","src":"2322:9:14"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:14"}]},{"nodeType":"YulAssignment","src":"2348:43:14","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:14"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:14"},"nodeType":"YulFunctionCall","src":"2361:14:14"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:14"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:14"},"nodeType":"YulFunctionCall","src":"2377:13:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:14"},"nodeType":"YulFunctionCall","src":"2357:34:14"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:14"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2642,"isOffset":false,"isSlot":false,"src":"2313:5:14","valueSize":1},{"declaration":2642,"isOffset":false,"isSlot":false,"src":"2369:5:14","valueSize":1},{"declaration":2642,"isOffset":false,"isSlot":false,"src":"2384:5:14","valueSize":1},{"declaration":2645,"isOffset":false,"isSlot":false,"src":"2348:5:14","valueSize":1},{"declaration":2632,"isOffset":false,"isSlot":false,"src":"2283:1:14","valueSize":1},{"declaration":2632,"isOffset":false,"isSlot":false,"src":"2326:1:14","valueSize":1},{"declaration":2634,"isOffset":false,"isSlot":false,"src":"2286:1:14","valueSize":1},{"declaration":2634,"isOffset":false,"isSlot":false,"src":"2329:1:14","valueSize":1}],"id":2647,"nodeType":"InlineAssembly","src":"2239:166:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2648,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"2486:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2656,"nodeType":"IfStatement","src":"2482:368:14","trueBody":{"id":2655,"nodeType":"Block","src":"2498:352:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2651,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"2816:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2652,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"2824:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2640,"id":2654,"nodeType":"Return","src":"2809:26:14"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2658,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"2960:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2659,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"2974:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":2661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":2657,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2663,"nodeType":"ExpressionStatement","src":"2952:53:14"},{"assignments":[2665],"declarations":[{"constant":false,"id":2665,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:14","nodeType":"VariableDeclaration","scope":2750,"src":"3261:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2664,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2666,"nodeType":"VariableDeclarationStatement","src":"3261:17:14"},{"AST":{"nodeType":"YulBlock","src":"3301:291:14","statements":[{"nodeType":"YulAssignment","src":"3370:38:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:14"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:14"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:14"},"nodeType":"YulFunctionCall","src":"3383:25:14"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:14"}]},{"nodeType":"YulAssignment","src":"3490:41:14","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:14"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:14"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:14"},"nodeType":"YulFunctionCall","src":"3510:20:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:14"},"nodeType":"YulFunctionCall","src":"3499:32:14"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:14"}]},{"nodeType":"YulAssignment","src":"3548:30:14","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:14"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:14"},"nodeType":"YulFunctionCall","src":"3557:21:14"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:14"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2636,"isOffset":false,"isSlot":false,"src":"3396:11:14","valueSize":1},{"declaration":2642,"isOffset":false,"isSlot":false,"src":"3524:5:14","valueSize":1},{"declaration":2642,"isOffset":false,"isSlot":false,"src":"3548:5:14","valueSize":1},{"declaration":2642,"isOffset":false,"isSlot":false,"src":"3561:5:14","valueSize":1},{"declaration":2645,"isOffset":false,"isSlot":false,"src":"3490:5:14","valueSize":1},{"declaration":2645,"isOffset":false,"isSlot":false,"src":"3503:5:14","valueSize":1},{"declaration":2665,"isOffset":false,"isSlot":false,"src":"3370:9:14","valueSize":1},{"declaration":2665,"isOffset":false,"isSlot":false,"src":"3513:9:14","valueSize":1},{"declaration":2665,"isOffset":false,"isSlot":false,"src":"3568:9:14","valueSize":1},{"declaration":2632,"isOffset":false,"isSlot":false,"src":"3390:1:14","valueSize":1},{"declaration":2634,"isOffset":false,"isSlot":false,"src":"3393:1:14","valueSize":1}],"id":2667,"nodeType":"InlineAssembly","src":"3292:300:14"},{"assignments":[2669],"declarations":[{"constant":false,"id":2669,"mutability":"mutable","name":"twos","nameLocation":"3907:4:14","nodeType":"VariableDeclaration","scope":2750,"src":"3899:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2668,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2677,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2670,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"3914:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:14","subExpression":{"id":2671,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"3930:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2675,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:14"},{"AST":{"nodeType":"YulBlock","src":"3969:362:14","statements":[{"nodeType":"YulAssignment","src":"4034:37:14","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:14"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:14"},"nodeType":"YulFunctionCall","src":"4049:22:14"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:14"}]},{"nodeType":"YulAssignment","src":"4138:25:14","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:14"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:14"},"nodeType":"YulFunctionCall","src":"4147:16:14"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:14"}]},{"nodeType":"YulAssignment","src":"4278:39:14","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:14","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:14"},"nodeType":"YulFunctionCall","src":"4294:12:14"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:14"},"nodeType":"YulFunctionCall","src":"4290:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:14"},"nodeType":"YulFunctionCall","src":"4286:31:14"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:14"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2636,"isOffset":false,"isSlot":false,"src":"4034:11:14","valueSize":1},{"declaration":2636,"isOffset":false,"isSlot":false,"src":"4053:11:14","valueSize":1},{"declaration":2642,"isOffset":false,"isSlot":false,"src":"4138:5:14","valueSize":1},{"declaration":2642,"isOffset":false,"isSlot":false,"src":"4151:5:14","valueSize":1},{"declaration":2669,"isOffset":false,"isSlot":false,"src":"4066:4:14","valueSize":1},{"declaration":2669,"isOffset":false,"isSlot":false,"src":"4158:4:14","valueSize":1},{"declaration":2669,"isOffset":false,"isSlot":false,"src":"4278:4:14","valueSize":1},{"declaration":2669,"isOffset":false,"isSlot":false,"src":"4301:4:14","valueSize":1},{"declaration":2669,"isOffset":false,"isSlot":false,"src":"4308:4:14","valueSize":1}],"id":2678,"nodeType":"InlineAssembly","src":"3960:371:14"},{"expression":{"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2679,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"4397:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2680,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"4406:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2681,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2669,"src":"4414:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2684,"nodeType":"ExpressionStatement","src":"4397:21:14"},{"assignments":[2686],"declarations":[{"constant":false,"id":2686,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:14","nodeType":"VariableDeclaration","scope":2750,"src":"4736:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2685,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2693,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2688,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"4759:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2690,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:14"},{"expression":{"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2694,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"4992:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2696,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"5007:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2697,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"5021:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2701,"nodeType":"ExpressionStatement","src":"4992:36:14"},{"expression":{"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2702,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"5061:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2704,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"5076:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2705,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"5090:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2709,"nodeType":"ExpressionStatement","src":"5061:36:14"},{"expression":{"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2710,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"5131:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2712,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"5146:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2713,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"5160:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2717,"nodeType":"ExpressionStatement","src":"5131:36:14"},{"expression":{"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2718,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"5201:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2720,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"5216:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2721,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"5230:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2725,"nodeType":"ExpressionStatement","src":"5201:36:14"},{"expression":{"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2726,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"5271:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2728,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"5286:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2729,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"5300:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2733,"nodeType":"ExpressionStatement","src":"5271:36:14"},{"expression":{"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2734,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"5342:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2736,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"5357:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2737,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"5371:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2741,"nodeType":"ExpressionStatement","src":"5342:36:14"},{"expression":{"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2742,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"5812:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2743,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"5821:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2744,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"5829:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2747,"nodeType":"ExpressionStatement","src":"5812:24:14"},{"expression":{"id":2748,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"5857:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2640,"id":2749,"nodeType":"Return","src":"5850:13:14"}]}]},"documentation":{"id":2630,"nodeType":"StructuredDocumentation","src":"1357:305:14","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":2752,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:14","nodeType":"FunctionDefinition","parameters":{"id":2637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2632,"mutability":"mutable","name":"x","nameLocation":"1691:1:14","nodeType":"VariableDeclaration","scope":2752,"src":"1683:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2631,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2634,"mutability":"mutable","name":"y","nameLocation":"1702:1:14","nodeType":"VariableDeclaration","scope":2752,"src":"1694:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2633,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2636,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:14","nodeType":"VariableDeclaration","scope":2752,"src":"1705:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2635,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:14"},"returnParameters":{"id":2640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2639,"mutability":"mutable","name":"result","nameLocation":"1757:6:14","nodeType":"VariableDeclaration","scope":2752,"src":"1749:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2638,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:14"},"scope":3404,"src":"1667:4213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2795,"nodeType":"Block","src":"6122:189:14","statements":[{"assignments":[2768],"declarations":[{"constant":false,"id":2768,"mutability":"mutable","name":"result","nameLocation":"6140:6:14","nodeType":"VariableDeclaration","scope":2795,"src":"6132:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2767,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2774,"initialValue":{"arguments":[{"id":2770,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"6156:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2771,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"6159:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2772,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"6162:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2769,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2752,2796],"referencedDeclaration":2752,"src":"6149:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:14"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2545","typeString":"enum Math.Rounding"},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2775,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"6188:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2545","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2776,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"6200:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2545_$","typeString":"type(enum Math.Rounding)"}},"id":2777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:14","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2543,"src":"6200:11:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2545","typeString":"enum Math.Rounding"}},"src":"6188:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2780,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"6222:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2781,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"6225:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2782,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"6228:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2779,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:14","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2792,"nodeType":"IfStatement","src":"6184:98:14","trueBody":{"id":2791,"nodeType":"Block","src":"6246:36:14","statements":[{"expression":{"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2787,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"6260:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2790,"nodeType":"ExpressionStatement","src":"6260:11:14"}]}},{"expression":{"id":2793,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"6298:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2766,"id":2794,"nodeType":"Return","src":"6291:13:14"}]},"documentation":{"id":2753,"nodeType":"StructuredDocumentation","src":"5886:121:14","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2796,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:14","nodeType":"FunctionDefinition","parameters":{"id":2763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2755,"mutability":"mutable","name":"x","nameLocation":"6036:1:14","nodeType":"VariableDeclaration","scope":2796,"src":"6028:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2754,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2757,"mutability":"mutable","name":"y","nameLocation":"6047:1:14","nodeType":"VariableDeclaration","scope":2796,"src":"6039:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2756,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2759,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:14","nodeType":"VariableDeclaration","scope":2796,"src":"6050:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2758,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2762,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:14","nodeType":"VariableDeclaration","scope":2796,"src":"6071:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2545","typeString":"enum Math.Rounding"},"typeName":{"id":2761,"nodeType":"UserDefinedTypeName","pathNode":{"id":2760,"name":"Rounding","nameLocations":["6071:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":2545,"src":"6071:8:14"},"referencedDeclaration":2545,"src":"6071:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2545","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:14"},"returnParameters":{"id":2766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2796,"src":"6113:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2764,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:14"},"scope":3404,"src":"6012:299:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2907,"nodeType":"Block","src":"6587:1585:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2804,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"6601:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2810,"nodeType":"IfStatement","src":"6597:45:14","trueBody":{"id":2809,"nodeType":"Block","src":"6609:33:14","statements":[{"expression":{"hexValue":"30","id":2807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2803,"id":2808,"nodeType":"Return","src":"6623:8:14"}]}},{"assignments":[2812],"declarations":[{"constant":false,"id":2812,"mutability":"mutable","name":"result","nameLocation":"7329:6:14","nodeType":"VariableDeclaration","scope":2907,"src":"7321:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2811,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2821,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2815,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"7349:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2814,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3076,3112],"referencedDeclaration":3076,"src":"7344:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2819,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:14"},{"id":2906,"nodeType":"UncheckedBlock","src":"7758:408:14","statements":[{"expression":{"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2822,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"7782:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2823,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"7792:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2824,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"7801:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2825,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"7805:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2828,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2832,"nodeType":"ExpressionStatement","src":"7782:35:14"},{"expression":{"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2833,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"7831:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2834,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"7841:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2835,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"7850:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2836,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"7854:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2839,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2843,"nodeType":"ExpressionStatement","src":"7831:35:14"},{"expression":{"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2844,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"7880:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2845,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"7890:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2846,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"7899:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2847,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"7903:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2850,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2854,"nodeType":"ExpressionStatement","src":"7880:35:14"},{"expression":{"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2855,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"7929:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2856,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"7939:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2857,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"7948:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2858,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"7952:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2861,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2865,"nodeType":"ExpressionStatement","src":"7929:35:14"},{"expression":{"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2866,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"7978:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2867,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"7988:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2868,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"7997:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2869,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"8001:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2872,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2876,"nodeType":"ExpressionStatement","src":"7978:35:14"},{"expression":{"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2877,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"8027:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2878,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"8037:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2879,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"8046:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2880,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"8050:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2883,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2887,"nodeType":"ExpressionStatement","src":"8027:35:14"},{"expression":{"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2888,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"8076:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2889,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"8086:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2890,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"8095:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2891,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"8099:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2894,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2898,"nodeType":"ExpressionStatement","src":"8076:35:14"},{"expression":{"arguments":[{"id":2900,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"8136:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2901,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"8144:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2902,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"8148:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2899,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"8132:3:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2803,"id":2905,"nodeType":"Return","src":"8125:30:14"}]}]},"documentation":{"id":2797,"nodeType":"StructuredDocumentation","src":"6317:208:14","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2908,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:14","nodeType":"FunctionDefinition","parameters":{"id":2800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2799,"mutability":"mutable","name":"a","nameLocation":"6552:1:14","nodeType":"VariableDeclaration","scope":2908,"src":"6544:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2798,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:14"},"returnParameters":{"id":2803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2908,"src":"6578:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2801,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:14"},"scope":3404,"src":"6530:1642:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2943,"nodeType":"Block","src":"8348:161:14","statements":[{"id":2942,"nodeType":"UncheckedBlock","src":"8358:145:14","statements":[{"assignments":[2920],"declarations":[{"constant":false,"id":2920,"mutability":"mutable","name":"result","nameLocation":"8390:6:14","nodeType":"VariableDeclaration","scope":2942,"src":"8382:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2919,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2924,"initialValue":{"arguments":[{"id":2922,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"8404:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2921,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2908,2944],"referencedDeclaration":2908,"src":"8399:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2925,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"8427:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2545","typeString":"enum Math.Rounding"},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2926,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"8437:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2545","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2927,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"8449:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2545_$","typeString":"type(enum Math.Rounding)"}},"id":2928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:14","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2543,"src":"8449:11:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2545","typeString":"enum Math.Rounding"}},"src":"8437:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2930,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"8464:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2931,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"8473:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2933,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"8482:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:14","trueExpression":{"hexValue":"31","id":2936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2939,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2918,"id":2941,"nodeType":"Return","src":"8420:72:14"}]}]},"documentation":{"id":2909,"nodeType":"StructuredDocumentation","src":"8178:89:14","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2944,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:14","nodeType":"FunctionDefinition","parameters":{"id":2915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2911,"mutability":"mutable","name":"a","nameLocation":"8294:1:14","nodeType":"VariableDeclaration","scope":2944,"src":"8286:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2910,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2914,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:14","nodeType":"VariableDeclaration","scope":2944,"src":"8297:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2545","typeString":"enum Math.Rounding"},"typeName":{"id":2913,"nodeType":"UserDefinedTypeName","pathNode":{"id":2912,"name":"Rounding","nameLocations":["8297:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":2545,"src":"8297:8:14"},"referencedDeclaration":2545,"src":"8297:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2545","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:14"},"returnParameters":{"id":2918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2944,"src":"8339:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2916,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:14"},"scope":3404,"src":"8272:237:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3075,"nodeType":"Block","src":"8694:922:14","statements":[{"assignments":[2953],"declarations":[{"constant":false,"id":2953,"mutability":"mutable","name":"result","nameLocation":"8712:6:14","nodeType":"VariableDeclaration","scope":3075,"src":"8704:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2952,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2955,"initialValue":{"hexValue":"30","id":2954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:14"},{"id":3072,"nodeType":"UncheckedBlock","src":"8732:855:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"8760:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2970,"nodeType":"IfStatement","src":"8756:99:14","trueBody":{"id":2969,"nodeType":"Block","src":"8778:77:14","statements":[{"expression":{"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"8796:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2964,"nodeType":"ExpressionStatement","src":"8796:13:14"},{"expression":{"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2965,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"8827:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2968,"nodeType":"ExpressionStatement","src":"8827:13:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"8872:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2985,"nodeType":"IfStatement","src":"8868:96:14","trueBody":{"id":2984,"nodeType":"Block","src":"8889:75:14","statements":[{"expression":{"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"8907:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2979,"nodeType":"ExpressionStatement","src":"8907:12:14"},{"expression":{"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2980,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"8937:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2983,"nodeType":"ExpressionStatement","src":"8937:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"8981:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3000,"nodeType":"IfStatement","src":"8977:96:14","trueBody":{"id":2999,"nodeType":"Block","src":"8998:75:14","statements":[{"expression":{"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"9016:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2994,"nodeType":"ExpressionStatement","src":"9016:12:14"},{"expression":{"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2995,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"9046:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2998,"nodeType":"ExpressionStatement","src":"9046:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"9090:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3015,"nodeType":"IfStatement","src":"9086:96:14","trueBody":{"id":3014,"nodeType":"Block","src":"9107:75:14","statements":[{"expression":{"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"9125:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3009,"nodeType":"ExpressionStatement","src":"9125:12:14"},{"expression":{"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3010,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"9155:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3013,"nodeType":"ExpressionStatement","src":"9155:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"9199:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3030,"nodeType":"IfStatement","src":"9195:93:14","trueBody":{"id":3029,"nodeType":"Block","src":"9215:73:14","statements":[{"expression":{"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"9233:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3024,"nodeType":"ExpressionStatement","src":"9233:11:14"},{"expression":{"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3025,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"9262:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3028,"nodeType":"ExpressionStatement","src":"9262:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"9305:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":3032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3045,"nodeType":"IfStatement","src":"9301:93:14","trueBody":{"id":3044,"nodeType":"Block","src":"9321:73:14","statements":[{"expression":{"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"9339:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3039,"nodeType":"ExpressionStatement","src":"9339:11:14"},{"expression":{"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3040,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"9368:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3043,"nodeType":"ExpressionStatement","src":"9368:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"9411:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":3047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3060,"nodeType":"IfStatement","src":"9407:93:14","trueBody":{"id":3059,"nodeType":"Block","src":"9427:73:14","statements":[{"expression":{"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"9445:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":3052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3054,"nodeType":"ExpressionStatement","src":"9445:11:14"},{"expression":{"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3055,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"9474:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3058,"nodeType":"ExpressionStatement","src":"9474:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"9517:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3071,"nodeType":"IfStatement","src":"9513:64:14","trueBody":{"id":3070,"nodeType":"Block","src":"9533:44:14","statements":[{"expression":{"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3066,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"9551:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3069,"nodeType":"ExpressionStatement","src":"9551:11:14"}]}}]},{"expression":{"id":3073,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"9603:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2951,"id":3074,"nodeType":"Return","src":"9596:13:14"}]},"documentation":{"id":2945,"nodeType":"StructuredDocumentation","src":"8515:113:14","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3076,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:14","nodeType":"FunctionDefinition","parameters":{"id":2948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2947,"mutability":"mutable","name":"value","nameLocation":"8655:5:14","nodeType":"VariableDeclaration","scope":3076,"src":"8647:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2946,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:14"},"returnParameters":{"id":2951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2950,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3076,"src":"8685:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2949,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:14"},"scope":3404,"src":"8633:983:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3111,"nodeType":"Block","src":"9849:165:14","statements":[{"id":3110,"nodeType":"UncheckedBlock","src":"9859:149:14","statements":[{"assignments":[3088],"declarations":[{"constant":false,"id":3088,"mutability":"mutable","name":"result","nameLocation":"9891:6:14","nodeType":"VariableDeclaration","scope":3110,"src":"9883:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3087,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3092,"initialValue":{"arguments":[{"id":3090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3079,"src":"9905:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3089,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3076,3112],"referencedDeclaration":3076,"src":"9900:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3093,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"9932:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2545","typeString":"enum Math.Rounding"},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3094,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"9942:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2545","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3095,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"9954:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2545_$","typeString":"type(enum Math.Rounding)"}},"id":3096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:14","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2543,"src":"9954:11:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2545","typeString":"enum Math.Rounding"}},"src":"9942:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3099,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"9974:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3079,"src":"9983:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:14","trueExpression":{"hexValue":"31","id":3104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3107,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3086,"id":3109,"nodeType":"Return","src":"9925:72:14"}]}]},"documentation":{"id":3077,"nodeType":"StructuredDocumentation","src":"9622:142:14","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3112,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:14","nodeType":"FunctionDefinition","parameters":{"id":3083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3079,"mutability":"mutable","name":"value","nameLocation":"9791:5:14","nodeType":"VariableDeclaration","scope":3112,"src":"9783:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3078,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3082,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:14","nodeType":"VariableDeclaration","scope":3112,"src":"9798:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2545","typeString":"enum Math.Rounding"},"typeName":{"id":3081,"nodeType":"UserDefinedTypeName","pathNode":{"id":3080,"name":"Rounding","nameLocations":["9798:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":2545,"src":"9798:8:14"},"referencedDeclaration":2545,"src":"9798:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2545","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:14"},"returnParameters":{"id":3086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3112,"src":"9840:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3084,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:14"},"scope":3404,"src":"9769:245:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3240,"nodeType":"Block","src":"10201:854:14","statements":[{"assignments":[3121],"declarations":[{"constant":false,"id":3121,"mutability":"mutable","name":"result","nameLocation":"10219:6:14","nodeType":"VariableDeclaration","scope":3240,"src":"10211:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3120,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3123,"initialValue":{"hexValue":"30","id":3122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:14"},{"id":3237,"nodeType":"UncheckedBlock","src":"10239:787:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"10267:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3140,"nodeType":"IfStatement","src":"10263:103:14","trueBody":{"id":3139,"nodeType":"Block","src":"10286:80:14","statements":[{"expression":{"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"10304:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3134,"nodeType":"ExpressionStatement","src":"10304:17:14"},{"expression":{"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3135,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"10339:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3138,"nodeType":"ExpressionStatement","src":"10339:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"10383:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3157,"nodeType":"IfStatement","src":"10379:103:14","trueBody":{"id":3156,"nodeType":"Block","src":"10402:80:14","statements":[{"expression":{"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"10420:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3151,"nodeType":"ExpressionStatement","src":"10420:17:14"},{"expression":{"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3152,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"10455:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3155,"nodeType":"ExpressionStatement","src":"10455:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"10499:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3174,"nodeType":"IfStatement","src":"10495:103:14","trueBody":{"id":3173,"nodeType":"Block","src":"10518:80:14","statements":[{"expression":{"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"10536:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3168,"nodeType":"ExpressionStatement","src":"10536:17:14"},{"expression":{"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3169,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"10571:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3172,"nodeType":"ExpressionStatement","src":"10571:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"10615:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3191,"nodeType":"IfStatement","src":"10611:100:14","trueBody":{"id":3190,"nodeType":"Block","src":"10633:78:14","statements":[{"expression":{"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"10651:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3185,"nodeType":"ExpressionStatement","src":"10651:16:14"},{"expression":{"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3186,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"10685:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3189,"nodeType":"ExpressionStatement","src":"10685:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"10728:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:14","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3208,"nodeType":"IfStatement","src":"10724:100:14","trueBody":{"id":3207,"nodeType":"Block","src":"10746:78:14","statements":[{"expression":{"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"10764:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:14","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3202,"nodeType":"ExpressionStatement","src":"10764:16:14"},{"expression":{"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3203,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"10798:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3206,"nodeType":"ExpressionStatement","src":"10798:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"10841:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3225,"nodeType":"IfStatement","src":"10837:100:14","trueBody":{"id":3224,"nodeType":"Block","src":"10859:78:14","statements":[{"expression":{"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"10877:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3219,"nodeType":"ExpressionStatement","src":"10877:16:14"},{"expression":{"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3220,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"10911:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3223,"nodeType":"ExpressionStatement","src":"10911:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"10954:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3236,"nodeType":"IfStatement","src":"10950:66:14","trueBody":{"id":3235,"nodeType":"Block","src":"10972:44:14","statements":[{"expression":{"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3231,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"10990:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3234,"nodeType":"ExpressionStatement","src":"10990:11:14"}]}}]},{"expression":{"id":3238,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"11042:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3119,"id":3239,"nodeType":"Return","src":"11035:13:14"}]},"documentation":{"id":3113,"nodeType":"StructuredDocumentation","src":"10020:114:14","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3241,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:14","nodeType":"FunctionDefinition","parameters":{"id":3116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3115,"mutability":"mutable","name":"value","nameLocation":"10162:5:14","nodeType":"VariableDeclaration","scope":3241,"src":"10154:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3114,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:14"},"returnParameters":{"id":3119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3241,"src":"10192:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3117,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:14"},"scope":3404,"src":"10139:916:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3276,"nodeType":"Block","src":"11290:167:14","statements":[{"id":3275,"nodeType":"UncheckedBlock","src":"11300:151:14","statements":[{"assignments":[3253],"declarations":[{"constant":false,"id":3253,"mutability":"mutable","name":"result","nameLocation":"11332:6:14","nodeType":"VariableDeclaration","scope":3275,"src":"11324:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3252,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3257,"initialValue":{"arguments":[{"id":3255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"11347:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3254,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3241,3277],"referencedDeclaration":3241,"src":"11341:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3258,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"11374:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2545","typeString":"enum Math.Rounding"},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3259,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"11384:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2545","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3260,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"11396:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2545_$","typeString":"type(enum Math.Rounding)"}},"id":3261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:14","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2543,"src":"11396:11:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2545","typeString":"enum Math.Rounding"}},"src":"11384:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3264,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"11417:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"11426:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:14","trueExpression":{"hexValue":"31","id":3269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3272,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3251,"id":3274,"nodeType":"Return","src":"11367:73:14"}]}]},"documentation":{"id":3242,"nodeType":"StructuredDocumentation","src":"11061:143:14","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3277,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:14","nodeType":"FunctionDefinition","parameters":{"id":3248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3244,"mutability":"mutable","name":"value","nameLocation":"11232:5:14","nodeType":"VariableDeclaration","scope":3277,"src":"11224:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3243,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3247,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:14","nodeType":"VariableDeclaration","scope":3277,"src":"11239:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2545","typeString":"enum Math.Rounding"},"typeName":{"id":3246,"nodeType":"UserDefinedTypeName","pathNode":{"id":3245,"name":"Rounding","nameLocations":["11239:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":2545,"src":"11239:8:14"},"referencedDeclaration":2545,"src":"11239:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2545","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:14"},"returnParameters":{"id":3251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3277,"src":"11281:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3249,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:14"},"scope":3404,"src":"11209:248:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3363,"nodeType":"Block","src":"11771:600:14","statements":[{"assignments":[3286],"declarations":[{"constant":false,"id":3286,"mutability":"mutable","name":"result","nameLocation":"11789:6:14","nodeType":"VariableDeclaration","scope":3363,"src":"11781:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3285,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3288,"initialValue":{"hexValue":"30","id":3287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:14"},{"id":3360,"nodeType":"UncheckedBlock","src":"11809:533:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"11837:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3303,"nodeType":"IfStatement","src":"11833:98:14","trueBody":{"id":3302,"nodeType":"Block","src":"11855:76:14","statements":[{"expression":{"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"11873:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3297,"nodeType":"ExpressionStatement","src":"11873:13:14"},{"expression":{"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3298,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"11904:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3301,"nodeType":"ExpressionStatement","src":"11904:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3304,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"11948:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3318,"nodeType":"IfStatement","src":"11944:95:14","trueBody":{"id":3317,"nodeType":"Block","src":"11965:74:14","statements":[{"expression":{"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"11983:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3312,"nodeType":"ExpressionStatement","src":"11983:12:14"},{"expression":{"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3313,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"12013:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3316,"nodeType":"ExpressionStatement","src":"12013:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"12056:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3333,"nodeType":"IfStatement","src":"12052:95:14","trueBody":{"id":3332,"nodeType":"Block","src":"12073:74:14","statements":[{"expression":{"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"12091:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3327,"nodeType":"ExpressionStatement","src":"12091:12:14"},{"expression":{"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3328,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"12121:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3331,"nodeType":"ExpressionStatement","src":"12121:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"12164:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3348,"nodeType":"IfStatement","src":"12160:95:14","trueBody":{"id":3347,"nodeType":"Block","src":"12181:74:14","statements":[{"expression":{"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"12199:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3342,"nodeType":"ExpressionStatement","src":"12199:12:14"},{"expression":{"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3343,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"12229:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3346,"nodeType":"ExpressionStatement","src":"12229:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"12272:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3359,"nodeType":"IfStatement","src":"12268:64:14","trueBody":{"id":3358,"nodeType":"Block","src":"12288:44:14","statements":[{"expression":{"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3354,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"12306:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3357,"nodeType":"ExpressionStatement","src":"12306:11:14"}]}}]},{"expression":{"id":3361,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"12358:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3284,"id":3362,"nodeType":"Return","src":"12351:13:14"}]},"documentation":{"id":3278,"nodeType":"StructuredDocumentation","src":"11463:240:14","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3364,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:14","nodeType":"FunctionDefinition","parameters":{"id":3281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3280,"mutability":"mutable","name":"value","nameLocation":"11732:5:14","nodeType":"VariableDeclaration","scope":3364,"src":"11724:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3279,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:14"},"returnParameters":{"id":3284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3364,"src":"11762:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3282,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:14"},"scope":3404,"src":"11708:663:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3402,"nodeType":"Block","src":"12608:174:14","statements":[{"id":3401,"nodeType":"UncheckedBlock","src":"12618:158:14","statements":[{"assignments":[3376],"declarations":[{"constant":false,"id":3376,"mutability":"mutable","name":"result","nameLocation":"12650:6:14","nodeType":"VariableDeclaration","scope":3401,"src":"12642:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3375,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3380,"initialValue":{"arguments":[{"id":3378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3367,"src":"12666:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3377,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3364,3403],"referencedDeclaration":3364,"src":"12659:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3381,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"12693:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2545","typeString":"enum Math.Rounding"},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3382,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"12703:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2545","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3383,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"12715:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2545_$","typeString":"type(enum Math.Rounding)"}},"id":3384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:14","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2543,"src":"12715:11:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2545","typeString":"enum Math.Rounding"}},"src":"12703:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3387,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"12736:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3390,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3367,"src":"12751:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:14","trueExpression":{"hexValue":"31","id":3395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3398,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3374,"id":3400,"nodeType":"Return","src":"12686:79:14"}]}]},"documentation":{"id":3365,"nodeType":"StructuredDocumentation","src":"12377:144:14","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3403,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:14","nodeType":"FunctionDefinition","parameters":{"id":3371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3367,"mutability":"mutable","name":"value","nameLocation":"12550:5:14","nodeType":"VariableDeclaration","scope":3403,"src":"12542:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3366,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3370,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:14","nodeType":"VariableDeclaration","scope":3403,"src":"12557:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2545","typeString":"enum Math.Rounding"},"typeName":{"id":3369,"nodeType":"UserDefinedTypeName","pathNode":{"id":3368,"name":"Rounding","nameLocations":["12557:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":2545,"src":"12557:8:14"},"referencedDeclaration":2545,"src":"12557:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2545","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:14"},"returnParameters":{"id":3374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3403,"src":"12599:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3372,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:14"},"scope":3404,"src":"12526:256:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3405,"src":"202:12582:14","usedErrors":[]}],"src":"103:12682:14"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"id":15,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[3509]},"id":3510,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3406,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":3407,"nodeType":"StructuredDocumentation","src":"134:80:15","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3509,"linearizedBaseContracts":[3509],"name":"SignedMath","nameLocation":"223:10:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":3424,"nodeType":"Block","src":"375:37:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3417,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"392:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3418,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"396:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3421,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"404:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:15","trueExpression":{"id":3420,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"400:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3416,"id":3423,"nodeType":"Return","src":"385:20:15"}]},"documentation":{"id":3408,"nodeType":"StructuredDocumentation","src":"240:66:15","text":" @dev Returns the largest of two signed numbers."},"id":3425,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:15","nodeType":"FunctionDefinition","parameters":{"id":3413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3410,"mutability":"mutable","name":"a","nameLocation":"331:1:15","nodeType":"VariableDeclaration","scope":3425,"src":"324:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3409,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3412,"mutability":"mutable","name":"b","nameLocation":"341:1:15","nodeType":"VariableDeclaration","scope":3425,"src":"334:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3411,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:15"},"returnParameters":{"id":3416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3425,"src":"367:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3414,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:15"},"scope":3509,"src":"311:101:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3442,"nodeType":"Block","src":"554:37:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3435,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"571:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3436,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"575:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3439,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"583:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:15","trueExpression":{"id":3438,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"579:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3434,"id":3441,"nodeType":"Return","src":"564:20:15"}]},"documentation":{"id":3426,"nodeType":"StructuredDocumentation","src":"418:67:15","text":" @dev Returns the smallest of two signed numbers."},"id":3443,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:15","nodeType":"FunctionDefinition","parameters":{"id":3431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3428,"mutability":"mutable","name":"a","nameLocation":"510:1:15","nodeType":"VariableDeclaration","scope":3443,"src":"503:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3427,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3430,"mutability":"mutable","name":"b","nameLocation":"520:1:15","nodeType":"VariableDeclaration","scope":3443,"src":"513:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3429,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:15"},"returnParameters":{"id":3434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3443,"src":"546:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3432,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:15"},"scope":3509,"src":"490:101:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3486,"nodeType":"Block","src":"796:162:15","statements":[{"assignments":[3454],"declarations":[{"constant":false,"id":3454,"mutability":"mutable","name":"x","nameLocation":"865:1:15","nodeType":"VariableDeclaration","scope":3486,"src":"858:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3453,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3467,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3455,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"870:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3456,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"874:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3458,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3459,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"881:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3460,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"885:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3462,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3465,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:15"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3468,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"910:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3473,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"930:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3471,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:15","typeDescriptions":{}}},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3469,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:15","typeDescriptions":{}}},"id":3477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3478,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"944:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3479,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"948:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3481,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3483,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3452,"id":3485,"nodeType":"Return","src":"903:48:15"}]},"documentation":{"id":3444,"nodeType":"StructuredDocumentation","src":"597:126:15","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":3487,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:15","nodeType":"FunctionDefinition","parameters":{"id":3449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3446,"mutability":"mutable","name":"a","nameLocation":"752:1:15","nodeType":"VariableDeclaration","scope":3487,"src":"745:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3445,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3448,"mutability":"mutable","name":"b","nameLocation":"762:1:15","nodeType":"VariableDeclaration","scope":3487,"src":"755:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3447,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:15"},"returnParameters":{"id":3452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3487,"src":"788:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3450,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:15"},"scope":3509,"src":"728:230:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3507,"nodeType":"Block","src":"1102:158:15","statements":[{"id":3506,"nodeType":"UncheckedBlock","src":"1112:142:15","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3497,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"1227:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":3498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:15","subExpression":{"id":3501,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"1241:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:15","trueExpression":{"id":3500,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"1236:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3495,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:15","typeDescriptions":{}}},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3494,"id":3505,"nodeType":"Return","src":"1212:31:15"}]}]},"documentation":{"id":3488,"nodeType":"StructuredDocumentation","src":"964:78:15","text":" @dev Returns the absolute unsigned value of a signed value."},"id":3508,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:15","nodeType":"FunctionDefinition","parameters":{"id":3491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3490,"mutability":"mutable","name":"n","nameLocation":"1067:1:15","nodeType":"VariableDeclaration","scope":3508,"src":"1060:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3489,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:15"},"returnParameters":{"id":3494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3508,"src":"1093:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3492,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:15"},"scope":3509,"src":"1047:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3510,"src":"215:1047:15","usedErrors":[]}],"src":"109:1154:15"}},"contracts/interfaces/IAccount.sol":{"id":16,"ast":{"absolutePath":"contracts/interfaces/IAccount.sol","exportedSymbols":{"IAccount":[3535]},"id":3536,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":3511,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"39:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccount","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3535,"linearizedBaseContracts":[3535],"name":"IAccount","nameLocation":"75:8:16","nodeType":"ContractDefinition","nodes":[{"functionSelector":"8da5cb5b","id":3516,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"99:5:16","nodeType":"FunctionDefinition","parameters":{"id":3512,"nodeType":"ParameterList","parameters":[],"src":"104:2:16"},"returnParameters":{"id":3515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3516,"src":"130:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3513,"name":"address","nodeType":"ElementaryTypeName","src":"130:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"129:9:16"},"scope":3535,"src":"90:49:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"fc0c546a","id":3523,"implemented":false,"kind":"function","modifiers":[],"name":"token","nameLocation":"154:5:16","nodeType":"FunctionDefinition","parameters":{"id":3517,"nodeType":"ParameterList","parameters":[],"src":"159:2:16"},"returnParameters":{"id":3522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3519,"mutability":"mutable","name":"tokenContract","nameLocation":"217:13:16","nodeType":"VariableDeclaration","scope":3523,"src":"209:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3518,"name":"address","nodeType":"ElementaryTypeName","src":"209:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3521,"mutability":"mutable","name":"tokenId","nameLocation":"240:7:16","nodeType":"VariableDeclaration","scope":3523,"src":"232:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3520,"name":"uint256","nodeType":"ElementaryTypeName","src":"232:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"208:40:16"},"scope":3535,"src":"145:104:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9e5d4c49","id":3534,"implemented":false,"kind":"function","modifiers":[],"name":"executeCall","nameLocation":"264:11:16","nodeType":"FunctionDefinition","parameters":{"id":3530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3525,"mutability":"mutable","name":"to","nameLocation":"293:2:16","nodeType":"VariableDeclaration","scope":3534,"src":"285:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3524,"name":"address","nodeType":"ElementaryTypeName","src":"285:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3527,"mutability":"mutable","name":"value","nameLocation":"313:5:16","nodeType":"VariableDeclaration","scope":3534,"src":"305:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3526,"name":"uint256","nodeType":"ElementaryTypeName","src":"305:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3529,"mutability":"mutable","name":"data","nameLocation":"343:4:16","nodeType":"VariableDeclaration","scope":3534,"src":"328:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3528,"name":"bytes","nodeType":"ElementaryTypeName","src":"328:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"275:78:16"},"returnParameters":{"id":3533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3534,"src":"380:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3531,"name":"bytes","nodeType":"ElementaryTypeName","src":"380:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"379:14:16"},"scope":3535,"src":"255:139:16","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":3536,"src":"65:331:16","usedErrors":[]}],"src":"39:358:16"}},"contracts/interfaces/IChargedParticles.sol":{"id":17,"ast":{"absolutePath":"contracts/interfaces/IChargedParticles.sol","exportedSymbols":{"IChargedParticles":[3753]},"id":3754,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3537,"literals":["solidity",">=","0.6",".0"],"nodeType":"PragmaDirective","src":"1236:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"IChargedParticles","contractDependencies":[],"contractKind":"interface","documentation":{"id":3538,"nodeType":"StructuredDocumentation","src":"1262:50:17","text":" @notice Interface for Charged Particles"},"fullyImplemented":false,"id":3753,"linearizedBaseContracts":[3753],"name":"IChargedParticles","nameLocation":"1323:17:17","nodeType":"ContractDefinition","nodes":[{"functionSelector":"31969e57","id":3543,"implemented":false,"kind":"function","modifiers":[],"name":"getStateAddress","nameLocation":"1476:15:17","nodeType":"FunctionDefinition","parameters":{"id":3539,"nodeType":"ParameterList","parameters":[],"src":"1491:2:17"},"returnParameters":{"id":3542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3541,"mutability":"mutable","name":"stateAddress","nameLocation":"1525:12:17","nodeType":"VariableDeclaration","scope":3543,"src":"1517:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3540,"name":"address","nodeType":"ElementaryTypeName","src":"1517:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1516:22:17"},"scope":3753,"src":"1467:72:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d00999fe","id":3548,"implemented":false,"kind":"function","modifiers":[],"name":"getSettingsAddress","nameLocation":"1551:18:17","nodeType":"FunctionDefinition","parameters":{"id":3544,"nodeType":"ParameterList","parameters":[],"src":"1569:2:17"},"returnParameters":{"id":3547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3546,"mutability":"mutable","name":"settingsAddress","nameLocation":"1603:15:17","nodeType":"VariableDeclaration","scope":3548,"src":"1595:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3545,"name":"address","nodeType":"ElementaryTypeName","src":"1595:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1594:25:17"},"scope":3753,"src":"1542:78:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8742f168","id":3553,"implemented":false,"kind":"function","modifiers":[],"name":"getManagersAddress","nameLocation":"1632:18:17","nodeType":"FunctionDefinition","parameters":{"id":3549,"nodeType":"ParameterList","parameters":[],"src":"1650:2:17"},"returnParameters":{"id":3552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3551,"mutability":"mutable","name":"managersAddress","nameLocation":"1684:15:17","nodeType":"VariableDeclaration","scope":3553,"src":"1676:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3550,"name":"address","nodeType":"ElementaryTypeName","src":"1676:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1675:25:17"},"scope":3753,"src":"1623:78:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ee895623","id":3560,"implemented":false,"kind":"function","modifiers":[],"name":"getFeesForDeposit","nameLocation":"1714:17:17","nodeType":"FunctionDefinition","parameters":{"id":3556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3555,"mutability":"mutable","name":"assetAmount","nameLocation":"1740:11:17","nodeType":"VariableDeclaration","scope":3560,"src":"1732:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3554,"name":"uint256","nodeType":"ElementaryTypeName","src":"1732:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1731:21:17"},"returnParameters":{"id":3559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3558,"mutability":"mutable","name":"protocolFee","nameLocation":"1784:11:17","nodeType":"VariableDeclaration","scope":3560,"src":"1776:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3557,"name":"uint256","nodeType":"ElementaryTypeName","src":"1776:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1775:21:17"},"scope":3753,"src":"1705:92:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e6ea6ce7","id":3573,"implemented":false,"kind":"function","modifiers":[],"name":"baseParticleMass","nameLocation":"1809:16:17","nodeType":"FunctionDefinition","parameters":{"id":3569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3562,"mutability":"mutable","name":"contractAddress","nameLocation":"1834:15:17","nodeType":"VariableDeclaration","scope":3573,"src":"1826:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3561,"name":"address","nodeType":"ElementaryTypeName","src":"1826:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3564,"mutability":"mutable","name":"tokenId","nameLocation":"1859:7:17","nodeType":"VariableDeclaration","scope":3573,"src":"1851:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3563,"name":"uint256","nodeType":"ElementaryTypeName","src":"1851:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3566,"mutability":"mutable","name":"walletManagerId","nameLocation":"1884:15:17","nodeType":"VariableDeclaration","scope":3573,"src":"1868:31:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":3565,"name":"string","nodeType":"ElementaryTypeName","src":"1868:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3568,"mutability":"mutable","name":"assetToken","nameLocation":"1909:10:17","nodeType":"VariableDeclaration","scope":3573,"src":"1901:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3567,"name":"address","nodeType":"ElementaryTypeName","src":"1901:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1825:95:17"},"returnParameters":{"id":3572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3573,"src":"1939:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3570,"name":"uint256","nodeType":"ElementaryTypeName","src":"1939:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1938:9:17"},"scope":3753,"src":"1800:148:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"99fa4c73","id":3586,"implemented":false,"kind":"function","modifiers":[],"name":"currentParticleCharge","nameLocation":"1960:21:17","nodeType":"FunctionDefinition","parameters":{"id":3582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3575,"mutability":"mutable","name":"contractAddress","nameLocation":"1990:15:17","nodeType":"VariableDeclaration","scope":3586,"src":"1982:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3574,"name":"address","nodeType":"ElementaryTypeName","src":"1982:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3577,"mutability":"mutable","name":"tokenId","nameLocation":"2015:7:17","nodeType":"VariableDeclaration","scope":3586,"src":"2007:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3576,"name":"uint256","nodeType":"ElementaryTypeName","src":"2007:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3579,"mutability":"mutable","name":"walletManagerId","nameLocation":"2040:15:17","nodeType":"VariableDeclaration","scope":3586,"src":"2024:31:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":3578,"name":"string","nodeType":"ElementaryTypeName","src":"2024:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3581,"mutability":"mutable","name":"assetToken","nameLocation":"2065:10:17","nodeType":"VariableDeclaration","scope":3586,"src":"2057:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3580,"name":"address","nodeType":"ElementaryTypeName","src":"2057:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1981:95:17"},"returnParameters":{"id":3585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3586,"src":"2095:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3583,"name":"uint256","nodeType":"ElementaryTypeName","src":"2095:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2094:9:17"},"scope":3753,"src":"1951:153:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"ca92acd0","id":3599,"implemented":false,"kind":"function","modifiers":[],"name":"currentParticleKinetics","nameLocation":"2116:23:17","nodeType":"FunctionDefinition","parameters":{"id":3595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3588,"mutability":"mutable","name":"contractAddress","nameLocation":"2148:15:17","nodeType":"VariableDeclaration","scope":3599,"src":"2140:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3587,"name":"address","nodeType":"ElementaryTypeName","src":"2140:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3590,"mutability":"mutable","name":"tokenId","nameLocation":"2173:7:17","nodeType":"VariableDeclaration","scope":3599,"src":"2165:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3589,"name":"uint256","nodeType":"ElementaryTypeName","src":"2165:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3592,"mutability":"mutable","name":"walletManagerId","nameLocation":"2198:15:17","nodeType":"VariableDeclaration","scope":3599,"src":"2182:31:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":3591,"name":"string","nodeType":"ElementaryTypeName","src":"2182:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3594,"mutability":"mutable","name":"assetToken","nameLocation":"2223:10:17","nodeType":"VariableDeclaration","scope":3599,"src":"2215:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3593,"name":"address","nodeType":"ElementaryTypeName","src":"2215:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2139:95:17"},"returnParameters":{"id":3598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3599,"src":"2253:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3596,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2252:9:17"},"scope":3753,"src":"2107:155:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a13eafd5","id":3610,"implemented":false,"kind":"function","modifiers":[],"name":"currentParticleCovalentBonds","nameLocation":"2274:28:17","nodeType":"FunctionDefinition","parameters":{"id":3606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3601,"mutability":"mutable","name":"contractAddress","nameLocation":"2311:15:17","nodeType":"VariableDeclaration","scope":3610,"src":"2303:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3600,"name":"address","nodeType":"ElementaryTypeName","src":"2303:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3603,"mutability":"mutable","name":"tokenId","nameLocation":"2336:7:17","nodeType":"VariableDeclaration","scope":3610,"src":"2328:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3602,"name":"uint256","nodeType":"ElementaryTypeName","src":"2328:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3605,"mutability":"mutable","name":"basketManagerId","nameLocation":"2361:15:17","nodeType":"VariableDeclaration","scope":3610,"src":"2345:31:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":3604,"name":"string","nodeType":"ElementaryTypeName","src":"2345:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2302:75:17"},"returnParameters":{"id":3609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3608,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3610,"src":"2401:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3607,"name":"uint256","nodeType":"ElementaryTypeName","src":"2401:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2400:9:17"},"scope":3753,"src":"2265:145:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0bdde2ca","id":3627,"implemented":false,"kind":"function","modifiers":[],"name":"energizeParticle","nameLocation":"2544:16:17","nodeType":"FunctionDefinition","parameters":{"id":3623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3612,"mutability":"mutable","name":"contractAddress","nameLocation":"2576:15:17","nodeType":"VariableDeclaration","scope":3627,"src":"2568:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3611,"name":"address","nodeType":"ElementaryTypeName","src":"2568:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3614,"mutability":"mutable","name":"tokenId","nameLocation":"2607:7:17","nodeType":"VariableDeclaration","scope":3627,"src":"2599:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3613,"name":"uint256","nodeType":"ElementaryTypeName","src":"2599:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3616,"mutability":"mutable","name":"walletManagerId","nameLocation":"2638:15:17","nodeType":"VariableDeclaration","scope":3627,"src":"2622:31:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":3615,"name":"string","nodeType":"ElementaryTypeName","src":"2622:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3618,"mutability":"mutable","name":"assetToken","nameLocation":"2669:10:17","nodeType":"VariableDeclaration","scope":3627,"src":"2661:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3617,"name":"address","nodeType":"ElementaryTypeName","src":"2661:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3620,"mutability":"mutable","name":"assetAmount","nameLocation":"2695:11:17","nodeType":"VariableDeclaration","scope":3627,"src":"2687:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3619,"name":"uint256","nodeType":"ElementaryTypeName","src":"2687:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3622,"mutability":"mutable","name":"referrer","nameLocation":"2722:8:17","nodeType":"VariableDeclaration","scope":3627,"src":"2714:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3621,"name":"address","nodeType":"ElementaryTypeName","src":"2714:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2560:174:17"},"returnParameters":{"id":3626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3625,"mutability":"mutable","name":"yieldTokensAmount","nameLocation":"2761:17:17","nodeType":"VariableDeclaration","scope":3627,"src":"2753:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3624,"name":"uint256","nodeType":"ElementaryTypeName","src":"2753:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2752:27:17"},"scope":3753,"src":"2535:245:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"621a3b70","id":3644,"implemented":false,"kind":"function","modifiers":[],"name":"dischargeParticle","nameLocation":"2793:17:17","nodeType":"FunctionDefinition","parameters":{"id":3638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3629,"mutability":"mutable","name":"receiver","nameLocation":"2826:8:17","nodeType":"VariableDeclaration","scope":3644,"src":"2818:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3628,"name":"address","nodeType":"ElementaryTypeName","src":"2818:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3631,"mutability":"mutable","name":"contractAddress","nameLocation":"2850:15:17","nodeType":"VariableDeclaration","scope":3644,"src":"2842:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3630,"name":"address","nodeType":"ElementaryTypeName","src":"2842:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3633,"mutability":"mutable","name":"tokenId","nameLocation":"2881:7:17","nodeType":"VariableDeclaration","scope":3644,"src":"2873:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3632,"name":"uint256","nodeType":"ElementaryTypeName","src":"2873:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3635,"mutability":"mutable","name":"walletManagerId","nameLocation":"2912:15:17","nodeType":"VariableDeclaration","scope":3644,"src":"2896:31:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":3634,"name":"string","nodeType":"ElementaryTypeName","src":"2896:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3637,"mutability":"mutable","name":"assetToken","nameLocation":"2943:10:17","nodeType":"VariableDeclaration","scope":3644,"src":"2935:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3636,"name":"address","nodeType":"ElementaryTypeName","src":"2935:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2810:147:17"},"returnParameters":{"id":3643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3640,"mutability":"mutable","name":"creatorAmount","nameLocation":"2984:13:17","nodeType":"VariableDeclaration","scope":3644,"src":"2976:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3639,"name":"uint256","nodeType":"ElementaryTypeName","src":"2976:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3642,"mutability":"mutable","name":"receiverAmount","nameLocation":"3007:14:17","nodeType":"VariableDeclaration","scope":3644,"src":"2999:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3641,"name":"uint256","nodeType":"ElementaryTypeName","src":"2999:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2975:47:17"},"scope":3753,"src":"2784:239:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6697b359","id":3663,"implemented":false,"kind":"function","modifiers":[],"name":"dischargeParticleAmount","nameLocation":"3036:23:17","nodeType":"FunctionDefinition","parameters":{"id":3657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3646,"mutability":"mutable","name":"receiver","nameLocation":"3075:8:17","nodeType":"VariableDeclaration","scope":3663,"src":"3067:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3645,"name":"address","nodeType":"ElementaryTypeName","src":"3067:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3648,"mutability":"mutable","name":"contractAddress","nameLocation":"3099:15:17","nodeType":"VariableDeclaration","scope":3663,"src":"3091:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3647,"name":"address","nodeType":"ElementaryTypeName","src":"3091:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3650,"mutability":"mutable","name":"tokenId","nameLocation":"3130:7:17","nodeType":"VariableDeclaration","scope":3663,"src":"3122:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3649,"name":"uint256","nodeType":"ElementaryTypeName","src":"3122:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3652,"mutability":"mutable","name":"walletManagerId","nameLocation":"3161:15:17","nodeType":"VariableDeclaration","scope":3663,"src":"3145:31:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":3651,"name":"string","nodeType":"ElementaryTypeName","src":"3145:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3654,"mutability":"mutable","name":"assetToken","nameLocation":"3192:10:17","nodeType":"VariableDeclaration","scope":3663,"src":"3184:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3653,"name":"address","nodeType":"ElementaryTypeName","src":"3184:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3656,"mutability":"mutable","name":"assetAmount","nameLocation":"3218:11:17","nodeType":"VariableDeclaration","scope":3663,"src":"3210:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3655,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3059:174:17"},"returnParameters":{"id":3662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3659,"mutability":"mutable","name":"creatorAmount","nameLocation":"3260:13:17","nodeType":"VariableDeclaration","scope":3663,"src":"3252:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3658,"name":"uint256","nodeType":"ElementaryTypeName","src":"3252:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3661,"mutability":"mutable","name":"receiverAmount","nameLocation":"3283:14:17","nodeType":"VariableDeclaration","scope":3663,"src":"3275:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3660,"name":"uint256","nodeType":"ElementaryTypeName","src":"3275:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3251:47:17"},"scope":3753,"src":"3027:272:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"65d20ce2","id":3680,"implemented":false,"kind":"function","modifiers":[],"name":"dischargeParticleForCreator","nameLocation":"3312:27:17","nodeType":"FunctionDefinition","parameters":{"id":3676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3665,"mutability":"mutable","name":"receiver","nameLocation":"3355:8:17","nodeType":"VariableDeclaration","scope":3680,"src":"3347:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3664,"name":"address","nodeType":"ElementaryTypeName","src":"3347:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3667,"mutability":"mutable","name":"contractAddress","nameLocation":"3379:15:17","nodeType":"VariableDeclaration","scope":3680,"src":"3371:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3666,"name":"address","nodeType":"ElementaryTypeName","src":"3371:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3669,"mutability":"mutable","name":"tokenId","nameLocation":"3410:7:17","nodeType":"VariableDeclaration","scope":3680,"src":"3402:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3668,"name":"uint256","nodeType":"ElementaryTypeName","src":"3402:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3671,"mutability":"mutable","name":"walletManagerId","nameLocation":"3441:15:17","nodeType":"VariableDeclaration","scope":3680,"src":"3425:31:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":3670,"name":"string","nodeType":"ElementaryTypeName","src":"3425:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3673,"mutability":"mutable","name":"assetToken","nameLocation":"3472:10:17","nodeType":"VariableDeclaration","scope":3680,"src":"3464:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3672,"name":"address","nodeType":"ElementaryTypeName","src":"3464:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3675,"mutability":"mutable","name":"assetAmount","nameLocation":"3498:11:17","nodeType":"VariableDeclaration","scope":3680,"src":"3490:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3674,"name":"uint256","nodeType":"ElementaryTypeName","src":"3490:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3339:174:17"},"returnParameters":{"id":3679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3678,"mutability":"mutable","name":"receiverAmount","nameLocation":"3540:14:17","nodeType":"VariableDeclaration","scope":3680,"src":"3532:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3677,"name":"uint256","nodeType":"ElementaryTypeName","src":"3532:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3531:24:17"},"scope":3753,"src":"3303:253:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"acab923c","id":3697,"implemented":false,"kind":"function","modifiers":[],"name":"releaseParticle","nameLocation":"3569:15:17","nodeType":"FunctionDefinition","parameters":{"id":3691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3682,"mutability":"mutable","name":"receiver","nameLocation":"3600:8:17","nodeType":"VariableDeclaration","scope":3697,"src":"3592:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3681,"name":"address","nodeType":"ElementaryTypeName","src":"3592:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3684,"mutability":"mutable","name":"contractAddress","nameLocation":"3624:15:17","nodeType":"VariableDeclaration","scope":3697,"src":"3616:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3683,"name":"address","nodeType":"ElementaryTypeName","src":"3616:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3686,"mutability":"mutable","name":"tokenId","nameLocation":"3655:7:17","nodeType":"VariableDeclaration","scope":3697,"src":"3647:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3685,"name":"uint256","nodeType":"ElementaryTypeName","src":"3647:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3688,"mutability":"mutable","name":"walletManagerId","nameLocation":"3686:15:17","nodeType":"VariableDeclaration","scope":3697,"src":"3670:31:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":3687,"name":"string","nodeType":"ElementaryTypeName","src":"3670:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3690,"mutability":"mutable","name":"assetToken","nameLocation":"3717:10:17","nodeType":"VariableDeclaration","scope":3697,"src":"3709:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3689,"name":"address","nodeType":"ElementaryTypeName","src":"3709:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3584:147:17"},"returnParameters":{"id":3696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3693,"mutability":"mutable","name":"creatorAmount","nameLocation":"3758:13:17","nodeType":"VariableDeclaration","scope":3697,"src":"3750:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3692,"name":"uint256","nodeType":"ElementaryTypeName","src":"3750:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3695,"mutability":"mutable","name":"receiverAmount","nameLocation":"3781:14:17","nodeType":"VariableDeclaration","scope":3697,"src":"3773:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3694,"name":"uint256","nodeType":"ElementaryTypeName","src":"3773:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3749:47:17"},"scope":3753,"src":"3560:237:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a8abef47","id":3716,"implemented":false,"kind":"function","modifiers":[],"name":"releaseParticleAmount","nameLocation":"3810:21:17","nodeType":"FunctionDefinition","parameters":{"id":3710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3699,"mutability":"mutable","name":"receiver","nameLocation":"3845:8:17","nodeType":"VariableDeclaration","scope":3716,"src":"3837:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3698,"name":"address","nodeType":"ElementaryTypeName","src":"3837:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3701,"mutability":"mutable","name":"contractAddress","nameLocation":"3867:15:17","nodeType":"VariableDeclaration","scope":3716,"src":"3859:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3700,"name":"address","nodeType":"ElementaryTypeName","src":"3859:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3703,"mutability":"mutable","name":"tokenId","nameLocation":"3896:7:17","nodeType":"VariableDeclaration","scope":3716,"src":"3888:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3702,"name":"uint256","nodeType":"ElementaryTypeName","src":"3888:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3705,"mutability":"mutable","name":"walletManagerId","nameLocation":"3925:15:17","nodeType":"VariableDeclaration","scope":3716,"src":"3909:31:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":3704,"name":"string","nodeType":"ElementaryTypeName","src":"3909:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3707,"mutability":"mutable","name":"assetToken","nameLocation":"3954:10:17","nodeType":"VariableDeclaration","scope":3716,"src":"3946:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3706,"name":"address","nodeType":"ElementaryTypeName","src":"3946:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3709,"mutability":"mutable","name":"assetAmount","nameLocation":"3978:11:17","nodeType":"VariableDeclaration","scope":3716,"src":"3970:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3708,"name":"uint256","nodeType":"ElementaryTypeName","src":"3970:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3831:162:17"},"returnParameters":{"id":3715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3712,"mutability":"mutable","name":"creatorAmount","nameLocation":"4020:13:17","nodeType":"VariableDeclaration","scope":3716,"src":"4012:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3711,"name":"uint256","nodeType":"ElementaryTypeName","src":"4012:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3714,"mutability":"mutable","name":"receiverAmount","nameLocation":"4043:14:17","nodeType":"VariableDeclaration","scope":3716,"src":"4035:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3713,"name":"uint256","nodeType":"ElementaryTypeName","src":"4035:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4011:47:17"},"scope":3753,"src":"3801:258:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3ff956cc","id":3733,"implemented":false,"kind":"function","modifiers":[],"name":"covalentBond","nameLocation":"4072:12:17","nodeType":"FunctionDefinition","parameters":{"id":3729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3718,"mutability":"mutable","name":"contractAddress","nameLocation":"4098:15:17","nodeType":"VariableDeclaration","scope":3733,"src":"4090:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3717,"name":"address","nodeType":"ElementaryTypeName","src":"4090:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3720,"mutability":"mutable","name":"tokenId","nameLocation":"4127:7:17","nodeType":"VariableDeclaration","scope":3733,"src":"4119:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3719,"name":"uint256","nodeType":"ElementaryTypeName","src":"4119:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3722,"mutability":"mutable","name":"basketManagerId","nameLocation":"4156:15:17","nodeType":"VariableDeclaration","scope":3733,"src":"4140:31:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":3721,"name":"string","nodeType":"ElementaryTypeName","src":"4140:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3724,"mutability":"mutable","name":"nftTokenAddress","nameLocation":"4185:15:17","nodeType":"VariableDeclaration","scope":3733,"src":"4177:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3723,"name":"address","nodeType":"ElementaryTypeName","src":"4177:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3726,"mutability":"mutable","name":"nftTokenId","nameLocation":"4214:10:17","nodeType":"VariableDeclaration","scope":3733,"src":"4206:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3725,"name":"uint256","nodeType":"ElementaryTypeName","src":"4206:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3728,"mutability":"mutable","name":"nftTokenAmount","nameLocation":"4238:14:17","nodeType":"VariableDeclaration","scope":3733,"src":"4230:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3727,"name":"uint256","nodeType":"ElementaryTypeName","src":"4230:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4084:172:17"},"returnParameters":{"id":3732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3731,"mutability":"mutable","name":"success","nameLocation":"4280:7:17","nodeType":"VariableDeclaration","scope":3733,"src":"4275:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3730,"name":"bool","nodeType":"ElementaryTypeName","src":"4275:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4274:14:17"},"scope":3753,"src":"4063:226:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"fe02fb00","id":3752,"implemented":false,"kind":"function","modifiers":[],"name":"breakCovalentBond","nameLocation":"4302:17:17","nodeType":"FunctionDefinition","parameters":{"id":3748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3735,"mutability":"mutable","name":"receiver","nameLocation":"4333:8:17","nodeType":"VariableDeclaration","scope":3752,"src":"4325:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3734,"name":"address","nodeType":"ElementaryTypeName","src":"4325:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3737,"mutability":"mutable","name":"contractAddress","nameLocation":"4355:15:17","nodeType":"VariableDeclaration","scope":3752,"src":"4347:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3736,"name":"address","nodeType":"ElementaryTypeName","src":"4347:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3739,"mutability":"mutable","name":"tokenId","nameLocation":"4384:7:17","nodeType":"VariableDeclaration","scope":3752,"src":"4376:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3738,"name":"uint256","nodeType":"ElementaryTypeName","src":"4376:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3741,"mutability":"mutable","name":"basketManagerId","nameLocation":"4413:15:17","nodeType":"VariableDeclaration","scope":3752,"src":"4397:31:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":3740,"name":"string","nodeType":"ElementaryTypeName","src":"4397:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3743,"mutability":"mutable","name":"nftTokenAddress","nameLocation":"4442:15:17","nodeType":"VariableDeclaration","scope":3752,"src":"4434:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3742,"name":"address","nodeType":"ElementaryTypeName","src":"4434:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3745,"mutability":"mutable","name":"nftTokenId","nameLocation":"4471:10:17","nodeType":"VariableDeclaration","scope":3752,"src":"4463:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3744,"name":"uint256","nodeType":"ElementaryTypeName","src":"4463:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3747,"mutability":"mutable","name":"nftTokenAmount","nameLocation":"4495:14:17","nodeType":"VariableDeclaration","scope":3752,"src":"4487:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3746,"name":"uint256","nodeType":"ElementaryTypeName","src":"4487:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4319:194:17"},"returnParameters":{"id":3751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3750,"mutability":"mutable","name":"success","nameLocation":"4537:7:17","nodeType":"VariableDeclaration","scope":3752,"src":"4532:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3749,"name":"bool","nodeType":"ElementaryTypeName","src":"4532:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4531:14:17"},"scope":3753,"src":"4293:253:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3754,"src":"1313:3235:17","usedErrors":[]}],"src":"1236:3313:17"}},"contracts/interfaces/IERC6551Account.sol":{"id":18,"ast":{"absolutePath":"contracts/interfaces/IERC6551Account.sol","exportedSymbols":{"IERC6551Account":[3799],"IERC6551AccountProxy":[3761]},"id":3800,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":3755,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"39:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC6551AccountProxy","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3761,"linearizedBaseContracts":[3761],"name":"IERC6551AccountProxy","nameLocation":"75:20:18","nodeType":"ContractDefinition","nodes":[{"functionSelector":"5c60da1b","id":3760,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"111:14:18","nodeType":"FunctionDefinition","parameters":{"id":3756,"nodeType":"ParameterList","parameters":[],"src":"125:2:18"},"returnParameters":{"id":3759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3760,"src":"151:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3757,"name":"address","nodeType":"ElementaryTypeName","src":"151:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"150:9:18"},"scope":3761,"src":"102:58:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3800,"src":"65:97:18","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC6551Account","contractDependencies":[],"contractKind":"interface","documentation":{"id":3762,"nodeType":"StructuredDocumentation","src":"164:67:18","text":"@dev the ERC-165 identifier for this interface is `0xeff4d378`"},"fullyImplemented":false,"id":3799,"linearizedBaseContracts":[3799],"name":"IERC6551Account","nameLocation":"241:15:18","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"47d99ad340f52da66535aff7e10da1ceb85a32bcbd9fa1c42314d194545e14d2","id":3770,"name":"TransactionExecuted","nameLocation":"269:19:18","nodeType":"EventDefinition","parameters":{"id":3769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3764,"indexed":true,"mutability":"mutable","name":"target","nameLocation":"305:6:18","nodeType":"VariableDeclaration","scope":3770,"src":"289:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3763,"name":"address","nodeType":"ElementaryTypeName","src":"289:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3766,"indexed":true,"mutability":"mutable","name":"value","nameLocation":"329:5:18","nodeType":"VariableDeclaration","scope":3770,"src":"313:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3765,"name":"uint256","nodeType":"ElementaryTypeName","src":"313:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3768,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"342:4:18","nodeType":"VariableDeclaration","scope":3770,"src":"336:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3767,"name":"bytes","nodeType":"ElementaryTypeName","src":"336:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"288:59:18"},"src":"263:85:18"},{"id":3773,"implemented":false,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3771,"nodeType":"ParameterList","parameters":[],"src":"361:2:18"},"returnParameters":{"id":3772,"nodeType":"ParameterList","parameters":[],"src":"380:0:18"},"scope":3799,"src":"354:27:18","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"9e5d4c49","id":3784,"implemented":false,"kind":"function","modifiers":[],"name":"executeCall","nameLocation":"396:11:18","nodeType":"FunctionDefinition","parameters":{"id":3780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3775,"mutability":"mutable","name":"to","nameLocation":"425:2:18","nodeType":"VariableDeclaration","scope":3784,"src":"417:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3774,"name":"address","nodeType":"ElementaryTypeName","src":"417:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3777,"mutability":"mutable","name":"value","nameLocation":"445:5:18","nodeType":"VariableDeclaration","scope":3784,"src":"437:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3776,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3779,"mutability":"mutable","name":"data","nameLocation":"475:4:18","nodeType":"VariableDeclaration","scope":3784,"src":"460:19:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3778,"name":"bytes","nodeType":"ElementaryTypeName","src":"460:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"407:78:18"},"returnParameters":{"id":3783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3784,"src":"512:12:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3781,"name":"bytes","nodeType":"ElementaryTypeName","src":"512:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"511:14:18"},"scope":3799,"src":"387:139:18","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"fc0c546a","id":3793,"implemented":false,"kind":"function","modifiers":[],"name":"token","nameLocation":"541:5:18","nodeType":"FunctionDefinition","parameters":{"id":3785,"nodeType":"ParameterList","parameters":[],"src":"546:2:18"},"returnParameters":{"id":3792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3787,"mutability":"mutable","name":"chainId","nameLocation":"604:7:18","nodeType":"VariableDeclaration","scope":3793,"src":"596:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3786,"name":"uint256","nodeType":"ElementaryTypeName","src":"596:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3789,"mutability":"mutable","name":"tokenContract","nameLocation":"621:13:18","nodeType":"VariableDeclaration","scope":3793,"src":"613:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3788,"name":"address","nodeType":"ElementaryTypeName","src":"613:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3791,"mutability":"mutable","name":"tokenId","nameLocation":"644:7:18","nodeType":"VariableDeclaration","scope":3793,"src":"636:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3790,"name":"uint256","nodeType":"ElementaryTypeName","src":"636:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"595:57:18"},"scope":3799,"src":"532:121:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8da5cb5b","id":3798,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"668:5:18","nodeType":"FunctionDefinition","parameters":{"id":3794,"nodeType":"ParameterList","parameters":[],"src":"673:2:18"},"returnParameters":{"id":3797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3798,"src":"699:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3795,"name":"address","nodeType":"ElementaryTypeName","src":"699:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"698:9:18"},"scope":3799,"src":"659:49:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3800,"src":"231:479:18","usedErrors":[]}],"src":"39:672:18"}},"contracts/interfaces/IRegistry.sol":{"id":19,"ast":{"absolutePath":"contracts/interfaces/IRegistry.sol","exportedSymbols":{"IRegistry":[3834]},"id":3835,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":3801,"literals":["solidity","^","0.8",".13"],"nodeType":"PragmaDirective","src":"39:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"IRegistry","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3834,"linearizedBaseContracts":[3834],"name":"IRegistry","nameLocation":"75:9:19","nodeType":"ContractDefinition","nodes":[{"functionSelector":"da7323b3","id":3818,"implemented":false,"kind":"function","modifiers":[],"name":"createAccount","nameLocation":"100:13:19","nodeType":"FunctionDefinition","parameters":{"id":3814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3803,"mutability":"mutable","name":"implementation","nameLocation":"131:14:19","nodeType":"VariableDeclaration","scope":3818,"src":"123:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3802,"name":"address","nodeType":"ElementaryTypeName","src":"123:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3805,"mutability":"mutable","name":"chainId","nameLocation":"163:7:19","nodeType":"VariableDeclaration","scope":3818,"src":"155:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3804,"name":"uint256","nodeType":"ElementaryTypeName","src":"155:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3807,"mutability":"mutable","name":"tokenContract","nameLocation":"188:13:19","nodeType":"VariableDeclaration","scope":3818,"src":"180:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3806,"name":"address","nodeType":"ElementaryTypeName","src":"180:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3809,"mutability":"mutable","name":"tokenId","nameLocation":"219:7:19","nodeType":"VariableDeclaration","scope":3818,"src":"211:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3808,"name":"uint256","nodeType":"ElementaryTypeName","src":"211:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3811,"mutability":"mutable","name":"salt","nameLocation":"244:4:19","nodeType":"VariableDeclaration","scope":3818,"src":"236:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3810,"name":"uint256","nodeType":"ElementaryTypeName","src":"236:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3813,"mutability":"mutable","name":"initData","nameLocation":"273:8:19","nodeType":"VariableDeclaration","scope":3818,"src":"258:23:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3812,"name":"bytes","nodeType":"ElementaryTypeName","src":"258:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"113:174:19"},"returnParameters":{"id":3817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3818,"src":"306:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3815,"name":"address","nodeType":"ElementaryTypeName","src":"306:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"305:9:19"},"scope":3834,"src":"91:224:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5e9bc536","id":3833,"implemented":false,"kind":"function","modifiers":[],"name":"account","nameLocation":"330:7:19","nodeType":"FunctionDefinition","parameters":{"id":3829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3820,"mutability":"mutable","name":"implementation","nameLocation":"355:14:19","nodeType":"VariableDeclaration","scope":3833,"src":"347:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3819,"name":"address","nodeType":"ElementaryTypeName","src":"347:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3822,"mutability":"mutable","name":"chainId","nameLocation":"387:7:19","nodeType":"VariableDeclaration","scope":3833,"src":"379:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3821,"name":"uint256","nodeType":"ElementaryTypeName","src":"379:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3824,"mutability":"mutable","name":"tokenContract","nameLocation":"412:13:19","nodeType":"VariableDeclaration","scope":3833,"src":"404:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3823,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3826,"mutability":"mutable","name":"tokenId","nameLocation":"443:7:19","nodeType":"VariableDeclaration","scope":3833,"src":"435:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3825,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3828,"mutability":"mutable","name":"salt","nameLocation":"468:4:19","nodeType":"VariableDeclaration","scope":3833,"src":"460:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3827,"name":"uint256","nodeType":"ElementaryTypeName","src":"460:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"337:141:19"},"returnParameters":{"id":3832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3833,"src":"502:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3830,"name":"address","nodeType":"ElementaryTypeName","src":"502:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"501:9:19"},"scope":3834,"src":"321:190:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3835,"src":"65:448:19","usedErrors":[]}],"src":"39:475:19"}},"contracts/lib/ERC721.sol":{"id":20,"ast":{"absolutePath":"contracts/lib/ERC721.sol","exportedSymbols":{"Address":[2251],"Context":[2273],"ERC165":[2526],"ERC721":[4702],"IERC165":[2538],"IERC721":[1845],"IERC721Metadata":[1921],"IERC721Receiver":[1863],"Math":[3404],"SignedMath":[3509],"Strings":[2502]},"id":4703,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3836,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"302:23:20"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":3837,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4703,"sourceUnit":1846,"src":"327:58:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","id":3838,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4703,"sourceUnit":1864,"src":"386:66:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","id":3839,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4703,"sourceUnit":1922,"src":"453:77:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"@openzeppelin/contracts/utils/Address.sol","id":3840,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4703,"sourceUnit":2252,"src":"531:51:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"@openzeppelin/contracts/utils/Context.sol","id":3841,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4703,"sourceUnit":2274,"src":"583:51:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":3842,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4703,"sourceUnit":2503,"src":"635:51:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165.sol","id":3843,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4703,"sourceUnit":2527,"src":"687:64:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3845,"name":"Context","nameLocations":["1401:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":2273,"src":"1401:7:20"},"id":3846,"nodeType":"InheritanceSpecifier","src":"1401:7:20"},{"baseName":{"id":3847,"name":"ERC165","nameLocations":["1410:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":2526,"src":"1410:6:20"},"id":3848,"nodeType":"InheritanceSpecifier","src":"1410:6:20"},{"baseName":{"id":3849,"name":"IERC721","nameLocations":["1418:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":1845,"src":"1418:7:20"},"id":3850,"nodeType":"InheritanceSpecifier","src":"1418:7:20"},{"baseName":{"id":3851,"name":"IERC721Metadata","nameLocations":["1427:15:20"],"nodeType":"IdentifierPath","referencedDeclaration":1921,"src":"1427:15:20"},"id":3852,"nodeType":"InheritanceSpecifier","src":"1427:15:20"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":3844,"nodeType":"StructuredDocumentation","src":"753:628:20","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}.\n NOTE:\n  The only changes made here are:\n    - change scope of \"_owners\" from private to internal\n    - change scope of \"_balances\" from private to internal\n    - remove \"ERC721\" scope-resolution from \"ownerOf\" calls in order to override \"ownerOf\"\n    - modify the _burn function to burn to an alternate Null Address (prevents reassignment back to Pre-Mint Receiver)"},"fullyImplemented":true,"id":4702,"linearizedBaseContracts":[4702,1921,1845,2526,2538,2273],"name":"ERC721","nameLocation":"1391:6:20","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3855,"libraryName":{"id":3853,"name":"Address","nameLocations":["1455:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":2251,"src":"1455:7:20"},"nodeType":"UsingForDirective","src":"1449:26:20","typeName":{"id":3854,"name":"address","nodeType":"ElementaryTypeName","src":"1467:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"global":false,"id":3858,"libraryName":{"id":3856,"name":"Strings","nameLocations":["1486:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":2502,"src":"1486:7:20"},"nodeType":"UsingForDirective","src":"1480:26:20","typeName":{"id":3857,"name":"uint256","nodeType":"ElementaryTypeName","src":"1498:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"id":3861,"mutability":"constant","name":"_NULL_ADDRESS","nameLocation":"1538:13:20","nodeType":"VariableDeclaration","scope":4702,"src":"1512:84:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3859,"name":"address","nodeType":"ElementaryTypeName","src":"1512:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303064456144","id":3860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1554:42:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x000000000000000000000000000000000000dEaD"},"visibility":"internal"},{"constant":false,"id":3863,"mutability":"mutable","name":"_name","nameLocation":"1636:5:20","nodeType":"VariableDeclaration","scope":4702,"src":"1621:20:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3862,"name":"string","nodeType":"ElementaryTypeName","src":"1621:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3865,"mutability":"mutable","name":"_symbol","nameLocation":"1683:7:20","nodeType":"VariableDeclaration","scope":4702,"src":"1668:22:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3864,"name":"string","nodeType":"ElementaryTypeName","src":"1668:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3869,"mutability":"mutable","name":"_owners","nameLocation":"1780:7:20","nodeType":"VariableDeclaration","scope":4702,"src":"1743:44:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":3868,"keyType":{"id":3866,"name":"uint256","nodeType":"ElementaryTypeName","src":"1751:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1743:27:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":3867,"name":"address","nodeType":"ElementaryTypeName","src":"1762:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"constant":false,"id":3873,"mutability":"mutable","name":"_balances","nameLocation":"1875:9:20","nodeType":"VariableDeclaration","scope":4702,"src":"1838:46:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3872,"keyType":{"id":3870,"name":"address","nodeType":"ElementaryTypeName","src":"1846:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1838:27:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":3871,"name":"uint256","nodeType":"ElementaryTypeName","src":"1857:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":3877,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1976:15:20","nodeType":"VariableDeclaration","scope":4702,"src":"1940:51:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":3876,"keyType":{"id":3874,"name":"uint256","nodeType":"ElementaryTypeName","src":"1948:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1940:27:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":3875,"name":"address","nodeType":"ElementaryTypeName","src":"1959:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":3883,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"2099:18:20","nodeType":"VariableDeclaration","scope":4702,"src":"2046:71:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":3882,"keyType":{"id":3878,"name":"address","nodeType":"ElementaryTypeName","src":"2054:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2046:44:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":3881,"keyType":{"id":3879,"name":"address","nodeType":"ElementaryTypeName","src":"2073:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2065:24:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":3880,"name":"bool","nodeType":"ElementaryTypeName","src":"2084:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":3899,"nodeType":"Block","src":"2293:57:20","statements":[{"expression":{"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3891,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"2303:5:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3892,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3886,"src":"2311:5:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2303:13:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3894,"nodeType":"ExpressionStatement","src":"2303:13:20"},{"expression":{"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3895,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"2326:7:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3896,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"2336:7:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2326:17:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3898,"nodeType":"ExpressionStatement","src":"2326:17:20"}]},"documentation":{"id":3884,"nodeType":"StructuredDocumentation","src":"2124:108:20","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":3900,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3886,"mutability":"mutable","name":"name_","nameLocation":"2263:5:20","nodeType":"VariableDeclaration","scope":3900,"src":"2249:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3885,"name":"string","nodeType":"ElementaryTypeName","src":"2249:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3888,"mutability":"mutable","name":"symbol_","nameLocation":"2284:7:20","nodeType":"VariableDeclaration","scope":3900,"src":"2270:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3887,"name":"string","nodeType":"ElementaryTypeName","src":"2270:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2248:44:20"},"returnParameters":{"id":3890,"nodeType":"ParameterList","parameters":[],"src":"2293:0:20"},"scope":4702,"src":"2237:113:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2525,2537],"body":{"id":3930,"nodeType":"Block","src":"2525:192:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3911,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"2554:11:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3913,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1845,"src":"2574:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1845_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1845_$","typeString":"type(contract IERC721)"}],"id":3912,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2569:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2569:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1845","typeString":"type(contract IERC721)"}},"id":3915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2583:11:20","memberName":"interfaceId","nodeType":"MemberAccess","src":"2569:25:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2554:40:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3917,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"2610:11:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3919,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"2630:15:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1921_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1921_$","typeString":"type(contract IERC721Metadata)"}],"id":3918,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2625:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:21:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1921","typeString":"type(contract IERC721Metadata)"}},"id":3921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2647:11:20","memberName":"interfaceId","nodeType":"MemberAccess","src":"2625:33:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2610:48:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2554:104:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":3926,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"2698:11:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":3924,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2674:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$4702_$","typeString":"type(contract super ERC721)"}},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2680:17:20","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2525,"src":"2674:23:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2674:36:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2554:156:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3910,"id":3929,"nodeType":"Return","src":"2535:175:20"}]},"documentation":{"id":3901,"nodeType":"StructuredDocumentation","src":"2356:56:20","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3931,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2426:17:20","nodeType":"FunctionDefinition","overrides":{"id":3907,"nodeType":"OverrideSpecifier","overrides":[{"id":3905,"name":"ERC165","nameLocations":["2493:6:20"],"nodeType":"IdentifierPath","referencedDeclaration":2526,"src":"2493:6:20"},{"id":3906,"name":"IERC165","nameLocations":["2501:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":2538,"src":"2501:7:20"}],"src":"2484:25:20"},"parameters":{"id":3904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3903,"mutability":"mutable","name":"interfaceId","nameLocation":"2451:11:20","nodeType":"VariableDeclaration","scope":3931,"src":"2444:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3902,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2444:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2443:20:20"},"returnParameters":{"id":3910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3931,"src":"2519:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3908,"name":"bool","nodeType":"ElementaryTypeName","src":"2519:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2518:6:20"},"scope":4702,"src":"2417:300:20","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1770],"body":{"id":3954,"nodeType":"Block","src":"2857:123:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3941,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"2875:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2884:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3942,"name":"address","nodeType":"ElementaryTypeName","src":"2884:7:20","typeDescriptions":{}}},"id":3945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2884:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2875:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":3947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2896:43:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""},"value":"ERC721: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""}],"id":3940,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2867:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2867:73:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3949,"nodeType":"ExpressionStatement","src":"2867:73:20"},{"expression":{"baseExpression":{"id":3950,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"2957:9:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3952,"indexExpression":{"id":3951,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"2967:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2957:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3939,"id":3953,"nodeType":"Return","src":"2950:23:20"}]},"documentation":{"id":3932,"nodeType":"StructuredDocumentation","src":"2723:48:20","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":3955,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2785:9:20","nodeType":"FunctionDefinition","overrides":{"id":3936,"nodeType":"OverrideSpecifier","overrides":[],"src":"2830:8:20"},"parameters":{"id":3935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3934,"mutability":"mutable","name":"owner","nameLocation":"2803:5:20","nodeType":"VariableDeclaration","scope":3955,"src":"2795:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3933,"name":"address","nodeType":"ElementaryTypeName","src":"2795:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2794:15:20"},"returnParameters":{"id":3939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3955,"src":"2848:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3937,"name":"uint256","nodeType":"ElementaryTypeName","src":"2848:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2847:9:20"},"scope":4702,"src":"2776:204:20","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1778],"body":{"id":3982,"nodeType":"Block","src":"3118:137:20","statements":[{"assignments":[3965],"declarations":[{"constant":false,"id":3965,"mutability":"mutable","name":"owner","nameLocation":"3136:5:20","nodeType":"VariableDeclaration","scope":3982,"src":"3128:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3964,"name":"address","nodeType":"ElementaryTypeName","src":"3128:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3969,"initialValue":{"baseExpression":{"id":3966,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"3144:7:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":3968,"indexExpression":{"id":3967,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3958,"src":"3152:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3144:16:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3128:32:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3971,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"3178:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3195:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3187:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3972,"name":"address","nodeType":"ElementaryTypeName","src":"3187:7:20","typeDescriptions":{}}},"id":3975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3187:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3178:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":3977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3199:26:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":3970,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3170:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3170:56:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3979,"nodeType":"ExpressionStatement","src":"3170:56:20"},{"expression":{"id":3980,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"3243:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3963,"id":3981,"nodeType":"Return","src":"3236:12:20"}]},"documentation":{"id":3956,"nodeType":"StructuredDocumentation","src":"2986:46:20","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":3983,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"3046:7:20","nodeType":"FunctionDefinition","overrides":{"id":3960,"nodeType":"OverrideSpecifier","overrides":[],"src":"3091:8:20"},"parameters":{"id":3959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3958,"mutability":"mutable","name":"tokenId","nameLocation":"3062:7:20","nodeType":"VariableDeclaration","scope":3983,"src":"3054:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3957,"name":"uint256","nodeType":"ElementaryTypeName","src":"3054:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3053:17:20"},"returnParameters":{"id":3963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3983,"src":"3109:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3961,"name":"address","nodeType":"ElementaryTypeName","src":"3109:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3108:9:20"},"scope":4702,"src":"3037:218:20","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1906],"body":{"id":3992,"nodeType":"Block","src":"3386:29:20","statements":[{"expression":{"id":3990,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3863,"src":"3403:5:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":3989,"id":3991,"nodeType":"Return","src":"3396:12:20"}]},"documentation":{"id":3984,"nodeType":"StructuredDocumentation","src":"3261:51:20","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":3993,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"3326:4:20","nodeType":"FunctionDefinition","overrides":{"id":3986,"nodeType":"OverrideSpecifier","overrides":[],"src":"3353:8:20"},"parameters":{"id":3985,"nodeType":"ParameterList","parameters":[],"src":"3330:2:20"},"returnParameters":{"id":3989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3993,"src":"3371:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3987,"name":"string","nodeType":"ElementaryTypeName","src":"3371:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3370:15:20"},"scope":4702,"src":"3317:98:20","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1912],"body":{"id":4002,"nodeType":"Block","src":"3550:31:20","statements":[{"expression":{"id":4000,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"3567:7:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":3999,"id":4001,"nodeType":"Return","src":"3560:14:20"}]},"documentation":{"id":3994,"nodeType":"StructuredDocumentation","src":"3421:53:20","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":4003,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"3488:6:20","nodeType":"FunctionDefinition","overrides":{"id":3996,"nodeType":"OverrideSpecifier","overrides":[],"src":"3517:8:20"},"parameters":{"id":3995,"nodeType":"ParameterList","parameters":[],"src":"3494:2:20"},"returnParameters":{"id":3999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3998,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4003,"src":"3535:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3997,"name":"string","nodeType":"ElementaryTypeName","src":"3535:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3534:15:20"},"scope":4702,"src":"3479:102:20","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1920],"body":{"id":4041,"nodeType":"Block","src":"3735:188:20","statements":[{"expression":{"arguments":[{"id":4013,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"3760:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4012,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4615,"src":"3745:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3745:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4015,"nodeType":"ExpressionStatement","src":"3745:23:20"},{"assignments":[4017],"declarations":[{"constant":false,"id":4017,"mutability":"mutable","name":"baseURI","nameLocation":"3793:7:20","nodeType":"VariableDeclaration","scope":4041,"src":"3779:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4016,"name":"string","nodeType":"ElementaryTypeName","src":"3779:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4020,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4018,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"3803:8:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3803:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"3779:34:20"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4023,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"3836:7:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3830:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4021,"name":"bytes","nodeType":"ElementaryTypeName","src":"3830:5:20","typeDescriptions":{}}},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3830:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3845:6:20","memberName":"length","nodeType":"MemberAccess","src":"3830:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3854:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3830:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":4038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3914:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3830:86:20","trueExpression":{"arguments":[{"arguments":[{"id":4032,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"3882:7:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4033,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"3891:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3899:8:20","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2332,"src":"3891:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3891:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4030,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3865:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3869:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"3865:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3865:45:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3858:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4028,"name":"string","nodeType":"ElementaryTypeName","src":"3858:6:20","typeDescriptions":{}}},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3858:53:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4011,"id":4040,"nodeType":"Return","src":"3823:93:20"}]},"documentation":{"id":4004,"nodeType":"StructuredDocumentation","src":"3587:55:20","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":4042,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"3656:8:20","nodeType":"FunctionDefinition","overrides":{"id":4008,"nodeType":"OverrideSpecifier","overrides":[],"src":"3702:8:20"},"parameters":{"id":4007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4006,"mutability":"mutable","name":"tokenId","nameLocation":"3673:7:20","nodeType":"VariableDeclaration","scope":4042,"src":"3665:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4005,"name":"uint256","nodeType":"ElementaryTypeName","src":"3665:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3664:17:20"},"returnParameters":{"id":4011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4042,"src":"3720:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4009,"name":"string","nodeType":"ElementaryTypeName","src":"3720:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3719:15:20"},"scope":4702,"src":"3647:276:20","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":4050,"nodeType":"Block","src":"4231:26:20","statements":[{"expression":{"hexValue":"","id":4048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4248:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":4047,"id":4049,"nodeType":"Return","src":"4241:9:20"}]},"documentation":{"id":4043,"nodeType":"StructuredDocumentation","src":"3929:231:20","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":4051,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"4174:8:20","nodeType":"FunctionDefinition","parameters":{"id":4044,"nodeType":"ParameterList","parameters":[],"src":"4182:2:20"},"returnParameters":{"id":4047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4046,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4051,"src":"4216:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4045,"name":"string","nodeType":"ElementaryTypeName","src":"4216:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4215:15:20"},"scope":4702,"src":"4165:92:20","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1818],"body":{"id":4092,"nodeType":"Block","src":"4384:330:20","statements":[{"assignments":[4061],"declarations":[{"constant":false,"id":4061,"mutability":"mutable","name":"owner","nameLocation":"4402:5:20","nodeType":"VariableDeclaration","scope":4092,"src":"4394:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4060,"name":"address","nodeType":"ElementaryTypeName","src":"4394:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4065,"initialValue":{"arguments":[{"id":4063,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"4418:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4062,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"4410:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4410:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4394:32:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4067,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"4444:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4068,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"4450:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4444:11:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":4070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4457:35:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":4066,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4436:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4436:57:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4072,"nodeType":"ExpressionStatement","src":"4436:57:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4074,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"4525:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4525:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4076,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"4541:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4525:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":4079,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"4567:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4080,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"4574:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4574:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4078,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"4550:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4550:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4525:62:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c","id":4084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4601:64:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","typeString":"literal_string \"ERC721: approve caller is not token owner nor approved for all\""},"value":"ERC721: approve caller is not token owner nor approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","typeString":"literal_string \"ERC721: approve caller is not token owner nor approved for all\""}],"id":4073,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4504:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:171:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4086,"nodeType":"ExpressionStatement","src":"4504:171:20"},{"expression":{"arguments":[{"id":4088,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"4695:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4089,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"4699:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4087,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4569,"src":"4686:8:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4686:21:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4091,"nodeType":"ExpressionStatement","src":"4686:21:20"}]},"documentation":{"id":4052,"nodeType":"StructuredDocumentation","src":"4263:46:20","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":4093,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4323:7:20","nodeType":"FunctionDefinition","overrides":{"id":4058,"nodeType":"OverrideSpecifier","overrides":[],"src":"4375:8:20"},"parameters":{"id":4057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4054,"mutability":"mutable","name":"to","nameLocation":"4339:2:20","nodeType":"VariableDeclaration","scope":4093,"src":"4331:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4053,"name":"address","nodeType":"ElementaryTypeName","src":"4331:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4056,"mutability":"mutable","name":"tokenId","nameLocation":"4351:7:20","nodeType":"VariableDeclaration","scope":4093,"src":"4343:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4055,"name":"uint256","nodeType":"ElementaryTypeName","src":"4343:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4330:29:20"},"returnParameters":{"id":4059,"nodeType":"ParameterList","parameters":[],"src":"4384:0:20"},"scope":4702,"src":"4314:400:20","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1834],"body":{"id":4110,"nodeType":"Block","src":"4860:82:20","statements":[{"expression":{"arguments":[{"id":4103,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4096,"src":"4885:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4102,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4615,"src":"4870:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4870:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4105,"nodeType":"ExpressionStatement","src":"4870:23:20"},{"expression":{"baseExpression":{"id":4106,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"4911:15:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4108,"indexExpression":{"id":4107,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4096,"src":"4927:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4911:24:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4101,"id":4109,"nodeType":"Return","src":"4904:31:20"}]},"documentation":{"id":4094,"nodeType":"StructuredDocumentation","src":"4720:50:20","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":4111,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4784:11:20","nodeType":"FunctionDefinition","overrides":{"id":4098,"nodeType":"OverrideSpecifier","overrides":[],"src":"4833:8:20"},"parameters":{"id":4097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4096,"mutability":"mutable","name":"tokenId","nameLocation":"4804:7:20","nodeType":"VariableDeclaration","scope":4111,"src":"4796:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4095,"name":"uint256","nodeType":"ElementaryTypeName","src":"4796:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4795:17:20"},"returnParameters":{"id":4101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4111,"src":"4851:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4099,"name":"address","nodeType":"ElementaryTypeName","src":"4851:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4850:9:20"},"scope":4702,"src":"4775:167:20","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1826],"body":{"id":4127,"nodeType":"Block","src":"5093:69:20","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4121,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"5122:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5122:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4123,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"5136:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4124,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4116,"src":"5146:8:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4120,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4601,"src":"5103:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5103:52:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4126,"nodeType":"ExpressionStatement","src":"5103:52:20"}]},"documentation":{"id":4112,"nodeType":"StructuredDocumentation","src":"4948:56:20","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":4128,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"5018:17:20","nodeType":"FunctionDefinition","overrides":{"id":4118,"nodeType":"OverrideSpecifier","overrides":[],"src":"5084:8:20"},"parameters":{"id":4117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4114,"mutability":"mutable","name":"operator","nameLocation":"5044:8:20","nodeType":"VariableDeclaration","scope":4128,"src":"5036:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4113,"name":"address","nodeType":"ElementaryTypeName","src":"5036:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4116,"mutability":"mutable","name":"approved","nameLocation":"5059:8:20","nodeType":"VariableDeclaration","scope":4128,"src":"5054:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4115,"name":"bool","nodeType":"ElementaryTypeName","src":"5054:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5035:33:20"},"returnParameters":{"id":4119,"nodeType":"ParameterList","parameters":[],"src":"5093:0:20"},"scope":4702,"src":"5009:153:20","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1844],"body":{"id":4145,"nodeType":"Block","src":"5331:59:20","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":4139,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"5348:18:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":4141,"indexExpression":{"id":4140,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"5367:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5348:25:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4143,"indexExpression":{"id":4142,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"5374:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5348:35:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4138,"id":4144,"nodeType":"Return","src":"5341:42:20"}]},"documentation":{"id":4129,"nodeType":"StructuredDocumentation","src":"5168:55:20","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":4146,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"5237:16:20","nodeType":"FunctionDefinition","overrides":{"id":4135,"nodeType":"OverrideSpecifier","overrides":[],"src":"5307:8:20"},"parameters":{"id":4134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4131,"mutability":"mutable","name":"owner","nameLocation":"5262:5:20","nodeType":"VariableDeclaration","scope":4146,"src":"5254:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4130,"name":"address","nodeType":"ElementaryTypeName","src":"5254:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4133,"mutability":"mutable","name":"operator","nameLocation":"5277:8:20","nodeType":"VariableDeclaration","scope":4146,"src":"5269:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4132,"name":"address","nodeType":"ElementaryTypeName","src":"5269:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5253:33:20"},"returnParameters":{"id":4138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4146,"src":"5325:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4136,"name":"bool","nodeType":"ElementaryTypeName","src":"5325:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5324:6:20"},"scope":4702,"src":"5228:162:20","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1810],"body":{"id":4172,"nodeType":"Block","src":"5571:208:20","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4159,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"5660:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5660:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4161,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"5674:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4158,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"5641:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f766564","id":4163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5684:48:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""},"value":"ERC721: caller is not token owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""}],"id":4157,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5633:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5633:100:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4165,"nodeType":"ExpressionStatement","src":"5633:100:20"},{"expression":{"arguments":[{"id":4167,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"5754:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4168,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"5760:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4169,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4153,"src":"5764:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4166,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4546,"src":"5744:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5744:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4171,"nodeType":"ExpressionStatement","src":"5744:28:20"}]},"documentation":{"id":4147,"nodeType":"StructuredDocumentation","src":"5396:51:20","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":4173,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5461:12:20","nodeType":"FunctionDefinition","overrides":{"id":4155,"nodeType":"OverrideSpecifier","overrides":[],"src":"5562:8:20"},"parameters":{"id":4154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4149,"mutability":"mutable","name":"from","nameLocation":"5491:4:20","nodeType":"VariableDeclaration","scope":4173,"src":"5483:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4148,"name":"address","nodeType":"ElementaryTypeName","src":"5483:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4151,"mutability":"mutable","name":"to","nameLocation":"5513:2:20","nodeType":"VariableDeclaration","scope":4173,"src":"5505:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4150,"name":"address","nodeType":"ElementaryTypeName","src":"5505:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4153,"mutability":"mutable","name":"tokenId","nameLocation":"5533:7:20","nodeType":"VariableDeclaration","scope":4173,"src":"5525:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4152,"name":"uint256","nodeType":"ElementaryTypeName","src":"5525:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5473:73:20"},"returnParameters":{"id":4156,"nodeType":"ParameterList","parameters":[],"src":"5571:0:20"},"scope":4702,"src":"5452:327:20","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1800],"body":{"id":4191,"nodeType":"Block","src":"5968:56:20","statements":[{"expression":{"arguments":[{"id":4185,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4176,"src":"5995:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4186,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"6001:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4187,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4180,"src":"6005:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":4188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6014:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":4184,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[4192,4222],"referencedDeclaration":4222,"src":"5978:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5978:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4190,"nodeType":"ExpressionStatement","src":"5978:39:20"}]},"documentation":{"id":4174,"nodeType":"StructuredDocumentation","src":"5785:55:20","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":4192,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5854:16:20","nodeType":"FunctionDefinition","overrides":{"id":4182,"nodeType":"OverrideSpecifier","overrides":[],"src":"5959:8:20"},"parameters":{"id":4181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4176,"mutability":"mutable","name":"from","nameLocation":"5888:4:20","nodeType":"VariableDeclaration","scope":4192,"src":"5880:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4175,"name":"address","nodeType":"ElementaryTypeName","src":"5880:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4178,"mutability":"mutable","name":"to","nameLocation":"5910:2:20","nodeType":"VariableDeclaration","scope":4192,"src":"5902:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4177,"name":"address","nodeType":"ElementaryTypeName","src":"5902:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4180,"mutability":"mutable","name":"tokenId","nameLocation":"5930:7:20","nodeType":"VariableDeclaration","scope":4192,"src":"5922:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4179,"name":"uint256","nodeType":"ElementaryTypeName","src":"5922:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5870:73:20"},"returnParameters":{"id":4183,"nodeType":"ParameterList","parameters":[],"src":"5968:0:20"},"scope":4702,"src":"5845:179:20","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1790],"body":{"id":4221,"nodeType":"Block","src":"6240:165:20","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4207,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"6277:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6277:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4209,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"6291:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4206,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4302,"src":"6258:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6258:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f766564","id":4211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6301:48:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""},"value":"ERC721: caller is not token owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""}],"id":4205,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6250:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6250:100:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4213,"nodeType":"ExpressionStatement","src":"6250:100:20"},{"expression":{"arguments":[{"id":4215,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"6374:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4216,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4197,"src":"6380:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4217,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"6384:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4218,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4201,"src":"6393:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4214,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"6360:13:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6360:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4220,"nodeType":"ExpressionStatement","src":"6360:38:20"}]},"documentation":{"id":4193,"nodeType":"StructuredDocumentation","src":"6030:55:20","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":4222,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"6099:16:20","nodeType":"FunctionDefinition","overrides":{"id":4203,"nodeType":"OverrideSpecifier","overrides":[],"src":"6231:8:20"},"parameters":{"id":4202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4195,"mutability":"mutable","name":"from","nameLocation":"6133:4:20","nodeType":"VariableDeclaration","scope":4222,"src":"6125:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4194,"name":"address","nodeType":"ElementaryTypeName","src":"6125:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4197,"mutability":"mutable","name":"to","nameLocation":"6155:2:20","nodeType":"VariableDeclaration","scope":4222,"src":"6147:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4196,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4199,"mutability":"mutable","name":"tokenId","nameLocation":"6175:7:20","nodeType":"VariableDeclaration","scope":4222,"src":"6167:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4198,"name":"uint256","nodeType":"ElementaryTypeName","src":"6167:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4201,"mutability":"mutable","name":"data","nameLocation":"6205:4:20","nodeType":"VariableDeclaration","scope":4222,"src":"6192:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4200,"name":"bytes","nodeType":"ElementaryTypeName","src":"6192:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6115:100:20"},"returnParameters":{"id":4204,"nodeType":"ParameterList","parameters":[],"src":"6240:0:20"},"scope":4702,"src":"6090:315:20","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":4250,"nodeType":"Block","src":"7406:165:20","statements":[{"expression":{"arguments":[{"id":4235,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"7426:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4236,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"7432:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4237,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"7436:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4234,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4546,"src":"7416:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7416:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4239,"nodeType":"ExpressionStatement","src":"7416:28:20"},{"expression":{"arguments":[{"arguments":[{"id":4242,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"7485:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4243,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"7491:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4244,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"7495:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4245,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"7504:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4241,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4679,"src":"7462:22:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7462:47:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":4247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7511:52:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":4240,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7454:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7454:110:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4249,"nodeType":"ExpressionStatement","src":"7454:110:20"}]},"documentation":{"id":4223,"nodeType":"StructuredDocumentation","src":"6411:850:20","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":4251,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"7275:13:20","nodeType":"FunctionDefinition","parameters":{"id":4232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4225,"mutability":"mutable","name":"from","nameLocation":"7306:4:20","nodeType":"VariableDeclaration","scope":4251,"src":"7298:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4224,"name":"address","nodeType":"ElementaryTypeName","src":"7298:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4227,"mutability":"mutable","name":"to","nameLocation":"7328:2:20","nodeType":"VariableDeclaration","scope":4251,"src":"7320:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4226,"name":"address","nodeType":"ElementaryTypeName","src":"7320:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4229,"mutability":"mutable","name":"tokenId","nameLocation":"7348:7:20","nodeType":"VariableDeclaration","scope":4251,"src":"7340:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4228,"name":"uint256","nodeType":"ElementaryTypeName","src":"7340:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4231,"mutability":"mutable","name":"data","nameLocation":"7378:4:20","nodeType":"VariableDeclaration","scope":4251,"src":"7365:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4230,"name":"bytes","nodeType":"ElementaryTypeName","src":"7365:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7288:100:20"},"returnParameters":{"id":4233,"nodeType":"ParameterList","parameters":[],"src":"7406:0:20"},"scope":4702,"src":"7266:305:20","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4268,"nodeType":"Block","src":"7945:54:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4259,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"7962:7:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4261,"indexExpression":{"id":4260,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"7970:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7962:16:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7990:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7982:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4262,"name":"address","nodeType":"ElementaryTypeName","src":"7982:7:20","typeDescriptions":{}}},"id":4265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7982:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7962:30:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4258,"id":4267,"nodeType":"Return","src":"7955:37:20"}]},"documentation":{"id":4252,"nodeType":"StructuredDocumentation","src":"7577:292:20","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":4269,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7883:7:20","nodeType":"FunctionDefinition","parameters":{"id":4255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4254,"mutability":"mutable","name":"tokenId","nameLocation":"7899:7:20","nodeType":"VariableDeclaration","scope":4269,"src":"7891:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4253,"name":"uint256","nodeType":"ElementaryTypeName","src":"7891:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7890:17:20"},"returnParameters":{"id":4258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4269,"src":"7939:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4256,"name":"bool","nodeType":"ElementaryTypeName","src":"7939:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7938:6:20"},"scope":4702,"src":"7874:125:20","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4301,"nodeType":"Block","src":"8256:155:20","statements":[{"assignments":[4280],"declarations":[{"constant":false,"id":4280,"mutability":"mutable","name":"owner","nameLocation":"8274:5:20","nodeType":"VariableDeclaration","scope":4301,"src":"8266:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4279,"name":"address","nodeType":"ElementaryTypeName","src":"8266:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4284,"initialValue":{"arguments":[{"id":4282,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"8290:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4281,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"8282:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8282:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8266:32:20"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4285,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"8316:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4286,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"8327:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8316:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":4289,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"8353:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4290,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"8360:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4288,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4146,"src":"8336:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8336:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8316:52:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4294,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4274,"src":"8384:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4293,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"8372:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8372:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4296,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"8396:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8372:31:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8316:87:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4299,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8315:89:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4278,"id":4300,"nodeType":"Return","src":"8308:96:20"}]},"documentation":{"id":4270,"nodeType":"StructuredDocumentation","src":"8005:147:20","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":4302,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"8166:18:20","nodeType":"FunctionDefinition","parameters":{"id":4275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4272,"mutability":"mutable","name":"spender","nameLocation":"8193:7:20","nodeType":"VariableDeclaration","scope":4302,"src":"8185:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4271,"name":"address","nodeType":"ElementaryTypeName","src":"8185:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4274,"mutability":"mutable","name":"tokenId","nameLocation":"8210:7:20","nodeType":"VariableDeclaration","scope":4302,"src":"8202:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4273,"name":"uint256","nodeType":"ElementaryTypeName","src":"8202:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8184:34:20"},"returnParameters":{"id":4278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4302,"src":"8250:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4276,"name":"bool","nodeType":"ElementaryTypeName","src":"8250:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8249:6:20"},"scope":4702,"src":"8157:254:20","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4316,"nodeType":"Block","src":"8806:43:20","statements":[{"expression":{"arguments":[{"id":4311,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"8826:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4312,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4307,"src":"8830:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":4313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8839:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":4310,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[4317,4346],"referencedDeclaration":4346,"src":"8816:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8816:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4315,"nodeType":"ExpressionStatement","src":"8816:26:20"}]},"documentation":{"id":4303,"nodeType":"StructuredDocumentation","src":"8417:319:20","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":4317,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8750:9:20","nodeType":"FunctionDefinition","parameters":{"id":4308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4305,"mutability":"mutable","name":"to","nameLocation":"8768:2:20","nodeType":"VariableDeclaration","scope":4317,"src":"8760:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4304,"name":"address","nodeType":"ElementaryTypeName","src":"8760:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4307,"mutability":"mutable","name":"tokenId","nameLocation":"8780:7:20","nodeType":"VariableDeclaration","scope":4317,"src":"8772:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4306,"name":"uint256","nodeType":"ElementaryTypeName","src":"8772:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8759:29:20"},"returnParameters":{"id":4309,"nodeType":"ParameterList","parameters":[],"src":"8806:0:20"},"scope":4702,"src":"8741:108:20","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4345,"nodeType":"Block","src":"9184:195:20","statements":[{"expression":{"arguments":[{"id":4328,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"9200:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4329,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"9204:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4327,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"9194:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9194:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4331,"nodeType":"ExpressionStatement","src":"9194:18:20"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":4336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9274:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9266:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4334,"name":"address","nodeType":"ElementaryTypeName","src":"9266:7:20","typeDescriptions":{}}},"id":4337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9266:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4338,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"9278:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4339,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"9282:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4340,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"9291:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4333,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4679,"src":"9243:22:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":4341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9243:53:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":4342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9310:52:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":4332,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9222:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:150:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4344,"nodeType":"ExpressionStatement","src":"9222:150:20"}]},"documentation":{"id":4318,"nodeType":"StructuredDocumentation","src":"8855:210:20","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":4346,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"9079:9:20","nodeType":"FunctionDefinition","parameters":{"id":4325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4320,"mutability":"mutable","name":"to","nameLocation":"9106:2:20","nodeType":"VariableDeclaration","scope":4346,"src":"9098:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4319,"name":"address","nodeType":"ElementaryTypeName","src":"9098:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4322,"mutability":"mutable","name":"tokenId","nameLocation":"9126:7:20","nodeType":"VariableDeclaration","scope":4346,"src":"9118:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4321,"name":"uint256","nodeType":"ElementaryTypeName","src":"9118:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4324,"mutability":"mutable","name":"data","nameLocation":"9156:4:20","nodeType":"VariableDeclaration","scope":4346,"src":"9143:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4323,"name":"bytes","nodeType":"ElementaryTypeName","src":"9143:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9088:78:20"},"returnParameters":{"id":4326,"nodeType":"ParameterList","parameters":[],"src":"9184:0:20"},"scope":4702,"src":"9070:309:20","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4411,"nodeType":"Block","src":"9762:366:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4355,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"9780:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9794:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9786:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4356,"name":"address","nodeType":"ElementaryTypeName","src":"9786:7:20","typeDescriptions":{}}},"id":4359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9786:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9780:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":4361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9798:34:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":4354,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9772:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9772:61:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4363,"nodeType":"ExpressionStatement","src":"9772:61:20"},{"expression":{"arguments":[{"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9851:17:20","subExpression":{"arguments":[{"id":4366,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"9860:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4365,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"9852:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9852:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":4369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9870:30:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":4364,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9843:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9843:58:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4371,"nodeType":"ExpressionStatement","src":"9843:58:20"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":4375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9941:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9933:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4373,"name":"address","nodeType":"ElementaryTypeName","src":"9933:7:20","typeDescriptions":{}}},"id":4376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9933:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4377,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"9945:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4378,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"9949:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4372,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4690,"src":"9912:20:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9912:45:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4380,"nodeType":"ExpressionStatement","src":"9912:45:20"},{"expression":{"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4381,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"9968:9:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4383,"indexExpression":{"id":4382,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"9978:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9968:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9985:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9968:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4386,"nodeType":"ExpressionStatement","src":"9968:18:20"},{"expression":{"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4387,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"9996:7:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4389,"indexExpression":{"id":4388,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"10004:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9996:16:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4390,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"10015:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9996:21:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4392,"nodeType":"ExpressionStatement","src":"9996:21:20"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":4396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10050:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10042:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4394,"name":"address","nodeType":"ElementaryTypeName","src":"10042:7:20","typeDescriptions":{}}},"id":4397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10042:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4398,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"10054:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4399,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"10058:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4393,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"10033:8:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10033:33:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4401,"nodeType":"EmitStatement","src":"10028:38:20"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":4405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10105:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10097:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4403,"name":"address","nodeType":"ElementaryTypeName","src":"10097:7:20","typeDescriptions":{}}},"id":4406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10097:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4407,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"10109:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4408,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4351,"src":"10113:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4402,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4701,"src":"10077:19:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10077:44:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4410,"nodeType":"ExpressionStatement","src":"10077:44:20"}]},"documentation":{"id":4347,"nodeType":"StructuredDocumentation","src":"9385:311:20","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":4412,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9710:5:20","nodeType":"FunctionDefinition","parameters":{"id":4352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4349,"mutability":"mutable","name":"to","nameLocation":"9724:2:20","nodeType":"VariableDeclaration","scope":4412,"src":"9716:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4348,"name":"address","nodeType":"ElementaryTypeName","src":"9716:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4351,"mutability":"mutable","name":"tokenId","nameLocation":"9736:7:20","nodeType":"VariableDeclaration","scope":4412,"src":"9728:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4350,"name":"uint256","nodeType":"ElementaryTypeName","src":"9728:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9715:29:20"},"returnParameters":{"id":4353,"nodeType":"ParameterList","parameters":[],"src":"9762:0:20"},"scope":4702,"src":"9701:427:20","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4471,"nodeType":"Block","src":"10394:431:20","statements":[{"assignments":[4419],"declarations":[{"constant":false,"id":4419,"mutability":"mutable","name":"owner","nameLocation":"10412:5:20","nodeType":"VariableDeclaration","scope":4471,"src":"10404:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4418,"name":"address","nodeType":"ElementaryTypeName","src":"10404:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4423,"initialValue":{"arguments":[{"id":4421,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"10428:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4420,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"10420:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10420:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10404:32:20"},{"expression":{"arguments":[{"id":4425,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4419,"src":"10468:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":4428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10483:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10475:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4426,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:20","typeDescriptions":{}}},"id":4429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10475:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4430,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"10487:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4424,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4690,"src":"10447:20:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10447:48:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4432,"nodeType":"ExpressionStatement","src":"10447:48:20"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":4436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10542:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4434,"name":"address","nodeType":"ElementaryTypeName","src":"10542:7:20","typeDescriptions":{}}},"id":4437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10542:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4438,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"10554:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4433,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4569,"src":"10533:8:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10533:29:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4440,"nodeType":"ExpressionStatement","src":"10533:29:20"},{"expression":{"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4441,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"10573:9:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4443,"indexExpression":{"id":4442,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4419,"src":"10583:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10573:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":4444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10593:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10573:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4446,"nodeType":"ExpressionStatement","src":"10573:21:20"},{"expression":{"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4447,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"10676:7:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4449,"indexExpression":{"id":4448,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"10684:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10676:16:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4450,"name":"_NULL_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3861,"src":"10695:13:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10676:32:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4452,"nodeType":"ExpressionStatement","src":"10676:32:20"},{"eventCall":{"arguments":[{"id":4454,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4419,"src":"10733:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":4457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10748:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10740:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4455,"name":"address","nodeType":"ElementaryTypeName","src":"10740:7:20","typeDescriptions":{}}},"id":4458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10740:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4459,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"10752:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4453,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"10724:8:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10724:36:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4461,"nodeType":"EmitStatement","src":"10719:41:20"},{"expression":{"arguments":[{"id":4463,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4419,"src":"10791:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":4466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10806:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10798:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4464,"name":"address","nodeType":"ElementaryTypeName","src":"10798:7:20","typeDescriptions":{}}},"id":4467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10798:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4468,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"10810:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4462,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4701,"src":"10771:19:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10771:47:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4470,"nodeType":"ExpressionStatement","src":"10771:47:20"}]},"documentation":{"id":4413,"nodeType":"StructuredDocumentation","src":"10134:206:20","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":4472,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"10354:5:20","nodeType":"FunctionDefinition","parameters":{"id":4416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4415,"mutability":"mutable","name":"tokenId","nameLocation":"10368:7:20","nodeType":"VariableDeclaration","scope":4472,"src":"10360:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4414,"name":"uint256","nodeType":"ElementaryTypeName","src":"10360:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10359:17:20"},"returnParameters":{"id":4417,"nodeType":"ParameterList","parameters":[],"src":"10394:0:20"},"scope":4702,"src":"10345:480:20","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4545,"nodeType":"Block","src":"11258:489:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4484,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"11284:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4483,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"11276:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11276:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4486,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"11296:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11276:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":4488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11302:39:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":4482,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11268:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11268:74:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4490,"nodeType":"ExpressionStatement","src":"11268:74:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4492,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4477,"src":"11360:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11374:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11366:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4493,"name":"address","nodeType":"ElementaryTypeName","src":"11366:7:20","typeDescriptions":{}}},"id":4496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11366:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11360:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":4498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11378:38:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":4491,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11352:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11352:65:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4500,"nodeType":"ExpressionStatement","src":"11352:65:20"},{"expression":{"arguments":[{"id":4502,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"11449:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4503,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4477,"src":"11455:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4504,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"11459:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4501,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4690,"src":"11428:20:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11428:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4506,"nodeType":"ExpressionStatement","src":"11428:39:20"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":4510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11546:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11538:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4508,"name":"address","nodeType":"ElementaryTypeName","src":"11538:7:20","typeDescriptions":{}}},"id":4511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11538:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4512,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"11550:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4507,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4569,"src":"11529:8:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11529:29:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4514,"nodeType":"ExpressionStatement","src":"11529:29:20"},{"expression":{"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4515,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"11569:9:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4517,"indexExpression":{"id":4516,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"11579:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11569:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":4518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11588:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11569:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4520,"nodeType":"ExpressionStatement","src":"11569:20:20"},{"expression":{"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4521,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"11599:9:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4523,"indexExpression":{"id":4522,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4477,"src":"11609:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11599:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11616:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11599:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4526,"nodeType":"ExpressionStatement","src":"11599:18:20"},{"expression":{"id":4531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4527,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"11627:7:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4529,"indexExpression":{"id":4528,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"11635:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11627:16:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4530,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4477,"src":"11646:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11627:21:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4532,"nodeType":"ExpressionStatement","src":"11627:21:20"},{"eventCall":{"arguments":[{"id":4534,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"11673:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4535,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4477,"src":"11679:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4536,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"11683:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4533,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"11664:8:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11664:27:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4538,"nodeType":"EmitStatement","src":"11659:32:20"},{"expression":{"arguments":[{"id":4540,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"11722:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4541,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4477,"src":"11728:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4542,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"11732:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4539,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4701,"src":"11702:19:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11702:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4544,"nodeType":"ExpressionStatement","src":"11702:38:20"}]},"documentation":{"id":4473,"nodeType":"StructuredDocumentation","src":"10831:313:20","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":4546,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11158:9:20","nodeType":"FunctionDefinition","parameters":{"id":4480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4475,"mutability":"mutable","name":"from","nameLocation":"11185:4:20","nodeType":"VariableDeclaration","scope":4546,"src":"11177:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4474,"name":"address","nodeType":"ElementaryTypeName","src":"11177:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4477,"mutability":"mutable","name":"to","nameLocation":"11207:2:20","nodeType":"VariableDeclaration","scope":4546,"src":"11199:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4476,"name":"address","nodeType":"ElementaryTypeName","src":"11199:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4479,"mutability":"mutable","name":"tokenId","nameLocation":"11227:7:20","nodeType":"VariableDeclaration","scope":4546,"src":"11219:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4478,"name":"uint256","nodeType":"ElementaryTypeName","src":"11219:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11167:73:20"},"returnParameters":{"id":4481,"nodeType":"ParameterList","parameters":[],"src":"11258:0:20"},"scope":4702,"src":"11149:598:20","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4568,"nodeType":"Block","src":"11923:100:20","statements":[{"expression":{"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4554,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"11933:15:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4556,"indexExpression":{"id":4555,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4551,"src":"11949:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11933:24:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4557,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4549,"src":"11960:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11933:29:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4559,"nodeType":"ExpressionStatement","src":"11933:29:20"},{"eventCall":{"arguments":[{"arguments":[{"id":4562,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4551,"src":"11994:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4561,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"11986:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":4563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11986:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4564,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4549,"src":"12004:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4565,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4551,"src":"12008:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4560,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"11977:8:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11977:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4567,"nodeType":"EmitStatement","src":"11972:44:20"}]},"documentation":{"id":4547,"nodeType":"StructuredDocumentation","src":"11753:101:20","text":" @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."},"id":4569,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"11868:8:20","nodeType":"FunctionDefinition","parameters":{"id":4552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4549,"mutability":"mutable","name":"to","nameLocation":"11885:2:20","nodeType":"VariableDeclaration","scope":4569,"src":"11877:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4548,"name":"address","nodeType":"ElementaryTypeName","src":"11877:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4551,"mutability":"mutable","name":"tokenId","nameLocation":"11897:7:20","nodeType":"VariableDeclaration","scope":4569,"src":"11889:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4550,"name":"uint256","nodeType":"ElementaryTypeName","src":"11889:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11876:29:20"},"returnParameters":{"id":4553,"nodeType":"ParameterList","parameters":[],"src":"11923:0:20"},"scope":4702,"src":"11859:164:20","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4600,"nodeType":"Block","src":"12282:184:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4580,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"12300:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4581,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"12309:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12300:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":4583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12319:27:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":4579,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12292:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12292:55:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4585,"nodeType":"ExpressionStatement","src":"12292:55:20"},{"expression":{"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4586,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"12357:18:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":4589,"indexExpression":{"id":4587,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"12376:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12357:25:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":4590,"indexExpression":{"id":4588,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"12383:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12357:35:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4591,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"12395:8:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12357:46:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4593,"nodeType":"ExpressionStatement","src":"12357:46:20"},{"eventCall":{"arguments":[{"id":4595,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"12433:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4596,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"12440:8:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4597,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"12450:8:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4594,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"12418:14:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12418:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4599,"nodeType":"EmitStatement","src":"12413:46:20"}]},"documentation":{"id":4570,"nodeType":"StructuredDocumentation","src":"12029:125:20","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":4601,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"12168:18:20","nodeType":"FunctionDefinition","parameters":{"id":4577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4572,"mutability":"mutable","name":"owner","nameLocation":"12204:5:20","nodeType":"VariableDeclaration","scope":4601,"src":"12196:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4571,"name":"address","nodeType":"ElementaryTypeName","src":"12196:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4574,"mutability":"mutable","name":"operator","nameLocation":"12227:8:20","nodeType":"VariableDeclaration","scope":4601,"src":"12219:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4573,"name":"address","nodeType":"ElementaryTypeName","src":"12219:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4576,"mutability":"mutable","name":"approved","nameLocation":"12250:8:20","nodeType":"VariableDeclaration","scope":4601,"src":"12245:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4575,"name":"bool","nodeType":"ElementaryTypeName","src":"12245:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12186:78:20"},"returnParameters":{"id":4578,"nodeType":"ParameterList","parameters":[],"src":"12282:0:20"},"scope":4702,"src":"12159:307:20","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4614,"nodeType":"Block","src":"12613:70:20","statements":[{"expression":{"arguments":[{"arguments":[{"id":4609,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"12639:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4608,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"12631:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12631:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":4611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12649:26:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":4607,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12623:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12623:53:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4613,"nodeType":"ExpressionStatement","src":"12623:53:20"}]},"documentation":{"id":4602,"nodeType":"StructuredDocumentation","src":"12472:73:20","text":" @dev Reverts if the `tokenId` has not been minted yet."},"id":4615,"implemented":true,"kind":"function","modifiers":[],"name":"_requireMinted","nameLocation":"12559:14:20","nodeType":"FunctionDefinition","parameters":{"id":4605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4604,"mutability":"mutable","name":"tokenId","nameLocation":"12582:7:20","nodeType":"VariableDeclaration","scope":4615,"src":"12574:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4603,"name":"uint256","nodeType":"ElementaryTypeName","src":"12574:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12573:17:20"},"returnParameters":{"id":4606,"nodeType":"ParameterList","parameters":[],"src":"12613:0:20"},"scope":4702,"src":"12550:133:20","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4678,"nodeType":"Block","src":"13390:679:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":4629,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"13404:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13407:4:20","memberName":"code","nodeType":"MemberAccess","src":"13404:7:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13412:6:20","memberName":"length","nodeType":"MemberAccess","src":"13404:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13421:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13404:18:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4676,"nodeType":"Block","src":"14027:36:20","statements":[{"expression":{"hexValue":"74727565","id":4674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14048:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4628,"id":4675,"nodeType":"Return","src":"14041:11:20"}]},"id":4677,"nodeType":"IfStatement","src":"13400:663:20","trueBody":{"id":4673,"nodeType":"Block","src":"13424:597:20","statements":[{"clauses":[{"block":{"id":4653,"nodeType":"Block","src":"13538:91:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4647,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"13563:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":4648,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"13573:15:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1863_$","typeString":"type(contract IERC721Receiver)"}},"id":4649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13589:16:20","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1862,"src":"13573:32:20","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":4650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13606:8:20","memberName":"selector","nodeType":"MemberAccess","src":"13573:41:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"13563:51:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4628,"id":4652,"nodeType":"Return","src":"13556:58:20"}]},"errorName":"","id":4654,"nodeType":"TryCatchClause","parameters":{"id":4646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4645,"mutability":"mutable","name":"retval","nameLocation":"13530:6:20","nodeType":"VariableDeclaration","scope":4654,"src":"13523:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4644,"name":"bytes4","nodeType":"ElementaryTypeName","src":"13523:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"13522:15:20"},"src":"13514:115:20"},{"block":{"id":4670,"nodeType":"Block","src":"13658:353:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4658,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4656,"src":"13680:6:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13687:6:20","memberName":"length","nodeType":"MemberAccess","src":"13680:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13697:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13680:18:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4668,"nodeType":"Block","src":"13807:190:20","statements":[{"AST":{"nodeType":"YulBlock","src":"13893:86:20","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13930:2:20","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"13934:6:20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13926:3:20"},"nodeType":"YulFunctionCall","src":"13926:15:20"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"13949:6:20"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13943:5:20"},"nodeType":"YulFunctionCall","src":"13943:13:20"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13919:6:20"},"nodeType":"YulFunctionCall","src":"13919:38:20"},"nodeType":"YulExpressionStatement","src":"13919:38:20"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":4656,"isOffset":false,"isSlot":false,"src":"13934:6:20","valueSize":1},{"declaration":4656,"isOffset":false,"isSlot":false,"src":"13949:6:20","valueSize":1}],"id":4667,"nodeType":"InlineAssembly","src":"13884:95:20"}]},"id":4669,"nodeType":"IfStatement","src":"13676:321:20","trueBody":{"id":4666,"nodeType":"Block","src":"13700:101:20","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":4663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13729:52:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":4662,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"13722:6:20","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13722:60:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4665,"nodeType":"ExpressionStatement","src":"13722:60:20"}]}}]},"errorName":"","id":4671,"nodeType":"TryCatchClause","parameters":{"id":4657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4656,"mutability":"mutable","name":"reason","nameLocation":"13650:6:20","nodeType":"VariableDeclaration","scope":4671,"src":"13637:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4655,"name":"bytes","nodeType":"ElementaryTypeName","src":"13637:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13636:21:20"},"src":"13630:381:20"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4638,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"13479:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13479:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4640,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"13493:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4641,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4622,"src":"13499:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4642,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"13508:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":4635,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4620,"src":"13458:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4634,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"13442:15:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1863_$","typeString":"type(contract IERC721Receiver)"}},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13442:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1863","typeString":"contract IERC721Receiver"}},"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13462:16:20","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1862,"src":"13442:36:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13442:71:20","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":4672,"nodeType":"TryStatement","src":"13438:573:20"}]}}]},"documentation":{"id":4616,"nodeType":"StructuredDocumentation","src":"12689:541:20","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":4679,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"13244:22:20","nodeType":"FunctionDefinition","parameters":{"id":4625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4618,"mutability":"mutable","name":"from","nameLocation":"13284:4:20","nodeType":"VariableDeclaration","scope":4679,"src":"13276:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4617,"name":"address","nodeType":"ElementaryTypeName","src":"13276:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4620,"mutability":"mutable","name":"to","nameLocation":"13306:2:20","nodeType":"VariableDeclaration","scope":4679,"src":"13298:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4619,"name":"address","nodeType":"ElementaryTypeName","src":"13298:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4622,"mutability":"mutable","name":"tokenId","nameLocation":"13326:7:20","nodeType":"VariableDeclaration","scope":4679,"src":"13318:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4621,"name":"uint256","nodeType":"ElementaryTypeName","src":"13318:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4624,"mutability":"mutable","name":"data","nameLocation":"13356:4:20","nodeType":"VariableDeclaration","scope":4679,"src":"13343:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4623,"name":"bytes","nodeType":"ElementaryTypeName","src":"13343:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13266:100:20"},"returnParameters":{"id":4628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4679,"src":"13384:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4626,"name":"bool","nodeType":"ElementaryTypeName","src":"13384:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13383:6:20"},"scope":4702,"src":"13235:834:20","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4689,"nodeType":"Block","src":"14745:2:20","statements":[]},"documentation":{"id":4680,"nodeType":"StructuredDocumentation","src":"14075:545:20","text":" @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":4690,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"14634:20:20","nodeType":"FunctionDefinition","parameters":{"id":4687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4682,"mutability":"mutable","name":"from","nameLocation":"14672:4:20","nodeType":"VariableDeclaration","scope":4690,"src":"14664:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4681,"name":"address","nodeType":"ElementaryTypeName","src":"14664:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4684,"mutability":"mutable","name":"to","nameLocation":"14694:2:20","nodeType":"VariableDeclaration","scope":4690,"src":"14686:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4683,"name":"address","nodeType":"ElementaryTypeName","src":"14686:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4686,"mutability":"mutable","name":"tokenId","nameLocation":"14714:7:20","nodeType":"VariableDeclaration","scope":4690,"src":"14706:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4685,"name":"uint256","nodeType":"ElementaryTypeName","src":"14706:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14654:73:20"},"returnParameters":{"id":4688,"nodeType":"ParameterList","parameters":[],"src":"14745:0:20"},"scope":4702,"src":"14625:122:20","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4700,"nodeType":"Block","src":"15238:2:20","statements":[]},"documentation":{"id":4691,"nodeType":"StructuredDocumentation","src":"14753:361:20","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":4701,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"15128:19:20","nodeType":"FunctionDefinition","parameters":{"id":4698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4693,"mutability":"mutable","name":"from","nameLocation":"15165:4:20","nodeType":"VariableDeclaration","scope":4701,"src":"15157:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4692,"name":"address","nodeType":"ElementaryTypeName","src":"15157:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4695,"mutability":"mutable","name":"to","nameLocation":"15187:2:20","nodeType":"VariableDeclaration","scope":4701,"src":"15179:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4694,"name":"address","nodeType":"ElementaryTypeName","src":"15179:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4697,"mutability":"mutable","name":"tokenId","nameLocation":"15207:7:20","nodeType":"VariableDeclaration","scope":4701,"src":"15199:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4696,"name":"uint256","nodeType":"ElementaryTypeName","src":"15199:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15147:73:20"},"returnParameters":{"id":4699,"nodeType":"ParameterList","parameters":[],"src":"15238:0:20"},"scope":4702,"src":"15119:121:20","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":4703,"src":"1382:13860:20","usedErrors":[]}],"src":"302:14941:20"}},"contracts/lib/ERC721iEnumerable.sol":{"id":21,"ast":{"absolutePath":"contracts/lib/ERC721iEnumerable.sol","exportedSymbols":{"Address":[2251],"Context":[2273],"ERC165":[2526],"ERC721":[4702],"ERC721iEnumerable":[5061],"IERC165":[2538],"IERC721":[1845],"IERC721Enumerable":[1894],"IERC721Metadata":[1921],"IERC721Receiver":[1863],"Math":[3404],"SignedMath":[3509],"Strings":[2502]},"id":5062,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4704,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"309:23:21"},{"absolutePath":"contracts/lib/ERC721.sol","file":"./ERC721.sol","id":4705,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5062,"sourceUnit":4703,"src":"334:22:21","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","id":4706,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5062,"sourceUnit":1895,"src":"357:79:21","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4708,"name":"ERC721","nameLocations":["1104:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":4702,"src":"1104:6:21"},"id":4709,"nodeType":"InheritanceSpecifier","src":"1104:6:21"},{"baseName":{"id":4710,"name":"IERC721Enumerable","nameLocations":["1112:17:21"],"nodeType":"IdentifierPath","referencedDeclaration":1894,"src":"1112:17:21"},"id":4711,"nodeType":"InheritanceSpecifier","src":"1112:17:21"}],"canonicalName":"ERC721iEnumerable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4707,"nodeType":"StructuredDocumentation","src":"438:626:21","text":" @dev This implements an optional extension of {ERC721} defined in the EIP that adds\n enumerability of all the token ids in the contract as well as all token ids owned by each\n account.\n @dev This implementation also includes support for pre-minting a max-supply of tokens up-front.\n Note on pre-mint:\n  Assumes a Max-Supply which is entirely pre-minted to initial address with sequential Token IDs.\n  For this reason, the \"allTokens\" state vars are unneccesary and have been removed.\n  Also defines 2 light-weight state vars: \"_preMintReceiver\" & \"_maxSupply\"\n  Overrides \"ownerOf\" & \"_exists\""},"fullyImplemented":false,"id":5061,"linearizedBaseContracts":[5061,1894,4702,1921,1845,2526,2538,2273],"name":"ERC721iEnumerable","nameLocation":"1083:17:21","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":4717,"mutability":"mutable","name":"_ownedTokens","nameLocation":"1241:12:21","nodeType":"VariableDeclaration","scope":5061,"src":"1185:68:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":4716,"keyType":{"id":4712,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:47:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueType":{"id":4715,"keyType":{"id":4713,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1204:27:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":4714,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":4721,"mutability":"mutable","name":"_ownedTokensIndex","nameLocation":"1355:17:21","nodeType":"VariableDeclaration","scope":5061,"src":"1319:53:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":4720,"keyType":{"id":4718,"name":"uint256","nodeType":"ElementaryTypeName","src":"1327:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1319:27:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":4719,"name":"uint256","nodeType":"ElementaryTypeName","src":"1338:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":4723,"mutability":"mutable","name":"_preMintReceiver","nameLocation":"1434:16:21","nodeType":"VariableDeclaration","scope":5061,"src":"1417:33:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4722,"name":"address","nodeType":"ElementaryTypeName","src":"1417:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4725,"mutability":"mutable","name":"_maxSupply","nameLocation":"1501:10:21","nodeType":"VariableDeclaration","scope":5061,"src":"1484:27:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4724,"name":"uint256","nodeType":"ElementaryTypeName","src":"1484:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"baseFunctions":[2537,3931],"body":{"id":4748,"nodeType":"Block","src":"1788:108:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4736,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"1801:11:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4738,"name":"IERC721Enumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"1821:17:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Enumerable_$1894_$","typeString":"type(contract IERC721Enumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Enumerable_$1894_$","typeString":"type(contract IERC721Enumerable)"}],"id":4737,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1816:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Enumerable_$1894","typeString":"type(contract IERC721Enumerable)"}},"id":4740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1840:11:21","memberName":"interfaceId","nodeType":"MemberAccess","src":"1816:35:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1801:50:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":4744,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"1879:11:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":4742,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1855:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721iEnumerable_$5061_$","typeString":"type(contract super ERC721iEnumerable)"}},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1861:17:21","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3931,"src":"1855:23:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:36:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1801:90:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4735,"id":4747,"nodeType":"Return","src":"1794:97:21"}]},"documentation":{"id":4726,"nodeType":"StructuredDocumentation","src":"1516:161:21","text":" @dev See {IERC165-supportsInterface}.\n Note on Pre-Mint: this implementation maintains the exact same interface for IERC721Enumerable"},"functionSelector":"01ffc9a7","id":4749,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1689:17:21","nodeType":"FunctionDefinition","overrides":{"id":4732,"nodeType":"OverrideSpecifier","overrides":[{"id":4730,"name":"IERC165","nameLocations":["1756:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":2538,"src":"1756:7:21"},{"id":4731,"name":"ERC721","nameLocations":["1765:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":4702,"src":"1765:6:21"}],"src":"1747:25:21"},"parameters":{"id":4729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4728,"mutability":"mutable","name":"interfaceId","nameLocation":"1714:11:21","nodeType":"VariableDeclaration","scope":4749,"src":"1707:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4727,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1707:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1706:20:21"},"returnParameters":{"id":4735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4749,"src":"1782:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4733,"name":"bool","nodeType":"ElementaryTypeName","src":"1782:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1781:6:21"},"scope":5061,"src":"1680:216:21","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1885],"body":{"id":4828,"nodeType":"Block","src":"2115:468:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4761,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4754,"src":"2129:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[{"id":4764,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4752,"src":"2154:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4762,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"2137:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$4702_$","typeString":"type(contract ERC721)"}},"id":4763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2144:9:21","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3955,"src":"2137:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2137:23:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2129:31:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e6473","id":4767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2162:45:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c","typeString":"literal_string \"ERC721Enumerable: owner index out of bounds\""},"value":"ERC721Enumerable: owner index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c","typeString":"literal_string \"ERC721Enumerable: owner index out of bounds\""}],"id":4760,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2121:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2121:87:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4769,"nodeType":"ExpressionStatement","src":"2121:87:21"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4770,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4752,"src":"2218:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":4773,"name":"_preMintReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"2235:16:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2227:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4771,"name":"address","nodeType":"ElementaryTypeName","src":"2227:7:21","typeDescriptions":{}}},"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2227:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2218:34:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4821,"nodeType":"IfStatement","src":"2214:326:21","trueBody":{"id":4820,"nodeType":"Block","src":"2254:286:21","statements":[{"assignments":[4777],"declarations":[{"constant":false,"id":4777,"mutability":"mutable","name":"supply","nameLocation":"2270:6:21","nodeType":"VariableDeclaration","scope":4820,"src":"2262:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4776,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4780,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4778,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"2279:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2279:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2262:30:21"},{"assignments":[4782],"declarations":[{"constant":false,"id":4782,"mutability":"mutable","name":"matched","nameLocation":"2308:7:21","nodeType":"VariableDeclaration","scope":4820,"src":"2300:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4781,"name":"uint256","nodeType":"ElementaryTypeName","src":"2300:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4784,"initialValue":{"hexValue":"30","id":4783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2318:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2300:19:21"},{"body":{"id":4818,"nodeType":"Block","src":"2364:170:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4796,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"2386:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4795,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[4902],"referencedDeclaration":4902,"src":"2378:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2378:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":4800,"name":"_preMintReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"2400:16:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2392:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4798,"name":"address","nodeType":"ElementaryTypeName","src":"2392:7:21","typeDescriptions":{}}},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2392:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2378:39:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4817,"nodeType":"IfStatement","src":"2374:152:21","trueBody":{"id":4816,"nodeType":"Block","src":"2419:107:21","statements":[{"expression":{"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4803,"name":"matched","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"2431:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2442:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2431:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4806,"nodeType":"ExpressionStatement","src":"2431:12:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4807,"name":"matched","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"2459:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2469:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2459:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4810,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4754,"src":"2474:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2459:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4815,"nodeType":"IfStatement","src":"2455:61:21","trueBody":{"id":4814,"nodeType":"Block","src":"2481:35:21","statements":[{"expression":{"id":4812,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"2502:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4759,"id":4813,"nodeType":"Return","src":"2495:8:21"}]}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4789,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"2347:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4790,"name":"supply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4777,"src":"2351:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2347:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4819,"initializationExpression":{"assignments":[4786],"declarations":[{"constant":false,"id":4786,"mutability":"mutable","name":"i","nameLocation":"2340:1:21","nodeType":"VariableDeclaration","scope":4819,"src":"2332:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4785,"name":"uint256","nodeType":"ElementaryTypeName","src":"2332:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4788,"initialValue":{"hexValue":"31","id":4787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2344:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"2332:13:21"},"loopExpression":{"expression":{"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2359:3:21","subExpression":{"id":4792,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"2359:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4794,"nodeType":"ExpressionStatement","src":"2359:3:21"},"nodeType":"ForStatement","src":"2327:207:21"}]}},{"expression":{"baseExpression":{"baseExpression":{"id":4822,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"2552:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":4824,"indexExpression":{"id":4823,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4752,"src":"2565:5:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2552:19:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":4826,"indexExpression":{"id":4825,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4754,"src":"2572:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2552:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4759,"id":4827,"nodeType":"Return","src":"2545:33:21"}]},"documentation":{"id":4750,"nodeType":"StructuredDocumentation","src":"1900:106:21","text":" @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n note: Fix contributed by surfer77"},"functionSelector":"2f745c59","id":4829,"implemented":true,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"2018:19:21","nodeType":"FunctionDefinition","overrides":{"id":4756,"nodeType":"OverrideSpecifier","overrides":[],"src":"2088:8:21"},"parameters":{"id":4755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4752,"mutability":"mutable","name":"owner","nameLocation":"2046:5:21","nodeType":"VariableDeclaration","scope":4829,"src":"2038:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4751,"name":"address","nodeType":"ElementaryTypeName","src":"2038:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4754,"mutability":"mutable","name":"index","nameLocation":"2061:5:21","nodeType":"VariableDeclaration","scope":4829,"src":"2053:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4753,"name":"uint256","nodeType":"ElementaryTypeName","src":"2053:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2037:30:21"},"returnParameters":{"id":4759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4829,"src":"2106:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4757,"name":"uint256","nodeType":"ElementaryTypeName","src":"2106:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2105:9:21"},"scope":5061,"src":"2009:574:21","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1875],"body":{"id":4838,"nodeType":"Block","src":"2718:77:21","statements":[{"expression":{"id":4836,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"2780:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4835,"id":4837,"nodeType":"Return","src":"2773:17:21"}]},"documentation":{"id":4830,"nodeType":"StructuredDocumentation","src":"2587:58:21","text":" @dev See {IERC721Enumerable-totalSupply}."},"functionSelector":"18160ddd","id":4839,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2657:11:21","nodeType":"FunctionDefinition","overrides":{"id":4832,"nodeType":"OverrideSpecifier","overrides":[],"src":"2691:8:21"},"parameters":{"id":4831,"nodeType":"ParameterList","parameters":[],"src":"2668:2:21"},"returnParameters":{"id":4835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4839,"src":"2709:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4833,"name":"uint256","nodeType":"ElementaryTypeName","src":"2709:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2708:9:21"},"scope":5061,"src":"2648:147:21","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1893],"body":{"id":4859,"nodeType":"Block","src":"2945:181:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4849,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4842,"src":"2959:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4850,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"2967:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2959:18:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473","id":4852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2979:46:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc","typeString":"literal_string \"ERC721Enumerable: global index out of bounds\""},"value":"ERC721Enumerable: global index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc","typeString":"literal_string \"ERC721Enumerable: global index out of bounds\""}],"id":4848,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2951:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2951:75:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4854,"nodeType":"ExpressionStatement","src":"2951:75:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4855,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4842,"src":"3112:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3120:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3112:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4847,"id":4858,"nodeType":"Return","src":"3105:16:21"}]},"documentation":{"id":4840,"nodeType":"StructuredDocumentation","src":"2799:59:21","text":" @dev See {IERC721Enumerable-tokenByIndex}."},"functionSelector":"4f6ccce7","id":4860,"implemented":true,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"2870:12:21","nodeType":"FunctionDefinition","overrides":{"id":4844,"nodeType":"OverrideSpecifier","overrides":[],"src":"2918:8:21"},"parameters":{"id":4843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4842,"mutability":"mutable","name":"index","nameLocation":"2891:5:21","nodeType":"VariableDeclaration","scope":4860,"src":"2883:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4841,"name":"uint256","nodeType":"ElementaryTypeName","src":"2883:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2882:15:21"},"returnParameters":{"id":4847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4860,"src":"2936:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4845,"name":"uint256","nodeType":"ElementaryTypeName","src":"2936:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2935:9:21"},"scope":5061,"src":"2861:265:21","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1778,3983],"body":{"id":4901,"nodeType":"Block","src":"3329:576:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4871,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"3416:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4872,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"3426:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3416:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4880,"nodeType":"IfStatement","src":"3412:70:21","trueBody":{"id":4879,"nodeType":"Block","src":"3438:44:21","statements":[{"expression":{"arguments":[{"id":4876,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"3467:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4874,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3453:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721iEnumerable_$5061_$","typeString":"type(contract super ERC721iEnumerable)"}},"id":4875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3459:7:21","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":3983,"src":"3453:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":4877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3453:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4870,"id":4878,"nodeType":"Return","src":"3446:29:21"}]}},{"assignments":[4882],"declarations":[{"constant":false,"id":4882,"mutability":"mutable","name":"owner_","nameLocation":"3785:6:21","nodeType":"VariableDeclaration","scope":4901,"src":"3777:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4881,"name":"address","nodeType":"ElementaryTypeName","src":"3777:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4886,"initialValue":{"baseExpression":{"id":4883,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"3794:7:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4885,"indexExpression":{"id":4884,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4863,"src":"3802:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3794:16:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3777:33:21"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4887,"name":"owner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"3820:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3838:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3830:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4888,"name":"address","nodeType":"ElementaryTypeName","src":"3830:7:21","typeDescriptions":{}}},"id":4891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3830:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3820:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4898,"nodeType":"IfStatement","src":"3816:66:21","trueBody":{"id":4897,"nodeType":"Block","src":"3842:40:21","statements":[{"expression":{"id":4895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4893,"name":"owner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"3850:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4894,"name":"_preMintReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"3859:16:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3850:25:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4896,"nodeType":"ExpressionStatement","src":"3850:25:21"}]}},{"expression":{"id":4899,"name":"owner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4882,"src":"3894:6:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4870,"id":4900,"nodeType":"Return","src":"3887:13:21"}]},"documentation":{"id":4861,"nodeType":"StructuredDocumentation","src":"3130:98:21","text":" @dev Override the ERC721 \"ownerOf\" function to account for the Pre-Mint Receiver."},"functionSelector":"6352211e","id":4902,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"3240:7:21","nodeType":"FunctionDefinition","overrides":{"id":4867,"nodeType":"OverrideSpecifier","overrides":[{"id":4865,"name":"IERC721","nameLocations":["3294:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":1845,"src":"3294:7:21"},{"id":4866,"name":"ERC721","nameLocations":["3303:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":4702,"src":"3303:6:21"}],"src":"3285:25:21"},"parameters":{"id":4864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4863,"mutability":"mutable","name":"tokenId","nameLocation":"3256:7:21","nodeType":"VariableDeclaration","scope":4902,"src":"3248:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4862,"name":"uint256","nodeType":"ElementaryTypeName","src":"3248:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3247:17:21"},"returnParameters":{"id":4870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4902,"src":"3320:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4868,"name":"address","nodeType":"ElementaryTypeName","src":"3320:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3319:9:21"},"scope":5061,"src":"3231:674:21","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[4269],"body":{"id":4931,"nodeType":"Block","src":"4102:285:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4912,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4905,"src":"4189:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4913,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"4199:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4189:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4921,"nodeType":"IfStatement","src":"4185:70:21","trueBody":{"id":4920,"nodeType":"Block","src":"4211:44:21","statements":[{"expression":{"arguments":[{"id":4917,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4905,"src":"4240:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4915,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4226:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721iEnumerable_$5061_$","typeString":"type(contract super ERC721iEnumerable)"}},"id":4916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4232:7:21","memberName":"_exists","nodeType":"MemberAccess","referencedDeclaration":4269,"src":"4226:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4226:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4911,"id":4919,"nodeType":"Return","src":"4219:29:21"}]}},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4922,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4905,"src":"4345:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4355:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4345:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4925,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4905,"src":"4360:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4926,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"4371:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4360:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4345:36:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4929,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4344:38:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4911,"id":4930,"nodeType":"Return","src":"4337:45:21"}]},"documentation":{"id":4903,"nodeType":"StructuredDocumentation","src":"3909:102:21","text":" @dev Override the ERC721 \"_exists\" function to account for the Pre-Minted Max-Supply."},"id":4932,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"4023:7:21","nodeType":"FunctionDefinition","overrides":{"id":4908,"nodeType":"OverrideSpecifier","overrides":[{"id":4907,"name":"ERC721","nameLocations":["4079:6:21"],"nodeType":"IdentifierPath","referencedDeclaration":4702,"src":"4079:6:21"}],"src":"4070:16:21"},"parameters":{"id":4906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4905,"mutability":"mutable","name":"tokenId","nameLocation":"4039:7:21","nodeType":"VariableDeclaration","scope":4932,"src":"4031:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4904,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:17:21"},"returnParameters":{"id":4911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4932,"src":"4096:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4909,"name":"bool","nodeType":"ElementaryTypeName","src":"4096:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4095:6:21"},"scope":5061,"src":"4014:373:21","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[4690],"body":{"id":4966,"nodeType":"Block","src":"4576:188:21","statements":[{"expression":{"arguments":[{"id":4946,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"4609:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4947,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"4615:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4948,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"4619:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4943,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4582:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721iEnumerable_$5061_$","typeString":"type(contract super ERC721iEnumerable)"}},"id":4945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4588:20:21","memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":4690,"src":"4582:26:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4582:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4950,"nodeType":"ExpressionStatement","src":"4582:45:21"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4951,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"4638:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4952,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"4646:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4638:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4965,"nodeType":"IfStatement","src":"4634:126:21","trueBody":{"id":4964,"nodeType":"Block","src":"4650:110:21","statements":[{"expression":{"arguments":[{"id":4955,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"4691:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4956,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"4697:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4954,"name":"_removeTokenFromOwnerEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5060,"src":"4658:32:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4658:47:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4958,"nodeType":"ExpressionStatement","src":"4658:47:21"},{"expression":{"arguments":[{"id":4960,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"4741:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4961,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4939,"src":"4745:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4959,"name":"_addTokenToOwnerEnumeration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"4713:27:21","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4713:40:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4963,"nodeType":"ExpressionStatement","src":"4713:40:21"}]}}]},"documentation":{"id":4933,"nodeType":"StructuredDocumentation","src":"4391:67:21","text":" @dev See {IERC721Enumerable-_beforeTokenTransfer}."},"id":4967,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"4470:20:21","nodeType":"FunctionDefinition","overrides":{"id":4941,"nodeType":"OverrideSpecifier","overrides":[],"src":"4567:8:21"},"parameters":{"id":4940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4935,"mutability":"mutable","name":"from","nameLocation":"4504:4:21","nodeType":"VariableDeclaration","scope":4967,"src":"4496:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4934,"name":"address","nodeType":"ElementaryTypeName","src":"4496:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4937,"mutability":"mutable","name":"to","nameLocation":"4522:2:21","nodeType":"VariableDeclaration","scope":4967,"src":"4514:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4936,"name":"address","nodeType":"ElementaryTypeName","src":"4514:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4939,"mutability":"mutable","name":"tokenId","nameLocation":"4538:7:21","nodeType":"VariableDeclaration","scope":4967,"src":"4530:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4938,"name":"uint256","nodeType":"ElementaryTypeName","src":"4530:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4490:59:21"},"returnParameters":{"id":4942,"nodeType":"ParameterList","parameters":[],"src":"4576:0:21"},"scope":5061,"src":"4461:303:21","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4996,"nodeType":"Block","src":"4919:129:21","statements":[{"assignments":[4976],"declarations":[{"constant":false,"id":4976,"mutability":"mutable","name":"length","nameLocation":"4933:6:21","nodeType":"VariableDeclaration","scope":4996,"src":"4925:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4975,"name":"uint256","nodeType":"ElementaryTypeName","src":"4925:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4981,"initialValue":{"arguments":[{"id":4979,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"4959:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4977,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"4942:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$4702_$","typeString":"type(contract ERC721)"}},"id":4978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:9:21","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3955,"src":"4942:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4942:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4925:37:21"},{"expression":{"id":4988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4982,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"4968:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":4985,"indexExpression":{"id":4983,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"4981:2:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4968:16:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":4986,"indexExpression":{"id":4984,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4976,"src":"4985:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4968:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4987,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4972,"src":"4995:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4968:34:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4989,"nodeType":"ExpressionStatement","src":"4968:34:21"},{"expression":{"id":4994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4990,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"5008:17:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":4992,"indexExpression":{"id":4991,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4972,"src":"5026:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5008:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4993,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4976,"src":"5037:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5008:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4995,"nodeType":"ExpressionStatement","src":"5008:35:21"}]},"documentation":{"id":4968,"nodeType":"StructuredDocumentation","src":"4768:74:21","text":" @dev See {IERC721Enumerable-_addTokenToOwnerEnumeration}."},"id":4997,"implemented":true,"kind":"function","modifiers":[],"name":"_addTokenToOwnerEnumeration","nameLocation":"4854:27:21","nodeType":"FunctionDefinition","parameters":{"id":4973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4970,"mutability":"mutable","name":"to","nameLocation":"4890:2:21","nodeType":"VariableDeclaration","scope":4997,"src":"4882:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4969,"name":"address","nodeType":"ElementaryTypeName","src":"4882:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4972,"mutability":"mutable","name":"tokenId","nameLocation":"4902:7:21","nodeType":"VariableDeclaration","scope":4997,"src":"4894:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4971,"name":"uint256","nodeType":"ElementaryTypeName","src":"4894:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4881:29:21"},"returnParameters":{"id":4974,"nodeType":"ParameterList","parameters":[],"src":"4919:0:21"},"scope":5061,"src":"4845:203:21","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":5059,"nodeType":"Block","src":"5215:829:21","statements":[{"assignments":[5006],"declarations":[{"constant":false,"id":5006,"mutability":"mutable","name":"lastTokenIndex","nameLocation":"5392:14:21","nodeType":"VariableDeclaration","scope":5059,"src":"5384:22:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5005,"name":"uint256","nodeType":"ElementaryTypeName","src":"5384:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5013,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5009,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"5426:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5007,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"5409:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$4702_$","typeString":"type(contract ERC721)"}},"id":5008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5416:9:21","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":3955,"src":"5409:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5409:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5434:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5409:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5384:51:21"},{"assignments":[5015],"declarations":[{"constant":false,"id":5015,"mutability":"mutable","name":"tokenIndex","nameLocation":"5449:10:21","nodeType":"VariableDeclaration","scope":5059,"src":"5441:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5014,"name":"uint256","nodeType":"ElementaryTypeName","src":"5441:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5019,"initialValue":{"baseExpression":{"id":5016,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"5462:17:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5018,"indexExpression":{"id":5017,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"5480:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5462:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5441:47:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5020,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5015,"src":"5584:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5021,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"5598:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5584:28:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5046,"nodeType":"IfStatement","src":"5580:301:21","trueBody":{"id":5045,"nodeType":"Block","src":"5614:267:21","statements":[{"assignments":[5024],"declarations":[{"constant":false,"id":5024,"mutability":"mutable","name":"lastTokenId","nameLocation":"5630:11:21","nodeType":"VariableDeclaration","scope":5045,"src":"5622:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5023,"name":"uint256","nodeType":"ElementaryTypeName","src":"5622:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5030,"initialValue":{"baseExpression":{"baseExpression":{"id":5025,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"5644:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":5027,"indexExpression":{"id":5026,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"5657:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5644:18:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5029,"indexExpression":{"id":5028,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"5663:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5644:34:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5622:56:21"},{"expression":{"id":5037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":5031,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"5687:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":5034,"indexExpression":{"id":5032,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"5700:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5687:18:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5035,"indexExpression":{"id":5033,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5015,"src":"5706:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5687:30:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5036,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"5720:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5687:44:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5038,"nodeType":"ExpressionStatement","src":"5687:44:21"},{"expression":{"id":5043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5039,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"5797:17:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5041,"indexExpression":{"id":5040,"name":"lastTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"5815:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5797:30:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5042,"name":"tokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5015,"src":"5830:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5797:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5044,"nodeType":"ExpressionStatement","src":"5797:43:21"}]}},{"expression":{"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5959:33:21","subExpression":{"baseExpression":{"id":5047,"name":"_ownedTokensIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"5966:17:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5049,"indexExpression":{"id":5048,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"5984:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5966:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5051,"nodeType":"ExpressionStatement","src":"5959:33:21"},{"expression":{"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5998:41:21","subExpression":{"baseExpression":{"baseExpression":{"id":5052,"name":"_ownedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"6005:12:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":5054,"indexExpression":{"id":5053,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5000,"src":"6018:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6005:18:21","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5056,"indexExpression":{"id":5055,"name":"lastTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"6024:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6005:34:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5058,"nodeType":"ExpressionStatement","src":"5998:41:21"}]},"documentation":{"id":4998,"nodeType":"StructuredDocumentation","src":"5052:79:21","text":" @dev See {IERC721Enumerable-_removeTokenFromOwnerEnumeration}."},"id":5060,"implemented":true,"kind":"function","modifiers":[],"name":"_removeTokenFromOwnerEnumeration","nameLocation":"5143:32:21","nodeType":"FunctionDefinition","parameters":{"id":5003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5000,"mutability":"mutable","name":"from","nameLocation":"5184:4:21","nodeType":"VariableDeclaration","scope":5060,"src":"5176:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4999,"name":"address","nodeType":"ElementaryTypeName","src":"5176:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5002,"mutability":"mutable","name":"tokenId","nameLocation":"5198:7:21","nodeType":"VariableDeclaration","scope":5060,"src":"5190:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5001,"name":"uint256","nodeType":"ElementaryTypeName","src":"5190:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5175:31:21"},"returnParameters":{"id":5004,"nodeType":"ParameterList","parameters":[],"src":"5215:0:21"},"scope":5061,"src":"5134:910:21","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":5062,"src":"1065:4981:21","usedErrors":[]}],"src":"309:5738:21"}},"contracts/mock/ERC20Mock.sol":{"id":22,"ast":{"absolutePath":"contracts/mock/ERC20Mock.sol","exportedSymbols":{"Context":[2273],"ERC20":[699],"ERC20Mock":[5095],"IERC20":[777],"IERC20Metadata":[802],"Ownable":[112]},"id":5096,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5063,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"33:23:22"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":5064,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5096,"sourceUnit":700,"src":"58:55:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":5065,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5096,"sourceUnit":113,"src":"114:52:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5066,"name":"ERC20","nameLocations":["190:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":699,"src":"190:5:22"},"id":5067,"nodeType":"InheritanceSpecifier","src":"190:5:22"},{"baseName":{"id":5068,"name":"Ownable","nameLocations":["197:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"197:7:22"},"id":5069,"nodeType":"InheritanceSpecifier","src":"197:7:22"}],"canonicalName":"ERC20Mock","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5095,"linearizedBaseContracts":[5095,112,699,802,777,2273],"name":"ERC20Mock","nameLocation":"177:9:22","nodeType":"ContractDefinition","nodes":[{"body":{"id":5078,"nodeType":"Block","src":"279:2:22","statements":[]},"id":5079,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4d79546f6b656e","id":5072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"239:9:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5","typeString":"literal_string \"MyToken\""},"value":"MyToken"},{"hexValue":"4d544b","id":5073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"250:5:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e","typeString":"literal_string \"MTK\""},"value":"MTK"}],"id":5074,"kind":"baseConstructorSpecifier","modifierName":{"id":5071,"name":"ERC20","nameLocations":["233:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":699,"src":"233:5:22"},"nodeType":"ModifierInvocation","src":"233:23:22"},{"arguments":[],"id":5076,"kind":"baseConstructorSpecifier","modifierName":{"id":5075,"name":"Ownable","nameLocations":["265:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"265:7:22"},"nodeType":"ModifierInvocation","src":"265:9:22"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5070,"nodeType":"ParameterList","parameters":[],"src":"222:2:22"},"returnParameters":{"id":5077,"nodeType":"ParameterList","parameters":[],"src":"279:0:22"},"scope":5095,"src":"211:70:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5093,"nodeType":"Block","src":"346:34:22","statements":[{"expression":{"arguments":[{"id":5089,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5081,"src":"362:2:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5090,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5083,"src":"366:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5088,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"356:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"356:17:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5092,"nodeType":"ExpressionStatement","src":"356:17:22"}]},"functionSelector":"40c10f19","id":5094,"implemented":true,"kind":"function","modifiers":[{"id":5086,"kind":"modifierInvocation","modifierName":{"id":5085,"name":"onlyOwner","nameLocations":["336:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"336:9:22"},"nodeType":"ModifierInvocation","src":"336:9:22"}],"name":"mint","nameLocation":"296:4:22","nodeType":"FunctionDefinition","parameters":{"id":5084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5081,"mutability":"mutable","name":"to","nameLocation":"309:2:22","nodeType":"VariableDeclaration","scope":5094,"src":"301:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5080,"name":"address","nodeType":"ElementaryTypeName","src":"301:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5083,"mutability":"mutable","name":"amount","nameLocation":"321:6:22","nodeType":"VariableDeclaration","scope":5094,"src":"313:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5082,"name":"uint256","nodeType":"ElementaryTypeName","src":"313:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"300:28:22"},"returnParameters":{"id":5087,"nodeType":"ParameterList","parameters":[],"src":"346:0:22"},"scope":5095,"src":"287:93:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":5096,"src":"168:214:22","usedErrors":[]}],"src":"33:349:22"}},"contracts/mock/NFTMock.sol":{"id":23,"ast":{"absolutePath":"contracts/mock/NFTMock.sol","exportedSymbols":{"Address":[2251],"Context":[2273],"ERC165":[2526],"ERC721":[1729],"IERC165":[2538],"IERC721":[1845],"IERC721Metadata":[1921],"IERC721Receiver":[1863],"Math":[3404],"NFTMock":[5126],"SignedMath":[3509],"Strings":[2502]},"id":5127,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5097,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"33:23:23"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":5098,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5127,"sourceUnit":1730,"src":"58:57:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5099,"name":"ERC721","nameLocations":["137:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"137:6:23"},"id":5100,"nodeType":"InheritanceSpecifier","src":"137:6:23"}],"canonicalName":"NFTMock","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5126,"linearizedBaseContracts":[5126,1729,1921,1845,2526,2538,2273],"name":"NFTMock","nameLocation":"126:7:23","nodeType":"ContractDefinition","nodes":[{"body":{"id":5111,"nodeType":"Block","src":"278:7:23","statements":[]},"id":5112,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":5107,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5102,"src":"262:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5108,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"269:7:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":5109,"kind":"baseConstructorSpecifier","modifierName":{"id":5106,"name":"ERC721","nameLocations":["255:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"255:6:23"},"nodeType":"ModifierInvocation","src":"255:22:23"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5102,"mutability":"mutable","name":"name_","nameLocation":"225:5:23","nodeType":"VariableDeclaration","scope":5112,"src":"211:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5101,"name":"string","nodeType":"ElementaryTypeName","src":"211:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5104,"mutability":"mutable","name":"symbol_","nameLocation":"246:7:23","nodeType":"VariableDeclaration","scope":5112,"src":"232:21:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5103,"name":"string","nodeType":"ElementaryTypeName","src":"232:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"210:44:23"},"returnParameters":{"id":5110,"nodeType":"ParameterList","parameters":[],"src":"278:0:23"},"scope":5126,"src":"199:86:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5124,"nodeType":"Block","src":"343:35:23","statements":[{"expression":{"arguments":[{"id":5120,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5114,"src":"359:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5121,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5116,"src":"363:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5119,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"353:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"353:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5123,"nodeType":"ExpressionStatement","src":"353:18:23"}]},"functionSelector":"40c10f19","id":5125,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"300:4:23","nodeType":"FunctionDefinition","parameters":{"id":5117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5114,"mutability":"mutable","name":"to","nameLocation":"313:2:23","nodeType":"VariableDeclaration","scope":5125,"src":"305:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5113,"name":"address","nodeType":"ElementaryTypeName","src":"305:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5116,"mutability":"mutable","name":"tokenId","nameLocation":"325:7:23","nodeType":"VariableDeclaration","scope":5125,"src":"317:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5115,"name":"uint256","nodeType":"ElementaryTypeName","src":"317:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"304:29:23"},"returnParameters":{"id":5118,"nodeType":"ParameterList","parameters":[],"src":"343:0:23"},"scope":5126,"src":"291:87:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5127,"src":"117:263:23","usedErrors":[]}],"src":"33:347:23"}}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","zk_version":"1.3.17"},"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":128,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":134,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":136,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":138,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":140,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ERC20.sol:ERC20\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[8]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tadd\t128, r0, r3\n\tst.1\t64, r3\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_8[0], r2, r4\n\tjump.le\t@.BB0_69\n\tsub.s!\t@CPI0_9[0], r2, r4\n\tjump.gt\t@.BB0_79\n\tsub.s!\t@CPI0_13[0], r2, r4\n\tjump.eq\t@.BB0_114\n\tsub.s!\t@CPI0_14[0], r2, r4\n\tjump.eq\t@.BB0_123\n\tsub.s!\t@CPI0_15[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r6\n\tadd.ne\tr5, r0, r6\n\tsub.s!\t31, r6, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_31\n\tst.1\t128, r6\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_133\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t160, r2\n\tsub!\tr6, r0, r1\n\tadd\t192, r0, r1\n\tadd.eq\t160, r0, r1\n\tjump\t@.BB0_131\n.BB0_1:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_1[0], r3, r2\n\tsub.s!\t@CPI0_2[0], r2, r2\n\tjump.gt\t@.BB0_6\n.BB0_4:\n\tadd\t@CPI0_33[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB0_5:\n\tst.1\t4, r1\n\tadd\t@CPI0_34[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_6:\n\tadd\t159, r3, r2\n\tand\t@CPI0_3[0], r2, r2\n\tst.1\t64, r2\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r4\n\tjump.eq\t@.BB0_155\n\tadd\tr0, r0, r5\n.BB0_8:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_8\n.BB0_155:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r2, r2\n\tadd\t128, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_10:\n\tsub.s!\t64, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r5\n\tsub.s!\t@CPI0_4[0], r5, r1\n\tjump.gt\t@.BB0_2\n\tadd\t128, r3, r1\n\tadd\t159, r5, r2\n\tsub!\tr2, r1, r2\n\tjump.ge\t@.BB0_2\n\tadd\t128, r5, r4\n\tld.1\tr4, r2\n\tsub.s!\t@CPI0_4[0], r2, r6\n\tjump.gt\t@.BB0_4\n\tadd\t63, r2, r6\n\tsub.s\t32, r0, r9\n\tand\tr6, r9, r6\n\tld.1\t64, r10\n\tadd\tr10, r6, r6\n\tsub!\tr6, r10, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_4[0], r6, r8\n\tjump.gt\t@.BB0_4\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r6\n\tst.1.inc\tr10, r2, r11\n\tadd\tr5, r2, r5\n\tadd\t160, r5, r5\n\tsub!\tr5, r1, r5\n\tjump.gt\t@.BB0_2\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_20\n\tadd\tr0, r0, r5\n.BB0_19:\n\tadd\t32, r5, r5\n\tadd\tr5, r10, r6\n\tadd\tr5, r4, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB0_19\n.BB0_20:\n\tadd\tr11, r2, r2\n\tst.1\tr2, r0\n\tld.1\t160, r4\n\tsub.s!\t@CPI0_4[0], r4, r2\n\tjump.gt\t@.BB0_2\n\tadd\t31, r4, r2\n\tadd\t@CPI0_5[0], r0, r5\n\tsub!\tr2, r3, r3\n\tadd\tr0, r0, r3\n\tadd.ge\tr5, r0, r3\n\tand\t@CPI0_5[0], r2, r2\n\tsub!\tr2, r0, r6\n\tadd.ge\tr0, r0, r5\n\tsub.s!\t@CPI0_5[0], r2, r2\n\tadd.ne\tr3, r0, r5\n\tsub!\tr5, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t128, r4, r3\n\tld.1\tr3, r2\n\tsub.s!\t@CPI0_4[0], r2, r5\n\tjump.gt\t@.BB0_4\n\tadd\t63, r2, r5\n\tand\tr5, r9, r5\n\tld.1\t64, r8\n\tadd\tr8, r5, r5\n\tsub!\tr5, r8, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI0_4[0], r5, r7\n\tjump.gt\t@.BB0_4\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r5\n\tst.1.inc\tr8, r2, r5\n\tadd\tr5, r0, stack-[8]\n\tadd\tr4, r2, r4\n\tadd\t160, r4, r4\n\tsub!\tr4, r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tr11, r0, stack-[4]\n\tadd\tr10, r0, stack-[7]\n\tadd\tr9, r0, stack-[5]\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB0_29\n\tadd\tr0, r0, r1\n.BB0_28:\n\tadd\t32, r1, r1\n\tadd\tr1, r8, r4\n\tadd\tr1, r3, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr1, r2, r4\n\tjump.lt\t@.BB0_28\n.BB0_29:\n\tadd\tstack-[8], r2, r1\n\tst.1\tr1, r0\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_4\n\tadd\tr8, r0, stack-[1]\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tadd\tr3, r0, stack-[2]\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_31\n\tadd\tstack-[2], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_36\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[2], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_36\n.BB0_37:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_37\n.BB0_36:\n\tadd\tstack-[6], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_46\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[7], r0, r6\n\tjump.eq\t@.BB0_2\n\tand!\tstack-[6], r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_43\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_42:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_42\n.BB0_43:\n\tsub.s!\tstack-[6], r3, r3\n\tjump.ge\t@.BB0_45\n\tadd\tstack-[6], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[7], r2, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_45:\n\tadd\tstack-[6], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n\tjump\t@.BB0_38\n.BB0_69:\n\tsub.s!\t@CPI0_16[0], r2, r4\n\tjump.le\t@.BB0_70\n\tsub.s!\t@CPI0_17[0], r2, r4\n\tjump.eq\t@.BB0_97\n\tsub.s!\t@CPI0_18[0], r2, r4\n\tjump.eq\t@.BB0_100\n\tsub.s!\t@CPI0_19[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t18, r0, r1\n\tjump\t@.BB0_113\n.BB0_79:\n\tsub.s!\t@CPI0_10[0], r2, r4\n\tjump.eq\t@.BB0_138\n\tsub.s!\t@CPI0_11[0], r2, r4\n\tjump.eq\t@.BB0_146\n\tsub.s!\t@CPI0_12[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_22[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI0_22[0], r3, r1\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r2\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[8]\n\tadd\tr0, r0, r1\n\tadd\tr3, r0, stack-[7]\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[8], r0, r2\n\tjump\t@.BB0_127\n.BB0_70:\n\tsub.s!\t@CPI0_20[0], r2, r4\n\tjump.eq\t@.BB0_82\n\tsub.s!\t@CPI0_21[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_22[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tjump\t@.BB0_96\n.BB0_114:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tsub.s!\t@CPI0_22[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\t36, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\tr2, r1, r3\n\tsub!\tr3, r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.eq\t@.BB0_121\n\tadd\t@CPI0_33[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tjump\t@.BB0_5\n.BB0_123:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_22[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n.BB0_127:\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tjump\t@.BB0_99\n.BB0_97:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n.BB0_99:\n\tsload\tr1, r1\n.BB0_113:\n\tst.1\t128, r1\n\tadd\t@CPI0_23[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_100:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t96, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_22[0], r3, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[8]\n\tsub.s!\t@CPI0_22[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t0, r3\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr3, r0, stack-[7]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[4]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub.s\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.eq\t@.BB0_108\n\tadd\tstack-[6], r0, r3\n\tsub!\tr1, r3, r2\n\tjump.ge\t@.BB0_110\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_35[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_28[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_36[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_138:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[8]\n\tsub.s!\t@CPI0_22[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_25[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[7], r0, r3\n\tsub!\tr1, r3, r2\n\tjump.ge\t@.BB0_145\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_26[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_27[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_28[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_29[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_146:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r3, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_22[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n.BB0_96:\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_82:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t3, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r6\n\tadd.ne\tr5, r0, r6\n\tsub.s!\t31, r6, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.eq\t@.BB0_84\n.BB0_31:\n\tadd\t@CPI0_33[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tjump\t@.BB0_5\n.BB0_84:\n\tst.1\t128, r6\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_87\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t160, r2\n\tsub!\tr6, r0, r1\n\tadd\t192, r0, r1\n\tadd.eq\t160, r0, r1\n\tjump\t@.BB0_85\n.BB0_133:\n\tst.1\t0, r3\n\tadd\t160, r0, r1\n\tsub!\tr6, r0, r2\n\tjump.eq\t@.BB0_137\n\tadd\t@CPI0_30[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_135:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r6, r5\n\tjump.lt\t@.BB0_135\n\tadd\t192, r3, r1\n.BB0_131:\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r1\n\tadd\t@CPI0_31[0], r1, r2\n\tsub.s!\t@CPI0_32[0], r2, r2\n\tjump.lt\t@.BB0_4\n.BB0_137:\n\tjump\t@.BB0_91\n.BB0_87:\n\tst.1\t0, r3\n\tadd\t160, r0, r1\n\tsub!\tr6, r0, r2\n\tjump.eq\t@.BB0_91\n\tadd\t@CPI0_37[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_89:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r6, r5\n\tjump.lt\t@.BB0_89\n\tadd\t192, r3, r1\n.BB0_85:\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r1\n\tadd\t@CPI0_31[0], r1, r2\n\tsub.s!\t@CPI0_32[0], r2, r2\n\tjump.lt\t@.BB0_4\n.BB0_91:\n\tadd\tr1, r0, stack-[8]\n\tst.1\t64, r1\n\tadd\t128, r0, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_121:\n\tadd\tstack-[6], r0, r1\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tstack-[7], r0, r2\n\tjump\t@.BB0_122\n.BB0_145:\n\tsub\tr1, r3, r3\n\tadd\tstack-[5], r0, r1\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tstack-[6], r0, r2\n\tjump\t@.BB0_122\n.BB0_110:\n\tsub\tr1, r3, r3\n\tadd\tr4, r0, r1\n\tadd\tstack-[4], r0, r2\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n.BB0_108:\n\tadd\tr4, r0, r1\n\tadd\tstack-[8], r0, r2\n\tadd\tstack-[6], r0, r3\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tstack-[5], r0, r2\n.BB0_122:\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_46:\n\tsub!\tstack-[6], r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_48\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n.BB0_48:\n\tadd\tstack-[6], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n.BB0_38:\n\tadd\tstack-[3], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[1], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_4\n\tadd\t4, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tadd\tr3, r0, stack-[4]\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_31\n\tadd\tstack-[4], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_54\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[7], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[4], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_54\n.BB0_55:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_55\n.BB0_54:\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_64\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[1], r0, r6\n\tjump.eq\t@.BB0_2\n\tand!\tstack-[7], r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_61\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_60:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_60\n.BB0_61:\n\tsub.s!\tstack-[7], r3, r3\n\tjump.ge\t@.BB0_63\n\tadd\tstack-[7], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[1], r2, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_63:\n\tadd\t1, r0, r1\n\tadd\tstack-[7], r0, r2\n\tshl.s\t1, r2, r2\n\tjump\t@.BB0_56\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_64:\n\tsub!\tstack-[7], r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_66\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r1\n.BB0_66:\n\tadd\tstack-[7], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r2\n\tshl.s\t1, r4, r1\n.BB0_56:\n\tor\tr2, r1, r1\n\tadd\tstack-[6], r0, r2\n\tsstore\tr2, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_7[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\nabi_encode_string:\n.func_begin1:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tadd\t64, r1, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\tr1, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end1:\n\nfun_transfer:\n.func_begin2:\n\tnop\tstack+=[4]\n\tadd\tr3, r0, stack-[4]\n\tand!\t@CPI2_0[0], r1, r1\n\tjump.eq\t@.BB2_1\n\tand!\t@CPI2_0[0], r2, stack-[2]\n\tjump.eq\t@.BB2_4\n\tadd\tr1, r0, stack-[3]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI2_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI2_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_6\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[1]\n\tsub.s!\tstack-[4], r2, r1\n\tjump.lt\t@.BB2_8\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI2_1[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI2_1[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_6\n\tadd\tstack-[1], r0, r3\n\tsub.s\tstack-[4], r3, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI2_1[0], r1, r2\n\tadd.ge\t@CPI2_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_6\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[4], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI2_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI2_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI2_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI2_4[0], r0, r4\n\tadd\tstack-[3], r0, r5\n\tadd\tstack-[2], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB2_6\n\tret\n.BB2_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI2_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI2_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tjump\t@.BB2_2\n.BB2_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI2_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI2_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tjump\t@.BB2_2\n.BB2_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI2_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI2_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n.BB2_2:\n\tst.1\tr2, r3\n\tadd\t@CPI2_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_1[0], r0, r2\n\tsub.s!\t@CPI2_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nfun_approve:\n.func_begin3:\n\tnop\tstack+=[3]\n\tand!\t@CPI3_0[0], r1, r1\n\tjump.eq\t@.BB3_1\n\tadd\tr3, r0, stack-[2]\n\tand!\t@CPI3_0[0], r2, stack-[3]\n\tjump.eq\t@.BB3_4\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_1[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_1[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[3], r0, r3\n\tjump.eq\t@.BB3_6\n\tld\tr1, r1\n\tst.1\t0, r3\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_1[0], r1, r2\n\tadd.ge\t@CPI3_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_6\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI3_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI3_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI3_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI3_4[0], r0, r4\n\tadd\tstack-[1], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB3_6\n\tret\n.BB3_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tjump\t@.BB3_2\n.BB3_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n.BB3_2:\n\tst.1\tr2, r3\n\tadd\t@CPI3_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_1[0], r0, r2\n\tsub.s!\t@CPI3_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\n__sha3:\n.func_begin4:\n\tadd\t@CPI4_0[0], r0, r3\n\tsub.s!\t@CPI4_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI4_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI4_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_2\n\tld\tr1, r1\n\tret\n.BB4_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\n__farcall:\n.func_begin5:\n.tmp0:\n\tfar_call\tr1, r2, @.BB5_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB5_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end5:\n\n__staticcall:\n.func_begin6:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB6_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB6_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end6:\n\n\t.data\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI2_1:\nCPI3_1:\nCPI4_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -18446744073709551457\nCPI0_2:\n\t.cell -18446744073709551489\nCPI0_3:\n\t.cell 8589934560\nCPI0_4:\n\t.cell 18446744073709551615\nCPI0_5:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_6:\nCPI2_3:\nCPI3_3:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_7:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_8:\n\t.cell 961581904\nCPI0_9:\n\t.cell 2757214934\nCPI0_10:\n\t.cell 2757214935\nCPI0_11:\n\t.cell 2835717307\nCPI0_12:\n\t.cell 3714247998\nCPI0_13:\n\t.cell 961581905\nCPI0_14:\n\t.cell 1889567281\nCPI0_15:\n\t.cell 2514000705\nCPI0_16:\n\t.cell 404098524\nCPI0_17:\n\t.cell 404098525\nCPI0_18:\n\t.cell 599290589\nCPI0_19:\n\t.cell 826074471\nCPI0_20:\n\t.cell 117300739\nCPI0_21:\n\t.cell 157198259\nCPI0_22:\nCPI2_0:\nCPI3_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_23:\n\t.cell 2535301202817642044428229017600\nCPI0_24:\n\t.cell 2535301200456458802993406410752\nCPI0_25:\nCPI2_2:\nCPI3_2:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_26:\n\t.cell 14690266658072097593480850647027335513285713462661904985951319567533531463680\nCPI0_27:\n\t.cell 31354931781638678506476475496475743842680577777870365728514456330491174612855\nCPI0_28:\nCPI2_7:\nCPI3_7:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_29:\nCPI2_8:\nCPI3_8:\n\t.cell 10458117451882892562347801444352\nCPI0_30:\n\t.cell -53278079350709166316280423202849322519190186591071851114874353210178472783461\nCPI0_31:\n\t.cell -18446744073709551616\nCPI0_32:\n\t.cell -18446744073709551488\nCPI0_33:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_34:\n\t.cell 2852213850513516153367582212096\nCPI0_35:\n\t.cell 31354931781638678538084197150757782427756587561754988975511141185730285404160\nCPI0_36:\n\t.cell 7922816251426433759354395033600\nCPI0_37:\n\t.cell -27889059366240281169193357100633332908378892778709981755071813198463099602853\nCPI2_4:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI2_5:\n\t.cell 44065838241030143116324720188876985940908656145555552347773292252211112312832\nCPI2_6:\n\t.cell 31354931781638678607228669297131712859100820671745083778533502622993977909346\nCPI2_9:\n\t.cell 45887578820189300338443374388718498632482616163288499555830078344056365121536\nCPI2_10:\n\t.cell 31354931781638678607228669297131712859126084785867252355217498662940140921970\nCPI2_11:\n\t.cell 45433405612597180762055095701412804886438245671210399661410036396145969725440\nCPI2_12:\n\t.cell 31354931781638678607228669297131712859107492772550336241160036866987736981860\nCPI3_4:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI3_5:\n\t.cell 52219164999525148860834357634456956735281286572158918307284071279203377479680\nCPI3_6:\n\t.cell 31354931781638678487916134672869638488806705378895508030211234510262059168357\nCPI3_9:\n\t.cell 51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI3_10:\n\t.cell 31354931781638678487916134672869638484047149969764982831501014746446650500196\nCPI4_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\n","bytecode":{"object":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":"/// @use-src 1:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 2:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 3:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 10:\"@openzeppelin/contracts/utils/Context.sol\"\nobject \"ERC20_699\" {\n    code {\n        {\n            /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"ERC20_699\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let offset := mload(memoryDataOffset)\n            let _2 := sub(shl(64, 1), 1)\n            if gt(offset, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let value0 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n            let _3 := 32\n            let offset_1 := mload(add(memoryDataOffset, _3))\n            if gt(offset_1, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let value1 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1)\n            let newLen := mload(value0)\n            if gt(newLen, _2)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n            }\n            /// @src 1:2046:2059  \"_name = name_\"\n            let _4 := 0x03\n            /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let _5 := sload(/** @src 1:2046:2059  \"_name = name_\" */ _4)\n            /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let length := /** @src -1:-1:-1 */ 0\n            /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let _6 := 1\n            length := shr(_6, _5)\n            let outOfPlaceEncoding := and(_5, _6)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, _3))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n            }\n            let _7 := 31\n            if gt(length, _7)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:2046:2059  \"_name = name_\" */ _4)\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _3)\n                let deleteStart := add(data, shr(5, add(newLen, _7)))\n                if lt(newLen, _3) { deleteStart := data }\n                let _8 := add(data, shr(5, add(length, _7)))\n                let start := deleteStart\n                for { } lt(start, _8) { start := add(start, _6) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let srcOffset := /** @src -1:-1:-1 */ 0\n            /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            srcOffset := _3\n            switch gt(newLen, _7)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:2046:2059  \"_name = name_\" */ _4)\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _3)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                for { } lt(i, loopEnd) { i := add(i, _3) }\n                {\n                    sstore(dstPtr, mload(add(value0, srcOffset)))\n                    dstPtr := add(dstPtr, _6)\n                    srcOffset := add(srcOffset, _3)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(value0, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 1:2046:2059  \"_name = name_\" */ _4, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ newLen), 248), not(0)))))\n                }\n                sstore(/** @src 1:2046:2059  \"_name = name_\" */ _4, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ add(shl(_6, newLen), _6))\n            }\n            default {\n                let value := /** @src -1:-1:-1 */ 0\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                if newLen\n                {\n                    value := mload(add(value0, srcOffset))\n                }\n                sstore(/** @src 1:2046:2059  \"_name = name_\" */ _4, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ or(and(value, not(shr(shl(/** @src 1:2046:2059  \"_name = name_\" */ _4, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ newLen), not(0)))), shl(_6, newLen)))\n            }\n            let newLen_1 := mload(value1)\n            if gt(newLen_1, _2)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 1:2069:2086  \"_symbol = symbol_\" */ 0x04, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n            }\n            /// @src 1:2069:2086  \"_symbol = symbol_\"\n            let _9 := 0x04\n            /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let _10 := sload(/** @src 1:2069:2086  \"_symbol = symbol_\" */ _9)\n            /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let length_1 := /** @src -1:-1:-1 */ 0\n            /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            length_1 := shr(_6, _10)\n            let outOfPlaceEncoding_1 := and(_10, _6)\n            if iszero(outOfPlaceEncoding_1)\n            {\n                length_1 := and(length_1, 0x7f)\n            }\n            if eq(outOfPlaceEncoding_1, lt(length_1, _3))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 1:2069:2086  \"_symbol = symbol_\" */ _9, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n            }\n            if gt(length_1, _7)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:2069:2086  \"_symbol = symbol_\" */ _9)\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _3)\n                let deleteStart_1 := add(data_1, shr(5, add(newLen_1, _7)))\n                if lt(newLen_1, _3) { deleteStart_1 := data_1 }\n                let _11 := add(data_1, shr(5, add(length_1, _7)))\n                let start_1 := deleteStart_1\n                for { } lt(start_1, _11) { start_1 := add(start_1, _6) }\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let srcOffset_1 := /** @src -1:-1:-1 */ 0\n            /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            srcOffset_1 := _3\n            switch gt(newLen_1, _7)\n            case 1 {\n                let loopEnd_1 := and(newLen_1, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:2069:2086  \"_symbol = symbol_\" */ _9)\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _3)\n                let i_1 := /** @src -1:-1:-1 */ 0\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _3) }\n                {\n                    sstore(dstPtr_1, mload(add(value1, srcOffset_1)))\n                    dstPtr_1 := add(dstPtr_1, _6)\n                    srcOffset_1 := add(srcOffset_1, _3)\n                }\n                if lt(loopEnd_1, newLen_1)\n                {\n                    let lastValue_1 := mload(add(value1, srcOffset_1))\n                    sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(/** @src 1:2046:2059  \"_name = name_\" */ _4, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ newLen_1), 248), not(0)))))\n                }\n                sstore(/** @src 1:2069:2086  \"_symbol = symbol_\" */ _9, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ add(shl(_6, newLen_1), _6))\n            }\n            default {\n                let value_1 := /** @src -1:-1:-1 */ 0\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                if newLen_1\n                {\n                    value_1 := mload(add(value1, srcOffset_1))\n                }\n                sstore(/** @src 1:2069:2086  \"_symbol = symbol_\" */ _9, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ or(and(value_1, not(shr(shl(/** @src 1:2046:2059  \"_name = name_\" */ _4, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ newLen_1), not(0)))), shl(_6, newLen_1)))\n            }\n            let _12 := mload(64)\n            let _13 := datasize(\"ERC20_699_deployed\")\n            codecopy(_12, dataoffset(\"ERC20_699_deployed\"), _13)\n            return(_12, _13)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_string_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n            let _1 := mload(offset)\n            if gt(_1, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x24)\n            }\n            let _2 := 0x20\n            let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n            mstore(array_1, _1)\n            if gt(add(add(offset, _1), _2), end)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            for { } lt(i, _1) { i := add(i, _2) }\n            {\n                mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n            }\n            mstore(add(add(array_1, _1), _2), /** @src -1:-1:-1 */ 0)\n            /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n            array := array_1\n        }\n    }\n    /// @use-src 1:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 10:\"@openzeppelin/contracts/utils/Context.sol\"\n    object \"ERC20_699_deployed\" {\n        code {\n            {\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    switch shr(224, calldataload(_4))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let ret := _4\n                        let slotValue := sload(/** @src 1:2244:2249  \"_name\" */ 0x03)\n                        /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        let length := _4\n                        let _5 := 1\n                        length := shr(_5, slotValue)\n                        let outOfPlaceEncoding := and(slotValue, _5)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        let _6 := 32\n                        if eq(outOfPlaceEncoding, lt(length, _6))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x22)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_1, length)\n                        switch outOfPlaceEncoding\n                        case 0 {\n                            mstore(add(_1, _6), and(slotValue, not(255)))\n                            ret := add(add(_1, shl(5, iszero(iszero(length)))), _6)\n                        }\n                        case 1 {\n                            mstore(_4, /** @src 1:2244:2249  \"_name\" */ 0x03)\n                            /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                            let dataPos := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                            let i := _4\n                            for { } lt(i, length) { i := add(i, _6) }\n                            {\n                                mstore(add(add(_1, i), _6), sload(dataPos))\n                                dataPos := add(dataPos, _5)\n                            }\n                            ret := add(add(_1, i), _6)\n                        }\n                        let newFreePtr := add(_1, and(add(sub(ret, _1), 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, _1))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_2, newFreePtr)\n                        return(newFreePtr, sub(abi_encode_string(newFreePtr, _1), newFreePtr))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0 := abi_decode_address()\n                        /// @src 1:4606:4612  \"amount\"\n                        fun_approve(/** @src 10:719:729  \"msg.sender\" */ caller(), /** @src 1:4606:4612  \"amount\" */ value0, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ calldataload(36))\n                        let memPos := mload(_2)\n                        mstore(memPos, 1)\n                        return(memPos, 32)\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let _7 := sload(/** @src 1:3342:3354  \"_totalSupply\" */ 0x02)\n                        /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, _7)\n                        return(memPos_1, 32)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                        let value0_1 := abi_decode_address()\n                        let value1 := abi_decode_address_4782()\n                        let value := calldataload(68)\n                        mstore(_4, and(value0_1, sub(shl(160, 1), 1)))\n                        mstore(32, 1)\n                        let _8 := keccak256(_4, _2)\n                        mstore(_4, /** @src 10:719:729  \"msg.sender\" */ caller())\n                        /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        mstore(32, _8)\n                        let _9 := sload(keccak256(_4, _2))\n                        /// @src 1:11240:11483  \"if (currentAllowance != type(uint256).max) {...\"\n                        if /** @src 1:11244:11281  \"currentAllowance != type(uint256).max\" */ iszero(eq(_9, /** @src 1:11264:11281  \"type(uint256).max\" */ not(0)))\n                        /// @src 1:11240:11483  \"if (currentAllowance != type(uint256).max) {...\"\n                        {\n                            /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                            if /** @src 1:11305:11331  \"currentAllowance >= amount\" */ lt(_9, value)\n                            /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                            {\n                                let memPtr := mload(_2)\n                                mstore(memPtr, shl(229, 4594637))\n                                mstore(add(memPtr, _3), 32)\n                                mstore(add(memPtr, 36), 29)\n                                mstore(add(memPtr, 68), \"ERC20: insufficient allowance\")\n                                revert(memPtr, 100)\n                            }\n                            /// @src 1:11432:11457  \"currentAllowance - amount\"\n                            fun_approve(value0_1, /** @src 10:719:729  \"msg.sender\" */ caller(), /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ sub(/** @src 1:11432:11457  \"currentAllowance - amount\" */ _9, value))\n                        }\n                        /// @src 1:5424:5430  \"amount\"\n                        fun_transfer(value0_1, value1, value)\n                        /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, 1)\n                        return(memPos_2, 32)\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPos_3 := mload(_2)\n                        mstore(memPos_3, /** @src 1:3186:3188  \"18\" */ 0x12)\n                        /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        return(memPos_3, 32)\n                    }\n                    case 0x39509351 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_2 := abi_decode_address()\n                        mstore(_4, /** @src 10:719:729  \"msg.sender\" */ caller())\n                        /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        mstore(32, 1)\n                        let _10 := keccak256(_4, _2)\n                        mstore(_4, and(value0_2, sub(shl(160, 1), 1)))\n                        mstore(32, _10)\n                        let _11 := sload(keccak256(_4, _2))\n                        let sum := add(_11, calldataload(36))\n                        if gt(_11, sum)\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x11)\n                            revert(_4, 36)\n                        }\n                        /// @src 1:6021:6059  \"allowance(owner, spender) + addedValue\"\n                        fun_approve(/** @src 10:719:729  \"msg.sender\" */ caller(), /** @src 1:6021:6059  \"allowance(owner, spender) + addedValue\" */ value0_2, sum)\n                        /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        let memPos_4 := mload(_2)\n                        mstore(memPos_4, 1)\n                        return(memPos_4, 32)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        mstore(_4, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, _4)\n                        let _12 := sload(keccak256(_4, _2))\n                        let memPos_5 := mload(_2)\n                        mstore(memPos_5, _12)\n                        return(memPos_5, 32)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPtr_1 := mload(_2)\n                        let ret_1 := _4\n                        let slotValue_1 := sload(_3)\n                        let length_1 := _4\n                        let _13 := 1\n                        length_1 := shr(_13, slotValue_1)\n                        let outOfPlaceEncoding_1 := and(slotValue_1, _13)\n                        if iszero(outOfPlaceEncoding_1)\n                        {\n                            length_1 := and(length_1, 0x7f)\n                        }\n                        let _14 := 32\n                        if eq(outOfPlaceEncoding_1, lt(length_1, _14))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x22)\n                            revert(_4, 0x24)\n                        }\n                        mstore(memPtr_1, length_1)\n                        switch outOfPlaceEncoding_1\n                        case 0 {\n                            mstore(add(memPtr_1, _14), and(slotValue_1, not(255)))\n                            ret_1 := add(add(memPtr_1, shl(5, iszero(iszero(length_1)))), _14)\n                        }\n                        case 1 {\n                            mstore(_4, _3)\n                            let dataPos_1 := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                            let i_1 := _4\n                            for { } lt(i_1, length_1) { i_1 := add(i_1, _14) }\n                            {\n                                mstore(add(add(memPtr_1, i_1), _14), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, _13)\n                            }\n                            ret_1 := add(add(memPtr_1, i_1), _14)\n                        }\n                        let newFreePtr_1 := add(memPtr_1, and(add(sub(ret_1, memPtr_1), 31), not(31)))\n                        if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr_1))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_2, newFreePtr_1)\n                        return(newFreePtr_1, sub(abi_encode_string(newFreePtr_1, memPtr_1), newFreePtr_1))\n                    }\n                    case 0xa457c2d7 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_3 := abi_decode_address()\n                        let value_1 := calldataload(36)\n                        mstore(_4, /** @src 10:719:729  \"msg.sender\" */ caller())\n                        /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        mstore(32, 1)\n                        let _15 := keccak256(_4, _2)\n                        mstore(_4, and(value0_3, sub(shl(160, 1), 1)))\n                        mstore(32, _15)\n                        let _16 := sload(keccak256(_4, _2))\n                        if /** @src 1:6792:6827  \"currentAllowance >= subtractedValue\" */ lt(_16, value_1)\n                        /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        {\n                            let memPtr_2 := mload(_2)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, _3), 32)\n                            mstore(add(memPtr_2, 36), 37)\n                            mstore(add(memPtr_2, 68), \"ERC20: decreased allowance below\")\n                            mstore(add(memPtr_2, 100), \" zero\")\n                            revert(memPtr_2, 132)\n                        }\n                        /// @src 1:6928:6962  \"currentAllowance - subtractedValue\"\n                        fun_approve(/** @src 10:719:729  \"msg.sender\" */ caller(), /** @src 1:6928:6962  \"currentAllowance - subtractedValue\" */ value0_3, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ sub(/** @src 1:6928:6962  \"currentAllowance - subtractedValue\" */ _16, value_1))\n                        /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        let memPos_6 := mload(_2)\n                        mstore(memPos_6, 1)\n                        return(memPos_6, 32)\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_4 := abi_decode_address()\n                        /// @src 1:3894:3900  \"amount\"\n                        fun_transfer(/** @src 10:719:729  \"msg.sender\" */ caller(), /** @src 1:3894:3900  \"amount\" */ value0_4, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ calldataload(36))\n                        let memPos_7 := mload(_2)\n                        mstore(memPos_7, 1)\n                        return(memPos_7, 32)\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_5 := abi_decode_address()\n                        let value1_1 := abi_decode_address_4782()\n                        let _17 := sub(shl(160, 1), 1)\n                        mstore(_4, and(value0_5, _17))\n                        mstore(32, /** @src 1:4102:4113  \"_allowances\" */ 0x01)\n                        /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                        let _18 := keccak256(_4, _2)\n                        mstore(_4, and(value1_1, _17))\n                        mstore(32, _18)\n                        let _19 := sload(keccak256(_4, _2))\n                        let memPos_8 := mload(_2)\n                        mstore(memPos_8, _19)\n                        return(memPos_8, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                let _1 := 32\n                mstore(headStart, _1)\n                let length := mload(value0)\n                mstore(add(headStart, _1), length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                }\n                mstore(add(add(headStart, length), 64), 0)\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_4782() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            /// @ast-id 459 @src 1:7456:8244  \"function _transfer(address from, address to, uint256 amount) internal virtual {...\"\n            function fun_transfer(var_from, var_to, var_amount)\n            {\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 1:7552:7570  \"from != address(0)\" */ var_from, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1)\n                if /** @src 1:7552:7570  \"from != address(0)\" */ iszero(/** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: transfer from the zero ad\")\n                    mstore(add(memPtr, 100), \"dress\")\n                    revert(memPtr, 132)\n                }\n                let _3 := and(/** @src 1:7630:7646  \"to != address(0)\" */ var_to, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1)\n                if /** @src 1:7630:7646  \"to != address(0)\" */ iszero(/** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _3)\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 35)\n                    mstore(add(memPtr_1, 68), \"ERC20: transfer to the zero addr\")\n                    mstore(add(memPtr_1, 100), \"ess\")\n                    revert(memPtr_1, 132)\n                }\n                /// @src 1:7568:7569  \"0\"\n                let _4 := 0x00\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src 1:7568:7569  \"0\" */ _4, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _2)\n                mstore(0x20, /** @src 1:7568:7569  \"0\" */ _4)\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _5 := sload(keccak256(/** @src 1:7568:7569  \"0\" */ _4, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40))\n                if /** @src 1:7801:7822  \"fromBalance >= amount\" */ lt(_5, var_amount)\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                {\n                    let memPtr_2 := mload(0x40)\n                    mstore(memPtr_2, shl(229, 4594637))\n                    mstore(add(memPtr_2, 4), 0x20)\n                    mstore(add(memPtr_2, 36), 38)\n                    mstore(add(memPtr_2, 68), \"ERC20: transfer amount exceeds b\")\n                    mstore(add(memPtr_2, 100), \"alance\")\n                    revert(memPtr_2, 132)\n                }\n                mstore(/** @src 1:7568:7569  \"0\" */ _4, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _2)\n                mstore(0x20, /** @src 1:7568:7569  \"0\" */ _4)\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                sstore(keccak256(/** @src 1:7568:7569  \"0\" */ _4, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40), sub(/** @src 1:7917:7937  \"fromBalance - amount\" */ _5, var_amount))\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                mstore(/** @src 1:7568:7569  \"0\" */ _4, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _3)\n                let dataSlot := keccak256(/** @src 1:7568:7569  \"0\" */ _4, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40)\n                sstore(dataSlot, add(sload(/** @src 1:8114:8137  \"_balances[to] += amount\" */ dataSlot), /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ var_amount))\n                /// @src 1:8163:8189  \"Transfer(from, to, amount)\"\n                let _6 := /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ mload(0x40)\n                mstore(_6, var_amount)\n                /// @src 1:8163:8189  \"Transfer(from, to, amount)\"\n                log3(_6, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x20, /** @src 1:8163:8189  \"Transfer(from, to, amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _3)\n            }\n            /// @ast-id 633 @src 1:10457:10797  \"function _approve(address owner, address spender, uint256 amount) internal virtual {...\"\n            function fun_approve(var_owner, var_spender, var_amount)\n            {\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 1:10558:10577  \"owner != address(0)\" */ var_owner, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1)\n                if /** @src 1:10558:10577  \"owner != address(0)\" */ iszero(/** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC20: approve from the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n                let _3 := and(/** @src 1:10636:10657  \"spender != address(0)\" */ var_spender, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _1)\n                if /** @src 1:10636:10657  \"spender != address(0)\" */ iszero(/** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _3)\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 34)\n                    mstore(add(memPtr_1, 68), \"ERC20: approve to the zero addre\")\n                    mstore(add(memPtr_1, 100), \"ss\")\n                    revert(memPtr_1, 132)\n                }\n                mstore(/** @src 1:10575:10576  \"0\" */ 0x00, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _2)\n                mstore(0x20, /** @src 1:10707:10718  \"_allowances\" */ 0x01)\n                /// @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\"\n                let _4 := keccak256(/** @src 1:10575:10576  \"0\" */ 0x00, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40)\n                mstore(/** @src 1:10575:10576  \"0\" */ 0x00, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ _3)\n                mstore(0x20, _4)\n                sstore(keccak256(/** @src 1:10575:10576  \"0\" */ 0x00, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x40), var_amount)\n                /// @src 1:10758:10790  \"Approval(owner, spender, amount)\"\n                let _5 := /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ mload(0x40)\n                mstore(_5, var_amount)\n                /// @src 1:10758:10790  \"Approval(owner, spender, amount)\"\n                log3(_5, /** @src 1:1532:12844  \"contract ERC20 is Context, IERC20, IERC20Metadata {...\" */ 0x20, /** @src 1:10758:10790  \"Approval(owner, spender, amount)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, _2, _3)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220cec3be5b0ffdef8a194cb3bdb35210f58b9fb50bcc36013b8a16f5e01453aab364736f6c63430008110033\"\n    }\n}\n","hash":"0100014da31fa1ef94c2d42a3b790db5bf3c0393c1fd005f2dd5660f458be792","factoryDependencies":{}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}","devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}","devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","zk_version":"1.3.17"},"devdoc":{"details":"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"constructor":{"details":"Initializes the contract by setting a `name` and a `symbol` to the token collection."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":828,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":830,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":834,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":838,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":842,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":848,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ERC721.sol:ERC721\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[7]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tadd\t128, r0, r3\n\tst.1\t64, r3\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r4, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_8[0], r2, r3\n\tjump.le\t@.BB0_69\n\tsub.s!\t@CPI0_9[0], r2, r3\n\tjump.le\t@.BB0_77\n\tsub.s!\t@CPI0_10[0], r2, r3\n\tjump.gt\t@.BB0_83\n\tsub.s!\t@CPI0_13[0], r2, r3\n\tjump.eq\t@.BB0_152\n\tsub.s!\t@CPI0_14[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t128, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r5\n\tsub.s!\t@CPI0_25[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_25[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t100, r1, r3\n\tld\tr3, r6\n\tsub.s!\t@CPI0_4[0], r6, r3\n\tjump.gt\t@.BB0_2\n\tadd\t35, r6, r3\n\tadd\t@CPI0_5[0], r0, r7\n\tsub!\tr3, r4, r8\n\tadd\tr0, r0, r8\n\tadd.ge\tr7, r0, r8\n\tand\t@CPI0_5[0], r3, r3\n\tsub!\tr3, r0, r9\n\tadd.ge\tr0, r0, r7\n\tsub.s!\t@CPI0_5[0], r3, r3\n\tadd.ne\tr8, r0, r7\n\tsub!\tr7, r0, r3\n\tjump.ne\t@.BB0_2\n\tadd\t4, r6, r7\n\tptr.add\tr1, r7, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_4[0], r3, r8\n\tjump.gt\t@.BB0_4\n\tadd\t191, r3, r8\n\tsub.s\t32, r0, r9\n\tand\tr8, r9, r8\n\tsub.s!\t@CPI0_4[0], r8, r9\n\tjump.gt\t@.BB0_4\n\tst.1\t64, r8\n\tst.1\t128, r3\n\tadd\tr6, r3, r6\n\tadd\t36, r6, r6\n\tsub!\tr6, r4, r4\n\tjump.gt\t@.BB0_2\n\tadd\t32, r7, r4\n\tptr.add\tr1, r4, r4\n\tand\t31, r3, r6\n\tshr.s!\t5, r3, r7\n\tjump.eq\t@.BB0_184\n\tadd\tr0, r0, r8\n.BB0_172:\n\tshl.s\t5, r8, r9\n\tptr.add\tr4, r9, r10\n\tld\tr10, r10\n\tadd\t160, r9, r9\n\tst.1\tr9, r10\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB0_172\n.BB0_184:\n\tsub!\tr6, r0, r8\n\tjump.eq\t@.BB0_174\n\tshl.s\t5, r7, r7\n\tptr.add\tr4, r7, r4\n\tshl.s\t3, r6, r6\n\tadd\t160, r7, r7\n\tld.1\tr7, r8\n\tshl\tr8, r6, r8\n\tshr\tr8, r6, r8\n\tld\tr4, r4\n\tsub\t256, r6, r6\n\tshr\tr4, r6, r4\n\tshl\tr4, r6, r4\n\tor\tr4, r8, r4\n\tst.1\tr7, r4\n.BB0_174:\n\tadd\t160, r3, r3\n\tst.1\tr3, r0\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r3\n\tjump\t@.BB0_175\n.BB0_1:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_1[0], r4, r2\n\tsub.s!\t@CPI0_2[0], r2, r2\n\tjump.gt\t@.BB0_6\n.BB0_4:\n\tadd\t@CPI0_27[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB0_5:\n\tst.1\t4, r1\n\tadd\t@CPI0_28[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_6:\n\tadd\t159, r4, r2\n\tand\t@CPI0_3[0], r2, r2\n\tst.1\t64, r2\n\tand\t31, r4, r2\n\tshr.s!\t5, r4, r3\n\tjump.eq\t@.BB0_185\n\tadd\tr0, r0, r5\n.BB0_8:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_8\n.BB0_185:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tshl.s\t3, r2, r2\n\tadd\t128, r3, r3\n\tld.1\tr3, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB0_10:\n\tsub.s!\t64, r4, r1\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r5\n\tsub.s!\t@CPI0_4[0], r5, r1\n\tjump.gt\t@.BB0_2\n\tadd\t128, r4, r1\n\tadd\t159, r5, r2\n\tsub!\tr2, r1, r2\n\tjump.ge\t@.BB0_2\n\tadd\t128, r5, r3\n\tld.1\tr3, r2\n\tsub.s!\t@CPI0_4[0], r2, r6\n\tjump.gt\t@.BB0_4\n\tadd\t63, r2, r6\n\tsub.s\t32, r0, r9\n\tand\tr6, r9, r6\n\tld.1\t64, r10\n\tadd\tr10, r6, r6\n\tsub!\tr6, r10, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_4[0], r6, r8\n\tjump.gt\t@.BB0_4\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r6\n\tst.1.inc\tr10, r2, r11\n\tadd\tr5, r2, r5\n\tadd\t160, r5, r5\n\tsub!\tr5, r1, r5\n\tjump.gt\t@.BB0_2\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_20\n\tadd\tr0, r0, r5\n.BB0_19:\n\tadd\t32, r5, r5\n\tadd\tr5, r10, r6\n\tadd\tr5, r3, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB0_19\n.BB0_20:\n\tadd\tr11, r2, r2\n\tst.1\tr2, r0\n\tld.1\t160, r5\n\tsub.s!\t@CPI0_4[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tadd\t31, r5, r2\n\tadd\t@CPI0_5[0], r0, r3\n\tsub!\tr2, r4, r4\n\tadd\tr0, r0, r4\n\tadd.ge\tr3, r0, r4\n\tand\t@CPI0_5[0], r2, r2\n\tsub!\tr2, r0, r6\n\tadd.ge\tr0, r0, r3\n\tsub.s!\t@CPI0_5[0], r2, r2\n\tadd.ne\tr4, r0, r3\n\tsub!\tr3, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t128, r5, r3\n\tld.1\tr3, r2\n\tsub.s!\t@CPI0_4[0], r2, r4\n\tjump.gt\t@.BB0_4\n\tadd\t63, r2, r4\n\tand\tr4, r9, r4\n\tld.1\t64, r8\n\tadd\tr8, r4, r4\n\tsub!\tr4, r8, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI0_4[0], r4, r7\n\tjump.gt\t@.BB0_4\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r4\n\tst.1.inc\tr8, r2, r4\n\tadd\tr4, r0, stack-[7]\n\tadd\tr5, r2, r4\n\tadd\t160, r4, r4\n\tsub!\tr4, r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tr11, r0, stack-[3]\n\tadd\tr10, r0, stack-[6]\n\tadd\tr9, r0, stack-[4]\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB0_29\n\tadd\tr0, r0, r1\n.BB0_28:\n\tadd\t32, r1, r1\n\tadd\tr1, r8, r4\n\tadd\tr1, r3, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr1, r2, r4\n\tjump.lt\t@.BB0_28\n.BB0_29:\n\tadd\tstack-[7], r2, r1\n\tst.1\tr1, r0\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_4\n\tadd\tr8, r0, stack-[1]\n\tsload\tr0, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tadd\tr3, r0, stack-[2]\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_31\n\tadd\tstack-[2], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_36\n\tst.1\t0, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[5], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[2], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_36\n.BB0_37:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_37\n.BB0_36:\n\tadd\tstack-[5], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_46\n\tst.1\t0, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[4], r0, r2\n\tadd\tstack-[6], r0, r6\n\tjump.eq\t@.BB0_2\n\tand!\tstack-[5], r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_43\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_42:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_42\n.BB0_43:\n\tsub.s!\tstack-[5], r3, r3\n\tjump.ge\t@.BB0_45\n\tadd\tstack-[5], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[6], r2, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_45:\n\tadd\tstack-[5], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n\tjump\t@.BB0_38\n.BB0_69:\n\tsub.s!\t@CPI0_18[0], r2, r3\n\tjump.gt\t@.BB0_73\n\tsub.s!\t@CPI0_22[0], r2, r3\n\tjump.eq\t@.BB0_85\n\tsub.s!\t@CPI0_23[0], r2, r3\n\tjump.eq\t@.BB0_93\n\tsub.s!\t@CPI0_24[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_getApproved, @DEFAULT_UNWIND\n\tjump\t@.BB0_106\n.BB0_77:\n\tsub.s!\t@CPI0_15[0], r2, r3\n\tjump.eq\t@.BB0_134\n\tsub.s!\t@CPI0_16[0], r2, r3\n\tjump.eq\t@.BB0_137\n\tsub.s!\t@CPI0_17[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r1\n\tadd.ne\tr5, r0, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_31\n\tst.1\t128, r1\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_148\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t160, r2\n\tsub!\tr1, r0, r1\n\tadd\t192, r0, r2\n\tadd.eq\t160, r0, r2\n\tjump\t@.BB0_146\n.BB0_73:\n\tsub.s!\t@CPI0_19[0], r2, r3\n\tjump.eq\t@.BB0_107\n\tsub.s!\t@CPI0_20[0], r2, r3\n\tjump.eq\t@.BB0_127\n\tsub.s!\t@CPI0_21[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t96, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r5\n\tsub.s!\t@CPI0_25[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_25[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r3\n\tadd\t160, r0, r1\n\tst.1\t64, r1\n\tst.1\t128, r0\n.BB0_175:\n\tadd\t128, r0, r4\n\tadd\tr5, r0, r1\n\tnear_call\tr0, @fun_safeTransferFrom, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_83:\n\tsub.s!\t@CPI0_11[0], r2, r3\n\tjump.eq\t@.BB0_176\n\tsub.s!\t@CPI0_12[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_25[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI0_25[0], r3, r1\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r2\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[7]\n\tadd\tr0, r0, r1\n\tadd\tr3, r0, stack-[6]\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tjump\t@.BB0_92\n.BB0_152:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_25[0], r3, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r4\n\tsub!\tr4, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tsub!\tr4, r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.caller\tr2\n\tsub!\tr2, r3, r1\n\tjump.ne\t@.BB0_158\n\tadd\t@CPI0_31[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t25, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_32[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_33[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_85:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_50[0], r1, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r2\n\tsub.s!\t@CPI0_51[0], r1, r3\n\tjump.eq\t@.BB0_91\n\tsub.s!\t@CPI0_52[0], r1, r3\n\tjump.eq\t@.BB0_91\n\tsub.s!\t@CPI0_53[0], r1, r1\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n.BB0_91:\n\tand\t1, r2, r1\n\tjump\t@.BB0_92\n.BB0_93:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r4\n\tand\t127, r4, r1\n\tadd.ne\tr4, r0, r1\n\tsub.s!\t31, r1, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\txor\tr2, r4, r4\n\tand!\t1, r4, r4\n\tjump.eq\t@.BB0_95\n.BB0_31:\n\tadd\t@CPI0_27[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tjump\t@.BB0_5\n.BB0_134:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_ownerOf, @DEFAULT_UNWIND\n.BB0_106:\n\tand\t@CPI0_25[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_38[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_137:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_25[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_142\n\tadd\t@CPI0_31[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t41, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_35[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_36[0], r0, r1\n\tst.1\t228, r1\n\tadd\t@CPI0_37[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_107:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[7]\n\tsub.s!\t@CPI0_25[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_29[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_25[0], r1, r1\n\tjump.ne\t@.BB0_113\n.BB0_112:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_47[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_31[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_48[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_127:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tr4, r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[7]\n\tadd\tr2, r0, stack-[6]\n\tadd\tr3, r0, r2\n\tadd\tr2, r0, stack-[5]\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_isApprovedOrOwner, @DEFAULT_UNWIND\n\tnear_call\tr0, @require_helper_stringliteral_12a8, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r1\n\tadd\tstack-[6], r0, r2\n\tadd\tstack-[5], r0, r3\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_176:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_requireMinted, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[7]\n\tnear_call\tr0, @finalize_allocation_10907, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r1\n\tst.1\tr1, r0\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[6]\n\tnear_call\tr0, @finalize_allocation_10907, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r1\n\tst.1\tr1, r0\n\tadd\t32, r0, r2\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[7]\n\tst.1.inc\tr3, r2, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tjump\t@.BB0_97\n.BB0_95:\n\tst.1\t128, r1\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_99\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t160, r2\n\tsub!\tr1, r0, r1\n\tadd\t192, r0, r2\n\tadd.eq\t160, r0, r2\n\tjump\t@.BB0_96\n.BB0_148:\n\tst.1\t0, r3\n\tadd\t160, r0, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_146\n\tadd\t@CPI0_34[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_150:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_150\n\tadd\t192, r3, r2\n.BB0_146:\n\tjump\t@.BB0_96\n.BB0_142:\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n.BB0_92:\n\tst.1\t128, r1\n\tadd\t@CPI0_26[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_99:\n\tadd\t160, r0, r2\n\tst.1\t0, r0\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_96\n\tadd\t@CPI0_49[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_101:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_101\n\tadd\t192, r3, r2\n.BB0_96:\n\tsub.s\t128, r2, r2\n\tadd\t128, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[6]\n\tst.1.inc\tr2, r1, r2\n\tadd\tstack-[7], r0, r1\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r4\n.BB0_97:\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_158:\n\tadd\tr2, r0, stack-[5]\n\tst.1\t0, r2\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r5\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr5, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_29[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr3, r0, stack-[7]\n\tadd\tr4, r0, stack-[6]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tst.1\t0, r3\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_29[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r4\n\tadd\tstack-[7], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\tr2, r4, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r4\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_30[0], r0, r4\n\tadd\tstack-[5], r0, r5\n.BB0_125:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_113:\n\tsub!\tstack-[7], r1, r2\n\tjump.ne\t@.BB0_116\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_45[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_46[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t33, r0, r3\n.BB0_115:\n\tst.1\tr2, r3\n\tadd\t@CPI0_31[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_116:\n\tcontext.caller\tr3\n\tsub!\tr3, r1, r2\n\tjump.ne\t@.BB0_117\n.BB0_121:\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_29[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_42[0], r2, r2\n\tor\tstack-[7], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_29[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_25[0], r1, r5\n\tjump.eq\t@.BB0_112\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_43[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_44[0], r0, r4\n\tadd\tstack-[7], r0, r6\n\tadd\tstack-[6], r0, r7\n\tjump\t@.BB0_125\n.BB0_117:\n\tadd\tr3, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_29[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_29[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_121\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_39[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_40[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t61, r0, r3\n\tjump\t@.BB0_115\n.BB0_46:\n\tsub!\tstack-[5], r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_48\n\tadd\tstack-[3], r0, r1\n\tld.1\tr1, r1\n.BB0_48:\n\tadd\tstack-[5], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n.BB0_38:\n\tsstore\tr0, r1\n\tadd\tstack-[1], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_4\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tadd\tr3, r0, stack-[5]\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_31\n\tadd\tstack-[5], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_54\n\tadd\t1, r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[5], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_54\n.BB0_55:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_55\n.BB0_54:\n\tadd\tstack-[6], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_64\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[4], r0, r2\n\tadd\tstack-[1], r0, r6\n\tjump.eq\t@.BB0_2\n\tand!\tstack-[6], r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_61\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_60:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_60\n.BB0_61:\n\tsub.s!\tstack-[6], r3, r3\n\tjump.ge\t@.BB0_63\n\tadd\tstack-[6], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[1], r2, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_63:\n\tadd\tstack-[6], r0, r1\n\tshl.s\t1, r1, r1\n\tadd\tstack-[3], r0, r2\n\tjump\t@.BB0_56\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_64:\n\tsub!\tstack-[6], r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_66\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n.BB0_66:\n\tadd\tstack-[6], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n.BB0_56:\n\tor\tr1, r2, r1\n\tadd\tstack-[3], r0, r2\n\tsstore\tr2, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_7[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\nabi_encode_string:\n.func_begin1:\n\tld.1\tr1, r3\n\tst.1.inc\tr2, r3, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\tr2, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tadd\tr2, r3, r1\n\tst.1\tr1, r0\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\tr2, r1, r1\n\tret\n.func_end1:\n\nabi_decode_addresst_addresst_uint256:\n.func_begin2:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI2_0[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI2_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI2_0[0], r1, r1\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB2_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI2_1[0], r1, r2\n\tjump.gt\t@.BB2_1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI2_1[0], r2, r4\n\tjump.gt\t@.BB2_1\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tret\n.BB2_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nfinalize_allocation_10907:\n.func_begin3:\n\tsub.s!\t@CPI3_0[0], r1, r2\n\tjump.ge\t@.BB3_1\n\tadd\t32, r1, r1\n\tst.1\t64, r1\n\tret\n.BB3_1:\n\tadd\t@CPI3_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nfinalize_allocation:\n.func_begin4:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI4_0[0], r1, r3\n\tjump.gt\t@.BB4_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB4_2\n\tst.1\t64, r1\n\tret\n.BB4_2:\n\tadd\t@CPI4_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nfun_ownerOf:\n.func_begin5:\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI5_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI5_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI5_2[0], r1, r1\n\tjump.eq\t@.BB5_3\n\tret\n.BB5_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI5_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI5_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI5_0[0], r0, r2\n\tsub.s!\t@CPI5_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI5_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nfun_getApproved:\n.func_begin6:\n\tnop\tstack+=[1]\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI6_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI6_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI6_2[0], r1, r1\n\tjump.eq\t@.BB6_3\n\tadd\tstack-[1], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI6_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI6_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI6_2[0], r1, r1\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI6_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI6_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI6_0[0], r0, r2\n\tsub.s!\t@CPI6_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI6_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nrequire_helper_stringliteral_12a8:\n.func_begin7:\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB7_1\n\tret\n.BB7_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI7_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI7_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t45, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI7_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI7_3[0], r0, r2\n\tsub.s!\t@CPI7_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI7_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\nfun_safeTransferFrom:\n.func_begin8:\n\tnop\tstack+=[9]\n\tadd\tr4, r0, stack-[2]\n\tadd\tr2, r0, stack-[3]\n\tadd\tr1, r0, stack-[6]\n\tadd\tr3, r0, stack-[7]\n\tst.1\t0, r3\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI8_2[0], r1, r1\n\tjump.eq\t@.BB8_3\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[1]\n\tand\t@CPI8_2[0], r2, stack-[4]\n\tsub!\tstack-[4], r1, r2\n\tjump.eq\t@.BB8_14\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB8_14\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI8_2[0], r1, r1\n\tjump.eq\t@.BB8_3\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI8_2[0], r1, r1\n\tsub.s!\tstack-[4], r1, r1\n\tjump.ne\t@.BB8_12\n.BB8_14:\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI8_2[0], r1, r2\n\tjump.eq\t@.BB8_3\n\tadd\tstack-[6], r0, r1\n\tand\t@CPI8_2[0], r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB8_17\n\tadd\tr2, r0, stack-[6]\n\tadd\tstack-[3], r0, r1\n\tand!\t@CPI8_2[0], r1, stack-[4]\n\tjump.eq\t@.BB8_19\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI8_2[0], r1, r1\n\tadd\tstack-[6], r0, r2\n\tjump.eq\t@.BB8_3\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB8_17\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI8_9[0], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI8_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI8_9[0], r2, r2\n\tadd\tstack-[4], r0, r6\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tadd\t@CPI8_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_10[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI8_11[0], r0, r4\n\tadd\tstack-[6], r0, r5\n\tadd\tstack-[7], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB8_1\n\tcontext.sp\tr1\n\tadd\tr1, r0, stack-[5]\n\tadd\t@CPI8_12[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_13[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_29\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[2], r0, r6\n\tjump.eq\t@.BB8_31\n\tld.1\t64, r10\n\tadd\t100, r10, r1\n\tadd\t128, r0, r7\n\tst.1\tr1, r7\n\tadd\t68, r10, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r10, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI8_14[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t4, r10, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\tr1, r2\n\tld.1\tr6, r1\n\tadd\t132, r10, r2\n\tst.1\tr2, r1\n\tadd\t164, r10, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB8_35\n\tadd\tr0, r0, r3\n.BB8_34:\n\tadd\tr3, r2, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB8_34\n.BB8_35:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tcontext.gas_left\tr6\n\tadd\tstack-[4], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB8_37\n\tcontext.sp\tr5\n\tsub.s\t9, r5, r5\n\tmul\t32, r5, r5, r0\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tadd\t0, r0, stack-[9]\n\tjump\t@.BB8_42\n.BB8_31:\n\tcontext.sp\tr1\n\tsub\tstack-[5], r1, r1\n\tnop\tstack+=[r1]\n\tjump\t@.BB8_59\n.BB8_37:\n\tadd\tr7, r0, stack-[6]\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\t@CPI8_0[0], r0, r3\n\tsub.s!\t@CPI8_0[0], r10, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr10, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t164, r1, r1\n\tsub.s!\t@CPI8_0[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI8_0[0], r6, r4\n\tadd.ge\tr3, r0, r6\n\tshl.s\t192, r6, r3\n\tor\tr3, r1, r1\n\tadd\tr10, r0, stack-[7]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI8_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB8_61\n\tadd\tr0, r0, r7\n.BB8_39:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB8_39\n.BB8_61:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB8_41\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB8_41:\n\tadd\tr3, r0, stack[@returndatasize]\n\tcontext.sp\tr5\n\tsub.s\t8, r5, r5\n\tmul\t32, r5, r5, r0\n\tadd\t0, r0, stack-[8]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_47\n.BB8_42:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI8_16[0], r1, r4\n\tjump.gt\t@.BB8_44\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB8_44\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB8_1\n\tld.1\tr10, r1\n\tand\t@CPI8_17[0], r1, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB8_1\n\tshr.s\t5, r5, r2\n\tadd\tr1, r0, stack[r2]\n\tcontext.sp\tr2\n\tsub\tstack-[5], r2, r2\n\tnop\tstack+=[r2]\n\tsub.s!\t@CPI8_14[0], r1, r1\n\tjump.ne\t@.BB8_57\n.BB8_59:\n\tret\n.BB8_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI8_22[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI8_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI8_0[0], r0, r2\n\tsub.s!\t@CPI8_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI8_23[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_17:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI8_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI8_8[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tjump\t@.BB8_13\n.BB8_19:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI8_20[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI8_21[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n.BB8_13:\n\tst.1\tr2, r3\n\tadd\t@CPI8_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI8_0[0], r0, r2\n\tsub.s!\t@CPI8_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI8_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_29:\n\trevert\n.BB8_47:\n\tadd\t96, r0, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB8_48\n\tadd\t63, r3, r2\n\tand\t@CPI8_15[0], r2, r4\n\tld.1\t64, r2\n\tadd\tr2, r4, r4\n\tsub!\tr4, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI8_16[0], r4, r6\n\tjump.gt\t@.BB8_44\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB8_44\n\tst.1\t64, r4\n\tand\t31, r3, r4\n\tst.1.inc\tr2, r3, r8\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB8_60\n\tadd\tr0, r0, r5\n.BB8_53:\n\tshl.s\t5, r5, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB8_53\n.BB8_60:\n\tadd\tr8, r0, stack-[6]\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB8_48\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tstack-[6], r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB8_48:\n\tld.1\tr2, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB8_55\n.BB8_57:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[7]\n\tadd\t@CPI8_5[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_stringliteral_1e76, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI8_0[0], r0, r2\n\tsub.s!\t@CPI8_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n.BB8_56:\n\tsub.s!\t@CPI8_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_44:\n\tadd\t@CPI8_18[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_19[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_12:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI8_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI8_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t45, r0, r3\n\tjump\t@.BB8_13\n.BB8_55:\n\tadd\t@CPI8_0[0], r0, r2\n\tsub.s!\t@CPI8_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[6], r0, r4\n\tjump\t@.BB8_56\n.func_end8:\n\nabi_encode_stringliteral_1e76:\n.func_begin9:\n\tadd\t96, r1, r2\n\tadd\t@CPI9_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t@CPI9_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t50, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end9:\n\nfun_isApprovedOrOwner:\n.func_begin10:\n\tnop\tstack+=[3]\n\tadd\tr1, r0, stack-[3]\n\tadd\tr2, r0, stack-[2]\n\tst.1\t0, r2\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tst.1\t32, r1\n\tadd\t@CPI10_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI10_2[0], r1, r2\n\tjump.eq\t@.BB10_3\n\tadd\t1, r0, r1\n\tadd\tstack-[3], r0, r3\n\tand\t@CPI10_2[0], r3, stack-[3]\n\tsub!\tstack-[3], r2, r3\n\tjump.eq\t@.BB10_12\n\tst.1\t0, r2\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI10_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI10_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI10_0[0], r1, r2\n\tadd.ge\t@CPI10_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB10_12\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[1], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI10_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI10_2[0], r1, r1\n\tjump.eq\t@.BB10_3\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI10_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI10_2[0], r1, r1\n\tsub.s!\tstack-[3], r1, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n.BB10_12:\n\tret\n.BB10_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI10_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI10_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI10_0[0], r0, r2\n\tsub.s!\t@CPI10_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI10_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\nfun_transfer:\n.func_begin11:\n\tnop\tstack+=[4]\n\tadd\tr2, r0, stack-[1]\n\tadd\tr1, r0, stack-[3]\n\tadd\tr3, r0, stack-[4]\n\tst.1\t0, r3\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI11_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI11_2[0], r1, r2\n\tjump.eq\t@.BB11_3\n\tadd\tstack-[3], r0, r1\n\tand\t@CPI11_2[0], r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB11_5\n\tadd\tr2, r0, stack-[3]\n\tadd\tstack-[1], r0, r1\n\tand!\t@CPI11_2[0], r1, stack-[1]\n\tjump.eq\t@.BB11_8\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI11_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI11_2[0], r1, r1\n\tadd\tstack-[3], r0, r2\n\tjump.eq\t@.BB11_3\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB11_5\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI11_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI11_7[0], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_0[0], r1, r2\n\tadd.ge\t@CPI11_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[1], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI11_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_0[0], r1, r2\n\tadd.ge\t@CPI11_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI11_7[0], r2, r2\n\tadd\tstack-[1], r0, r6\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tadd\t@CPI11_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI11_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI11_9[0], r0, r4\n\tadd\tstack-[3], r0, r5\n\tadd\tstack-[4], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB11_1\n\tret\n.BB11_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB11_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI11_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI11_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI11_0[0], r0, r2\n\tsub.s!\t@CPI11_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI11_13[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB11_5:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI11_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI11_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tjump\t@.BB11_6\n.BB11_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI11_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI11_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n.BB11_6:\n\tst.1\tr2, r3\n\tadd\t@CPI11_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI11_0[0], r0, r2\n\tsub.s!\t@CPI11_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI11_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\nfun_requireMinted:\n.func_begin12:\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI12_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI12_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI12_2[0], r1, r1\n\tjump.eq\t@.BB12_3\n\tret\n.BB12_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI12_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_0[0], r0, r2\n\tsub.s!\t@CPI12_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\n__cxa_throw:\n\trevert\n\n__sha3:\n.func_begin13:\n\tadd\t@CPI14_0[0], r0, r3\n\tsub.s!\t@CPI14_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI14_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI14_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_2\n\tld\tr1, r1\n\tret\n.BB14_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\n__farcall:\n.func_begin14:\n.tmp0:\n\tfar_call\tr1, r2, @.BB15_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB15_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end14:\n\n__staticcall:\n.func_begin15:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB16_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB16_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end15:\n\n\t.data\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI5_0:\nCPI6_0:\nCPI7_3:\nCPI8_0:\nCPI10_0:\nCPI11_0:\nCPI12_0:\nCPI14_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -18446744073709551457\nCPI0_2:\n\t.cell -18446744073709551489\nCPI0_3:\nCPI8_15:\n\t.cell 8589934560\nCPI0_4:\nCPI4_0:\nCPI8_16:\n\t.cell 18446744073709551615\nCPI0_5:\nCPI2_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_6:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_7:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_8:\n\t.cell 1666326813\nCPI0_9:\n\t.cell 2720838756\nCPI0_10:\n\t.cell 3363526364\nCPI0_11:\n\t.cell 3363526365\nCPI0_12:\n\t.cell 3917867461\nCPI0_13:\n\t.cell 2720838757\nCPI0_14:\n\t.cell 3096268766\nCPI0_15:\n\t.cell 1666326814\nCPI0_16:\n\t.cell 1889567281\nCPI0_17:\n\t.cell 2514000705\nCPI0_18:\n\t.cell 157198258\nCPI0_19:\n\t.cell 157198259\nCPI0_20:\n\t.cell 599290589\nCPI0_21:\n\t.cell 1115958798\nCPI0_22:\n\t.cell 33540519\nCPI0_23:\n\t.cell 117300739\nCPI0_24:\n\t.cell 135795452\nCPI0_25:\nCPI2_1:\nCPI5_2:\nCPI6_2:\nCPI8_2:\nCPI10_2:\nCPI11_2:\nCPI12_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_26:\n\t.cell 2535301202817642044428229017600\nCPI0_27:\nCPI3_1:\nCPI4_1:\nCPI8_18:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_28:\nCPI3_2:\nCPI4_2:\nCPI8_19:\n\t.cell 2852213850513516153367582212096\nCPI0_29:\nCPI5_1:\nCPI6_1:\nCPI8_1:\nCPI10_1:\nCPI11_1:\nCPI12_1:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_30:\n\t.cell 10488878412788366941768124514102328501031624832915735463117339209566108871729\nCPI0_31:\nCPI5_4:\nCPI6_4:\nCPI7_2:\nCPI8_5:\nCPI10_4:\nCPI11_5:\nCPI12_4:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_32:\n\t.cell 31354931916645375393762213565866891172307618523953520621822726397682830540800\nCPI0_33:\n\t.cell 7922816253787617000789217640448\nCPI0_34:\n\t.cell -35707666377435648211887908874984608119992236509074197713628505308453184860938\nCPI0_35:\n\t.cell 31354931916645375393761059704421056284766179208589378268252292504104988604001\nCPI0_36:\n\t.cell 49035997637886268239882041675796387503892600671578232905754119059317383495680\nCPI0_37:\n\t.cell 10458117454244075803782624051200\nCPI0_38:\n\t.cell 2535301200456458802993406410752\nCPI0_39:\n\t.cell 48576686418507356219831365361070156960199332940003936683527688631380237877248\nCPI0_40:\n\t.cell 31354931916645375393762213565866891172284950498046585739320112041512459596911\nCPI0_41:\nCPI7_4:\nCPI8_6:\nCPI11_6:\n\t.cell 10458117451882892562347801444352\nCPI0_42:\nCPI8_9:\nCPI11_7:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_43:\nCPI8_10:\nCPI11_8:\nCPI14_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_44:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI0_45:\n\t.cell 51563664738492368274558954261681333965909290046418063673820955378523815542784\nCPI0_46:\n\t.cell 31354931916645375393762213565866890849608307089744918678309194418033790512741\nCPI0_47:\nCPI5_3:\nCPI6_3:\nCPI8_22:\nCPI10_3:\nCPI11_12:\nCPI12_3:\n\t.cell 31354931916645375393958183653158686846599388074356949121886454872141515980800\nCPI0_48:\nCPI5_5:\nCPI6_5:\nCPI8_23:\nCPI10_5:\nCPI11_13:\nCPI12_5:\n\t.cell 7922816251426433759354395033600\nCPI0_49:\n\t.cell 18569430475105882587588266137607568536673111973893317399460219858819262702947\nCPI0_50:\nCPI8_17:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_51:\n\t.cell -57591534043048631271602713168962198724648561309353517944097662808962438791168\nCPI0_52:\n\t.cell 41326688264978518566617017154793646184809722027297161851759941631668658372608\nCPI0_53:\n\t.cell 904250603428552709895185118199468575982109441609966099573332780532423983104\nCPI3_0:\n\t.cell 18446744073709551584\nCPI7_0:\nCPI8_3:\n\t.cell 51620973015253767882670130074298444487415533390198982457255807955294746574848\nCPI7_1:\nCPI8_4:\n\t.cell 31354931916645375393809815203201166297542482068262457279726729202739757674085\nCPI8_7:\nCPI11_3:\n\t.cell 50417742920509558439106150551775209266858149941038353264781520106005609840640\nCPI8_8:\nCPI11_4:\n\t.cell 31354931916645375394228278154242914900316605976059021079503402663591234728992\nCPI8_11:\nCPI11_9:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI8_12:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI8_13:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI8_14:\n\t.cell 9518847204935358166548570266051330015907116135037852959641967396525866745856\nCPI8_20:\nCPI11_10:\n\t.cell 51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI8_21:\nCPI11_11:\n\t.cell 31354931916645375394228278154242914900316678601111040334909412358260906878052\nCPI9_0:\n\t.cell 44958151438609599421424650306347963631972141104775375727422033337783813144576\nCPI9_1:\n\t.cell 31354931916645375394228278154242914900316678601109191929828695483653754540645\n","bytecode":{"object":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":"/// @use-src 4:\"@openzeppelin/contracts/token/ERC721/ERC721.sol\", 5:\"@openzeppelin/contracts/token/ERC721/IERC721.sol\", 8:\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\", 10:\"@openzeppelin/contracts/utils/Context.sol\", 12:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 13:\"@openzeppelin/contracts/utils/introspection/IERC165.sol\"\nobject \"ERC721_1729\" {\n    code {\n        {\n            /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"ERC721_1729\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let offset := mload(memoryDataOffset)\n            let _2 := sub(shl(64, 1), 1)\n            if gt(offset, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let value0 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n            let _3 := 32\n            let offset_1 := mload(add(memoryDataOffset, _3))\n            if gt(offset_1, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let value1 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1)\n            let newLen := mload(value0)\n            if gt(newLen, _2)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x24)\n            }\n            /// @src -1:-1:-1\n            let _4 := 0\n            /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let _5 := sload(/** @src -1:-1:-1 */ _4)\n            /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let length := /** @src -1:-1:-1 */ _4\n            /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let _6 := 1\n            length := shr(_6, _5)\n            let outOfPlaceEncoding := and(_5, _6)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, _3))\n            {\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ _4, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x24)\n            }\n            let _7 := 31\n            if gt(length, _7)\n            {\n                mstore(/** @src -1:-1:-1 */ _4, _4)\n                /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _4, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _3)\n                let deleteStart := add(data, shr(5, add(newLen, _7)))\n                if lt(newLen, _3) { deleteStart := data }\n                let _8 := add(data, shr(5, add(length, _7)))\n                let start := deleteStart\n                for { } lt(start, _8) { start := add(start, _6) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _4)\n                }\n            }\n            /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let srcOffset := /** @src -1:-1:-1 */ _4\n            /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            srcOffset := _3\n            switch gt(newLen, _7)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                mstore(/** @src -1:-1:-1 */ _4, _4)\n                /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ _4, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _3)\n                let i := /** @src -1:-1:-1 */ _4\n                /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                for { } lt(i, loopEnd) { i := add(i, _3) }\n                {\n                    sstore(dstPtr, mload(add(value0, srcOffset)))\n                    dstPtr := add(dstPtr, _6)\n                    srcOffset := add(srcOffset, _3)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(value0, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src -1:-1:-1 */ _4, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ add(shl(_6, newLen), _6))\n            }\n            default {\n                let value := /** @src -1:-1:-1 */ _4\n                /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                if newLen\n                {\n                    value := mload(add(value0, srcOffset))\n                }\n                sstore(/** @src -1:-1:-1 */ _4, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ or(and(value, not(shr(shl(3, newLen), not(0)))), shl(_6, newLen)))\n            }\n            let newLen_1 := mload(value1)\n            if gt(newLen_1, _2)\n            {\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ _4, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x24)\n            }\n            let _9 := sload(_6)\n            let length_1 := /** @src -1:-1:-1 */ _4\n            /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            length_1 := shr(_6, _9)\n            let outOfPlaceEncoding_1 := and(_9, _6)\n            if iszero(outOfPlaceEncoding_1)\n            {\n                length_1 := and(length_1, 0x7f)\n            }\n            if eq(outOfPlaceEncoding_1, lt(length_1, _3))\n            {\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ _4, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x24)\n            }\n            if gt(length_1, _7)\n            {\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _6)\n                let data_1 := keccak256(/** @src -1:-1:-1 */ _4, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _3)\n                let deleteStart_1 := add(data_1, shr(5, add(newLen_1, _7)))\n                if lt(newLen_1, _3) { deleteStart_1 := data_1 }\n                let _10 := add(data_1, shr(5, add(length_1, _7)))\n                let start_1 := deleteStart_1\n                for { } lt(start_1, _10) { start_1 := add(start_1, _6) }\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ _4)\n                }\n            }\n            /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let srcOffset_1 := /** @src -1:-1:-1 */ _4\n            /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            srcOffset_1 := _3\n            switch gt(newLen_1, _7)\n            case 1 {\n                let loopEnd_1 := and(newLen_1, not(31))\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _6)\n                let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ _4, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _3)\n                let i_1 := /** @src -1:-1:-1 */ _4\n                /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _3) }\n                {\n                    sstore(dstPtr_1, mload(add(value1, srcOffset_1)))\n                    dstPtr_1 := add(dstPtr_1, _6)\n                    srcOffset_1 := add(srcOffset_1, _3)\n                }\n                if lt(loopEnd_1, newLen_1)\n                {\n                    let lastValue_1 := mload(add(value1, srcOffset_1))\n                    sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(3, newLen_1), 248), not(0)))))\n                }\n                sstore(_6, add(shl(_6, newLen_1), _6))\n            }\n            default {\n                let value_1 := /** @src -1:-1:-1 */ _4\n                /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                if newLen_1\n                {\n                    value_1 := mload(add(value1, srcOffset_1))\n                }\n                sstore(_6, or(and(value_1, not(shr(shl(3, newLen_1), not(0)))), shl(_6, newLen_1)))\n            }\n            let _11 := mload(64)\n            let _12 := datasize(\"ERC721_1729_deployed\")\n            codecopy(_11, dataoffset(\"ERC721_1729_deployed\"), _12)\n            return(_11, _12)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_string_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n            let _1 := mload(offset)\n            if gt(_1, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x24)\n            }\n            let _2 := 0x20\n            let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n            mstore(array_1, _1)\n            if gt(add(add(offset, _1), _2), end)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            for { } lt(i, _1) { i := add(i, _2) }\n            {\n                mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n            }\n            mstore(add(add(array_1, _1), _2), /** @src -1:-1:-1 */ 0)\n            /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            array := array_1\n        }\n    }\n    /// @use-src 4:\"@openzeppelin/contracts/token/ERC721/ERC721.sol\", 9:\"@openzeppelin/contracts/utils/Address.sol\", 10:\"@openzeppelin/contracts/utils/Context.sol\", 11:\"@openzeppelin/contracts/utils/Strings.sol\", 12:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 14:\"@openzeppelin/contracts/utils/math/Math.sol\"\n    object \"ERC721_1729_deployed\" {\n        code {\n            {\n                /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    switch shr(224, calldataload(_4))\n                    case 0x01ffc9a7 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let value := calldataload(_3)\n                        let _5 := and(value, shl(224, 0xffffffff))\n                        if iszero(eq(value, _5)) { revert(_4, _4) }\n                        /// @src 4:1707:1811  \"interfaceId == type(IERC721).interfaceId ||...\"\n                        let expr := /** @src 4:1707:1747  \"interfaceId == type(IERC721).interfaceId\" */ eq(_5, /** @src 4:1722:1747  \"type(IERC721).interfaceId\" */ shl(224, 0x80ac58cd))\n                        /// @src 4:1707:1811  \"interfaceId == type(IERC721).interfaceId ||...\"\n                        if iszero(expr)\n                        {\n                            expr := /** @src 4:1763:1811  \"interfaceId == type(IERC721Metadata).interfaceId\" */ eq(_5, /** @src 4:1778:1811  \"type(IERC721Metadata).interfaceId\" */ shl(224, 0x5b5e139f))\n                        }\n                        /// @src 4:1707:1863  \"interfaceId == type(IERC721).interfaceId ||...\"\n                        let expr_1 := expr\n                        if iszero(expr)\n                        {\n                            expr_1 := /** @src 12:937:977  \"interfaceId == type(IERC165).interfaceId\" */ eq(_5, /** @src 12:952:977  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                        }\n                        /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        mstore(_1, iszero(iszero(expr_1)))\n                        return(_1, 32)\n                    }\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPtr := mload(_2)\n                        let ret := _4\n                        let slotValue := sload(_4)\n                        let length := _4\n                        let _6 := 1\n                        length := shr(_6, slotValue)\n                        let outOfPlaceEncoding := and(slotValue, _6)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        let _7 := 32\n                        if eq(outOfPlaceEncoding, lt(length, _7))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x22)\n                            revert(_4, 0x24)\n                        }\n                        mstore(memPtr, length)\n                        switch outOfPlaceEncoding\n                        case 0 {\n                            mstore(add(memPtr, _7), and(slotValue, not(255)))\n                            ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _7)\n                        }\n                        case 1 {\n                            mstore(_4, _4)\n                            let dataPos := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                            let i := _4\n                            for { } lt(i, length) { i := add(i, _7) }\n                            {\n                                mstore(add(add(memPtr, i), _7), sload(dataPos))\n                                dataPos := add(dataPos, _6)\n                            }\n                            ret := add(add(memPtr, i), _7)\n                        }\n                        finalize_allocation(memPtr, sub(ret, memPtr))\n                        let memPos := mload(_2)\n                        mstore(memPos, _7)\n                        return(memPos, sub(abi_encode_string(memPtr, add(memPos, _7)), memPos))\n                    }\n                    case 0x081812fc {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let ret_1 := fun_getApproved(calldataload(_3))\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, and(ret_1, sub(shl(160, 1), 1)))\n                        return(memPos_1, 32)\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0 := abi_decode_address_8502()\n                        let value_1 := calldataload(36)\n                        let _8 := sub(shl(160, 1), 1)\n                        /// @src 4:3605:3616  \"to != owner\"\n                        let _9 := /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 4:3564:3587  \"ERC721.ownerOf(tokenId)\" */ fun_ownerOf(value_1), /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _8)\n                        let _10 := and(/** @src 4:3605:3616  \"to != owner\" */ value0, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _8)\n                        if /** @src 4:3605:3616  \"to != owner\" */ eq(/** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _10, /** @src 4:3605:3616  \"to != owner\" */ _9)\n                        /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        {\n                            let memPtr_1 := mload(_2)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, _3), 32)\n                            mstore(add(memPtr_1, 36), 33)\n                            mstore(add(memPtr_1, 68), \"ERC721: approval to current owne\")\n                            mstore(add(memPtr_1, 100), \"r\")\n                            revert(memPtr_1, 132)\n                        }\n                        /// @src 4:3686:3748  \"_msgSender() == owner || isApprovedForAll(owner, _msgSender())\"\n                        let expr_2 := /** @src 4:3686:3707  \"_msgSender() == owner\" */ eq(/** @src 10:719:729  \"msg.sender\" */ caller(), /** @src 4:3686:3707  \"_msgSender() == owner\" */ _9)\n                        /// @src 4:3686:3748  \"_msgSender() == owner || isApprovedForAll(owner, _msgSender())\"\n                        if iszero(expr_2)\n                        {\n                            /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                            mstore(_4, _9)\n                            mstore(32, /** @src 4:4508:4526  \"_operatorApprovals\" */ 0x05)\n                            /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                            let _11 := keccak256(_4, _2)\n                            mstore(_4, /** @src 10:719:729  \"msg.sender\" */ caller())\n                            /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                            mstore(32, _11)\n                            /// @src 4:3686:3748  \"_msgSender() == owner || isApprovedForAll(owner, _msgSender())\"\n                            expr_2 := /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(sload(keccak256(_4, _2)), 0xff)\n                        }\n                        if iszero(expr_2)\n                        {\n                            let memPtr_2 := mload(_2)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, _3), 32)\n                            mstore(add(memPtr_2, 36), 61)\n                            mstore(add(memPtr_2, 68), \"ERC721: approve caller is not to\")\n                            mstore(add(memPtr_2, 100), \"ken owner or approved for all\")\n                            revert(memPtr_2, 132)\n                        }\n                        mstore(_4, value_1)\n                        mstore(32, _3)\n                        let _12 := keccak256(_4, _2)\n                        sstore(_12, or(and(sload(_12), shl(160, 0xffffffffffffffffffffffff)), _10))\n                        /// @src 4:12690:12736  \"Approval(ERC721.ownerOf(tokenId), to, tokenId)\"\n                        log4(/** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _4, _4, /** @src 4:12690:12736  \"Approval(ERC721.ownerOf(tokenId), to, tokenId)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 4:12699:12722  \"ERC721.ownerOf(tokenId)\" */ fun_ownerOf(value_1), /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _8), /** @src 4:12690:12736  \"Approval(ERC721.ownerOf(tokenId), to, tokenId)\" */ _10, value_1)\n                        /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        return(_4, _4)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_4, _4) }\n                        let param, param_1, param_2 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        /// @src 4:4763:4862  \"require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\")\"\n                        require_helper_stringliteral_12a8(/** @src 4:4771:4812  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ fun_isApprovedOrOwner(/** @src 10:719:729  \"msg.sender\" */ caller(), /** @src 4:4771:4812  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ param_2))\n                        /// @src 4:4893:4900  \"tokenId\"\n                        fun_transfer(param, param_1, param_2)\n                        /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        return(_4, _4)\n                    }\n                    case 0x42842e0e {\n                        if callvalue() { revert(_4, _4) }\n                        let param_3, param_4, param_5 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        let memPtr_3 := mload(_2)\n                        let newFreePtr := add(memPtr_3, 0x20)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_3))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_2, newFreePtr)\n                        mstore(memPtr_3, _4)\n                        /// @src 4:5077:5116  \"safeTransferFrom(from, to, tokenId, \\\"\\\")\"\n                        fun_safeTransferFrom(param_3, param_4, param_5, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ memPtr_3)\n                        return(_4, _4)\n                    }\n                    case 0x6352211e {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let ret_2 := fun_ownerOf(calldataload(_3))\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, and(ret_2, sub(shl(160, 1), 1)))\n                        return(memPos_2, 32)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let _13 := and(abi_decode_address_8502(), sub(shl(160, 1), 1))\n                        if /** @src 4:2028:2047  \"owner != address(0)\" */ iszero(/** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _13)\n                        {\n                            let memPtr_4 := mload(_2)\n                            mstore(memPtr_4, shl(229, 4594637))\n                            mstore(add(memPtr_4, _3), 32)\n                            mstore(add(memPtr_4, 36), 41)\n                            mstore(add(memPtr_4, 68), \"ERC721: address zero is not a va\")\n                            mstore(add(memPtr_4, 100), \"lid owner\")\n                            revert(memPtr_4, 132)\n                        }\n                        mstore(_4, _13)\n                        mstore(32, /** @src 4:2110:2119  \"_balances\" */ 0x03)\n                        /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        let _14 := sload(keccak256(_4, _2))\n                        let memPos_3 := mload(_2)\n                        mstore(memPos_3, _14)\n                        return(memPos_3, 32)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPtr_5 := mload(_2)\n                        let ret_3 := _4\n                        /// @src 4:2721:2728  \"_symbol\"\n                        let _15 := 0x01\n                        /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        let slotValue_1 := sload(/** @src 4:2721:2728  \"_symbol\" */ _15)\n                        /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        let length_1 := _4\n                        length_1 := shr(/** @src 4:2721:2728  \"_symbol\" */ _15, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ slotValue_1)\n                        let outOfPlaceEncoding_1 := and(slotValue_1, /** @src 4:2721:2728  \"_symbol\" */ _15)\n                        /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        if iszero(outOfPlaceEncoding_1)\n                        {\n                            length_1 := and(length_1, 0x7f)\n                        }\n                        let _16 := 32\n                        if eq(outOfPlaceEncoding_1, lt(length_1, _16))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x22)\n                            revert(_4, 0x24)\n                        }\n                        mstore(memPtr_5, length_1)\n                        switch outOfPlaceEncoding_1\n                        case 0 {\n                            mstore(add(memPtr_5, _16), and(slotValue_1, not(255)))\n                            ret_3 := add(add(memPtr_5, shl(5, iszero(iszero(length_1)))), _16)\n                        }\n                        case 1 {\n                            mstore(_4, /** @src 4:2721:2728  \"_symbol\" */ _15)\n                            /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                            let dataPos_1 := 80084422859880547211683076133703299733277748156566366325829078699459944778998\n                            let i_1 := _4\n                            for { } lt(i_1, length_1) { i_1 := add(i_1, _16) }\n                            {\n                                mstore(add(add(memPtr_5, i_1), _16), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, /** @src 4:2721:2728  \"_symbol\" */ _15)\n                            }\n                            /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                            ret_3 := add(add(memPtr_5, i_1), _16)\n                        }\n                        finalize_allocation(memPtr_5, sub(ret_3, memPtr_5))\n                        let memPos_4 := mload(_2)\n                        mstore(memPos_4, _16)\n                        return(memPos_4, sub(abi_encode_string(memPtr_5, add(memPos_4, _16)), memPos_4))\n                    }\n                    case 0xa22cb465 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_1 := abi_decode_address_8502()\n                        let value_2 := calldataload(36)\n                        let _17 := iszero(iszero(value_2))\n                        if iszero(eq(value_2, _17)) { revert(_4, _4) }\n                        let _18 := and(/** @src 4:12990:13007  \"owner != operator\" */ value0_1, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ sub(shl(160, 1), 1))\n                        if /** @src 4:12990:13007  \"owner != operator\" */ eq(/** @src 10:719:729  \"msg.sender\" */ caller(), /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _18)\n                        {\n                            let memPtr_6 := mload(_2)\n                            mstore(memPtr_6, shl(229, 4594637))\n                            mstore(add(memPtr_6, _3), 32)\n                            mstore(add(memPtr_6, 36), 25)\n                            mstore(add(memPtr_6, 68), \"ERC721: approve to caller\")\n                            revert(memPtr_6, 100)\n                        }\n                        mstore(_4, /** @src 10:719:729  \"msg.sender\" */ caller())\n                        /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        mstore(32, /** @src 4:13047:13065  \"_operatorApprovals\" */ 0x05)\n                        /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        let _19 := keccak256(_4, _2)\n                        mstore(_4, _18)\n                        mstore(32, _19)\n                        let dataSlot := keccak256(_4, _2)\n                        let value_3 := and(sload(dataSlot), not(255))\n                        sstore(dataSlot, or(value_3, and(_17, 255)))\n                        /// @src 4:13108:13149  \"ApprovalForAll(owner, operator, approved)\"\n                        let _20 := /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ mload(_2)\n                        mstore(_20, _17)\n                        /// @src 4:13108:13149  \"ApprovalForAll(owner, operator, approved)\"\n                        log3(_20, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 32, /** @src 4:13108:13149  \"ApprovalForAll(owner, operator, approved)\" */ 0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, /** @src 10:719:729  \"msg.sender\" */ caller(), /** @src 4:13108:13149  \"ApprovalForAll(owner, operator, approved)\" */ _18)\n                        /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        return(_4, _4)\n                    }\n                    case 0xb88d4fde {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 128) { revert(_4, _4) }\n                        let value0_2 := abi_decode_address_8502()\n                        let value1 := abi_decode_address()\n                        let offset := calldataload(100)\n                        if gt(offset, 0xffffffffffffffff) { revert(_4, _4) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(_4, _4) }\n                        let _21 := calldataload(add(_3, offset))\n                        let _22 := array_allocation_size_bytes(_21)\n                        let memPtr_7 := mload(_2)\n                        finalize_allocation(memPtr_7, _22)\n                        mstore(memPtr_7, _21)\n                        if gt(add(add(offset, _21), 36), calldatasize()) { revert(_4, _4) }\n                        calldatacopy(add(memPtr_7, 32), add(offset, 36), _21)\n                        mstore(add(add(memPtr_7, _21), 32), _4)\n                        fun_safeTransferFrom(value0_2, value1, calldataload(68), memPtr_7)\n                        return(_4, _4)\n                    }\n                    case 0xc87b56dd {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        /// @src 4:2914:2921  \"tokenId\"\n                        fun_requireMinted(/** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ calldataload(_3))\n                        let memPtr_8 := mload(_2)\n                        finalize_allocation_10907(memPtr_8)\n                        mstore(memPtr_8, _4)\n                        let memPtr_9 := mload(_2)\n                        finalize_allocation_10907(memPtr_9)\n                        mstore(memPtr_9, _4)\n                        let memPos_5 := mload(_2)\n                        mstore(memPos_5, 32)\n                        return(memPos_5, sub(abi_encode_string(memPtr_9, add(memPos_5, 32)), memPos_5))\n                    }\n                    case 0xe985e9c5 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_3 := abi_decode_address_8502()\n                        let value1_1 := abi_decode_address()\n                        let _23 := sub(shl(160, 1), 1)\n                        mstore(_4, and(value0_3, _23))\n                        mstore(32, /** @src 4:4508:4526  \"_operatorApprovals\" */ 0x05)\n                        /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        let _24 := keccak256(_4, _2)\n                        mstore(_4, and(value1_1, _23))\n                        mstore(32, _24)\n                        let value_4 := and(sload(keccak256(_4, _2)), 0xff)\n                        let memPos_6 := mload(_2)\n                        mstore(memPos_6, iszero(iszero(value_4)))\n                        return(memPos_6, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                mstore(add(add(pos, length), 0x20), 0)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_decode_address_8502() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                value1 := value_1\n                value2 := calldataload(68)\n            }\n            function finalize_allocation_10907(memPtr)\n            {\n                let newFreePtr := add(memPtr, 32)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function require_helper_stringliteral_b08d(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 24)\n                    mstore(add(memPtr, 68), \"ERC721: invalid token ID\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 948 @src 4:2190:2409  \"function ownerOf(uint256 tokenId) public view virtual override returns (address) {...\"\n            function fun_ownerOf(var_tokenId) -> var\n            {\n                /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ var_tokenId)\n                mstore(0x20, /** @src 4:6794:6801  \"_owners\" */ 0x02)\n                /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let cleaned := and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40)), sub(shl(160, 1), 1))\n                /// @src 4:2324:2380  \"require(owner != address(0), \\\"ERC721: invalid token ID\\\")\"\n                require_helper_stringliteral_b08d(/** @src 4:2332:2351  \"owner != address(0)\" */ iszero(iszero(/** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ cleaned)))\n                /// @src 4:2390:2402  \"return owner\"\n                var := cleaned\n            }\n            /// @ast-id 1077 @src 4:3935:4102  \"function getApproved(uint256 tokenId) public view virtual override returns (address) {...\"\n            function fun_getApproved(var_tokenId) -> var\n            {\n                /// @src 4:4045:4052  \"tokenId\"\n                fun_requireMinted(var_tokenId)\n                /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ var_tokenId)\n                mstore(0x20, /** @src 4:4071:4086  \"_tokenApprovals\" */ 0x04)\n                /// @src 4:4064:4095  \"return _tokenApprovals[tokenId]\"\n                var := /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40)), sub(shl(160, 1), 1))\n            }\n            function require_helper_stringliteral_12a8(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 45)\n                    mstore(add(memPtr, 68), \"ERC721: caller is not token owne\")\n                    mstore(add(memPtr, 100), \"r or approved\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 1188 @src 4:5189:5465  \"function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {...\"\n            function fun_safeTransferFrom(var_from, var_to, var_tokenId, var_data_mpos)\n            {\n                /// @src 4:5311:5410  \"require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\")\"\n                require_helper_stringliteral_12a8(/** @src 4:5319:5360  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ fun_isApprovedOrOwner(/** @src 10:719:729  \"msg.sender\" */ caller(), /** @src 4:5319:5360  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ var_tokenId))\n                /// @src 4:6458:6465  \"tokenId\"\n                fun_transfer(var_from, var_to, var_tokenId)\n                /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                if iszero(/** @src 4:6484:6531  \"_checkOnERC721Received(from, to, tokenId, data)\" */ fun_checkOnERC721Received(var_from, var_to, var_tokenId, var_data_mpos))\n                /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    revert(memPtr, sub(abi_encode_stringliteral_1e76(add(memPtr, 4)), memPtr))\n                }\n            }\n            function abi_encode_stringliteral_1e76(headStart) -> tail\n            {\n                mstore(headStart, 32)\n                mstore(add(headStart, 32), 50)\n                mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n                mstore(add(headStart, 96), \"ceiver implementer\")\n                tail := add(headStart, 128)\n            }\n            /// @ast-id 1282 @src 4:7404:7665  \"function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {...\"\n            function fun_isApprovedOrOwner(var_spender, var_tokenId) -> var\n            {\n                /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 4:7570:7586  \"spender == owner\"\n                let _2 := /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 4:7529:7552  \"ERC721.ownerOf(tokenId)\" */ fun_ownerOf(var_tokenId), /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                /// @src 4:7570:7586  \"spender == owner\"\n                let _3 := /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 4:7570:7586  \"spender == owner\" */ var_spender, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                /// @src 4:7570:7622  \"spender == owner || isApprovedForAll(owner, spender)\"\n                let expr := /** @src 4:7570:7586  \"spender == owner\" */ eq(_3, _2)\n                /// @src 4:7570:7622  \"spender == owner || isApprovedForAll(owner, spender)\"\n                if iszero(expr)\n                {\n                    /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _2)\n                    mstore(0x20, /** @src 4:4508:4526  \"_operatorApprovals\" */ 0x05)\n                    /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                    let _4 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40)\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _3)\n                    mstore(0x20, _4)\n                    /// @src 4:7570:7622  \"spender == owner || isApprovedForAll(owner, spender)\"\n                    expr := /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40)), 0xff)\n                }\n                /// @src 4:7570:7657  \"spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender\"\n                let expr_1 := expr\n                if iszero(expr)\n                {\n                    expr_1 := /** @src 4:7626:7657  \"getApproved(tokenId) == spender\" */ eq(/** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 4:7626:7646  \"getApproved(tokenId)\" */ fun_getApproved(var_tokenId), /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1), /** @src 4:7626:7657  \"getApproved(tokenId) == spender\" */ _3)\n                }\n                /// @src 4:7562:7658  \"return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender)\"\n                var := expr_1\n            }\n            /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            function require_helper_stringliteral_277f(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC721: transfer from incorrect \")\n                    mstore(add(memPtr, 100), \"owner\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 1555 @src 4:11257:12460  \"function _transfer(address from, address to, uint256 tokenId) internal virtual {...\"\n            function fun_transfer(var_from, var_to, var_tokenId)\n            {\n                /// @src 4:11354:11377  \"ERC721.ownerOf(tokenId)\"\n                let expr := fun_ownerOf(var_tokenId)\n                /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 4:11354:11385  \"ERC721.ownerOf(tokenId) == from\"\n                let _2 := /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 4:11354:11385  \"ERC721.ownerOf(tokenId) == from\" */ var_from, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                /// @src 4:11346:11427  \"require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\")\"\n                require_helper_stringliteral_277f(/** @src 4:11354:11385  \"ERC721.ownerOf(tokenId) == from\" */ eq(/** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 4:11354:11385  \"ERC721.ownerOf(tokenId) == from\" */ expr, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1), /** @src 4:11354:11385  \"ERC721.ownerOf(tokenId) == from\" */ _2))\n                /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _3 := and(/** @src 4:11445:11461  \"to != address(0)\" */ var_to, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                if /** @src 4:11445:11461  \"to != address(0)\" */ iszero(/** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _3)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC721: transfer to the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n                /// @src 4:11647:11728  \"require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\")\"\n                require_helper_stringliteral_277f(/** @src 4:11655:11686  \"ERC721.ownerOf(tokenId) == from\" */ eq(/** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 4:11655:11678  \"ERC721.ownerOf(tokenId)\" */ fun_ownerOf(var_tokenId), /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1), /** @src 4:11655:11686  \"ERC721.ownerOf(tokenId) == from\" */ _2))\n                /// @src 4:11459:11460  \"0\"\n                let _4 := 0x00\n                /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(/** @src 4:11459:11460  \"0\" */ _4, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ var_tokenId)\n                mstore(0x20, /** @src 4:11797:11812  \"_tokenApprovals\" */ 0x04)\n                /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let dataSlot := keccak256(/** @src 4:11459:11460  \"0\" */ _4, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40)\n                let _5 := shl(160, 0xffffffffffffffffffffffff)\n                sstore(dataSlot, and(sload(dataSlot), _5))\n                mstore(/** @src 4:11459:11460  \"0\" */ _4, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _2)\n                mstore(0x20, 3)\n                let dataSlot_1 := keccak256(/** @src 4:11459:11460  \"0\" */ _4, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40)\n                sstore(dataSlot_1, add(sload(/** @src 4:12265:12285  \"_balances[from] -= 1\" */ dataSlot_1), /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ not(0)))\n                mstore(/** @src 4:11459:11460  \"0\" */ _4, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _3)\n                let dataSlot_2 := keccak256(/** @src 4:11459:11460  \"0\" */ _4, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40)\n                sstore(dataSlot_2, add(sload(/** @src 4:12299:12317  \"_balances[to] += 1\" */ dataSlot_2), /** @src 4:12284:12285  \"1\" */ 0x01))\n                /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(/** @src 4:11459:11460  \"0\" */ _4, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ var_tokenId)\n                mstore(0x20, /** @src 4:12337:12344  \"_owners\" */ 0x02)\n                /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _6 := keccak256(/** @src 4:11459:11460  \"0\" */ _4, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40)\n                sstore(_6, or(and(sload(_6), _5), _3))\n                /// @src 4:12374:12401  \"Transfer(from, to, tokenId)\"\n                log4(/** @src 4:11459:11460  \"0\" */ _4, _4, /** @src 4:12374:12401  \"Transfer(from, to, tokenId)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _3, var_tokenId)\n            }\n            /// @ast-id 1625 @src 4:13240:13373  \"function _requireMinted(uint256 tokenId) internal view virtual {...\"\n            function fun_requireMinted(var_tokenId)\n            {\n                /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ var_tokenId)\n                mstore(0x20, /** @src 4:6794:6801  \"_owners\" */ 0x02)\n                /// @src 4:13313:13366  \"require(_exists(tokenId), \\\"ERC721: invalid token ID\\\")\"\n                require_helper_stringliteral_b08d(/** @src 4:7208:7239  \"_ownerOf(tokenId) != address(0)\" */ iszero(iszero(/** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40)), sub(shl(160, 1), 1)))))\n            }\n            /// @ast-id 1687 @src 4:13925:14756  \"function _checkOnERC721Received(...\"\n            function fun_checkOnERC721Received(var_from, var_to, var_tokenId, var_data_1634_mpos) -> var\n            {\n                /// @src 4:14074:14078  \"bool\"\n                var := /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0\n                /// @src 4:14074:14078  \"bool\"\n                let var_1 := /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0\n                /// @src 4:14090:14750  \"if (to.isContract()) {...\"\n                switch /** @src 9:1702:1725  \"account.code.length > 0\" */ iszero(iszero(/** @src 9:1702:1721  \"account.code.length\" */ extcodesize(var_to)))\n                case /** @src 4:14090:14750  \"if (to.isContract()) {...\" */ 0 {\n                    /// @src 4:14728:14739  \"return true\"\n                    var := /** @src 4:14735:14739  \"true\" */ 0x01\n                    /// @src 4:14728:14739  \"return true\"\n                    leave\n                }\n                default /// @src 4:14090:14750  \"if (to.isContract()) {...\"\n                {\n                    /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                    let _1 := sub(shl(160, 1), 1)\n                    /// @src 4:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    let _2 := /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ mload(64)\n                    let _3 := shl(225, 0x0a85bd01)\n                    /// @src 4:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    mstore(_2, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _3)\n                    mstore(/** @src 4:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ add(_2, 4), /** @src 10:719:729  \"msg.sender\" */ caller())\n                    /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                    mstore(add(/** @src 4:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _2, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 36), and(var_from, _1))\n                    mstore(add(/** @src 4:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _2, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 68), var_tokenId)\n                    mstore(add(/** @src 4:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _2, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 100), 128)\n                    /// @src 4:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    let _4 := 32\n                    let trySuccessCondition := call(gas(), /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 4:14129:14148  \"IERC721Receiver(to)\" */ var_to, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1), var_1, /** @src 4:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _2, sub(/** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ abi_encode_string(var_data_1634_mpos, add(/** @src 4:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _2, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 132)), /** @src 4:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _2), _2, _4)\n                    let expr := /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ var_1\n                    /// @src 4:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    if trySuccessCondition\n                    {\n                        let _5 := _4\n                        if gt(_4, returndatasize()) { _5 := returndatasize() }\n                        finalize_allocation(_2, _5)\n                        /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        if slt(sub(/** @src 4:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ add(_2, _5), /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _2), /** @src 4:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _4)\n                        /// @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        { revert(var_1, var_1) }\n                        let value := mload(_2)\n                        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(var_1, var_1) }\n                        /// @src 4:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                        expr := value\n                    }\n                    /// @src 4:14125:14698  \"try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {...\"\n                    switch iszero(trySuccessCondition)\n                    case 0 {\n                        /// @src 4:14243:14301  \"return retval == IERC721Receiver.onERC721Received.selector\"\n                        var := /** @src 4:14250:14301  \"retval == IERC721Receiver.onERC721Received.selector\" */ eq(/** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 4:14250:14301  \"retval == IERC721Receiver.onERC721Received.selector\" */ expr, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(224, 0xffffffff)), _3)\n                        /// @src 4:14243:14301  \"return retval == IERC721Receiver.onERC721Received.selector\"\n                        leave\n                    }\n                    default /// @src 4:14125:14698  \"try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {...\"\n                    {\n                        /// @src 4:14317:14698  \"catch (bytes memory reason) {...\"\n                        let data := /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ var_1\n                        switch returndatasize()\n                        case 0 { data := 96 }\n                        default {\n                            let _6 := returndatasize()\n                            let _7 := array_allocation_size_bytes(_6)\n                            let memPtr := mload(64)\n                            finalize_allocation(memPtr, _7)\n                            mstore(memPtr, _6)\n                            data := memPtr\n                            returndatacopy(add(memPtr, /** @src 4:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _4), /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ var_1, returndatasize())\n                        }\n                        /// @src 4:14367:14380  \"reason.length\"\n                        let expr_1 := /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ mload(/** @src 4:14367:14380  \"reason.length\" */ data)\n                        /// @src 4:14363:14684  \"if (reason.length == 0) {...\"\n                        switch /** @src 4:14367:14385  \"reason.length == 0\" */ iszero(expr_1)\n                        case /** @src 4:14363:14684  \"if (reason.length == 0) {...\" */ 0 {\n                            /// @src 4:14571:14666  \"assembly {...\"\n                            revert(add(/** @src 4:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _4, /** @src 4:14571:14666  \"assembly {...\" */ data), expr_1)\n                        }\n                        default /// @src 4:14363:14684  \"if (reason.length == 0) {...\"\n                        {\n                            /// @src 4:14409:14469  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            let _8 := /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ mload(64)\n                            /// @src 4:14409:14469  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            mstore(_8, /** @src 4:628:17005  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(229, 4594637))\n                            /// @src 4:14409:14469  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            revert(_8, sub(abi_encode_stringliteral_1e76(add(_8, /** @src 4:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ 4)), /** @src 4:14409:14469  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\" */ _8))\n                        }\n                    }\n                }\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212202c14849572d3ea3f57def057a1a5d35d90203961f6f935a6f58ac50f7ebfcdab64736f6c63430008110033\"\n    }\n}\n","hash":"0100025b251bca4537373d0019cca5c085a2d894d24192142a51adfb2aedb90b","factoryDependencies":{}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}","devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"IERC721Enumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"tokenByIndex(uint256)":{"details":"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."},"tokenOfOwnerByIndex(address,uint256)":{"details":"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"totalSupply()":{"details":"Returns the total amount of tokens stored by the contract."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional enumeration extension","version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}","zk_version":"1.3.17"},"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Address.sol:Address\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000006574172f292a28c71774a7f5a885c36f7b5d5315aaf7a3bd34c825e7173a7d0b"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 9:\"@openzeppelin/contracts/utils/Address.sol\"\nobject \"Address_2251\" {\n    code {\n        {\n            /// @src 9:194:9363  \"library Address {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Address_2251_deployed\")\n            codecopy(_1, dataoffset(\"Address_2251_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 9:\"@openzeppelin/contracts/utils/Address.sol\"\n    object \"Address_2251_deployed\" {\n        code {\n            {\n                /// @src 9:194:9363  \"library Address {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220ce30fbd4d59c78fa4cac8324b32a5b82b36a29017b2b2eb0cc4c3515b066691c64736f6c63430008110033\"\n    }\n}\n","hash":"0100000798ab0118b956b6d5bf3e2c535c9cdb0f28ccc183cb3ae71e67a8d368","factoryDependencies":{}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}","devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","zk_version":"1.3.17"},"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Strings.sol:Strings\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000f8371da62138cc7b5ca883b82e8f03b9553e3ed1a7979e1cb39070779e1eb70a"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 11:\"@openzeppelin/contracts/utils/Strings.sol\"\nobject \"Strings_2502\" {\n    code {\n        {\n            /// @src 11:220:2779  \"library Strings {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Strings_2502_deployed\")\n            codecopy(_1, dataoffset(\"Strings_2502_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 11:\"@openzeppelin/contracts/utils/Strings.sol\"\n    object \"Strings_2502_deployed\" {\n        code {\n            {\n                /// @src 11:220:2779  \"library Strings {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220264ae25be30957824996fb80ddc1dca150cc37e4cd547c835eb39b8e6f67094364736f6c63430008110033\"\n    }\n}\n","hash":"010000070005ca278c0775fd9ab37ddd29af80d3f0ac6bbb1b4fa8031e380649","factoryDependencies":{}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":""}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}","devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"irOptimized":""}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}","zk_version":"1.3.17"},"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Math.sol:Math\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000007b91275ec3e63be1b2042aa424906806c37e197162453543e08001dfe91fc1d3"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 14:\"@openzeppelin/contracts/utils/math/Math.sol\"\nobject \"Math_3404\" {\n    code {\n        {\n            /// @src 14:202:12784  \"library Math {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Math_3404_deployed\")\n            codecopy(_1, dataoffset(\"Math_3404_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 14:\"@openzeppelin/contracts/utils/math/Math.sol\"\n    object \"Math_3404_deployed\" {\n        code {\n            {\n                /// @src 14:202:12784  \"library Math {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212209567f735be382953e9a2cb7c19bc86977c145236b0f04cf38e1e52d0b83e740c64736f6c63430008110033\"\n    }\n}\n","hash":"010000074504c0dd111c49e2fa46000e6bff9e0951587ea7cbe1c9d4964de106","factoryDependencies":{}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}","zk_version":"1.3.17"},"devdoc":{"details":"Standard signed math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"SignedMath.sol:SignedMath\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000d9bf3b0837eb3a270cb6a5b2cd22796193cb1d0d676b30e948bd3929b63c2169"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 15:\"@openzeppelin/contracts/utils/math/SignedMath.sol\"\nobject \"SignedMath_3509\" {\n    code {\n        {\n            /// @src 15:215:1262  \"library SignedMath {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"SignedMath_3509_deployed\")\n            codecopy(_1, dataoffset(\"SignedMath_3509_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 15:\"@openzeppelin/contracts/utils/math/SignedMath.sol\"\n    object \"SignedMath_3509_deployed\" {\n        code {\n            {\n                /// @src 15:215:1262  \"library SignedMath {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212200d341bf3d38efb6932fe4336f533369a30adf74e27855d8181fd69b95770ba7b64736f6c63430008110033\"\n    }\n}\n","hash":"01000007f31b85b6e6dd8d1b7170647a459affbf764ef501422517480d72f389","factoryDependencies":{}}},"contracts/interfaces/IAccount.sol":{"IAccount":{"abi":[{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"executeCall","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAccount.sol\":\"IAccount\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x864eddea04e3865e2659848b1f7ac6190e118c26a86a96cf6e68df40896cfa45\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a7de69a2f42cd701e3a08ac433799cc1bcba4eb6bf69fccf89ba2804b90feb12\",\"dweb:/ipfs/Qmf8Fa2oEhkeJLMEpVB52vMMwDxiBJr4RENCkpjwcL4SJU\"]}},\"version\":1}","devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"executeCall(address,uint256,bytes)":"9e5d4c49","owner()":"8da5cb5b","token()":"fc0c546a"}},"irOptimized":""}},"contracts/interfaces/IChargedParticles.sol":{"IChargedParticles":{"abi":[{"inputs":[{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"walletManagerId","type":"string"},{"internalType":"address","name":"assetToken","type":"address"}],"name":"baseParticleMass","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"basketManagerId","type":"string"},{"internalType":"address","name":"nftTokenAddress","type":"address"},{"internalType":"uint256","name":"nftTokenId","type":"uint256"},{"internalType":"uint256","name":"nftTokenAmount","type":"uint256"}],"name":"breakCovalentBond","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"basketManagerId","type":"string"},{"internalType":"address","name":"nftTokenAddress","type":"address"},{"internalType":"uint256","name":"nftTokenId","type":"uint256"},{"internalType":"uint256","name":"nftTokenAmount","type":"uint256"}],"name":"covalentBond","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"walletManagerId","type":"string"},{"internalType":"address","name":"assetToken","type":"address"}],"name":"currentParticleCharge","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"basketManagerId","type":"string"}],"name":"currentParticleCovalentBonds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"walletManagerId","type":"string"},{"internalType":"address","name":"assetToken","type":"address"}],"name":"currentParticleKinetics","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"walletManagerId","type":"string"},{"internalType":"address","name":"assetToken","type":"address"}],"name":"dischargeParticle","outputs":[{"internalType":"uint256","name":"creatorAmount","type":"uint256"},{"internalType":"uint256","name":"receiverAmount","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"walletManagerId","type":"string"},{"internalType":"address","name":"assetToken","type":"address"},{"internalType":"uint256","name":"assetAmount","type":"uint256"}],"name":"dischargeParticleAmount","outputs":[{"internalType":"uint256","name":"creatorAmount","type":"uint256"},{"internalType":"uint256","name":"receiverAmount","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"walletManagerId","type":"string"},{"internalType":"address","name":"assetToken","type":"address"},{"internalType":"uint256","name":"assetAmount","type":"uint256"}],"name":"dischargeParticleForCreator","outputs":[{"internalType":"uint256","name":"receiverAmount","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"walletManagerId","type":"string"},{"internalType":"address","name":"assetToken","type":"address"},{"internalType":"uint256","name":"assetAmount","type":"uint256"},{"internalType":"address","name":"referrer","type":"address"}],"name":"energizeParticle","outputs":[{"internalType":"uint256","name":"yieldTokensAmount","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetAmount","type":"uint256"}],"name":"getFeesForDeposit","outputs":[{"internalType":"uint256","name":"protocolFee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getManagersAddress","outputs":[{"internalType":"address","name":"managersAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSettingsAddress","outputs":[{"internalType":"address","name":"settingsAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getStateAddress","outputs":[{"internalType":"address","name":"stateAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"walletManagerId","type":"string"},{"internalType":"address","name":"assetToken","type":"address"}],"name":"releaseParticle","outputs":[{"internalType":"uint256","name":"creatorAmount","type":"uint256"},{"internalType":"uint256","name":"receiverAmount","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"contractAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"walletManagerId","type":"string"},{"internalType":"address","name":"assetToken","type":"address"},{"internalType":"uint256","name":"assetAmount","type":"uint256"}],"name":"releaseParticleAmount","outputs":[{"internalType":"uint256","name":"creatorAmount","type":"uint256"},{"internalType":"uint256","name":"receiverAmount","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletManagerId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"assetToken\",\"type\":\"address\"}],\"name\":\"baseParticleMass\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"basketManagerId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"nftTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftTokenAmount\",\"type\":\"uint256\"}],\"name\":\"breakCovalentBond\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"basketManagerId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"nftTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftTokenAmount\",\"type\":\"uint256\"}],\"name\":\"covalentBond\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletManagerId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"assetToken\",\"type\":\"address\"}],\"name\":\"currentParticleCharge\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"basketManagerId\",\"type\":\"string\"}],\"name\":\"currentParticleCovalentBonds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletManagerId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"assetToken\",\"type\":\"address\"}],\"name\":\"currentParticleKinetics\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletManagerId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"assetToken\",\"type\":\"address\"}],\"name\":\"dischargeParticle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"creatorAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"receiverAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletManagerId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"assetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"}],\"name\":\"dischargeParticleAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"creatorAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"receiverAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletManagerId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"assetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"}],\"name\":\"dischargeParticleForCreator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"receiverAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletManagerId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"assetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"name\":\"energizeParticle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"yieldTokensAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"}],\"name\":\"getFeesForDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getManagersAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"managersAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSettingsAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"settingsAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"stateAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletManagerId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"assetToken\",\"type\":\"address\"}],\"name\":\"releaseParticle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"creatorAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"receiverAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletManagerId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"assetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetAmount\",\"type\":\"uint256\"}],\"name\":\"releaseParticleAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"creatorAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"receiverAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Interface for Charged Particles\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IChargedParticles.sol\":\"IChargedParticles\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IChargedParticles.sol\":{\"keccak256\":\"0xa825d020fbe598bb4b7a0e9dbc1fe1d3b17b161b4429a3f848eec27eab4f99d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57d5b5f66678889354560340219d6f9e014bd3625b6c0a40e2ce52e8c75cb12c\",\"dweb:/ipfs/QmNciMjTGYhm8nmkLQshirZfG3eqdme6t6DccVNSuSKK2H\"]}},\"version\":1}","devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"notice":"Interface for Charged Particles","version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"baseParticleMass(address,uint256,string,address)":"e6ea6ce7","breakCovalentBond(address,address,uint256,string,address,uint256,uint256)":"fe02fb00","covalentBond(address,uint256,string,address,uint256,uint256)":"3ff956cc","currentParticleCharge(address,uint256,string,address)":"99fa4c73","currentParticleCovalentBonds(address,uint256,string)":"a13eafd5","currentParticleKinetics(address,uint256,string,address)":"ca92acd0","dischargeParticle(address,address,uint256,string,address)":"621a3b70","dischargeParticleAmount(address,address,uint256,string,address,uint256)":"6697b359","dischargeParticleForCreator(address,address,uint256,string,address,uint256)":"65d20ce2","energizeParticle(address,uint256,string,address,uint256,address)":"0bdde2ca","getFeesForDeposit(uint256)":"ee895623","getManagersAddress()":"8742f168","getSettingsAddress()":"d00999fe","getStateAddress()":"31969e57","releaseParticle(address,address,uint256,string,address)":"acab923c","releaseParticleAmount(address,address,uint256,string,address,uint256)":"a8abef47"}},"irOptimized":""}},"contracts/interfaces/IERC6551Account.sol":{"IERC6551Account":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":true,"internalType":"uint256","name":"value","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"TransactionExecuted","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"executeCall","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"TransactionExecuted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"the ERC-165 identifier for this interface is `0xeff4d378`\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC6551Account.sol\":\"IERC6551Account\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC6551Account.sol\":{\"keccak256\":\"0x5fe2dca745f8e753d414778980a0846c1bbcbb26a09d7cd7fb712c7db7939582\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0074c18de58226a4113fe31518120896fa55746d0b2325e7344510a3ee4cd439\",\"dweb:/ipfs/QmR1QowMHaya1Abamh2MfdM9VDCMxQYTvXpHZKYChMkQwx\"]}},\"version\":1}","devdoc":{"details":"the ERC-165 identifier for this interface is `0xeff4d378`","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"executeCall(address,uint256,bytes)":"9e5d4c49","owner()":"8da5cb5b","token()":"fc0c546a"}},"irOptimized":""},"IERC6551AccountProxy":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC6551Account.sol\":\"IERC6551AccountProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC6551Account.sol\":{\"keccak256\":\"0x5fe2dca745f8e753d414778980a0846c1bbcbb26a09d7cd7fb712c7db7939582\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0074c18de58226a4113fe31518120896fa55746d0b2325e7344510a3ee4cd439\",\"dweb:/ipfs/QmR1QowMHaya1Abamh2MfdM9VDCMxQYTvXpHZKYChMkQwx\"]}},\"version\":1}","devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"implementation()":"5c60da1b"}},"irOptimized":""}},"contracts/interfaces/IRegistry.sol":{"IRegistry":{"abi":[{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salt","type":"uint256"}],"name":"account","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salt","type":"uint256"},{"internalType":"bytes","name":"initData","type":"bytes"}],"name":"createAccount","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"account\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"name\":\"createAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IRegistry.sol\":\"IRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IRegistry.sol\":{\"keccak256\":\"0xd24999d4d474bd349b1e2e5006eff215c5d9a64a481a9ebac3293f98603fbd27\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4ce46b9a28d74369751beda0d6816bc83b602a1b739c51544298cc0aa0b877b6\",\"dweb:/ipfs/Qmbrnqjr8VmvNG3nWcQagZwXfXsxLy4MZfFf3W5urjfdAi\"]}},\"version\":1}","devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"account(address,uint256,address,uint256,uint256)":"5e9bc536","createAccount(address,uint256,address,uint256,uint256,bytes)":"da7323b3"}},"irOptimized":""}},"contracts/lib/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}. NOTE:  The only changes made here are:    - change scope of \\\"_owners\\\" from private to internal    - change scope of \\\"_balances\\\" from private to internal    - remove \\\"ERC721\\\" scope-resolution from \\\"ownerOf\\\" calls in order to override \\\"ownerOf\\\"    - modify the _burn function to burn to an alternate Null Address (prevents reassignment back to Pre-Mint Receiver)\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/lib/ERC721.sol\":{\"keccak256\":\"0x726960336df673d5fd509dde21ba3bed24645291d201f74762b945fe4d5aa016\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb5cefbd15159da2ee1fa6e6050be9dfa19cdfe72b7eb0d09d63f1bf252605\",\"dweb:/ipfs/QmaAziN1hCNgW54ofjDyME3FM7p96M4dXC7d3gBTLWVZkw\"]}},\"version\":1}","zk_version":"1.3.17"},"devdoc":{"details":"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}. NOTE:  The only changes made here are:    - change scope of \"_owners\" from private to internal    - change scope of \"_balances\" from private to internal    - remove \"ERC721\" scope-resolution from \"ownerOf\" calls in order to override \"ownerOf\"    - modify the _burn function to burn to an alternate Null Address (prevents reassignment back to Pre-Mint Receiver)","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"constructor":{"details":"Initializes the contract by setting a `name` and a `symbol` to the token collection."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":3863,"contract":"contracts/lib/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":3865,"contract":"contracts/lib/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":3869,"contract":"contracts/lib/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":3873,"contract":"contracts/lib/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":3877,"contract":"contracts/lib/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":3883,"contract":"contracts/lib/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ERC721.sol:ERC721\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[7]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tadd\t128, r0, r3\n\tst.1\t64, r3\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r4, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_8[0], r2, r3\n\tjump.le\t@.BB0_69\n\tsub.s!\t@CPI0_9[0], r2, r3\n\tjump.le\t@.BB0_77\n\tsub.s!\t@CPI0_10[0], r2, r3\n\tjump.gt\t@.BB0_83\n\tsub.s!\t@CPI0_13[0], r2, r3\n\tjump.eq\t@.BB0_152\n\tsub.s!\t@CPI0_14[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t128, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r5\n\tsub.s!\t@CPI0_25[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_25[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t100, r1, r3\n\tld\tr3, r6\n\tsub.s!\t@CPI0_4[0], r6, r3\n\tjump.gt\t@.BB0_2\n\tadd\t35, r6, r3\n\tadd\t@CPI0_5[0], r0, r7\n\tsub!\tr3, r4, r8\n\tadd\tr0, r0, r8\n\tadd.ge\tr7, r0, r8\n\tand\t@CPI0_5[0], r3, r3\n\tsub!\tr3, r0, r9\n\tadd.ge\tr0, r0, r7\n\tsub.s!\t@CPI0_5[0], r3, r3\n\tadd.ne\tr8, r0, r7\n\tsub!\tr7, r0, r3\n\tjump.ne\t@.BB0_2\n\tadd\t4, r6, r7\n\tptr.add\tr1, r7, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_4[0], r3, r8\n\tjump.gt\t@.BB0_4\n\tadd\t191, r3, r8\n\tsub.s\t32, r0, r9\n\tand\tr8, r9, r8\n\tsub.s!\t@CPI0_4[0], r8, r9\n\tjump.gt\t@.BB0_4\n\tst.1\t64, r8\n\tst.1\t128, r3\n\tadd\tr6, r3, r6\n\tadd\t36, r6, r6\n\tsub!\tr6, r4, r4\n\tjump.gt\t@.BB0_2\n\tadd\t32, r7, r4\n\tptr.add\tr1, r4, r4\n\tand\t31, r3, r6\n\tshr.s!\t5, r3, r7\n\tjump.eq\t@.BB0_184\n\tadd\tr0, r0, r8\n.BB0_172:\n\tshl.s\t5, r8, r9\n\tptr.add\tr4, r9, r10\n\tld\tr10, r10\n\tadd\t160, r9, r9\n\tst.1\tr9, r10\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB0_172\n.BB0_184:\n\tsub!\tr6, r0, r8\n\tjump.eq\t@.BB0_174\n\tshl.s\t5, r7, r7\n\tptr.add\tr4, r7, r4\n\tshl.s\t3, r6, r6\n\tadd\t160, r7, r7\n\tld.1\tr7, r8\n\tshl\tr8, r6, r8\n\tshr\tr8, r6, r8\n\tld\tr4, r4\n\tsub\t256, r6, r6\n\tshr\tr4, r6, r4\n\tshl\tr4, r6, r4\n\tor\tr4, r8, r4\n\tst.1\tr7, r4\n.BB0_174:\n\tadd\t160, r3, r3\n\tst.1\tr3, r0\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r3\n\tjump\t@.BB0_175\n.BB0_1:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_1[0], r4, r2\n\tsub.s!\t@CPI0_2[0], r2, r2\n\tjump.gt\t@.BB0_6\n.BB0_4:\n\tadd\t@CPI0_27[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB0_5:\n\tst.1\t4, r1\n\tadd\t@CPI0_28[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_6:\n\tadd\t159, r4, r2\n\tand\t@CPI0_3[0], r2, r2\n\tst.1\t64, r2\n\tand\t31, r4, r2\n\tshr.s!\t5, r4, r3\n\tjump.eq\t@.BB0_185\n\tadd\tr0, r0, r5\n.BB0_8:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_8\n.BB0_185:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tshl.s\t3, r2, r2\n\tadd\t128, r3, r3\n\tld.1\tr3, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB0_10:\n\tsub.s!\t64, r4, r1\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r5\n\tsub.s!\t@CPI0_4[0], r5, r1\n\tjump.gt\t@.BB0_2\n\tadd\t128, r4, r1\n\tadd\t159, r5, r2\n\tsub!\tr2, r1, r2\n\tjump.ge\t@.BB0_2\n\tadd\t128, r5, r3\n\tld.1\tr3, r2\n\tsub.s!\t@CPI0_4[0], r2, r6\n\tjump.gt\t@.BB0_4\n\tadd\t63, r2, r6\n\tsub.s\t32, r0, r9\n\tand\tr6, r9, r6\n\tld.1\t64, r10\n\tadd\tr10, r6, r6\n\tsub!\tr6, r10, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_4[0], r6, r8\n\tjump.gt\t@.BB0_4\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r6\n\tst.1.inc\tr10, r2, r11\n\tadd\tr5, r2, r5\n\tadd\t160, r5, r5\n\tsub!\tr5, r1, r5\n\tjump.gt\t@.BB0_2\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_20\n\tadd\tr0, r0, r5\n.BB0_19:\n\tadd\t32, r5, r5\n\tadd\tr5, r10, r6\n\tadd\tr5, r3, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB0_19\n.BB0_20:\n\tadd\tr11, r2, r2\n\tst.1\tr2, r0\n\tld.1\t160, r5\n\tsub.s!\t@CPI0_4[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tadd\t31, r5, r2\n\tadd\t@CPI0_5[0], r0, r3\n\tsub!\tr2, r4, r4\n\tadd\tr0, r0, r4\n\tadd.ge\tr3, r0, r4\n\tand\t@CPI0_5[0], r2, r2\n\tsub!\tr2, r0, r6\n\tadd.ge\tr0, r0, r3\n\tsub.s!\t@CPI0_5[0], r2, r2\n\tadd.ne\tr4, r0, r3\n\tsub!\tr3, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t128, r5, r3\n\tld.1\tr3, r2\n\tsub.s!\t@CPI0_4[0], r2, r4\n\tjump.gt\t@.BB0_4\n\tadd\t63, r2, r4\n\tand\tr4, r9, r4\n\tld.1\t64, r8\n\tadd\tr8, r4, r4\n\tsub!\tr4, r8, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI0_4[0], r4, r7\n\tjump.gt\t@.BB0_4\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r4\n\tst.1.inc\tr8, r2, r4\n\tadd\tr4, r0, stack-[7]\n\tadd\tr5, r2, r4\n\tadd\t160, r4, r4\n\tsub!\tr4, r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tr11, r0, stack-[3]\n\tadd\tr10, r0, stack-[6]\n\tadd\tr9, r0, stack-[4]\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB0_29\n\tadd\tr0, r0, r1\n.BB0_28:\n\tadd\t32, r1, r1\n\tadd\tr1, r8, r4\n\tadd\tr1, r3, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr1, r2, r4\n\tjump.lt\t@.BB0_28\n.BB0_29:\n\tadd\tstack-[7], r2, r1\n\tst.1\tr1, r0\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_4\n\tadd\tr8, r0, stack-[1]\n\tsload\tr0, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tadd\tr3, r0, stack-[2]\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_31\n\tadd\tstack-[2], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_36\n\tst.1\t0, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[5], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[2], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_36\n.BB0_37:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_37\n.BB0_36:\n\tadd\tstack-[5], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_46\n\tst.1\t0, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[4], r0, r2\n\tadd\tstack-[6], r0, r6\n\tjump.eq\t@.BB0_2\n\tand!\tstack-[5], r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_43\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_42:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_42\n.BB0_43:\n\tsub.s!\tstack-[5], r3, r3\n\tjump.ge\t@.BB0_45\n\tadd\tstack-[5], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[6], r2, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_45:\n\tadd\tstack-[5], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n\tjump\t@.BB0_38\n.BB0_69:\n\tsub.s!\t@CPI0_18[0], r2, r3\n\tjump.gt\t@.BB0_73\n\tsub.s!\t@CPI0_22[0], r2, r3\n\tjump.eq\t@.BB0_85\n\tsub.s!\t@CPI0_23[0], r2, r3\n\tjump.eq\t@.BB0_93\n\tsub.s!\t@CPI0_24[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_getApproved, @DEFAULT_UNWIND\n\tjump\t@.BB0_106\n.BB0_77:\n\tsub.s!\t@CPI0_15[0], r2, r3\n\tjump.eq\t@.BB0_134\n\tsub.s!\t@CPI0_16[0], r2, r3\n\tjump.eq\t@.BB0_137\n\tsub.s!\t@CPI0_17[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r1\n\tadd.ne\tr5, r0, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_31\n\tst.1\t128, r1\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_148\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t160, r2\n\tsub!\tr1, r0, r1\n\tadd\t192, r0, r2\n\tadd.eq\t160, r0, r2\n\tjump\t@.BB0_146\n.BB0_73:\n\tsub.s!\t@CPI0_19[0], r2, r3\n\tjump.eq\t@.BB0_107\n\tsub.s!\t@CPI0_20[0], r2, r3\n\tjump.eq\t@.BB0_127\n\tsub.s!\t@CPI0_21[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t96, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r5\n\tsub.s!\t@CPI0_25[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_25[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r3\n\tadd\t160, r0, r1\n\tst.1\t64, r1\n\tst.1\t128, r0\n.BB0_175:\n\tadd\t128, r0, r4\n\tadd\tr5, r0, r1\n\tnear_call\tr0, @fun_safeTransferFrom, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_83:\n\tsub.s!\t@CPI0_11[0], r2, r3\n\tjump.eq\t@.BB0_176\n\tsub.s!\t@CPI0_12[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_25[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI0_25[0], r3, r1\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r2\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[7]\n\tadd\tr0, r0, r1\n\tadd\tr3, r0, stack-[6]\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tjump\t@.BB0_92\n.BB0_152:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_25[0], r3, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r4\n\tsub!\tr4, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tsub!\tr4, r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.caller\tr2\n\tsub!\tr2, r3, r1\n\tjump.ne\t@.BB0_158\n\tadd\t@CPI0_31[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t25, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_32[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_33[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_85:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_50[0], r1, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r2\n\tsub.s!\t@CPI0_51[0], r1, r3\n\tjump.eq\t@.BB0_91\n\tsub.s!\t@CPI0_52[0], r1, r3\n\tjump.eq\t@.BB0_91\n\tsub.s!\t@CPI0_53[0], r1, r1\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n.BB0_91:\n\tand\t1, r2, r1\n\tjump\t@.BB0_92\n.BB0_93:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r4\n\tand\t127, r4, r1\n\tadd.ne\tr4, r0, r1\n\tsub.s!\t31, r1, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\txor\tr2, r4, r4\n\tand!\t1, r4, r4\n\tjump.eq\t@.BB0_95\n.BB0_31:\n\tadd\t@CPI0_27[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tjump\t@.BB0_5\n.BB0_134:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_ownerOf, @DEFAULT_UNWIND\n.BB0_106:\n\tand\t@CPI0_25[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_38[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_137:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_25[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_142\n\tadd\t@CPI0_31[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t41, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_35[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_36[0], r0, r1\n\tst.1\t228, r1\n\tadd\t@CPI0_37[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_107:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[7]\n\tsub.s!\t@CPI0_25[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_29[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_25[0], r1, r1\n\tjump.ne\t@.BB0_113\n.BB0_112:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_47[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_31[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_48[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_127:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tr4, r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[7]\n\tadd\tr2, r0, stack-[6]\n\tadd\tr3, r0, r2\n\tadd\tr2, r0, stack-[5]\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_isApprovedOrOwner, @DEFAULT_UNWIND\n\tnear_call\tr0, @require_helper_stringliteral_eb80, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r1\n\tadd\tstack-[6], r0, r2\n\tadd\tstack-[5], r0, r3\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_176:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_requireMinted, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[7]\n\tnear_call\tr0, @finalize_allocation_10875, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r1\n\tst.1\tr1, r0\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[6]\n\tnear_call\tr0, @finalize_allocation_10875, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r1\n\tst.1\tr1, r0\n\tadd\t32, r0, r2\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[7]\n\tst.1.inc\tr3, r2, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tjump\t@.BB0_97\n.BB0_95:\n\tst.1\t128, r1\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_99\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t160, r2\n\tsub!\tr1, r0, r1\n\tadd\t192, r0, r2\n\tadd.eq\t160, r0, r2\n\tjump\t@.BB0_96\n.BB0_148:\n\tst.1\t0, r3\n\tadd\t160, r0, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_146\n\tadd\t@CPI0_34[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_150:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_150\n\tadd\t192, r3, r2\n.BB0_146:\n\tjump\t@.BB0_96\n.BB0_142:\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n.BB0_92:\n\tst.1\t128, r1\n\tadd\t@CPI0_26[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_99:\n\tadd\t160, r0, r2\n\tst.1\t0, r0\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_96\n\tadd\t@CPI0_49[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_101:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_101\n\tadd\t192, r3, r2\n.BB0_96:\n\tsub.s\t128, r2, r2\n\tadd\t128, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[6]\n\tst.1.inc\tr2, r1, r2\n\tadd\tstack-[7], r0, r1\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r4\n.BB0_97:\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_158:\n\tadd\tr2, r0, stack-[5]\n\tst.1\t0, r2\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r5\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr5, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_29[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr3, r0, stack-[7]\n\tadd\tr4, r0, stack-[6]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tst.1\t0, r3\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_29[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r4\n\tadd\tstack-[7], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\tr2, r4, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r4\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_30[0], r0, r4\n\tadd\tstack-[5], r0, r5\n.BB0_125:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_113:\n\tsub!\tstack-[7], r1, r2\n\tjump.ne\t@.BB0_116\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_45[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_46[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t33, r0, r3\n.BB0_115:\n\tst.1\tr2, r3\n\tadd\t@CPI0_31[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_116:\n\tcontext.caller\tr3\n\tsub!\tr3, r1, r2\n\tjump.ne\t@.BB0_117\n.BB0_121:\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_29[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_42[0], r2, r2\n\tor\tstack-[7], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_29[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_25[0], r1, r5\n\tjump.eq\t@.BB0_112\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_43[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_44[0], r0, r4\n\tadd\tstack-[7], r0, r6\n\tadd\tstack-[6], r0, r7\n\tjump\t@.BB0_125\n.BB0_117:\n\tadd\tr3, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_29[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_29[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_121\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_39[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_40[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t62, r0, r3\n\tjump\t@.BB0_115\n.BB0_46:\n\tsub!\tstack-[5], r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_48\n\tadd\tstack-[3], r0, r1\n\tld.1\tr1, r1\n.BB0_48:\n\tadd\tstack-[5], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n.BB0_38:\n\tsstore\tr0, r1\n\tadd\tstack-[1], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_4\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tadd\tr3, r0, stack-[5]\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_31\n\tadd\tstack-[5], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_54\n\tadd\t1, r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[5], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_54\n.BB0_55:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_55\n.BB0_54:\n\tadd\tstack-[6], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_64\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[4], r0, r2\n\tadd\tstack-[1], r0, r6\n\tjump.eq\t@.BB0_2\n\tand!\tstack-[6], r2, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tjump.eq\t@.BB0_61\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_60:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_60\n.BB0_61:\n\tsub.s!\tstack-[6], r3, r3\n\tjump.ge\t@.BB0_63\n\tadd\tstack-[6], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[1], r2, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_63:\n\tadd\tstack-[6], r0, r1\n\tshl.s\t1, r1, r1\n\tadd\tstack-[3], r0, r2\n\tjump\t@.BB0_56\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_64:\n\tsub!\tstack-[6], r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_66\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n.BB0_66:\n\tadd\tstack-[6], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n.BB0_56:\n\tor\tr1, r2, r1\n\tadd\tstack-[3], r0, r2\n\tsstore\tr2, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_7[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\nabi_encode_string:\n.func_begin1:\n\tld.1\tr1, r3\n\tst.1.inc\tr2, r3, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\tr2, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tadd\tr2, r3, r1\n\tst.1\tr1, r0\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\tr2, r1, r1\n\tret\n.func_end1:\n\nabi_decode_addresst_addresst_uint256:\n.func_begin2:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI2_0[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI2_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI2_0[0], r1, r1\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB2_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI2_1[0], r1, r2\n\tjump.gt\t@.BB2_1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI2_1[0], r2, r4\n\tjump.gt\t@.BB2_1\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tret\n.BB2_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nfinalize_allocation_10875:\n.func_begin3:\n\tsub.s!\t@CPI3_0[0], r1, r2\n\tjump.ge\t@.BB3_1\n\tadd\t32, r1, r1\n\tst.1\t64, r1\n\tret\n.BB3_1:\n\tadd\t@CPI3_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nfinalize_allocation:\n.func_begin4:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI4_0[0], r1, r3\n\tjump.gt\t@.BB4_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB4_2\n\tst.1\t64, r1\n\tret\n.BB4_2:\n\tadd\t@CPI4_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nfun_ownerOf:\n.func_begin5:\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI5_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI5_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI5_2[0], r1, r1\n\tjump.eq\t@.BB5_3\n\tret\n.BB5_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI5_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI5_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI5_0[0], r0, r2\n\tsub.s!\t@CPI5_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI5_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nfun_getApproved:\n.func_begin6:\n\tnop\tstack+=[1]\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI6_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI6_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI6_2[0], r1, r1\n\tjump.eq\t@.BB6_3\n\tadd\tstack-[1], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI6_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI6_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI6_2[0], r1, r1\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI6_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI6_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI6_0[0], r0, r2\n\tsub.s!\t@CPI6_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI6_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nrequire_helper_stringliteral_eb80:\n.func_begin7:\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB7_1\n\tret\n.BB7_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI7_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI7_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t46, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI7_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI7_3[0], r0, r2\n\tsub.s!\t@CPI7_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI7_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\nfun_safeTransferFrom:\n.func_begin8:\n\tnop\tstack+=[10]\n\tadd\tr4, r0, stack-[3]\n\tadd\tr2, r0, stack-[4]\n\tadd\tr1, r0, stack-[5]\n\tadd\tr3, r0, stack-[8]\n\tst.1\t0, r3\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI8_2[0], r1, r1\n\tjump.eq\t@.BB8_3\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[1]\n\tand\t@CPI8_2[0], r2, stack-[7]\n\tsub!\tstack-[7], r1, r2\n\tjump.eq\t@.BB8_14\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB8_14\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI8_2[0], r1, r1\n\tjump.eq\t@.BB8_3\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI8_2[0], r1, r1\n\tsub.s!\tstack-[7], r1, r1\n\tjump.ne\t@.BB8_12\n.BB8_14:\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI8_2[0], r1, stack-[7]\n\tjump.eq\t@.BB8_3\n\tadd\tstack-[5], r0, r1\n\tand\t@CPI8_2[0], r1, r1\n\tsub!\tstack-[7], r1, r1\n\tjump.ne\t@.BB8_17\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI8_2[0], r1, stack-[5]\n\tjump.eq\t@.BB8_19\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI8_9[0], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI8_2[0], r1, r5\n\tjump.eq\t@.BB8_3\n\tadd\t@CPI8_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_10[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI8_11[0], r0, r4\n\tadd\tr0, r0, r6\n\tadd\tstack-[8], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB8_1\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB8_26\n\tsub.s\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.eq\t@.BB8_26\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI8_9[0], r2, r2\n\tadd\tstack-[5], r0, r6\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_10[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI8_12[0], r0, r4\n\tadd\tstack-[7], r0, r5\n\tadd\tstack-[8], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB8_1\n\tcontext.sp\tr1\n\tadd\tr1, r0, stack-[6]\n\tadd\t@CPI8_13[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[4], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI8_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_14[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_33\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[3], r0, r6\n\tjump.eq\t@.BB8_35\n\tld.1\t64, r10\n\tadd\t100, r10, r1\n\tadd\t128, r0, r7\n\tst.1\tr1, r7\n\tadd\t68, r10, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r10, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI8_15[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t4, r10, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\tr1, r2\n\tld.1\tr6, r1\n\tadd\t132, r10, r2\n\tst.1\tr2, r1\n\tadd\t164, r10, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB8_39\n\tadd\tr0, r0, r3\n.BB8_38:\n\tadd\tr3, r2, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB8_38\n.BB8_39:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tcontext.gas_left\tr6\n\tadd\tstack-[5], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB8_41\n\tcontext.sp\tr5\n\tsub.s\t10, r5, r5\n\tmul\t32, r5, r5, r0\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tadd\t0, r0, stack-[10]\n\tjump\t@.BB8_46\n.BB8_35:\n\tcontext.sp\tr1\n\tsub\tstack-[6], r1, r1\n\tnop\tstack+=[r1]\n\tjump\t@.BB8_63\n.BB8_41:\n\tadd\tr7, r0, stack-[7]\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\t@CPI8_0[0], r0, r3\n\tsub.s!\t@CPI8_0[0], r10, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr10, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t164, r1, r1\n\tsub.s!\t@CPI8_0[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI8_0[0], r6, r4\n\tadd.ge\tr3, r0, r6\n\tshl.s\t192, r6, r3\n\tor\tr3, r1, r1\n\tadd\tr10, r0, stack-[8]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI8_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB8_65\n\tadd\tr0, r0, r7\n.BB8_43:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB8_43\n.BB8_65:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB8_45\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB8_45:\n\tadd\tr3, r0, stack[@returndatasize]\n\tcontext.sp\tr5\n\tsub.s\t9, r5, r5\n\tmul\t32, r5, r5, r0\n\tadd\t0, r0, stack-[9]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_51\n.BB8_46:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI8_17[0], r1, r4\n\tjump.gt\t@.BB8_48\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB8_48\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB8_1\n\tld.1\tr10, r1\n\tand\t@CPI8_18[0], r1, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB8_1\n\tshr.s\t5, r5, r2\n\tadd\tr1, r0, stack[r2]\n\tcontext.sp\tr2\n\tsub\tstack-[6], r2, r2\n\tnop\tstack+=[r2]\n\tsub.s!\t@CPI8_15[0], r1, r1\n\tjump.ne\t@.BB8_61\n.BB8_63:\n\tret\n.BB8_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI8_23[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI8_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI8_0[0], r0, r2\n\tsub.s!\t@CPI8_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI8_24[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_26:\n\tadd\t@CPI8_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tjump\t@.BB8_27\n.BB8_17:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI8_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI8_8[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tjump\t@.BB8_13\n.BB8_19:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI8_21[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI8_22[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n.BB8_13:\n\tst.1\tr2, r3\n\tadd\t@CPI8_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI8_0[0], r0, r2\n\tsub.s!\t@CPI8_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI8_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_33:\n\trevert\n.BB8_51:\n\tadd\t96, r0, r2\n\tsub!\tr3, r0, r4\n\tjump.ne\t@.BB8_53\n.BB8_52:\n\tld.1\tr2, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB8_59\n.BB8_61:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[8]\n\tadd\t@CPI8_5[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_stringliteral_1e76, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI8_0[0], r0, r2\n\tsub.s!\t@CPI8_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n.BB8_60:\n\tsub.s!\t@CPI8_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_12:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI8_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI8_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t46, r0, r3\n\tjump\t@.BB8_13\n.BB8_53:\n\tadd\t63, r3, r2\n\tand\t@CPI8_16[0], r2, r4\n\tld.1\t64, r2\n\tadd\tr2, r4, r4\n\tsub!\tr4, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI8_17[0], r4, r6\n\tjump.gt\t@.BB8_48\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB8_48\n\tst.1\t64, r4\n\tand\t31, r3, r4\n\tst.1.inc\tr2, r3, r8\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB8_64\n\tadd\tr0, r0, r5\n.BB8_57:\n\tshl.s\t5, r5, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB8_57\n.BB8_64:\n\tadd\tr8, r0, stack-[7]\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB8_52\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tstack-[7], r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n\tjump\t@.BB8_52\n.BB8_48:\n\tadd\t@CPI8_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB8_27:\n\tst.1\t4, r1\n\tadd\t@CPI8_20[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_59:\n\tadd\t@CPI8_0[0], r0, r2\n\tsub.s!\t@CPI8_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[7], r0, r4\n\tjump\t@.BB8_60\n.func_end8:\n\nabi_encode_stringliteral_1e76:\n.func_begin9:\n\tadd\t96, r1, r2\n\tadd\t@CPI9_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t@CPI9_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t50, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end9:\n\nfun_isApprovedOrOwner:\n.func_begin10:\n\tnop\tstack+=[3]\n\tadd\tr1, r0, stack-[3]\n\tadd\tr2, r0, stack-[2]\n\tst.1\t0, r2\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tst.1\t32, r1\n\tadd\t@CPI10_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI10_2[0], r1, r2\n\tjump.eq\t@.BB10_3\n\tadd\t1, r0, r1\n\tadd\tstack-[3], r0, r3\n\tand\t@CPI10_2[0], r3, stack-[3]\n\tsub!\tstack-[3], r2, r3\n\tjump.eq\t@.BB10_12\n\tst.1\t0, r2\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI10_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI10_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI10_0[0], r1, r2\n\tadd.ge\t@CPI10_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB10_12\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[1], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI10_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI10_2[0], r1, r1\n\tjump.eq\t@.BB10_3\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI10_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI10_2[0], r1, r1\n\tsub.s!\tstack-[3], r1, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n.BB10_12:\n\tret\n.BB10_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB10_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI10_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI10_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI10_0[0], r0, r2\n\tsub.s!\t@CPI10_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI10_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\nfun_transfer:\n.func_begin11:\n\tnop\tstack+=[5]\n\tadd\tr2, r0, stack-[1]\n\tadd\tr1, r0, stack-[2]\n\tadd\tr3, r0, stack-[5]\n\tst.1\t0, r3\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t32, r1\n\tadd\t@CPI11_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI11_2[0], r1, stack-[4]\n\tjump.eq\t@.BB11_3\n\tadd\tstack-[2], r0, r1\n\tand\t@CPI11_2[0], r1, r1\n\tsub!\tstack-[4], r1, r1\n\tjump.ne\t@.BB11_5\n\tadd\tstack-[1], r0, r1\n\tand!\t@CPI11_2[0], r1, stack-[2]\n\tjump.eq\t@.BB11_8\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI11_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI11_7[0], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_0[0], r1, r2\n\tadd.ge\t@CPI11_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI11_2[0], r1, r5\n\tjump.eq\t@.BB11_3\n\tadd\t@CPI11_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI11_9[0], r0, r4\n\tadd\tr0, r0, r6\n\tadd\tstack-[5], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB11_1\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_0[0], r1, r2\n\tadd.ge\t@CPI11_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB11_15\n\tsub.s\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[1], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI11_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.eq\t@.BB11_15\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI11_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI11_7[0], r2, r2\n\tadd\tstack-[2], r0, r6\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_0[0], r1, r2\n\tadd.ge\t@CPI11_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI11_10[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[5], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB11_1\n\tret\n.BB11_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB11_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI11_15[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI11_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI11_0[0], r0, r2\n\tsub.s!\t@CPI11_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI11_16[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB11_15:\n\tadd\t@CPI11_11[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI11_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB11_5:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI11_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI11_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tjump\t@.BB11_6\n.BB11_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI11_13[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI11_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n.BB11_6:\n\tst.1\tr2, r3\n\tadd\t@CPI11_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI11_0[0], r0, r2\n\tsub.s!\t@CPI11_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI11_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\nfun_requireMinted:\n.func_begin12:\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI12_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI12_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI12_2[0], r1, r1\n\tjump.eq\t@.BB12_3\n\tret\n.BB12_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI12_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_0[0], r0, r2\n\tsub.s!\t@CPI12_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\n__cxa_throw:\n\trevert\n\n__sha3:\n.func_begin13:\n\tadd\t@CPI14_0[0], r0, r3\n\tsub.s!\t@CPI14_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI14_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI14_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI14_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB14_2\n\tld\tr1, r1\n\tret\n.BB14_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\n__farcall:\n.func_begin14:\n.tmp0:\n\tfar_call\tr1, r2, @.BB15_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB15_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end14:\n\n__staticcall:\n.func_begin15:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB16_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB16_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end15:\n\n\t.data\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI5_0:\nCPI6_0:\nCPI7_3:\nCPI8_0:\nCPI10_0:\nCPI11_0:\nCPI12_0:\nCPI14_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -18446744073709551457\nCPI0_2:\n\t.cell -18446744073709551489\nCPI0_3:\nCPI8_16:\n\t.cell 8589934560\nCPI0_4:\nCPI4_0:\nCPI8_17:\n\t.cell 18446744073709551615\nCPI0_5:\nCPI2_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_6:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_7:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_8:\n\t.cell 1666326813\nCPI0_9:\n\t.cell 2720838756\nCPI0_10:\n\t.cell 3363526364\nCPI0_11:\n\t.cell 3363526365\nCPI0_12:\n\t.cell 3917867461\nCPI0_13:\n\t.cell 2720838757\nCPI0_14:\n\t.cell 3096268766\nCPI0_15:\n\t.cell 1666326814\nCPI0_16:\n\t.cell 1889567281\nCPI0_17:\n\t.cell 2514000705\nCPI0_18:\n\t.cell 157198258\nCPI0_19:\n\t.cell 157198259\nCPI0_20:\n\t.cell 599290589\nCPI0_21:\n\t.cell 1115958798\nCPI0_22:\n\t.cell 33540519\nCPI0_23:\n\t.cell 117300739\nCPI0_24:\n\t.cell 135795452\nCPI0_25:\nCPI2_1:\nCPI5_2:\nCPI6_2:\nCPI8_2:\nCPI10_2:\nCPI11_2:\nCPI12_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_26:\n\t.cell 2535301202817642044428229017600\nCPI0_27:\nCPI3_1:\nCPI4_1:\nCPI8_19:\nCPI11_11:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_28:\nCPI3_2:\nCPI4_2:\nCPI8_20:\nCPI11_12:\n\t.cell 2852213850513516153367582212096\nCPI0_29:\nCPI5_1:\nCPI6_1:\nCPI8_1:\nCPI10_1:\nCPI11_1:\nCPI12_1:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_30:\n\t.cell 10488878412788366941768124514102328501031624832915735463117339209566108871729\nCPI0_31:\nCPI5_4:\nCPI6_4:\nCPI7_2:\nCPI8_5:\nCPI10_4:\nCPI11_5:\nCPI12_4:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_32:\n\t.cell 31354931916645375393762213565866891172307618523953520621822726397682830540800\nCPI0_33:\n\t.cell 7922816253787617000789217640448\nCPI0_34:\n\t.cell -35707666377435648211887908874984608119992236509074197713628505308453184860938\nCPI0_35:\n\t.cell 31354931916645375393761059704421056284766179208589378268252292504104988604001\nCPI0_36:\n\t.cell 49035997637886268239882041675796387503892600671578232905754119059317383495680\nCPI0_37:\n\t.cell 10458117454244075803782624051200\nCPI0_38:\n\t.cell 2535301200456458802993406410752\nCPI0_39:\n\t.cell 48576686418507356219831364983007919279578195479598191958095172491531881545728\nCPI0_40:\n\t.cell 31354931916645375393762213565866891172284950498046585739320112041512459596911\nCPI0_41:\nCPI7_4:\nCPI8_6:\nCPI11_6:\n\t.cell 10458117451882892562347801444352\nCPI0_42:\nCPI8_9:\nCPI11_7:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_43:\nCPI8_10:\nCPI11_8:\nCPI14_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_44:\nCPI8_11:\nCPI11_9:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI0_45:\n\t.cell 51563664738492368274558954261681333965909290046418063673820955378523815542784\nCPI0_46:\n\t.cell 31354931916645375393762213565866890849608307089744918678309194418033790512741\nCPI0_47:\nCPI5_3:\nCPI6_3:\nCPI8_23:\nCPI10_3:\nCPI11_15:\nCPI12_3:\n\t.cell 31354931916645375393958183653158686846599388074356949121886454872141515980800\nCPI0_48:\nCPI5_5:\nCPI6_5:\nCPI8_24:\nCPI10_5:\nCPI11_16:\nCPI12_5:\n\t.cell 7922816251426433759354395033600\nCPI0_49:\n\t.cell 18569430475105882587588266137607568536673111973893317399460219858819262702947\nCPI0_50:\nCPI8_18:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_51:\n\t.cell -57591534043048631271602713168962198724648561309353517944097662808962438791168\nCPI0_52:\n\t.cell 41326688264978518566617017154793646184809722027297161851759941631668658372608\nCPI0_53:\n\t.cell 904250603428552709895185118199468575982109441609966099573332780532423983104\nCPI3_0:\n\t.cell 18446744073709551584\nCPI7_0:\nCPI8_3:\n\t.cell 51620966041236425454300223973180400554375694480679556984629941846732647170048\nCPI7_1:\nCPI8_4:\n\t.cell 31354931916645375393809815203201166297542482068262457279726729202739757674085\nCPI8_7:\nCPI11_3:\n\t.cell 50417742920509558439106150551775209266858149941038353264781520106005609840640\nCPI8_8:\nCPI11_4:\n\t.cell 31354931916645375394228278154242914900316605976059021079503402663591234728992\nCPI8_12:\nCPI11_10:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI8_13:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI8_14:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI8_15:\n\t.cell 9518847204935358166548570266051330015907116135037852959641967396525866745856\nCPI8_21:\nCPI11_13:\n\t.cell 51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI8_22:\nCPI11_14:\n\t.cell 31354931916645375394228278154242914900316678601111040334909412358260906878052\nCPI9_0:\n\t.cell 44958151438609599421424650306347963631972141104775375727422033337783813144576\nCPI9_1:\n\t.cell 31354931916645375394228278154242914900316678601109191929828695483653754540645\n","bytecode":{"object":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":"/// @use-src 5:\"@openzeppelin/contracts/token/ERC721/IERC721.sol\", 8:\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\", 10:\"@openzeppelin/contracts/utils/Context.sol\", 12:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 13:\"@openzeppelin/contracts/utils/introspection/IERC165.sol\", 20:\"contracts/lib/ERC721.sol\"\nobject \"ERC721_4702\" {\n    code {\n        {\n            /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"ERC721_4702\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let offset := mload(memoryDataOffset)\n            let _2 := sub(shl(64, 1), 1)\n            if gt(offset, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let value0 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n            let _3 := 32\n            let offset_1 := mload(add(memoryDataOffset, _3))\n            if gt(offset_1, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let value1 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1)\n            let newLen := mload(value0)\n            if gt(newLen, _2)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x24)\n            }\n            /// @src -1:-1:-1\n            let _4 := 0\n            /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let _5 := sload(/** @src -1:-1:-1 */ _4)\n            /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let length := /** @src -1:-1:-1 */ _4\n            /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let _6 := 1\n            length := shr(_6, _5)\n            let outOfPlaceEncoding := and(_5, _6)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, _3))\n            {\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ _4, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x24)\n            }\n            let _7 := 31\n            if gt(length, _7)\n            {\n                mstore(/** @src -1:-1:-1 */ _4, _4)\n                /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _4, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _3)\n                let deleteStart := add(data, shr(5, add(newLen, _7)))\n                if lt(newLen, _3) { deleteStart := data }\n                let _8 := add(data, shr(5, add(length, _7)))\n                let start := deleteStart\n                for { } lt(start, _8) { start := add(start, _6) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _4)\n                }\n            }\n            /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let srcOffset := /** @src -1:-1:-1 */ _4\n            /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            srcOffset := _3\n            switch gt(newLen, _7)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                mstore(/** @src -1:-1:-1 */ _4, _4)\n                /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ _4, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _3)\n                let i := /** @src -1:-1:-1 */ _4\n                /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                for { } lt(i, loopEnd) { i := add(i, _3) }\n                {\n                    sstore(dstPtr, mload(add(value0, srcOffset)))\n                    dstPtr := add(dstPtr, _6)\n                    srcOffset := add(srcOffset, _3)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(value0, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src -1:-1:-1 */ _4, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ add(shl(_6, newLen), _6))\n            }\n            default {\n                let value := /** @src -1:-1:-1 */ _4\n                /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                if newLen\n                {\n                    value := mload(add(value0, srcOffset))\n                }\n                sstore(/** @src -1:-1:-1 */ _4, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ or(and(value, not(shr(shl(3, newLen), not(0)))), shl(_6, newLen)))\n            }\n            let newLen_1 := mload(value1)\n            if gt(newLen_1, _2)\n            {\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ _4, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x24)\n            }\n            let _9 := sload(_6)\n            let length_1 := /** @src -1:-1:-1 */ _4\n            /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            length_1 := shr(_6, _9)\n            let outOfPlaceEncoding_1 := and(_9, _6)\n            if iszero(outOfPlaceEncoding_1)\n            {\n                length_1 := and(length_1, 0x7f)\n            }\n            if eq(outOfPlaceEncoding_1, lt(length_1, _3))\n            {\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ _4, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x24)\n            }\n            if gt(length_1, _7)\n            {\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _6)\n                let data_1 := keccak256(/** @src -1:-1:-1 */ _4, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _3)\n                let deleteStart_1 := add(data_1, shr(5, add(newLen_1, _7)))\n                if lt(newLen_1, _3) { deleteStart_1 := data_1 }\n                let _10 := add(data_1, shr(5, add(length_1, _7)))\n                let start_1 := deleteStart_1\n                for { } lt(start_1, _10) { start_1 := add(start_1, _6) }\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ _4)\n                }\n            }\n            /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let srcOffset_1 := /** @src -1:-1:-1 */ _4\n            /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            srcOffset_1 := _3\n            switch gt(newLen_1, _7)\n            case 1 {\n                let loopEnd_1 := and(newLen_1, not(31))\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _6)\n                let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ _4, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _3)\n                let i_1 := /** @src -1:-1:-1 */ _4\n                /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _3) }\n                {\n                    sstore(dstPtr_1, mload(add(value1, srcOffset_1)))\n                    dstPtr_1 := add(dstPtr_1, _6)\n                    srcOffset_1 := add(srcOffset_1, _3)\n                }\n                if lt(loopEnd_1, newLen_1)\n                {\n                    let lastValue_1 := mload(add(value1, srcOffset_1))\n                    sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(3, newLen_1), 248), not(0)))))\n                }\n                sstore(_6, add(shl(_6, newLen_1), _6))\n            }\n            default {\n                let value_1 := /** @src -1:-1:-1 */ _4\n                /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                if newLen_1\n                {\n                    value_1 := mload(add(value1, srcOffset_1))\n                }\n                sstore(_6, or(and(value_1, not(shr(shl(3, newLen_1), not(0)))), shl(_6, newLen_1)))\n            }\n            let _11 := mload(64)\n            let _12 := datasize(\"ERC721_4702_deployed\")\n            codecopy(_11, dataoffset(\"ERC721_4702_deployed\"), _12)\n            return(_11, _12)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_string_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n            let _1 := mload(offset)\n            if gt(_1, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x24)\n            }\n            let _2 := 0x20\n            let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n            mstore(array_1, _1)\n            if gt(add(add(offset, _1), _2), end)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            for { } lt(i, _1) { i := add(i, _2) }\n            {\n                mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n            }\n            mstore(add(add(array_1, _1), _2), /** @src -1:-1:-1 */ 0)\n            /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n            array := array_1\n        }\n    }\n    /// @use-src 10:\"@openzeppelin/contracts/utils/Context.sol\", 11:\"@openzeppelin/contracts/utils/Strings.sol\", 12:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 14:\"@openzeppelin/contracts/utils/math/Math.sol\", 20:\"contracts/lib/ERC721.sol\"\n    object \"ERC721_4702_deployed\" {\n        code {\n            {\n                /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    switch shr(224, calldataload(_4))\n                    case 0x01ffc9a7 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let value := calldataload(_3)\n                        let _5 := and(value, shl(224, 0xffffffff))\n                        if iszero(eq(value, _5)) { revert(_4, _4) }\n                        /// @src 20:2554:2658  \"interfaceId == type(IERC721).interfaceId ||...\"\n                        let expr := /** @src 20:2554:2594  \"interfaceId == type(IERC721).interfaceId\" */ eq(_5, /** @src 20:2569:2594  \"type(IERC721).interfaceId\" */ shl(224, 0x80ac58cd))\n                        /// @src 20:2554:2658  \"interfaceId == type(IERC721).interfaceId ||...\"\n                        if iszero(expr)\n                        {\n                            expr := /** @src 20:2610:2658  \"interfaceId == type(IERC721Metadata).interfaceId\" */ eq(_5, /** @src 20:2625:2658  \"type(IERC721Metadata).interfaceId\" */ shl(224, 0x5b5e139f))\n                        }\n                        /// @src 20:2554:2710  \"interfaceId == type(IERC721).interfaceId ||...\"\n                        let expr_1 := expr\n                        if iszero(expr)\n                        {\n                            expr_1 := /** @src 12:937:977  \"interfaceId == type(IERC165).interfaceId\" */ eq(_5, /** @src 12:952:977  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                        }\n                        /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        mstore(_1, iszero(iszero(expr_1)))\n                        return(_1, 32)\n                    }\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPtr := mload(_2)\n                        let ret := _4\n                        let slotValue := sload(_4)\n                        let length := _4\n                        let _6 := 1\n                        length := shr(_6, slotValue)\n                        let outOfPlaceEncoding := and(slotValue, _6)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        let _7 := 32\n                        if eq(outOfPlaceEncoding, lt(length, _7))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x22)\n                            revert(_4, 0x24)\n                        }\n                        mstore(memPtr, length)\n                        switch outOfPlaceEncoding\n                        case 0 {\n                            mstore(add(memPtr, _7), and(slotValue, not(255)))\n                            ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _7)\n                        }\n                        case 1 {\n                            mstore(_4, _4)\n                            let dataPos := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                            let i := _4\n                            for { } lt(i, length) { i := add(i, _7) }\n                            {\n                                mstore(add(add(memPtr, i), _7), sload(dataPos))\n                                dataPos := add(dataPos, _6)\n                            }\n                            ret := add(add(memPtr, i), _7)\n                        }\n                        finalize_allocation(memPtr, sub(ret, memPtr))\n                        let memPos := mload(_2)\n                        mstore(memPos, _7)\n                        return(memPos, sub(abi_encode_string(memPtr, add(memPos, _7)), memPos))\n                    }\n                    case 0x081812fc {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let ret_1 := fun_getApproved(calldataload(_3))\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, and(ret_1, sub(shl(160, 1), 1)))\n                        return(memPos_1, 32)\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0 := abi_decode_address_8364()\n                        let value_1 := calldataload(36)\n                        let _8 := sub(shl(160, 1), 1)\n                        /// @src 20:4444:4455  \"to != owner\"\n                        let _9 := /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 20:4410:4426  \"ownerOf(tokenId)\" */ fun_ownerOf(value_1), /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _8)\n                        let _10 := and(/** @src 20:4444:4455  \"to != owner\" */ value0, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _8)\n                        if /** @src 20:4444:4455  \"to != owner\" */ eq(/** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _10, /** @src 20:4444:4455  \"to != owner\" */ _9)\n                        /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        {\n                            let memPtr_1 := mload(_2)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, _3), 32)\n                            mstore(add(memPtr_1, 36), 33)\n                            mstore(add(memPtr_1, 68), \"ERC721: approval to current owne\")\n                            mstore(add(memPtr_1, 100), \"r\")\n                            revert(memPtr_1, 132)\n                        }\n                        /// @src 20:4525:4587  \"_msgSender() == owner || isApprovedForAll(owner, _msgSender())\"\n                        let expr_2 := /** @src 20:4525:4546  \"_msgSender() == owner\" */ eq(/** @src 10:719:729  \"msg.sender\" */ caller(), /** @src 20:4525:4546  \"_msgSender() == owner\" */ _9)\n                        /// @src 20:4525:4587  \"_msgSender() == owner || isApprovedForAll(owner, _msgSender())\"\n                        if iszero(expr_2)\n                        {\n                            /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                            mstore(_4, _9)\n                            mstore(32, /** @src 20:5348:5366  \"_operatorApprovals\" */ 0x05)\n                            /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                            let _11 := keccak256(_4, _2)\n                            mstore(_4, /** @src 10:719:729  \"msg.sender\" */ caller())\n                            /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                            mstore(32, _11)\n                            /// @src 20:4525:4587  \"_msgSender() == owner || isApprovedForAll(owner, _msgSender())\"\n                            expr_2 := /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(sload(keccak256(_4, _2)), 0xff)\n                        }\n                        if iszero(expr_2)\n                        {\n                            let memPtr_2 := mload(_2)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, _3), 32)\n                            mstore(add(memPtr_2, 36), 62)\n                            mstore(add(memPtr_2, 68), \"ERC721: approve caller is not to\")\n                            mstore(add(memPtr_2, 100), \"ken owner nor approved for all\")\n                            revert(memPtr_2, 132)\n                        }\n                        mstore(_4, value_1)\n                        mstore(0x20, _3)\n                        let _12 := keccak256(_4, _2)\n                        sstore(_12, or(and(sload(_12), shl(160, 0xffffffffffffffffffffffff)), _10))\n                        /// @src 20:11977:12016  \"Approval(ownerOf(tokenId), to, tokenId)\"\n                        log4(/** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _4, _4, /** @src 20:11977:12016  \"Approval(ownerOf(tokenId), to, tokenId)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 20:11986:12002  \"ownerOf(tokenId)\" */ fun_ownerOf(value_1), /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _8), _10, /** @src 20:11977:12016  \"Approval(ownerOf(tokenId), to, tokenId)\" */ value_1)\n                        /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        return(_4, _4)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_4, _4) }\n                        let param, param_1, param_2 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        /// @src 20:5633:5733  \"require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\")\"\n                        require_helper_stringliteral_eb80(/** @src 20:5641:5682  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ fun_isApprovedOrOwner(/** @src 10:719:729  \"msg.sender\" */ caller(), /** @src 20:5641:5682  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ param_2))\n                        /// @src 20:5764:5771  \"tokenId\"\n                        fun_transfer(param, param_1, param_2)\n                        /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        return(_4, _4)\n                    }\n                    case 0x42842e0e {\n                        if callvalue() { revert(_4, _4) }\n                        let param_3, param_4, param_5 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        let memPtr_3 := mload(_2)\n                        let newFreePtr := add(memPtr_3, 0x20)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_3))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_2, newFreePtr)\n                        mstore(memPtr_3, _4)\n                        /// @src 20:5978:6017  \"safeTransferFrom(from, to, tokenId, \\\"\\\")\"\n                        fun_safeTransferFrom(param_3, param_4, param_5, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ memPtr_3)\n                        return(_4, _4)\n                    }\n                    case 0x6352211e {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let ret_2 := fun_ownerOf(calldataload(_3))\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, and(ret_2, sub(shl(160, 1), 1)))\n                        return(memPos_2, 32)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let _13 := and(abi_decode_address_8364(), sub(shl(160, 1), 1))\n                        if /** @src 20:2875:2894  \"owner != address(0)\" */ iszero(/** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _13)\n                        {\n                            let memPtr_4 := mload(_2)\n                            mstore(memPtr_4, shl(229, 4594637))\n                            mstore(add(memPtr_4, _3), 32)\n                            mstore(add(memPtr_4, 36), 41)\n                            mstore(add(memPtr_4, 68), \"ERC721: address zero is not a va\")\n                            mstore(add(memPtr_4, 100), \"lid owner\")\n                            revert(memPtr_4, 132)\n                        }\n                        mstore(_4, _13)\n                        mstore(32, /** @src 20:2957:2966  \"_balances\" */ 0x03)\n                        /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        let _14 := sload(keccak256(_4, _2))\n                        let memPos_3 := mload(_2)\n                        mstore(memPos_3, _14)\n                        return(memPos_3, 32)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPtr_5 := mload(_2)\n                        let ret_3 := _4\n                        /// @src 20:3567:3574  \"_symbol\"\n                        let _15 := 0x01\n                        /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        let slotValue_1 := sload(/** @src 20:3567:3574  \"_symbol\" */ _15)\n                        /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        let length_1 := _4\n                        length_1 := shr(/** @src 20:3567:3574  \"_symbol\" */ _15, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ slotValue_1)\n                        let outOfPlaceEncoding_1 := and(slotValue_1, /** @src 20:3567:3574  \"_symbol\" */ _15)\n                        /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        if iszero(outOfPlaceEncoding_1)\n                        {\n                            length_1 := and(length_1, 0x7f)\n                        }\n                        let _16 := 32\n                        if eq(outOfPlaceEncoding_1, lt(length_1, _16))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x22)\n                            revert(_4, 0x24)\n                        }\n                        mstore(memPtr_5, length_1)\n                        switch outOfPlaceEncoding_1\n                        case 0 {\n                            mstore(add(memPtr_5, _16), and(slotValue_1, not(255)))\n                            ret_3 := add(add(memPtr_5, shl(5, iszero(iszero(length_1)))), _16)\n                        }\n                        case 1 {\n                            mstore(_4, /** @src 20:3567:3574  \"_symbol\" */ _15)\n                            /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                            let dataPos_1 := 80084422859880547211683076133703299733277748156566366325829078699459944778998\n                            let i_1 := _4\n                            for { } lt(i_1, length_1) { i_1 := add(i_1, _16) }\n                            {\n                                mstore(add(add(memPtr_5, i_1), _16), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, /** @src 20:3567:3574  \"_symbol\" */ _15)\n                            }\n                            /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                            ret_3 := add(add(memPtr_5, i_1), _16)\n                        }\n                        finalize_allocation(memPtr_5, sub(ret_3, memPtr_5))\n                        let memPos_4 := mload(_2)\n                        mstore(memPos_4, _16)\n                        return(memPos_4, sub(abi_encode_string(memPtr_5, add(memPos_4, _16)), memPos_4))\n                    }\n                    case 0xa22cb465 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_1 := abi_decode_address_8364()\n                        let value_2 := calldataload(36)\n                        let _17 := iszero(iszero(value_2))\n                        if iszero(eq(value_2, _17)) { revert(_4, _4) }\n                        let _18 := and(/** @src 20:12300:12317  \"owner != operator\" */ value0_1, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ sub(shl(160, 1), 1))\n                        if /** @src 20:12300:12317  \"owner != operator\" */ eq(/** @src 10:719:729  \"msg.sender\" */ caller(), /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _18)\n                        {\n                            let memPtr_6 := mload(_2)\n                            mstore(memPtr_6, shl(229, 4594637))\n                            mstore(add(memPtr_6, _3), 32)\n                            mstore(add(memPtr_6, 36), 25)\n                            mstore(add(memPtr_6, 68), \"ERC721: approve to caller\")\n                            revert(memPtr_6, 100)\n                        }\n                        mstore(_4, /** @src 10:719:729  \"msg.sender\" */ caller())\n                        /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        mstore(32, /** @src 20:12357:12375  \"_operatorApprovals\" */ 0x05)\n                        /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        let _19 := keccak256(_4, _2)\n                        mstore(_4, _18)\n                        mstore(32, _19)\n                        let dataSlot := keccak256(_4, _2)\n                        let value_3 := and(sload(dataSlot), not(255))\n                        sstore(dataSlot, or(value_3, and(_17, 255)))\n                        /// @src 20:12418:12459  \"ApprovalForAll(owner, operator, approved)\"\n                        let _20 := /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ mload(_2)\n                        mstore(_20, _17)\n                        /// @src 20:12418:12459  \"ApprovalForAll(owner, operator, approved)\"\n                        log3(_20, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 32, /** @src 20:12418:12459  \"ApprovalForAll(owner, operator, approved)\" */ 0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, /** @src 10:719:729  \"msg.sender\" */ caller(), /** @src 20:12418:12459  \"ApprovalForAll(owner, operator, approved)\" */ _18)\n                        /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        return(_4, _4)\n                    }\n                    case 0xb88d4fde {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 128) { revert(_4, _4) }\n                        let value0_2 := abi_decode_address_8364()\n                        let value1 := abi_decode_address()\n                        let offset := calldataload(100)\n                        if gt(offset, 0xffffffffffffffff) { revert(_4, _4) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(_4, _4) }\n                        let _21 := calldataload(add(_3, offset))\n                        let _22 := array_allocation_size_bytes(_21)\n                        let memPtr_7 := mload(_2)\n                        finalize_allocation(memPtr_7, _22)\n                        mstore(memPtr_7, _21)\n                        if gt(add(add(offset, _21), 36), calldatasize()) { revert(_4, _4) }\n                        calldatacopy(add(memPtr_7, 32), add(offset, 36), _21)\n                        mstore(add(add(memPtr_7, _21), 32), _4)\n                        fun_safeTransferFrom(value0_2, value1, calldataload(68), memPtr_7)\n                        return(_4, _4)\n                    }\n                    case 0xc87b56dd {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        /// @src 20:3760:3767  \"tokenId\"\n                        fun_requireMinted(/** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ calldataload(_3))\n                        let memPtr_8 := mload(_2)\n                        finalize_allocation_10875(memPtr_8)\n                        mstore(memPtr_8, _4)\n                        let memPtr_9 := mload(_2)\n                        finalize_allocation_10875(memPtr_9)\n                        mstore(memPtr_9, _4)\n                        let memPos_5 := mload(_2)\n                        mstore(memPos_5, 32)\n                        return(memPos_5, sub(abi_encode_string(memPtr_9, add(memPos_5, 32)), memPos_5))\n                    }\n                    case 0xe985e9c5 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_3 := abi_decode_address_8364()\n                        let value1_1 := abi_decode_address()\n                        let _23 := sub(shl(160, 1), 1)\n                        mstore(_4, and(value0_3, _23))\n                        mstore(32, /** @src 20:5348:5366  \"_operatorApprovals\" */ 0x05)\n                        /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        let _24 := keccak256(_4, _2)\n                        mstore(_4, and(value1_1, _23))\n                        mstore(32, _24)\n                        let value_4 := and(sload(keccak256(_4, _2)), 0xff)\n                        let memPos_6 := mload(_2)\n                        mstore(memPos_6, iszero(iszero(value_4)))\n                        return(memPos_6, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                mstore(add(add(pos, length), 0x20), 0)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_decode_address_8364() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                value1 := value_1\n                value2 := calldataload(68)\n            }\n            function finalize_allocation_10875(memPtr)\n            {\n                let newFreePtr := add(memPtr, 32)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function require_helper_stringliteral_b08d(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 24)\n                    mstore(add(memPtr, 68), \"ERC721: invalid token ID\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 3983 @src 20:3037:3255  \"function ownerOf(uint256 tokenId) public view virtual override returns (address) {...\"\n            function fun_ownerOf(var_tokenId) -> var\n            {\n                /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ var_tokenId)\n                mstore(0x20, /** @src 20:3144:3151  \"_owners\" */ 0x02)\n                /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let cleaned := and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40)), sub(shl(160, 1), 1))\n                /// @src 20:3170:3226  \"require(owner != address(0), \\\"ERC721: invalid token ID\\\")\"\n                require_helper_stringliteral_b08d(/** @src 20:3178:3197  \"owner != address(0)\" */ iszero(iszero(/** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ cleaned)))\n                /// @src 20:3236:3248  \"return owner\"\n                var := cleaned\n            }\n            /// @ast-id 4111 @src 20:4775:4942  \"function getApproved(uint256 tokenId) public view virtual override returns (address) {...\"\n            function fun_getApproved(var_tokenId) -> var\n            {\n                /// @src 20:4885:4892  \"tokenId\"\n                fun_requireMinted(var_tokenId)\n                /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ var_tokenId)\n                mstore(0x20, /** @src 20:4911:4926  \"_tokenApprovals\" */ 0x04)\n                /// @src 20:4904:4935  \"return _tokenApprovals[tokenId]\"\n                var := /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40)), sub(shl(160, 1), 1))\n            }\n            function require_helper_stringliteral_eb80(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 46)\n                    mstore(add(memPtr, 68), \"ERC721: caller is not token owne\")\n                    mstore(add(memPtr, 100), \"r nor approved\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 4222 @src 20:6090:6405  \"function safeTransferFrom(...\"\n            function fun_safeTransferFrom(var_from, var_to, var_tokenId, var_data_4201_mpos)\n            {\n                /// @src 20:6250:6350  \"require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\")\"\n                require_helper_stringliteral_eb80(/** @src 20:6258:6299  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ fun_isApprovedOrOwner(/** @src 10:719:729  \"msg.sender\" */ caller(), /** @src 20:6258:6299  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ var_tokenId))\n                /// @src 20:7436:7443  \"tokenId\"\n                fun_transfer(var_from, var_to, var_tokenId)\n                /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                if iszero(/** @src 20:7462:7509  \"_checkOnERC721Received(from, to, tokenId, data)\" */ fun_checkOnERC721Received(var_from, var_to, var_tokenId, var_data_4201_mpos))\n                /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    revert(memPtr, sub(abi_encode_stringliteral_1e76(add(memPtr, 4)), memPtr))\n                }\n            }\n            function abi_encode_stringliteral_1e76(headStart) -> tail\n            {\n                mstore(headStart, 32)\n                mstore(add(headStart, 32), 50)\n                mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n                mstore(add(headStart, 96), \"ceiver implementer\")\n                tail := add(headStart, 128)\n            }\n            /// @ast-id 4302 @src 20:8157:8411  \"function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {...\"\n            function fun_isApprovedOrOwner(var_spender, var_tokenId) -> var\n            {\n                /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 20:8316:8332  \"spender == owner\"\n                let _2 := /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 20:8282:8298  \"ownerOf(tokenId)\" */ fun_ownerOf(var_tokenId), /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                /// @src 20:8316:8332  \"spender == owner\"\n                let _3 := /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 20:8316:8332  \"spender == owner\" */ var_spender, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                /// @src 20:8316:8368  \"spender == owner || isApprovedForAll(owner, spender)\"\n                let expr := /** @src 20:8316:8332  \"spender == owner\" */ eq(_3, _2)\n                /// @src 20:8316:8368  \"spender == owner || isApprovedForAll(owner, spender)\"\n                if iszero(expr)\n                {\n                    /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _2)\n                    mstore(0x20, /** @src 20:5348:5366  \"_operatorApprovals\" */ 0x05)\n                    /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                    let _4 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40)\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _3)\n                    mstore(0x20, _4)\n                    /// @src 20:8316:8368  \"spender == owner || isApprovedForAll(owner, spender)\"\n                    expr := /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40)), 0xff)\n                }\n                /// @src 20:8316:8403  \"spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender\"\n                let expr_1 := expr\n                if iszero(expr)\n                {\n                    expr_1 := /** @src 20:8372:8403  \"getApproved(tokenId) == spender\" */ eq(/** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 20:8372:8392  \"getApproved(tokenId)\" */ fun_getApproved(var_tokenId), /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1), /** @src 20:8372:8403  \"getApproved(tokenId) == spender\" */ _3)\n                }\n                /// @src 20:8308:8404  \"return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender)\"\n                var := expr_1\n            }\n            /// @ast-id 4546 @src 20:11149:11747  \"function _transfer(...\"\n            function fun_transfer(var_from, var_to, var_tokenId)\n            {\n                /// @src 20:11276:11292  \"ownerOf(tokenId)\"\n                let expr := fun_ownerOf(var_tokenId)\n                /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 20:11276:11300  \"ownerOf(tokenId) == from\" */ var_from, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                if iszero(/** @src 20:11276:11300  \"ownerOf(tokenId) == from\" */ eq(/** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 20:11276:11300  \"ownerOf(tokenId) == from\" */ expr, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1), _2))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC721: transfer from incorrect \")\n                    mstore(add(memPtr, 100), \"owner\")\n                    revert(memPtr, 132)\n                }\n                let _3 := and(/** @src 20:11360:11376  \"to != address(0)\" */ var_to, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1)\n                if /** @src 20:11360:11376  \"to != address(0)\" */ iszero(/** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _3)\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 36)\n                    mstore(add(memPtr_1, 68), \"ERC721: transfer to the zero add\")\n                    mstore(add(memPtr_1, 100), \"ress\")\n                    revert(memPtr_1, 132)\n                }\n                let _4 := 0\n                mstore(_4, var_tokenId)\n                mstore(0x20, /** @src 20:11933:11948  \"_tokenApprovals\" */ 0x04)\n                /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _5 := keccak256(_4, 0x40)\n                let _6 := shl(160, 0xffffffffffffffffffffffff)\n                sstore(_5, and(sload(_5), _6))\n                /// @src 20:11977:12016  \"Approval(ownerOf(tokenId), to, tokenId)\"\n                log4(/** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _4, _4, /** @src 20:11977:12016  \"Approval(ownerOf(tokenId), to, tokenId)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 20:11986:12002  \"ownerOf(tokenId)\" */ fun_ownerOf(var_tokenId), /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1), _4, /** @src 20:11977:12016  \"Approval(ownerOf(tokenId), to, tokenId)\" */ var_tokenId)\n                /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(_4, _2)\n                mstore(0x20, /** @src 20:11569:11578  \"_balances\" */ 0x03)\n                /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let dataSlot := keccak256(_4, 0x40)\n                let _7 := sload(/** @src 20:11569:11589  \"_balances[from] -= 1\" */ dataSlot)\n                /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let diff := add(_7, not(0))\n                if gt(diff, _7)\n                {\n                    mstore(_4, shl(224, 0x4e487b71))\n                    mstore(/** @src 20:11933:11948  \"_tokenApprovals\" */ 0x04, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x11)\n                    revert(_4, 0x24)\n                }\n                sstore(dataSlot, diff)\n                mstore(_4, _3)\n                mstore(0x20, /** @src 20:11569:11578  \"_balances\" */ 0x03)\n                /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let dataSlot_1 := keccak256(_4, 0x40)\n                let _8 := sload(/** @src 20:11599:11617  \"_balances[to] += 1\" */ dataSlot_1)\n                /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let sum := add(_8, /** @src 20:11588:11589  \"1\" */ 0x01)\n                /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                if gt(_8, sum)\n                {\n                    mstore(_4, shl(224, 0x4e487b71))\n                    mstore(/** @src 20:11933:11948  \"_tokenApprovals\" */ 0x04, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x11)\n                    revert(_4, 0x24)\n                }\n                sstore(dataSlot_1, sum)\n                mstore(_4, var_tokenId)\n                mstore(0x20, /** @src 20:11627:11634  \"_owners\" */ 0x02)\n                /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                let _9 := keccak256(_4, 0x40)\n                sstore(_9, or(and(sload(_9), _6), _3))\n                /// @src 20:11664:11691  \"Transfer(from, to, tokenId)\"\n                log4(/** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _4, _4, /** @src 20:11664:11691  \"Transfer(from, to, tokenId)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _3, var_tokenId)\n            }\n            /// @ast-id 4615 @src 20:12550:12683  \"function _requireMinted(uint256 tokenId) internal view virtual {...\"\n            function fun_requireMinted(var_tokenId)\n            {\n                /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ var_tokenId)\n                mstore(0x20, /** @src 20:7962:7969  \"_owners\" */ 0x02)\n                /// @src 20:12623:12676  \"require(_exists(tokenId), \\\"ERC721: invalid token ID\\\")\"\n                require_helper_stringliteral_b08d(/** @src 20:7962:7992  \"_owners[tokenId] != address(0)\" */ iszero(iszero(/** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0x40)), sub(shl(160, 1), 1)))))\n            }\n            /// @ast-id 4679 @src 20:13235:14069  \"function _checkOnERC721Received(...\"\n            function fun_checkOnERC721Received(var_from, var_to, var_tokenId, var_data_mpos) -> var\n            {\n                /// @src 20:13384:13388  \"bool\"\n                var := /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0\n                /// @src 20:13384:13388  \"bool\"\n                let var_1 := /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 0\n                /// @src 20:13400:14063  \"if (to.code.length > 0) {...\"\n                switch /** @src 20:13404:13422  \"to.code.length > 0\" */ iszero(iszero(/** @src 20:13404:13418  \"to.code.length\" */ extcodesize(var_to)))\n                case /** @src 20:13400:14063  \"if (to.code.length > 0) {...\" */ 0 {\n                    /// @src 20:14041:14052  \"return true\"\n                    var := /** @src 20:14048:14052  \"true\" */ 0x01\n                    /// @src 20:14041:14052  \"return true\"\n                    leave\n                }\n                default /// @src 20:13400:14063  \"if (to.code.length > 0) {...\"\n                {\n                    /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                    let _1 := sub(shl(160, 1), 1)\n                    /// @src 20:13442:13513  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    let _2 := /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ mload(64)\n                    let _3 := shl(225, 0x0a85bd01)\n                    /// @src 20:13442:13513  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    mstore(_2, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _3)\n                    mstore(/** @src 20:13442:13513  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ add(_2, 4), /** @src 10:719:729  \"msg.sender\" */ caller())\n                    /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                    mstore(add(/** @src 20:13442:13513  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _2, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 36), and(var_from, _1))\n                    mstore(add(/** @src 20:13442:13513  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _2, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 68), var_tokenId)\n                    mstore(add(/** @src 20:13442:13513  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _2, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 100), 128)\n                    /// @src 20:13442:13513  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    let _4 := 32\n                    let trySuccessCondition := call(gas(), /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 20:13442:13461  \"IERC721Receiver(to)\" */ var_to, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _1), var_1, /** @src 20:13442:13513  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _2, sub(/** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ abi_encode_string(var_data_mpos, add(/** @src 20:13442:13513  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _2, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ 132)), /** @src 20:13442:13513  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _2), _2, _4)\n                    let expr := /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ var_1\n                    /// @src 20:13442:13513  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    if trySuccessCondition\n                    {\n                        let _5 := _4\n                        if gt(_4, returndatasize()) { _5 := returndatasize() }\n                        finalize_allocation(_2, _5)\n                        /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        if slt(sub(/** @src 20:13442:13513  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ add(_2, _5), /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ _2), /** @src 20:13442:13513  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _4)\n                        /// @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\"\n                        { revert(var_1, var_1) }\n                        let value := mload(_2)\n                        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(var_1, var_1) }\n                        /// @src 20:13442:13513  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                        expr := value\n                    }\n                    /// @src 20:13438:14011  \"try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {...\"\n                    switch iszero(trySuccessCondition)\n                    case 0 {\n                        /// @src 20:13556:13614  \"return retval == IERC721Receiver.onERC721Received.selector\"\n                        var := /** @src 20:13563:13614  \"retval == IERC721Receiver.onERC721Received.selector\" */ eq(/** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ and(/** @src 20:13563:13614  \"retval == IERC721Receiver.onERC721Received.selector\" */ expr, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(224, 0xffffffff)), _3)\n                        /// @src 20:13556:13614  \"return retval == IERC721Receiver.onERC721Received.selector\"\n                        leave\n                    }\n                    default /// @src 20:13438:14011  \"try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {...\"\n                    {\n                        /// @src 20:13630:14011  \"catch (bytes memory reason) {...\"\n                        let data := /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ var_1\n                        switch returndatasize()\n                        case 0 { data := 96 }\n                        default {\n                            let _6 := returndatasize()\n                            let _7 := array_allocation_size_bytes(_6)\n                            let memPtr := mload(64)\n                            finalize_allocation(memPtr, _7)\n                            mstore(memPtr, _6)\n                            data := memPtr\n                            returndatacopy(add(memPtr, /** @src 20:13442:13513  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _4), /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ var_1, returndatasize())\n                        }\n                        let _8 := mload(/** @src 20:13680:13693  \"reason.length\" */ data)\n                        /// @src 20:13676:13997  \"if (reason.length == 0) {...\"\n                        switch /** @src 20:13680:13698  \"reason.length == 0\" */ iszero(_8)\n                        case /** @src 20:13676:13997  \"if (reason.length == 0) {...\" */ 0 {\n                            /// @src 20:13884:13979  \"assembly {...\"\n                            revert(add(/** @src 20:13442:13513  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _4, /** @src 20:13884:13979  \"assembly {...\" */ data), _8)\n                        }\n                        default /// @src 20:13676:13997  \"if (reason.length == 0) {...\"\n                        {\n                            /// @src 20:13722:13782  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            let _9 := /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ mload(64)\n                            /// @src 20:13722:13782  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            mstore(_9, /** @src 20:1382:15242  \"contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {...\" */ shl(229, 4594637))\n                            /// @src 20:13722:13782  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            revert(_9, sub(abi_encode_stringliteral_1e76(add(_9, /** @src 20:13442:13513  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ 4)), /** @src 20:13722:13782  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\" */ _9))\n                        }\n                    }\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220175df38df070e54c2ea0cf486cd0202e4e9a9a2b4a3e34bae52328d3e287b8e064736f6c63430008110033\"\n    }\n}\n","hash":"010002670111fa7fcf09a66debe0c3610cd58d82ce6616e649543bb2f91bf249","factoryDependencies":{}}},"contracts/lib/ERC721iEnumerable.sol":{"ERC721iEnumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account.This implementation also includes support for pre-minting a max-supply of tokens up-front. Note on pre-mint:  Assumes a Max-Supply which is entirely pre-minted to initial address with sequential Token IDs.  For this reason, the \\\"allTokens\\\" state vars are unneccesary and have been removed.  Also defines 2 light-weight state vars: \\\"_preMintReceiver\\\" & \\\"_maxSupply\\\"  Overrides \\\"ownerOf\\\" & \\\"_exists\\\"\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"Override the ERC721 \\\"ownerOf\\\" function to account for the Pre-Mint Receiver.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Note on Pre-Mint: this implementation maintains the exact same interface for IERC721Enumerable\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}. note: Fix contributed by surfer77\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/ERC721iEnumerable.sol\":\"ERC721iEnumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/lib/ERC721.sol\":{\"keccak256\":\"0x726960336df673d5fd509dde21ba3bed24645291d201f74762b945fe4d5aa016\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb5cefbd15159da2ee1fa6e6050be9dfa19cdfe72b7eb0d09d63f1bf252605\",\"dweb:/ipfs/QmaAziN1hCNgW54ofjDyME3FM7p96M4dXC7d3gBTLWVZkw\"]},\"contracts/lib/ERC721iEnumerable.sol\":{\"keccak256\":\"0x99b0f077ef320163c0100348d120946ea6fefa3d3f0148a8880e01d4a1924752\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f75c85d3e01d727937116c0d190109a3c79fdda0e957c199d1cba38057ff9b5\",\"dweb:/ipfs/QmNNr4BzJK9yoHR4MrRgUiHCEneDjoPTEDzokPMtN2Akqt\"]}},\"version\":1}","devdoc":{"details":"This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account.This implementation also includes support for pre-minting a max-supply of tokens up-front. Note on pre-mint:  Assumes a Max-Supply which is entirely pre-minted to initial address with sequential Token IDs.  For this reason, the \"allTokens\" state vars are unneccesary and have been removed.  Also defines 2 light-weight state vars: \"_preMintReceiver\" & \"_maxSupply\"  Overrides \"ownerOf\" & \"_exists\"","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"Override the ERC721 \"ownerOf\" function to account for the Pre-Mint Receiver."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}. Note on Pre-Mint: this implementation maintains the exact same interface for IERC721Enumerable"},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenByIndex(uint256)":{"details":"See {IERC721Enumerable-tokenByIndex}."},"tokenOfOwnerByIndex(address,uint256)":{"details":"See {IERC721Enumerable-tokenOfOwnerByIndex}. note: Fix contributed by surfer77"},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"totalSupply()":{"details":"See {IERC721Enumerable-totalSupply}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":3863,"contract":"contracts/lib/ERC721iEnumerable.sol:ERC721iEnumerable","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":3865,"contract":"contracts/lib/ERC721iEnumerable.sol:ERC721iEnumerable","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":3869,"contract":"contracts/lib/ERC721iEnumerable.sol:ERC721iEnumerable","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":3873,"contract":"contracts/lib/ERC721iEnumerable.sol:ERC721iEnumerable","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":3877,"contract":"contracts/lib/ERC721iEnumerable.sol:ERC721iEnumerable","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":3883,"contract":"contracts/lib/ERC721iEnumerable.sol:ERC721iEnumerable","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":4717,"contract":"contracts/lib/ERC721iEnumerable.sol:ERC721iEnumerable","label":"_ownedTokens","offset":0,"slot":"6","type":"t_mapping(t_address,t_mapping(t_uint256,t_uint256))"},{"astId":4721,"contract":"contracts/lib/ERC721iEnumerable.sol:ERC721iEnumerable","label":"_ownedTokensIndex","offset":0,"slot":"7","type":"t_mapping(t_uint256,t_uint256)"},{"astId":4723,"contract":"contracts/lib/ERC721iEnumerable.sol:ERC721iEnumerable","label":"_preMintReceiver","offset":0,"slot":"8","type":"t_address"},{"astId":4725,"contract":"contracts/lib/ERC721iEnumerable.sol:ERC721iEnumerable","label":"_maxSupply","offset":0,"slot":"9","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_mapping(t_uint256,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint256 => uint256))","numberOfBytes":"32","value":"t_mapping(t_uint256,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}},"contracts/mock/ERC20Mock.sol":{"ERC20Mock":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mock/ERC20Mock.sol\":\"ERC20Mock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/mock/ERC20Mock.sol\":{\"keccak256\":\"0x8599fa32ae97690da8801e74912a058d07f752973a8c11ac5f7b14a742df6544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef0a85b8018ba4c1e6794dadc69dbae190e260a405e08a23c5058eb0b3aad528\",\"dweb:/ipfs/QmWuks8Dn8E5rAf22D89iLgeG2CNrXzVNAXMM23K9LZRdx\"]}},\"version\":1}","zk_version":"1.3.17"},"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":128,"contract":"contracts/mock/ERC20Mock.sol:ERC20Mock","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":134,"contract":"contracts/mock/ERC20Mock.sol:ERC20Mock","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":136,"contract":"contracts/mock/ERC20Mock.sol:ERC20Mock","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":138,"contract":"contracts/mock/ERC20Mock.sol:ERC20Mock","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":140,"contract":"contracts/mock/ERC20Mock.sol:ERC20Mock","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":7,"contract":"contracts/mock/ERC20Mock.sol:ERC20Mock","label":"_owner","offset":0,"slot":"5","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ERC20Mock.sol:ERC20Mock\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[5]\n\tptr.add\tr1, r0, r4\n\tadd\tr4, r0, r1\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, r1\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r2\n\tst.1\t64, r2\n\tsub.s!\t4, r1, r2\n\tjump.lt\t@.BB0_2\n\tld\tr4, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_11[0], r2, r3\n\tjump.le\t@.BB0_35\n\tsub.s!\t@CPI0_12[0], r2, r3\n\tjump.gt\t@.BB0_50\n\tsub.s!\t@CPI0_18[0], r2, r3\n\tjump.gt\t@.BB0_48\n\tsub.s!\t@CPI0_21[0], r2, r3\n\tjump.eq\t@.BB0_108\n\tsub.s!\t@CPI0_22[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t5, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_8[0], r2, r3\n\tcontext.caller\tr5\n\tsub!\tr3, r5, r3\n\tjump.ne\t@.BB0_100\n\tand\t@CPI0_6[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_9[0], r0, r4\n\tadd\tr0, r0, r6\n\tjump\t@.BB0_116\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t7, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_1[0], r0, r1\n\tst.1\t160, r1\n\tadd\t256, r0, r1\n\tst.1\t64, r1\n\tadd\t3, r0, r4\n\tst.1\t192, r4\n\tadd\t@CPI0_2[0], r0, r1\n\tst.1\t224, r1\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB0_6\n.BB0_4:\n\tadd\t@CPI0_49[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tjump\t@.BB0_5\n.BB0_6:\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_11\n\tadd\tr3, r0, stack-[4]\n\tadd\tr4, r0, stack-[5]\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r2, r2\n\tsub!\tr1, r2, r3\n\tadd\tstack-[5], r0, r4\n\tjump.ge\t@.BB0_11\n.BB0_10:\n\tsstore\tr1, r0\n\tadd\t1, r1, r1\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB0_10\n.BB0_11:\n\tld.1\t160, r1\n\tand\t@CPI0_4[0], r1, r1\n\tor\t14, r1, r1\n\tsstore\tr4, r1\n\tld.1\t192, r5\n\tsub.s!\t@CPI0_5[0], r5, r1\n\tjump.lt\t@.BB0_13\n.BB0_12:\n\tadd\t@CPI0_49[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB0_5:\n\tst.1\t4, r1\n\tadd\t@CPI0_50[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_35:\n\tsub.s!\t@CPI0_23[0], r2, r3\n\tjump.le\t@.BB0_36\n\tsub.s!\t@CPI0_24[0], r2, r3\n\tjump.gt\t@.BB0_42\n\tsub.s!\t@CPI0_27[0], r2, r3\n\tjump.eq\t@.BB0_73\n\tsub.s!\t@CPI0_28[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t18, r0, r1\n\tjump\t@.BB0_86\n.BB0_50:\n\tsub.s!\t@CPI0_13[0], r2, r3\n\tjump.gt\t@.BB0_53\n\tsub.s!\t@CPI0_16[0], r2, r3\n\tjump.eq\t@.BB0_129\n\tsub.s!\t@CPI0_17[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r2\n\tsub.s!\t@CPI0_8[0], r2, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r4, r1\n\tld\tr1, r3\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tjump\t@.BB0_69\n.BB0_36:\n\tsub.s!\t@CPI0_29[0], r2, r3\n\tjump.eq\t@.BB0_55\n\tsub.s!\t@CPI0_30[0], r2, r3\n\tjump.eq\t@.BB0_65\n\tsub.s!\t@CPI0_31[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tjump\t@.BB0_72\n.BB0_13:\n\tadd\t4, r0, r4\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_4\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_18\n\tadd\tr3, r0, stack-[3]\n\tadd\tr5, r0, stack-[4]\n\tadd\tr4, r0, stack-[5]\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[4], r0, r5\n\tadd\t31, r5, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r5, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[3], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[5], r0, r4\n\tjump.ge\t@.BB0_18\n.BB0_19:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_19\n.BB0_18:\n\tsub.s!\t31, r5, r1\n\tjump.le\t@.BB0_29\n\tadd\tr5, r0, stack-[4]\n\tadd\tr4, r0, stack-[5]\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tsub.s\t32, r0, r2\n\tadd\tstack-[4], r0, r7\n\tand!\tr7, r2, r2\n\tadd\t224, r0, r3\n\tld\tr1, r1\n\tjump.eq\t@.BB0_26\n\tadd\t32, r0, r4\n\tadd\tr0, r0, r3\n.BB0_24:\n\tadd\tr4, r0, r5\n\tadd\t192, r5, r4\n\tld.1\tr4, r4\n\tsstore\tr1, r4\n\tadd\t32, r5, r4\n\tadd\t1, r1, r1\n\tadd\t32, r3, r3\n\tsub!\tr3, r2, r6\n\tjump.lt\t@.BB0_24\n\tadd\t224, r5, r3\n.BB0_26:\n\tsub!\tr2, r7, r2\n\tjump.ge\t@.BB0_28\n\tshl.s\t3, r7, r2\n\tand\t248, r2, r2\n\tsub.s\t1, r0, r4\n\tshr\tr4, r2, r2\n\txor\tr2, r4, r2\n\tld.1\tr3, r3\n\tand\tr3, r2, r2\n\tsstore\tr1, r2\n.BB0_28:\n\tshl.s\t1, r7, r1\n\tor\t1, r1, r1\n\tadd\tstack-[5], r0, r4\n\tjump\t@.BB0_20\n.BB0_48:\n\tsub.s!\t@CPI0_19[0], r2, r1\n\tjump.eq\t@.BB0_117\n\tsub.s!\t@CPI0_20[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r6\n\tadd.ne\tr5, r0, r6\n\tsub.s!\t31, r6, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_4\n\tst.1\t128, r6\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_124\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t160, r2\n\tsub!\tr6, r0, r1\n\tadd\t192, r0, r1\n\tadd.eq\t160, r0, r1\n\tjump\t@.BB0_122\n.BB0_42:\n\tsub.s!\t@CPI0_25[0], r2, r3\n\tjump.eq\t@.BB0_87\n\tsub.s!\t@CPI0_26[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI0_8[0], r3, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r4, r1\n\tld\tr1, r4\n\tadd\t5, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_8[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_100\n\tsub!\tr3, r0, r1\n\tjump.ne\t@.BB0_104\n\tadd\t@CPI0_32[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t31, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_48[0], r0, r1\n\tjump\t@.BB0_101\n.BB0_53:\n\tsub.s!\t@CPI0_14[0], r2, r3\n\tjump.eq\t@.BB0_141\n\tsub.s!\t@CPI0_15[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r6\n\tsub.s!\t@CPI0_8[0], r6, r1\n\tjump.gt\t@.BB0_2\n\tadd\t5, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_8[0], r2, r3\n\tcontext.caller\tr5\n\tsub!\tr3, r5, r3\n\tjump.ne\t@.BB0_100\n\tsub!\tr6, r0, r3\n\tjump.ne\t@.BB0_152\n\tadd\t@CPI0_32[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t38, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_33[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_34[0], r0, r1\n\tst.1\t228, r1\n\tadd\t@CPI0_35[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_73:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t96, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI0_8[0], r3, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r4, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tsub.s!\t@CPI0_8[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r4, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t0, r3\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_38[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr3, r0, stack-[4]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_38[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r4\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub.s\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.eq\t@.BB0_81\n\tadd\tstack-[3], r0, r3\n\tsub!\tr1, r3, r2\n\tjump.ge\t@.BB0_83\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_51[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_32[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_52[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_87:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tsub.s!\t@CPI0_8[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_38[0], r1, r1\n\tadd\t32784, r0, r2\n\tptr.add\tr4, r0, stack-[4]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tptr.add\tstack-[4], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[5], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tptr.add.s\t36, r3, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_38[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[4], r1, r3\n\tsub!\tr3, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.eq\t@.BB0_94\n\tjump\t@.BB0_93\n.BB0_108:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_8[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tjump\t@.BB0_112\n.BB0_129:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tsub.s!\t@CPI0_8[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r4, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_38[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[5], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_38[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[4], r0, r3\n\tsub!\tr1, r3, r2\n\tjump.ge\t@.BB0_136\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_39[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_40[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_32[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_55:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t3, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r6\n\tadd.ne\tr5, r0, r6\n\tsub.s!\t31, r6, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_4\n\tst.1\t128, r6\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_60\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t160, r2\n\tsub!\tr6, r0, r1\n\tadd\t192, r0, r1\n\tadd.eq\t160, r0, r1\n\tjump\t@.BB0_58\n.BB0_65:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r2\n\tsub.s!\t@CPI0_8[0], r2, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r4, r1\n\tld\tr1, r3\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n.BB0_69:\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_37[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_117:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t5, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_8[0], r1, r1\n\tjump\t@.BB0_86\n.BB0_141:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r1, r1\n\tsub.s!\t64, r1, r1\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_8[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r4, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_8[0], r3, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[5]\n\tadd\tr0, r0, r1\n\tadd\tr3, r0, stack-[4]\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[5], r0, r2\n.BB0_112:\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n.BB0_72:\n\tsload\tr1, r1\n.BB0_86:\n\tst.1\t128, r1\n\tadd\t@CPI0_36[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_29:\n\tsub!\tr5, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_31\n\tld.1\t224, r1\n.BB0_31:\n\tshl.s\t3, r5, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r5, r2\n\tor\tr1, r2, r1\n.BB0_20:\n\tsstore\tr4, r1\n\tadd\t5, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_6[0], r2, r3\n\tcontext.caller\tr6\n\tor\tr3, r6, r3\n\tsstore\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tor\t@CPI0_7[0], r1, r1\n\tand\t@CPI0_8[0], r2, r5\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_9[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_10[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_100:\n\tadd\t@CPI0_32[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_45[0], r0, r1\n.BB0_101:\n\tst.1\t196, r1\n\tadd\t@CPI0_46[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_124:\n\tst.1\t0, r3\n\tadd\t160, r0, r1\n\tsub!\tr6, r0, r2\n\tjump.eq\t@.BB0_128\n\tadd\t@CPI0_42[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_126:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r6, r5\n\tjump.lt\t@.BB0_126\n\tadd\t192, r3, r1\n.BB0_122:\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r1\n\tadd\t@CPI0_43[0], r1, r2\n\tsub.s!\t@CPI0_44[0], r2, r2\n\tjump.lt\t@.BB0_12\n.BB0_128:\n\tjump\t@.BB0_64\n.BB0_60:\n\tst.1\t0, r3\n\tadd\t160, r0, r1\n\tsub!\tr6, r0, r2\n\tjump.eq\t@.BB0_64\n\tadd\t@CPI0_53[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_62:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r6, r5\n\tjump.lt\t@.BB0_62\n\tadd\t192, r3, r1\n.BB0_58:\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r1\n\tadd\t@CPI0_43[0], r1, r2\n\tsub.s!\t@CPI0_44[0], r2, r2\n\tjump.lt\t@.BB0_12\n.BB0_64:\n\tadd\tr1, r0, stack-[5]\n\tst.1\t64, r1\n\tadd\t128, r0, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_104:\n\tadd\t2, r0, r1\n\tsload\tr1, r2\n\tadd!\tr2, r4, r2\n\tjump.of\t@.BB0_93\n\tjump\t@.BB0_105\n.BB0_93:\n\tadd\t@CPI0_49[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tjump\t@.BB0_5\n.BB0_152:\n\tand\t@CPI0_6[0], r2, r2\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_7[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_9[0], r0, r4\n\tjump\t@.BB0_116\n.BB0_105:\n\tadd\tr4, r0, stack-[4]\n\tsstore\tr1, r2\n\tst.1\t0, r3\n\tst.1\t32, r0\n\tadd\t@CPI0_0[0], r0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_38[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr3, r0, stack-[5]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[4], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_47[0], r0, r4\n\tadd\tr0, r0, r5\n.BB0_116:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_136:\n\tsub\tr1, r3, r3\n.BB0_94:\n\tadd\tstack-[2], r0, r1\n\tadd\tstack-[5], r0, r2\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tstack-[3], r0, r2\n\tjump\t@.BB0_95\n.BB0_83:\n\tsub\tr1, r3, r3\n\tadd\tr4, r0, r1\n\tadd\tstack-[1], r0, r2\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r4\n.BB0_81:\n\tadd\tr4, r0, r1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[3], r0, r3\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tstack-[2], r0, r2\n.BB0_95:\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_37[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\nabi_encode_string:\n.func_begin1:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tadd\t64, r1, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\tr1, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end1:\n\nfun_transfer:\n.func_begin2:\n\tnop\tstack+=[4]\n\tadd\tr3, r0, stack-[4]\n\tand!\t@CPI2_0[0], r1, r1\n\tjump.eq\t@.BB2_1\n\tand!\t@CPI2_0[0], r2, stack-[2]\n\tjump.eq\t@.BB2_4\n\tadd\tr1, r0, stack-[3]\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI2_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI2_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_6\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[1]\n\tsub.s!\tstack-[4], r2, r1\n\tjump.lt\t@.BB2_8\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tst.1\t32, r0\n\tadd\t@CPI2_1[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI2_1[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_6\n\tadd\tstack-[1], r0, r3\n\tsub.s\tstack-[4], r3, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI2_1[0], r1, r2\n\tadd.ge\t@CPI2_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_6\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[4], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI2_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI2_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI2_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI2_4[0], r0, r4\n\tadd\tstack-[3], r0, r5\n\tadd\tstack-[2], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB2_6\n\tret\n.BB2_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI2_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI2_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tjump\t@.BB2_2\n.BB2_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI2_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI2_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tjump\t@.BB2_2\n.BB2_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI2_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI2_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n.BB2_2:\n\tst.1\tr2, r3\n\tadd\t@CPI2_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_1[0], r0, r2\n\tsub.s!\t@CPI2_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nfun_approve:\n.func_begin3:\n\tnop\tstack+=[3]\n\tand!\t@CPI3_0[0], r1, r1\n\tjump.eq\t@.BB3_1\n\tadd\tr3, r0, stack-[2]\n\tand!\t@CPI3_0[0], r2, stack-[3]\n\tjump.eq\t@.BB3_4\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_1[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_1[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[3], r0, r3\n\tjump.eq\t@.BB3_6\n\tld\tr1, r1\n\tst.1\t0, r3\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_1[0], r1, r2\n\tadd.ge\t@CPI3_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_6\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI3_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI3_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI3_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI3_4[0], r0, r4\n\tadd\tstack-[1], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB3_6\n\tret\n.BB3_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tjump\t@.BB3_2\n.BB3_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n.BB3_2:\n\tst.1\tr2, r3\n\tadd\t@CPI3_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_1[0], r0, r2\n\tsub.s!\t@CPI3_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\n__sha3:\n.func_begin4:\n\tadd\t@CPI4_0[0], r0, r3\n\tsub.s!\t@CPI4_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI4_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI4_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_2\n\tld\tr1, r1\n\tret\n.BB4_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\n__farcall:\n.func_begin5:\n.tmp0:\n\tfar_call\tr1, r2, @.BB5_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB5_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end5:\n\n__staticcall:\n.func_begin6:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB6_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB6_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end6:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI2_1:\nCPI3_1:\nCPI4_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 35042460586307047831497548977937360403565965679869710741695313747744774946816\nCPI0_2:\n\t.cell 34977022125328905480715014931396485716229805055722665673966953550105486032896\nCPI0_3:\nCPI2_3:\nCPI3_3:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_4:\n\t.cell -1606938044258990275541962092341162602522202993782792835301376\nCPI0_5:\n\t.cell 18446744073709551616\nCPI0_6:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_7:\nCPI4_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_8:\nCPI2_0:\nCPI3_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_9:\n\t.cell -52524777015005588113349992707137368332388074750292320778649315033004770043936\nCPI0_10:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_11:\n\t.cell 1889567280\nCPI0_12:\n\t.cell 2757214934\nCPI0_13:\n\t.cell 3714247997\nCPI0_14:\n\t.cell 3714247998\nCPI0_15:\n\t.cell 4076725131\nCPI0_16:\n\t.cell 2757214935\nCPI0_17:\n\t.cell 2835717307\nCPI0_18:\n\t.cell 2376452954\nCPI0_19:\n\t.cell 2376452955\nCPI0_20:\n\t.cell 2514000705\nCPI0_21:\n\t.cell 1889567281\nCPI0_22:\n\t.cell 1901074598\nCPI0_23:\n\t.cell 599290588\nCPI0_24:\n\t.cell 961581904\nCPI0_25:\n\t.cell 961581905\nCPI0_26:\n\t.cell 1086394137\nCPI0_27:\n\t.cell 599290589\nCPI0_28:\n\t.cell 826074471\nCPI0_29:\n\t.cell 117300739\nCPI0_30:\n\t.cell 157198259\nCPI0_31:\n\t.cell 404098525\nCPI0_32:\nCPI2_7:\nCPI3_7:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_33:\n\t.cell 35943731656364841964517558219894961445653631979235167635064085396828900499553\nCPI0_34:\n\t.cell 45408759099000846574684193736602357774271237157169010951590501707763511459840\nCPI0_35:\n\t.cell 10458117454244075803782624051200\nCPI0_36:\n\t.cell 2535301202817642044428229017600\nCPI0_37:\n\t.cell 2535301200456458802993406410752\nCPI0_38:\nCPI2_2:\nCPI3_2:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_39:\n\t.cell 14690266658072097593480850647027335513285713462661904985951319567533531463680\nCPI0_40:\n\t.cell 31354931781638678506476475496475743842680577777870365728514456330491174612855\nCPI0_41:\nCPI2_8:\nCPI3_8:\n\t.cell 10458117451882892562347801444352\nCPI0_42:\n\t.cell -53278079350709166316280423202849322519190186591071851114874353210178472783461\nCPI0_43:\n\t.cell -18446744073709551616\nCPI0_44:\n\t.cell -18446744073709551488\nCPI0_45:\n\t.cell 35943731656364841964516503116990081338611484598491072354577564874054038349170\nCPI0_46:\n\t.cell 7922816253787617000789217640448\nCPI0_47:\nCPI2_4:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI0_48:\n\t.cell 31354931781638678563069525067809233856775101976563302031013534919694566519552\nCPI0_49:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_50:\n\t.cell 2852213850513516153367582212096\nCPI0_51:\n\t.cell 31354931781638678538084197150757782427756587561754988975511141185730285404160\nCPI0_52:\n\t.cell 7922816251426433759354395033600\nCPI0_53:\n\t.cell -27889059366240281169193357100633332908378892778709981755071813198463099602853\nCPI2_5:\n\t.cell 44065838241030143116324720188876985940908656145555552347773292252211112312832\nCPI2_6:\n\t.cell 31354931781638678607228669297131712859100820671745083778533502622993977909346\nCPI2_9:\n\t.cell 45887578820189300338443374388718498632482616163288499555830078344056365121536\nCPI2_10:\n\t.cell 31354931781638678607228669297131712859126084785867252355217498662940140921970\nCPI2_11:\n\t.cell 45433405612597180762055095701412804886438245671210399661410036396145969725440\nCPI2_12:\n\t.cell 31354931781638678607228669297131712859107492772550336241160036866987736981860\nCPI3_4:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI3_5:\n\t.cell 52219164999525148860834357634456956735281286572158918307284071279203377479680\nCPI3_6:\n\t.cell 31354931781638678487916134672869638488806705378895508030211234510262059168357\nCPI3_9:\n\t.cell 51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI3_10:\n\t.cell 31354931781638678487916134672869638484047149969764982831501014746446650500196\n","bytecode":{"object":"0005000000000002000000000401034f00000000010400190000006001100270000001150110019700000001022001900000002d0000c13d0000008002000039000000400020043f000000040210008c0000032c0000413d000000000204043b000000e002200270000001200320009c000000710000a13d000001210320009c0000007e0000213d000001270320009c000000fb0000213d0000012a0320009c000001da0000613d0000012b0120009c0000032c0000c13d0000000001000416000000000101004b0000032c0000c13d0000000501000039000000000201041a0000011d032001970000000005000411000000000353004b000002a90000c13d0000011b02200197000000000021041b00000115010000410000000002000414000001150320009c0000000002018019000000c0012002100000011c011001c70000800d0200003900000003030000390000011e040000410000000006000019000003270000013d0000000001000416000000000101004b0000032c0000c13d0000000701000039000000800010043f0000011601000041000000a00010043f0000010001000039000000400010043f0000000304000039000000c00040043f0000011701000041000000e00010043f000000000104041a000000010210019000000001011002700000007f0310018f000000000301c0190000001f0130008c00000000010000190000000101002039000000010110018f000000000112004b000000490000613d0000014601000041000000000010043500000022010000390000006e0000013d000000200130008c000000640000413d000400000003001d000500000004001d000000000040043500000115010000410000000002000414000001150320009c0000000002018019000000c00120021000000118011001c700008010020000390450044b0000040f00000001022001900000032c0000613d000000000101043b00000004020000290000001f0220003900000005022002700000000002210019000000000321004b0000000504000029000000640000813d000000000001041b0000000101100039000000000321004b000000600000413d000000a00100043d00000119011001970000000e011001bf000000000014041b000000c00500043d0000011a0150009c0000009e0000413d000001460100004100000000001004350000004101000039000000040010043f000001470100004100000452000104300000012c0320009c000000930000a13d0000012d0320009c000001180000213d000001300320009c0000015a0000613d000001310120009c0000032c0000c13d0000000001000416000000000101004b0000032c0000c13d0000001201000039000002820000013d000001220320009c000001380000213d000001250320009c000001e90000613d000001260220009c0000032c0000c13d0000000002000416000000000202004b0000032c0000c13d000000040110008a000000400110008c0000032c0000413d0000000401400370000000000201043b0000011d0120009c0000032c0000213d0000002401400370000000000301043b00000000010004110450035d0000040f000002550000013d000001320320009c0000022e0000613d000001330320009c000002470000613d000001340120009c0000032c0000c13d0000000001000416000000000101004b0000032c0000c13d0000000201000039000002810000013d0000000404000039000000000104041a000000010210019000000001021002700000007f0320018f000000000302c0190000001f0230008c00000000020000190000000102002039000000000121013f0000000101100190000000450000c13d000000200130008c000000cc0000413d000300000003001d000400000005001d000500000004001d000000000040043500000115010000410000000002000414000001150320009c0000000002018019000000c00120021000000118011001c700008010020000390450044b0000040f00000001022001900000032c0000613d00000004050000290000001f025000390000000502200270000000200350008c0000000002004019000000000301043b00000003010000290000001f01100039000000050110027000000000011300190000000002230019000000000312004b0000000504000029000000cc0000813d000000000002041b0000000102200039000000000312004b000000c80000413d0000001f0150008c000002850000a13d000400000005001d000500000004001d000000000040043500000115010000410000000002000414000001150320009c0000000002018019000000c00120021000000118011001c700008010020000390450044b0000040f00000001022001900000032c0000613d000000200200008a00000004070000290000000002270170000000e003000039000000000101043b000000ed0000613d000000200400003900000000030000190000000005040019000000c0045000390000000004040433000000000041041b000000200450003900000001011000390000002003300039000000000623004b000000e30000413d000000e003500039000000000272004b000000f70000813d0000000302700210000000f80220018f000000010400008a000000000224022f000000000242013f0000000003030433000000000223016f000000000021041b000000010170021000000001011001bf0000000504000029000002900000013d000001280120009c0000025e0000613d000001290120009c0000032c0000c13d0000000001000416000000000101004b0000032c0000c13d0000000403000039000000000203041a000000010420019000000001052002700000007f0650018f000000000605c0190000001f0560008c00000000050000190000000105002039000000000552013f0000000105500190000000450000c13d000000800060043f000000000404004b000002b20000c13d000001000300008a000000000232016f000000a00020043f000000000106004b000000c001000039000000a001006039000002c10000013d0000012e0320009c000001a40000613d0000012f0220009c0000032c0000c13d0000000002000416000000000202004b0000032c0000c13d000000040110008a000000400110008c0000032c0000413d0000000401400370000000000301043b0000011d0130009c0000032c0000213d0000002401400370000000000401043b0000000501000039000000000101041a0000011d011001970000000002000411000000000121004b000002a90000c13d000000000103004b000002ec0000c13d0000013501000041000000800010043f0000002001000039000000840010043f0000001f01000039000000a40010043f0000014501000041000002af0000013d000001230320009c000002650000613d000001240220009c0000032c0000c13d0000000002000416000000000202004b0000032c0000c13d000000040110008a000000200110008c0000032c0000413d0000000401400370000000000601043b0000011d0160009c0000032c0000213d0000000501000039000000000201041a0000011d032001970000000005000411000000000353004b000002a90000c13d000000000306004b000002f50000c13d0000013501000041000000800010043f0000002001000039000000840010043f0000002601000039000000a40010043f0000013601000041000000c40010043f0000013701000041000000e40010043f000001380100004100000452000104300000000002000416000000000202004b0000032c0000c13d000000040110008a000000600110008c0000032c0000413d0000000401400370000000000301043b0000011d0130009c0000032c0000213d0000002401400370000000000101043b000500000001001d0000011d0110009c0000032c0000213d0000004401400370000000000101043b000300000001001d00000000003004350000000101000039000200000001001d000000200010043f00000115040000410000000001000414000001150210009c0000000001048019000000c0011002100000013b011001c70000801002000039000400000003001d0450044b0000040f00000001022001900000032c0000613d000000000101043b0000000002000411000100000002001d0000000000200435000000200010043f0000000001000414000001150210009c0000011501008041000000c0011002100000013b011001c700008010020000390450044b0000040f000000040400002900000001022001900000032c0000613d000000000101043b000000000101041a000000010200008a000000000221004b0000033a0000613d0000000303000029000000000231004b000003350000813d000000400100043d00000044021000390000014803000041000000000032043500000024021000390000001d030000390000000000320435000001350200004100000000002104350000000402100039000000200300003900000000003204350000011502000041000001150310009c0000000001028019000000400110021000000149011001c700000452000104300000000002000416000000000202004b0000032c0000c13d000000040110008a000000400110008c0000032c0000413d0000000401400370000000000101043b000500000001001d0000011d0110009c0000032c0000213d0000000001000411000200000001001d00000000001004350000000101000039000300000001001d000000200010043f00000115030000410000000001000414000001150210009c0000000001038019000000c0011002100000013b011001c7000080100200003900040000000403530450044b0000040f000000040300035f00000001022001900000032c0000613d000000000101043b00000005020000290000000000200435000000200010043f0000002401300370000000000101043b000400000001001d0000000001000414000001150210009c0000011501008041000000c0011002100000013b011001c700008010020000390450044b0000040f00000001022001900000032c0000613d000000000101043b000000000101041a0000000403100029000000000113004b0000000001000019000000010100403900000001011001900000032f0000613d000002f10000013d0000000002000416000000000202004b0000032c0000c13d000000040110008a000000200110008c0000032c0000413d0000000401400370000000000101043b0000011d0210009c0000032c0000213d0000000000100435000000200000043f00000040020000390000000001000019000002800000013d0000000002000416000000000202004b0000032c0000c13d000000040110008a000000400110008c0000032c0000413d0000000401400370000000000101043b000500000001001d0000011d0110009c0000032c0000213d0000002401400370000000000101043b000400000001001d0000000001000411000200000001001d00000000001004350000000101000039000300000001001d000000200010043f00000115030000410000000001000414000001150210009c0000000001038019000000c0011002100000013b011001c700008010020000390450044b0000040f00000001022001900000032c0000613d000000000101043b00000005020000290000000000200435000000200010043f0000000001000414000001150210009c0000011501008041000000c0011002100000013b011001c700008010020000390450044b0000040f00000001022001900000032c0000613d000000000101043b000000000101041a0000000403000029000000000231004b0000032e0000813d000000400100043d00000064021000390000013c03000041000000000032043500000044021000390000013d030000410000000000320435000000240210003900000025030000390000000000320435000001350200004100000000002104350000000402100039000000200300003900000000003204350000011502000041000001150310009c000000000102801900000040011002100000013e011001c700000452000104300000000001000416000000000101004b0000032c0000c13d0000000303000039000000000203041a000000010420019000000001052002700000007f0650018f000000000605c0190000001f0560008c00000000050000190000000105002039000000000552013f0000000105500190000000450000c13d000000800060043f000000000404004b000002c80000c13d000001000300008a000000000232016f000000a00020043f000000000106004b000000c001000039000000a001006039000002d70000013d0000000002000416000000000202004b0000032c0000c13d000000040110008a000000400110008c0000032c0000413d0000000401400370000000000201043b0000011d0120009c0000032c0000213d0000002401400370000000000301043b0000000001000411045003d60000040f0000000101000039000000400200043d00000000001204350000011501000041000001150320009c000000000201801900000040012002100000013a011001c7000004510001042e0000000001000416000000000101004b0000032c0000c13d0000000501000039000000000101041a0000011d01100197000002820000013d0000000002000416000000000202004b0000032c0000c13d000000040110008a000000400110008c0000032c0000413d0000000401400370000000000101043b0000011d0210009c0000032c0000213d0000002402400370000000000302043b0000011d0230009c0000032c0000213d00000000001004350000000101000039000000200010043f0000004002000039000500000002001d0000000001000019000400000003001d045004300000040f00000004020000290000000000200435000000200010043f00000000010000190000000502000029045004300000040f000000000101041a000000800010043f0000013901000041000004510001042e000000000105004b0000000001000019000002890000613d000000e00100043d0000000302500210000000010300008a000000000223022f000000000232013f000000000121016f0000000102500210000000000121019f000000000014041b0000000501000039000000000201041a0000011b032001970000000006000411000000000363019f000000000031041b00000115010000410000000003000414000001150430009c0000000003018019000000c0013002100000011c011001c70000011d052001970000800d0200003900000003030000390000011e04000041045004460000040f00000001012001900000032c0000613d0000002001000039000001000010044300000120000004430000011f01000041000004510001042e0000013501000041000000800010043f0000002001000039000000840010043f000000a40010043f0000014201000041000000c40010043f000001430100004100000452000104300000000000300435000000a001000039000000000206004b000002c70000613d0000013f0200004100000000040000190000000003040019000000000402041a000000a005300039000000000045043500000001022000390000002004300039000000000564004b000002b80000413d000000c0013000390000001f01100039000000200200008a000000000121016f0000014002100041000001410220009c0000006b0000413d000002dd0000013d0000000000300435000000a001000039000000000206004b000002dd0000613d0000014a0200004100000000040000190000000003040019000000000402041a000000a005300039000000000045043500000001022000390000002004300039000000000564004b000002ce0000413d000000c0013000390000001f01100039000000200200008a000000000121016f0000014002100041000001410220009c0000006b0000413d000500000001001d000000400010043f0000008002000039045003470000040f000000050400002900000000014100490000011502000041000001150310009c0000000001028019000001150340009c000000000402801900000040024002100000006001100210000000000121019f000004510001042e0000000201000039000000000201041a000000000242001a000002f10000413d000003020000013d0000014601000041000000000010043500000011010000390000006e0000013d0000011b02200197000000000262019f000000000021041b00000115010000410000000002000414000001150320009c0000000002018019000000c0012002100000011c011001c70000800d0200003900000003030000390000011e04000041000003270000013d000400000004001d000000000021041b0000000000300435000000200000043f00000115040000410000000001000414000001150210009c0000000001048019000000c0011002100000013b011001c70000801002000039000500000003001d0450044b0000040f000000050600002900000001022001900000032c0000613d000000000101043b000000000201041a00000004030000290000000002320019000000000021041b000000400100043d00000000003104350000000002000414000001150320009c00000115040000410000000002048019000001150310009c00000000010480190000004001100210000000c002200210000000000112019f00000118011001c70000800d02000039000000030300003900000144040000410000000005000019045004460000040f00000001012001900000032c0000613d0000000001000019000004510001042e00000000010000190000045200010430000000000331004900000002010000290000000502000029045003d60000040f000000400100043d0000000302000029000003400000013d000000000331004900000000010400190000000102000029045003d60000040f00000004040000290000000001040019000000050200002900000003030000290450035d0000040f000000400100043d000000020200002900000000002104350000011502000041000001150310009c000000000102801900000040011002100000013a011001c7000004510001042e00000020030000390000000004310436000000000302043300000000003404350000004001100039000000000403004b000003560000613d000000000400001900000000054100190000002004400039000000000624001900000000060604330000000000650435000000000534004b0000034f0000413d000000000231001900000000000204350000001f02300039000000200300008a000000000232016f0000000001210019000000000001042d0004000000000002000400000003001d0000011d01100198000003ad0000613d0002011d0020019c000003b70000613d000300000001001d0000000000100435000000200000043f00000115010000410000000002000414000001150320009c0000000002018019000000c0012002100000013b011001c700008010020000390450044b0000040f0000000102200190000003ab0000613d000000000101043b000000000201041a000100000002001d000000040120006c000003c10000413d00000003010000290000000000100435000000200000043f00000115030000410000000001000414000001150210009c0000000001038019000000c0011002100000013b011001c700008010020000390450044b0000040f0000000102200190000003ab0000613d0000000103000029000000040230006a000000000101043b000000000021041b000000020100002900000000001004350000000001000414000001150210009c0000011501008041000000c0011002100000013b011001c700008010020000390450044b0000040f0000000102200190000003ab0000613d000000000101043b000000000201041a00000004030000290000000002320019000000000021041b000000400100043d000000000031043500000115020000410000000003000414000001150430009c0000000003028019000001150410009c00000000010280190000004001100210000000c002300210000000000112019f00000118011001c70000800d020000390000000303000039000001440400004100000003050000290000000206000029045004460000040f0000000101200190000003ab0000613d000000000001042d00000000010000190000045200010430000000400100043d00000064021000390000014f03000041000000000032043500000044021000390000015003000041000000000032043500000024021000390000002503000039000003ca0000013d000000400100043d00000064021000390000014d03000041000000000032043500000044021000390000014e03000041000000000032043500000024021000390000002303000039000003ca0000013d000000400100043d00000064021000390000014b03000041000000000032043500000044021000390000014c030000410000000000320435000000240210003900000026030000390000000000320435000001350200004100000000002104350000000402100039000000200300003900000000003204350000011502000041000001150310009c000000000102801900000040011002100000013e011001c7000004520001043000030000000000020000011d01100198000004110000613d000200000003001d0003011d0020019c0000041b0000613d000100000001001d00000000001004350000000101000039000000200010043f00000115030000410000000001000414000001150210009c0000000001038019000000c0011002100000013b011001c700008010020000390450044b0000040f000000010220019000000003030000290000040f0000613d000000000101043b0000000000300435000000200010043f0000000001000414000001150210009c0000011501008041000000c0011002100000013b011001c700008010020000390450044b0000040f000000030600002900000001022001900000040f0000613d000000000101043b0000000202000029000000000021041b000000400100043d000000000021043500000115020000410000000003000414000001150430009c0000000003028019000001150410009c00000000010280190000004001100210000000c002300210000000000112019f00000118011001c70000800d02000039000000030300003900000151040000410000000105000029045004460000040f00000001012001900000040f0000613d000000000001042d00000000010000190000045200010430000000400100043d00000064021000390000015403000041000000000032043500000044021000390000015503000041000000000032043500000024021000390000002403000039000004240000013d000000400100043d000000640210003900000152030000410000000000320435000000440210003900000153030000410000000000320435000000240210003900000022030000390000000000320435000001350200004100000000002104350000000402100039000000200300003900000000003204350000011502000041000001150310009c000000000102801900000040011002100000013e011001c700000452000104300000011503000041000001150410009c00000000010380190000004001100210000001150420009c00000000020380190000006002200210000000000112019f0000000002000414000001150420009c0000000002038019000000c002200210000000000112019f0000011c011001c700008010020000390450044b0000040f0000000102200190000004440000613d000000000101043b000000000001042d0000000001000019000004520001043000000449002104210000000102000039000000000001042d0000000002000019000000000001042d0000044e002104230000000102000039000000000001042d0000000002000019000000000001042d0000045000000432000004510001042e0000045200010430000000000000000000000000000000000000000000000000000000000000000000000000ffffffff4d79546f6b656e000000000000000000000000000000000000000000000000004d544b00000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000020000000000000000000000000ffffffffffffff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000ffffffffffffffffffffffff00000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffff8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e000000002000000000000000000000000000000400000010000000000000000000000000000000000000000000000000000000000000000000000000070a0823000000000000000000000000000000000000000000000000000000000a457c2d600000000000000000000000000000000000000000000000000000000dd62ed3d00000000000000000000000000000000000000000000000000000000dd62ed3e00000000000000000000000000000000000000000000000000000000f2fde38b00000000000000000000000000000000000000000000000000000000a457c2d700000000000000000000000000000000000000000000000000000000a9059cbb000000000000000000000000000000000000000000000000000000008da5cb5a000000000000000000000000000000000000000000000000000000008da5cb5b0000000000000000000000000000000000000000000000000000000095d89b410000000000000000000000000000000000000000000000000000000070a0823100000000000000000000000000000000000000000000000000000000715018a60000000000000000000000000000000000000000000000000000000023b872dc000000000000000000000000000000000000000000000000000000003950935000000000000000000000000000000000000000000000000000000000395093510000000000000000000000000000000000000000000000000000000040c10f190000000000000000000000000000000000000000000000000000000023b872dd00000000000000000000000000000000000000000000000000000000313ce5670000000000000000000000000000000000000000000000000000000006fdde0300000000000000000000000000000000000000000000000000000000095ea7b30000000000000000000000000000000000000000000000000000000018160ddd08c379a0000000000000000000000000000000000000000000000000000000004f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000084000000800000000000000000000000000000000000000000000000000000002000000080000000000000000000000000000000000000000000000000000000200000000000000000000000000200000000000000000000000000000000000040000000000000000000000000207a65726f00000000000000000000000000000000000000000000000000000045524332303a2064656372656173656420616c6c6f77616e63652062656c6f7700000000000000000000000000000000000000840000000000000000000000008a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19bffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffff00000000000000804f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65720000000000000000000000000000000000000064000000800000000000000000ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef45524332303a206d696e7420746f20746865207a65726f2061646472657373004e487b7100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002400000000000000000000000045524332303a20696e73756666696369656e7420616c6c6f77616e63650000000000000000000000000000000000000000000064000000000000000000000000c2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b616c616e6365000000000000000000000000000000000000000000000000000045524332303a207472616e7366657220616d6f756e7420657863656564732062657373000000000000000000000000000000000000000000000000000000000045524332303a207472616e7366657220746f20746865207a65726f2061646472647265737300000000000000000000000000000000000000000000000000000045524332303a207472616e736665722066726f6d20746865207a65726f2061648c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925737300000000000000000000000000000000000000000000000000000000000045524332303a20617070726f766520746f20746865207a65726f206164647265726573730000000000000000000000000000000000000000000000000000000045524332303a20617070726f76652066726f6d20746865207a65726f20616464c580af5526822b5a8f4602bffebdd0414827c0b7b8ad9d3f1649c3ad79502025"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","mint(address,uint256)":"40c10f19","name()":"06fdde03","owner()":"8da5cb5b","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"irOptimized":"/// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 1:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 2:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 3:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 10:\"@openzeppelin/contracts/utils/Context.sol\", 22:\"contracts/mock/ERC20Mock.sol\"\nobject \"ERC20Mock_5095\" {\n    code {\n        {\n            /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n            let _1 := memoryguard(0x80)\n            if callvalue() { revert(0, 0) }\n            let _2 := 64\n            let newFreePtr := add(_1, _2)\n            let _3 := sub(shl(64, 1), 1)\n            if or(gt(newFreePtr, _3), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ 0x24)\n            }\n            mstore(_2, newFreePtr)\n            mstore(_1, 7)\n            let _4 := 32\n            mstore(add(_1, _4), \"MyToken\")\n            let memPtr := mload(_2)\n            let newFreePtr_1 := add(memPtr, _2)\n            if or(gt(newFreePtr_1, _3), lt(newFreePtr_1, memPtr))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ 0x24)\n            }\n            mstore(_2, newFreePtr_1)\n            let _5 := 3\n            mstore(memPtr, _5)\n            mstore(add(memPtr, _4), \"MTK\")\n            let newLen := mload(_1)\n            if gt(newLen, _3)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ 0x24)\n            }\n            let _6 := sload(_5)\n            let length := /** @src -1:-1:-1 */ 0\n            /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n            let _7 := 1\n            length := shr(_7, _6)\n            let outOfPlaceEncoding := and(_6, _7)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, _4))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ 0x24)\n            }\n            let _8 := 31\n            if gt(length, _8)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ _5)\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ _4)\n                let deleteStart := add(data, shr(5, add(newLen, _8)))\n                if lt(newLen, _4) { deleteStart := data }\n                let _9 := add(data, shr(5, add(length, _8)))\n                let start := deleteStart\n                for { } lt(start, _9) { start := add(start, _7) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n            let srcOffset := /** @src -1:-1:-1 */ 0\n            /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n            srcOffset := _4\n            switch gt(newLen, _8)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ _5)\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ _4)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                for { } lt(i, loopEnd) { i := add(i, _4) }\n                {\n                    sstore(dstPtr, mload(add(_1, srcOffset)))\n                    dstPtr := add(dstPtr, _7)\n                    srcOffset := add(srcOffset, _4)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(_1, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(_5, newLen), 248), not(0)))))\n                }\n                sstore(_5, add(shl(_7, newLen), _7))\n            }\n            default {\n                let value := /** @src -1:-1:-1 */ 0\n                /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                if newLen\n                {\n                    value := mload(add(_1, srcOffset))\n                }\n                sstore(_5, or(and(value, not(shr(shl(_5, newLen), not(0)))), shl(_7, newLen)))\n            }\n            let newLen_1 := mload(memPtr)\n            if gt(newLen_1, _3)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 1:2069:2086  \"_symbol = symbol_\" */ 0x04, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ 0x24)\n            }\n            /// @src 1:2069:2086  \"_symbol = symbol_\"\n            let _10 := 0x04\n            /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n            let _11 := sload(/** @src 1:2069:2086  \"_symbol = symbol_\" */ _10)\n            /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n            let length_1 := /** @src -1:-1:-1 */ 0\n            /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n            length_1 := shr(_7, _11)\n            let outOfPlaceEncoding_1 := and(_11, _7)\n            if iszero(outOfPlaceEncoding_1)\n            {\n                length_1 := and(length_1, 0x7f)\n            }\n            if eq(outOfPlaceEncoding_1, lt(length_1, _4))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 1:2069:2086  \"_symbol = symbol_\" */ _10, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ 0x24)\n            }\n            if gt(length_1, _8)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:2069:2086  \"_symbol = symbol_\" */ _10)\n                /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ _4)\n                let deleteStart_1 := add(data_1, shr(5, add(newLen_1, _8)))\n                if lt(newLen_1, _4) { deleteStart_1 := data_1 }\n                let _12 := add(data_1, shr(5, add(length_1, _8)))\n                let start_1 := deleteStart_1\n                for { } lt(start_1, _12) { start_1 := add(start_1, _7) }\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n            let srcOffset_1 := /** @src -1:-1:-1 */ 0\n            /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n            srcOffset_1 := _4\n            switch gt(newLen_1, _8)\n            case 1 {\n                let loopEnd_1 := and(newLen_1, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:2069:2086  \"_symbol = symbol_\" */ _10)\n                /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ _4)\n                let i_1 := /** @src -1:-1:-1 */ 0\n                /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _4) }\n                {\n                    sstore(dstPtr_1, mload(add(memPtr, srcOffset_1)))\n                    dstPtr_1 := add(dstPtr_1, _7)\n                    srcOffset_1 := add(srcOffset_1, _4)\n                }\n                if lt(loopEnd_1, newLen_1)\n                {\n                    let lastValue_1 := mload(add(memPtr, srcOffset_1))\n                    sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(_5, newLen_1), 248), not(0)))))\n                }\n                sstore(/** @src 1:2069:2086  \"_symbol = symbol_\" */ _10, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ add(shl(_7, newLen_1), _7))\n            }\n            default {\n                let value_1 := /** @src -1:-1:-1 */ 0\n                /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                if newLen_1\n                {\n                    value_1 := mload(add(memPtr, srcOffset_1))\n                }\n                sstore(/** @src 1:2069:2086  \"_symbol = symbol_\" */ _10, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ or(and(value_1, not(shr(shl(_5, newLen_1), not(0)))), shl(_7, newLen_1)))\n            }\n            let _13 := sload(/** @src 0:2518:2524  \"_owner\" */ 0x05)\n            /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n            sstore(/** @src 0:2518:2524  \"_owner\" */ 0x05, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ or(and(_13, not(sub(shl(160, 1), 1))), /** @src 10:719:729  \"msg.sender\" */ caller()))\n            /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n            let _14 := /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ mload(_2)\n            /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src -1:-1:-1 */ 0, 0, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ and(_13, sub(shl(160, 1), 1)), /** @src 10:719:729  \"msg.sender\" */ caller())\n            /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n            let _15 := datasize(\"ERC20Mock_5095_deployed\")\n            codecopy(_14, dataoffset(\"ERC20Mock_5095_deployed\"), _15)\n            return(_14, _15)\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 1:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 10:\"@openzeppelin/contracts/utils/Context.sol\", 22:\"contracts/mock/ERC20Mock.sol\"\n    object \"ERC20Mock_5095_deployed\" {\n        code {\n            {\n                /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    switch shr(224, calldataload(_4))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let ret := _4\n                        let slotValue := sload(/** @src 1:2244:2249  \"_name\" */ 0x03)\n                        /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                        let length := _4\n                        let _5 := 1\n                        length := shr(_5, slotValue)\n                        let outOfPlaceEncoding := and(slotValue, _5)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        let _6 := 32\n                        if eq(outOfPlaceEncoding, lt(length, _6))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x22)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_1, length)\n                        switch outOfPlaceEncoding\n                        case 0 {\n                            mstore(add(_1, _6), and(slotValue, not(255)))\n                            ret := add(add(_1, shl(5, iszero(iszero(length)))), _6)\n                        }\n                        case 1 {\n                            mstore(_4, /** @src 1:2244:2249  \"_name\" */ 0x03)\n                            /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                            let dataPos := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                            let i := _4\n                            for { } lt(i, length) { i := add(i, _6) }\n                            {\n                                mstore(add(add(_1, i), _6), sload(dataPos))\n                                dataPos := add(dataPos, _5)\n                            }\n                            ret := add(add(_1, i), _6)\n                        }\n                        let newFreePtr := add(_1, and(add(sub(ret, _1), 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, _1))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_2, newFreePtr)\n                        return(newFreePtr, sub(abi_encode_string(newFreePtr, _1), newFreePtr))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0 := abi_decode_address_6638()\n                        /// @src 1:4606:4612  \"amount\"\n                        fun_approve(/** @src 10:719:729  \"msg.sender\" */ caller(), /** @src 1:4606:4612  \"amount\" */ value0, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ calldataload(36))\n                        let memPos := mload(_2)\n                        mstore(memPos, 1)\n                        return(memPos, 32)\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let _7 := sload(/** @src 1:3342:3354  \"_totalSupply\" */ 0x02)\n                        /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, _7)\n                        return(memPos_1, 32)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                        let value0_1 := abi_decode_address_6638()\n                        let value1 := abi_decode_address()\n                        let value := calldataload(68)\n                        mstore(_4, and(value0_1, sub(shl(160, 1), 1)))\n                        mstore(32, 1)\n                        let _8 := keccak256(_4, _2)\n                        mstore(_4, /** @src 10:719:729  \"msg.sender\" */ caller())\n                        /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                        mstore(32, _8)\n                        let _9 := sload(keccak256(_4, _2))\n                        /// @src 1:11240:11483  \"if (currentAllowance != type(uint256).max) {...\"\n                        if /** @src 1:11244:11281  \"currentAllowance != type(uint256).max\" */ iszero(eq(_9, /** @src 1:11264:11281  \"type(uint256).max\" */ not(0)))\n                        /// @src 1:11240:11483  \"if (currentAllowance != type(uint256).max) {...\"\n                        {\n                            /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                            if /** @src 1:11305:11331  \"currentAllowance >= amount\" */ lt(_9, value)\n                            /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                            {\n                                let memPtr := mload(_2)\n                                mstore(memPtr, shl(229, 4594637))\n                                mstore(add(memPtr, _3), 32)\n                                mstore(add(memPtr, 36), 29)\n                                mstore(add(memPtr, 68), \"ERC20: insufficient allowance\")\n                                revert(memPtr, 100)\n                            }\n                            /// @src 1:11432:11457  \"currentAllowance - amount\"\n                            fun_approve(value0_1, /** @src 10:719:729  \"msg.sender\" */ caller(), /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ sub(/** @src 1:11432:11457  \"currentAllowance - amount\" */ _9, value))\n                        }\n                        /// @src 1:5424:5430  \"amount\"\n                        fun_transfer(value0_1, value1, value)\n                        /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, 1)\n                        return(memPos_2, 32)\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPos_3 := mload(_2)\n                        mstore(memPos_3, /** @src 1:3186:3188  \"18\" */ 0x12)\n                        /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                        return(memPos_3, 32)\n                    }\n                    case 0x39509351 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_2 := abi_decode_address_6638()\n                        mstore(_4, /** @src 10:719:729  \"msg.sender\" */ caller())\n                        /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                        mstore(32, 1)\n                        let _10 := keccak256(_4, _2)\n                        mstore(_4, and(value0_2, sub(shl(160, 1), 1)))\n                        mstore(32, _10)\n                        /// @src 1:6021:6059  \"allowance(owner, spender) + addedValue\"\n                        fun_approve(/** @src 10:719:729  \"msg.sender\" */ caller(), /** @src 1:6021:6059  \"allowance(owner, spender) + addedValue\" */ value0_2, checked_add_uint256(/** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ sload(keccak256(_4, _2)), calldataload(36)))\n                        let memPos_4 := mload(_2)\n                        mstore(memPos_4, 1)\n                        return(memPos_4, 32)\n                    }\n                    case 0x40c10f19 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_3 := abi_decode_address_6638()\n                        let value_1 := calldataload(36)\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                        let _11 := and(/** @src 1:8603:8624  \"account != address(0)\" */ value0_3, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ sub(shl(160, 1), 1))\n                        if /** @src 1:8603:8624  \"account != address(0)\" */ iszero(/** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ _11)\n                        {\n                            let memPtr_1 := mload(_2)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, _3), 32)\n                            mstore(add(memPtr_1, 36), 31)\n                            mstore(add(memPtr_1, 68), \"ERC20: mint to the zero address\")\n                            revert(memPtr_1, 100)\n                        }\n                        sstore(/** @src 1:8731:8753  \"_totalSupply += amount\" */ 0x02, checked_add_uint256(/** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ sload(/** @src 1:8731:8753  \"_totalSupply += amount\" */ 0x02), value_1))\n                        /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                        mstore(_4, _11)\n                        mstore(32, _4)\n                        let dataSlot := keccak256(_4, _2)\n                        sstore(dataSlot, add(sload(/** @src 1:8899:8927  \"_balances[account] += amount\" */ dataSlot), /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ value_1))\n                        /// @src 1:8952:8989  \"Transfer(address(0), account, amount)\"\n                        let _12 := /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ mload(_2)\n                        mstore(_12, value_1)\n                        /// @src 1:8952:8989  \"Transfer(address(0), account, amount)\"\n                        log3(_12, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ 32, /** @src 1:8952:8989  \"Transfer(address(0), account, amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ _4, /** @src 1:8952:8989  \"Transfer(address(0), account, amount)\" */ _11)\n                        /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                        return(_4, _4)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        mstore(_4, and(abi_decode_address_6638(), sub(shl(160, 1), 1)))\n                        mstore(32, _4)\n                        let _13 := sload(keccak256(_4, _2))\n                        let memPos_5 := mload(_2)\n                        mstore(memPos_5, _13)\n                        return(memPos_5, 32)\n                    }\n                    case 0x715018a6 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                        let _14 := sload(/** @src 0:2518:2524  \"_owner\" */ 0x05)\n                        /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                        sstore(/** @src 0:2518:2524  \"_owner\" */ 0x05, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ and(_14, shl(160, 0xffffffffffffffffffffffff)))\n                        /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ _4, _4, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ and(_14, sub(shl(160, 1), 1)), _4)\n                        return(_4, _4)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let value_2 := and(sload(/** @src 0:1273:1279  \"_owner\" */ 0x05), /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ sub(shl(160, 1), 1))\n                        let memPos_6 := mload(_2)\n                        mstore(memPos_6, value_2)\n                        return(memPos_6, 32)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPtr_2 := mload(_2)\n                        let ret_1 := _4\n                        let slotValue_1 := sload(_3)\n                        let length_1 := _4\n                        let _15 := 1\n                        length_1 := shr(_15, slotValue_1)\n                        let outOfPlaceEncoding_1 := and(slotValue_1, _15)\n                        if iszero(outOfPlaceEncoding_1)\n                        {\n                            length_1 := and(length_1, 0x7f)\n                        }\n                        let _16 := 32\n                        if eq(outOfPlaceEncoding_1, lt(length_1, _16))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x22)\n                            revert(_4, 0x24)\n                        }\n                        mstore(memPtr_2, length_1)\n                        switch outOfPlaceEncoding_1\n                        case 0 {\n                            mstore(add(memPtr_2, _16), and(slotValue_1, not(255)))\n                            ret_1 := add(add(memPtr_2, shl(5, iszero(iszero(length_1)))), _16)\n                        }\n                        case 1 {\n                            mstore(_4, _3)\n                            let dataPos_1 := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                            let i_1 := _4\n                            for { } lt(i_1, length_1) { i_1 := add(i_1, _16) }\n                            {\n                                mstore(add(add(memPtr_2, i_1), _16), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, _15)\n                            }\n                            ret_1 := add(add(memPtr_2, i_1), _16)\n                        }\n                        let newFreePtr_1 := add(memPtr_2, and(add(sub(ret_1, memPtr_2), 31), not(31)))\n                        if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr_2))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_2, newFreePtr_1)\n                        return(newFreePtr_1, sub(abi_encode_string(newFreePtr_1, memPtr_2), newFreePtr_1))\n                    }\n                    case 0xa457c2d7 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_4 := abi_decode_address_6638()\n                        let value_3 := calldataload(36)\n                        mstore(_4, /** @src 10:719:729  \"msg.sender\" */ caller())\n                        /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                        mstore(32, 1)\n                        let _17 := keccak256(_4, _2)\n                        mstore(_4, and(value0_4, sub(shl(160, 1), 1)))\n                        mstore(32, _17)\n                        let _18 := sload(keccak256(_4, _2))\n                        if /** @src 1:6792:6827  \"currentAllowance >= subtractedValue\" */ lt(_18, value_3)\n                        /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                        {\n                            let memPtr_3 := mload(_2)\n                            mstore(memPtr_3, shl(229, 4594637))\n                            mstore(add(memPtr_3, _3), 32)\n                            mstore(add(memPtr_3, 36), 37)\n                            mstore(add(memPtr_3, 68), \"ERC20: decreased allowance below\")\n                            mstore(add(memPtr_3, 100), \" zero\")\n                            revert(memPtr_3, 132)\n                        }\n                        /// @src 1:6928:6962  \"currentAllowance - subtractedValue\"\n                        fun_approve(/** @src 10:719:729  \"msg.sender\" */ caller(), /** @src 1:6928:6962  \"currentAllowance - subtractedValue\" */ value0_4, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ sub(/** @src 1:6928:6962  \"currentAllowance - subtractedValue\" */ _18, value_3))\n                        /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                        let memPos_7 := mload(_2)\n                        mstore(memPos_7, 1)\n                        return(memPos_7, 32)\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_5 := abi_decode_address_6638()\n                        /// @src 1:3894:3900  \"amount\"\n                        fun_transfer(/** @src 10:719:729  \"msg.sender\" */ caller(), /** @src 1:3894:3900  \"amount\" */ value0_5, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ calldataload(36))\n                        let memPos_8 := mload(_2)\n                        mstore(memPos_8, 1)\n                        return(memPos_8, 32)\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_6 := abi_decode_address_6638()\n                        let value1_1 := abi_decode_address()\n                        let _19 := sub(shl(160, 1), 1)\n                        mstore(_4, and(value0_6, _19))\n                        mstore(32, /** @src 1:4102:4113  \"_allowances\" */ 0x01)\n                        /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                        let _20 := keccak256(_4, _2)\n                        mstore(_4, and(value1_1, _19))\n                        mstore(32, _20)\n                        let _21 := sload(keccak256(_4, _2))\n                        let memPos_9 := mload(_2)\n                        mstore(memPos_9, _21)\n                        return(memPos_9, 32)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let value0_7 := abi_decode_address_6638()\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                        let _22 := sub(shl(160, 1), 1)\n                        let _23 := and(/** @src 0:2162:2184  \"newOwner != address(0)\" */ value0_7, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ _22)\n                        if /** @src 0:2162:2184  \"newOwner != address(0)\" */ iszero(/** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ _23)\n                        {\n                            let memPtr_4 := mload(_2)\n                            mstore(memPtr_4, shl(229, 4594637))\n                            mstore(add(memPtr_4, _3), 32)\n                            mstore(add(memPtr_4, 36), 38)\n                            mstore(add(memPtr_4, 68), \"Ownable: new owner is the zero a\")\n                            mstore(add(memPtr_4, 100), \"ddress\")\n                            revert(memPtr_4, 132)\n                        }\n                        let _24 := sload(/** @src 0:2518:2524  \"_owner\" */ 0x05)\n                        /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                        sstore(/** @src 0:2518:2524  \"_owner\" */ 0x05, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ or(and(_24, shl(160, 0xffffffffffffffffffffffff)), _23))\n                        /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ _4, _4, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ and(_24, _22), /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ _23)\n                        /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                        return(_4, _4)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                let _1 := 32\n                mstore(headStart, _1)\n                let length := mload(value0)\n                mstore(add(headStart, _1), length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                }\n                mstore(add(add(headStart, length), 64), 0)\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_address_6638() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            /// @ast-id 54 @src 0:1359:1489  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                let value := and(sload(/** @src 0:1273:1279  \"_owner\" */ 0x05), /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ sub(shl(160, 1), 1))\n                if iszero(/** @src 0:1422:1445  \"owner() == _msgSender()\" */ eq(/** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ value, /** @src 10:719:729  \"msg.sender\" */ caller()))\n                /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 32)\n                    mstore(add(memPtr, 68), \"Ownable: caller is not the owner\")\n                    revert(memPtr, 100)\n                }\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            /// @ast-id 459 @src 1:7456:8244  \"function _transfer(address from, address to, uint256 amount) internal virtual {...\"\n            function fun_transfer(var_from, var_to, var_amount)\n            {\n                /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 1:7552:7570  \"from != address(0)\" */ var_from, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ _1)\n                if /** @src 1:7552:7570  \"from != address(0)\" */ iszero(/** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: transfer from the zero ad\")\n                    mstore(add(memPtr, 100), \"dress\")\n                    revert(memPtr, 132)\n                }\n                let _3 := and(/** @src 1:7630:7646  \"to != address(0)\" */ var_to, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ _1)\n                if /** @src 1:7630:7646  \"to != address(0)\" */ iszero(/** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ _3)\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 35)\n                    mstore(add(memPtr_1, 68), \"ERC20: transfer to the zero addr\")\n                    mstore(add(memPtr_1, 100), \"ess\")\n                    revert(memPtr_1, 132)\n                }\n                /// @src 1:7568:7569  \"0\"\n                let _4 := 0x00\n                /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                mstore(/** @src 1:7568:7569  \"0\" */ _4, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ _2)\n                mstore(0x20, /** @src 1:7568:7569  \"0\" */ _4)\n                /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                let _5 := sload(keccak256(/** @src 1:7568:7569  \"0\" */ _4, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ 0x40))\n                if /** @src 1:7801:7822  \"fromBalance >= amount\" */ lt(_5, var_amount)\n                /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                {\n                    let memPtr_2 := mload(0x40)\n                    mstore(memPtr_2, shl(229, 4594637))\n                    mstore(add(memPtr_2, 4), 0x20)\n                    mstore(add(memPtr_2, 36), 38)\n                    mstore(add(memPtr_2, 68), \"ERC20: transfer amount exceeds b\")\n                    mstore(add(memPtr_2, 100), \"alance\")\n                    revert(memPtr_2, 132)\n                }\n                mstore(/** @src 1:7568:7569  \"0\" */ _4, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ _2)\n                mstore(0x20, /** @src 1:7568:7569  \"0\" */ _4)\n                /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                sstore(keccak256(/** @src 1:7568:7569  \"0\" */ _4, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ 0x40), sub(/** @src 1:7917:7937  \"fromBalance - amount\" */ _5, var_amount))\n                /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                mstore(/** @src 1:7568:7569  \"0\" */ _4, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ _3)\n                let dataSlot := keccak256(/** @src 1:7568:7569  \"0\" */ _4, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ 0x40)\n                sstore(dataSlot, add(sload(/** @src 1:8114:8137  \"_balances[to] += amount\" */ dataSlot), /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ var_amount))\n                /// @src 1:8163:8189  \"Transfer(from, to, amount)\"\n                let _6 := /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ mload(0x40)\n                mstore(_6, var_amount)\n                /// @src 1:8163:8189  \"Transfer(from, to, amount)\"\n                log3(_6, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ 0x20, /** @src 1:8163:8189  \"Transfer(from, to, amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _3)\n            }\n            /// @ast-id 633 @src 1:10457:10797  \"function _approve(address owner, address spender, uint256 amount) internal virtual {...\"\n            function fun_approve(var_owner, var_spender, var_amount)\n            {\n                /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 1:10558:10577  \"owner != address(0)\" */ var_owner, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ _1)\n                if /** @src 1:10558:10577  \"owner != address(0)\" */ iszero(/** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC20: approve from the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n                let _3 := and(/** @src 1:10636:10657  \"spender != address(0)\" */ var_spender, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ _1)\n                if /** @src 1:10636:10657  \"spender != address(0)\" */ iszero(/** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ _3)\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 34)\n                    mstore(add(memPtr_1, 68), \"ERC20: approve to the zero addre\")\n                    mstore(add(memPtr_1, 100), \"ss\")\n                    revert(memPtr_1, 132)\n                }\n                mstore(/** @src 1:10575:10576  \"0\" */ 0x00, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ _2)\n                mstore(0x20, /** @src 1:10707:10718  \"_allowances\" */ 0x01)\n                /// @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\"\n                let _4 := keccak256(/** @src 1:10575:10576  \"0\" */ 0x00, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ 0x40)\n                mstore(/** @src 1:10575:10576  \"0\" */ 0x00, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ _3)\n                mstore(0x20, _4)\n                sstore(keccak256(/** @src 1:10575:10576  \"0\" */ 0x00, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ 0x40), var_amount)\n                /// @src 1:10758:10790  \"Approval(owner, spender, amount)\"\n                let _5 := /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ mload(0x40)\n                mstore(_5, var_amount)\n                /// @src 1:10758:10790  \"Approval(owner, spender, amount)\"\n                log3(_5, /** @src 22:168:382  \"contract ERC20Mock is ERC20, Ownable {...\" */ 0x20, /** @src 1:10758:10790  \"Approval(owner, spender, amount)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, _2, _3)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212209bcf4879de89cf1a7538c59bb6a468a592738a3c891e19ee4e7f05c59da682e664736f6c63430008110033\"\n    }\n}\n","hash":"0100015724f67676d024dc929690fe569d02c8b3ea70369e483cbe667a68235d","factoryDependencies":{}}},"contracts/mock/NFTMock.sol":{"NFTMock":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mock/NFTMock.sol\":\"NFTMock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/mock/NFTMock.sol\":{\"keccak256\":\"0x432a1fde00aeaf5ffaea8788d97a8247dc4a712eeacf22d1c231202a08774eb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df4a2e2582fad69bff19fcb7ae7e02594107ca9ae6e61d4a80d3131e65f77684\",\"dweb:/ipfs/QmNx1JgmtwiiwzfEtDxrPrRJQdjRohDkct23snZP6J1LSM\"]}},\"version\":1}","zk_version":"1.3.17"},"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":828,"contract":"contracts/mock/NFTMock.sol:NFTMock","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":830,"contract":"contracts/mock/NFTMock.sol:NFTMock","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":834,"contract":"contracts/mock/NFTMock.sol:NFTMock","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":838,"contract":"contracts/mock/NFTMock.sol:NFTMock","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":842,"contract":"contracts/mock/NFTMock.sol:NFTMock","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":848,"contract":"contracts/mock/NFTMock.sol:NFTMock","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"NFTMock.sol:NFTMock\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[7]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tadd\t128, r0, r3\n\tst.1\t64, r3\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r4, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_8[0], r2, r3\n\tjump.gt\t@.BB0_78\n\tsub.s!\t@CPI0_18[0], r2, r3\n\tjump.le\t@.BB0_70\n\tsub.s!\t@CPI0_19[0], r2, r3\n\tjump.gt\t@.BB0_76\n\tsub.s!\t@CPI0_22[0], r2, r3\n\tjump.eq\t@.BB0_109\n\tsub.s!\t@CPI0_23[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tr4, r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[7]\n\tadd\tr2, r0, stack-[6]\n\tadd\tr3, r0, r2\n\tadd\tr2, r0, stack-[5]\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_isApprovedOrOwner, @DEFAULT_UNWIND\n\tnear_call\tr0, @require_helper_stringliteral_12a8, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r1\n\tadd\tstack-[6], r0, r2\n\tadd\tstack-[5], r0, r3\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_1[0], r4, r2\n\tsub.s!\t@CPI0_2[0], r2, r2\n\tjump.gt\t@.BB0_6\n.BB0_4:\n\tadd\t@CPI0_29[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB0_5:\n\tst.1\t4, r1\n\tadd\t@CPI0_30[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_78:\n\tsub.s!\t@CPI0_9[0], r2, r3\n\tjump.le\t@.BB0_79\n\tsub.s!\t@CPI0_10[0], r2, r3\n\tjump.gt\t@.BB0_85\n\tsub.s!\t@CPI0_13[0], r2, r3\n\tjump.eq\t@.BB0_170\n\tsub.s!\t@CPI0_14[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t128, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r5\n\tsub.s!\t@CPI0_27[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_27[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t100, r1, r3\n\tld\tr3, r6\n\tsub.s!\t@CPI0_4[0], r6, r3\n\tjump.gt\t@.BB0_2\n\tadd\t35, r6, r3\n\tadd\t@CPI0_5[0], r0, r7\n\tsub!\tr3, r4, r8\n\tadd\tr0, r0, r8\n\tadd.ge\tr7, r0, r8\n\tand\t@CPI0_5[0], r3, r3\n\tsub!\tr3, r0, r9\n\tadd.ge\tr0, r0, r7\n\tsub.s!\t@CPI0_5[0], r3, r3\n\tadd.ne\tr8, r0, r7\n\tsub!\tr7, r0, r3\n\tjump.ne\t@.BB0_2\n\tadd\t4, r6, r7\n\tptr.add\tr1, r7, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_4[0], r3, r8\n\tjump.gt\t@.BB0_4\n\tadd\t191, r3, r8\n\tsub.s\t32, r0, r9\n\tand\tr8, r9, r8\n\tsub.s!\t@CPI0_4[0], r8, r9\n\tjump.gt\t@.BB0_4\n\tst.1\t64, r8\n\tst.1\t128, r3\n\tadd\tr6, r3, r6\n\tadd\t36, r6, r6\n\tsub!\tr6, r4, r4\n\tjump.gt\t@.BB0_2\n\tadd\t32, r7, r4\n\tptr.add\tr1, r4, r4\n\tand\t31, r3, r6\n\tshr.s!\t5, r3, r7\n\tjump.eq\t@.BB0_202\n\tadd\tr0, r0, r8\n.BB0_190:\n\tshl.s\t5, r8, r9\n\tptr.add\tr4, r9, r10\n\tld\tr10, r10\n\tadd\t160, r9, r9\n\tst.1\tr9, r10\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB0_190\n.BB0_202:\n\tsub!\tr6, r0, r8\n\tjump.eq\t@.BB0_192\n\tshl.s\t5, r7, r7\n\tptr.add\tr4, r7, r4\n\tshl.s\t3, r6, r6\n\tadd\t160, r7, r7\n\tld.1\tr7, r8\n\tshl\tr8, r6, r8\n\tshr\tr8, r6, r8\n\tld\tr4, r4\n\tsub\t256, r6, r6\n\tshr\tr4, r6, r4\n\tshl\tr4, r6, r4\n\tor\tr4, r8, r4\n\tst.1\tr7, r4\n.BB0_192:\n\tadd\t160, r3, r3\n\tst.1\tr3, r0\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r3\n\tjump\t@.BB0_193\n.BB0_6:\n\tadd\t159, r4, r2\n\tand\t@CPI0_3[0], r2, r2\n\tst.1\t64, r2\n\tand\t31, r4, r2\n\tshr.s!\t5, r4, r3\n\tjump.eq\t@.BB0_203\n\tadd\tr0, r0, r5\n.BB0_8:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_8\n.BB0_203:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tshl.s\t3, r2, r2\n\tadd\t128, r3, r3\n\tld.1\tr3, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB0_10:\n\tsub.s!\t64, r4, r1\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r5\n\tsub.s!\t@CPI0_4[0], r5, r1\n\tjump.gt\t@.BB0_2\n\tadd\t128, r4, r1\n\tadd\t159, r5, r2\n\tsub!\tr2, r1, r2\n\tjump.ge\t@.BB0_2\n\tadd\t128, r5, r3\n\tld.1\tr3, r2\n\tsub.s!\t@CPI0_4[0], r2, r6\n\tjump.gt\t@.BB0_4\n\tadd\t63, r2, r6\n\tsub.s\t32, r0, r9\n\tand\tr6, r9, r6\n\tld.1\t64, r10\n\tadd\tr10, r6, r6\n\tsub!\tr6, r10, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_4[0], r6, r8\n\tjump.gt\t@.BB0_4\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_4\n\tadd\tr9, r0, stack-[5]\n\tst.1\t64, r6\n\tadd\tr10, r0, stack-[7]\n\tst.1.inc\tr10, r2, r6\n\tadd\tr6, r0, stack-[6]\n\tadd\tr5, r2, r5\n\tadd\t160, r5, r5\n\tsub!\tr5, r1, r5\n\tjump.gt\t@.BB0_2\n\tsub!\tr2, r0, r5\n\tadd\tstack-[7], r0, r8\n\tjump.eq\t@.BB0_20\n\tadd\tr0, r0, r5\n.BB0_19:\n\tadd\t32, r5, r5\n\tadd\tr5, r8, r6\n\tadd\tr5, r3, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB0_19\n.BB0_20:\n\tadd\tstack-[6], r2, r2\n\tst.1\tr2, r0\n\tld.1\t160, r5\n\tsub.s!\t@CPI0_4[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tadd\t31, r5, r2\n\tadd\t@CPI0_5[0], r0, r3\n\tsub!\tr2, r4, r4\n\tadd\tr0, r0, r4\n\tadd.ge\tr3, r0, r4\n\tand\t@CPI0_5[0], r2, r2\n\tsub!\tr2, r0, r6\n\tadd.ge\tr0, r0, r3\n\tsub.s!\t@CPI0_5[0], r2, r2\n\tadd.ne\tr4, r0, r3\n\tsub!\tr3, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t128, r5, r3\n\tld.1\tr3, r2\n\tsub.s!\t@CPI0_4[0], r2, r4\n\tadd\tstack-[5], r0, r6\n\tjump.gt\t@.BB0_4\n\tadd\t63, r2, r4\n\tand\tr4, r6, r4\n\tld.1\t64, r8\n\tadd\tr8, r4, r4\n\tsub!\tr4, r8, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI0_4[0], r4, r7\n\tjump.gt\t@.BB0_4\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r4\n\tadd\tr8, r0, stack-[4]\n\tst.1.inc\tr8, r2, r4\n\tadd\tr4, r0, stack-[3]\n\tadd\tr5, r2, r4\n\tadd\t160, r4, r4\n\tsub!\tr4, r1, r1\n\tjump.gt\t@.BB0_2\n\tsub!\tr2, r0, r1\n\tadd\tstack-[4], r0, r6\n\tjump.eq\t@.BB0_29\n\tadd\tr0, r0, r1\n.BB0_28:\n\tadd\t32, r1, r1\n\tadd\tr1, r6, r4\n\tadd\tr1, r3, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr1, r2, r4\n\tjump.lt\t@.BB0_28\n.BB0_29:\n\tadd\tstack-[3], r2, r1\n\tst.1\tr1, r0\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_4\n\tsload\tr0, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tadd\tr3, r0, stack-[1]\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_31\n\tadd\tstack-[1], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_36\n\tst.1\t0, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[2], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_36\n.BB0_37:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_37\n.BB0_36:\n\tadd\tstack-[2], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_46\n\tst.1\t0, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[2], r0, r3\n\tand!\tstack-[5], r3, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[7], r0, r6\n\tjump.eq\t@.BB0_43\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_42:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_42\n.BB0_43:\n\tsub.s!\tstack-[2], r3, r3\n\tjump.ge\t@.BB0_45\n\tadd\tstack-[2], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[7], r2, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_45:\n\tadd\tstack-[2], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n\tjump\t@.BB0_38\n.BB0_70:\n\tsub.s!\t@CPI0_24[0], r2, r3\n\tjump.eq\t@.BB0_87\n\tsub.s!\t@CPI0_25[0], r2, r3\n\tjump.eq\t@.BB0_95\n\tsub.s!\t@CPI0_26[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_getApproved, @DEFAULT_UNWIND\n\tjump\t@.BB0_108\n.BB0_79:\n\tsub.s!\t@CPI0_15[0], r2, r3\n\tjump.eq\t@.BB0_152\n\tsub.s!\t@CPI0_16[0], r2, r3\n\tjump.eq\t@.BB0_155\n\tsub.s!\t@CPI0_17[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r1\n\tadd.ne\tr5, r0, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_31\n\tst.1\t128, r1\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_166\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t160, r2\n\tsub!\tr1, r0, r1\n\tadd\t192, r0, r2\n\tadd.eq\t160, r0, r2\n\tjump\t@.BB0_164\n.BB0_76:\n\tsub.s!\t@CPI0_20[0], r2, r3\n\tjump.eq\t@.BB0_133\n\tsub.s!\t@CPI0_21[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t96, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r5\n\tsub.s!\t@CPI0_27[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_27[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r3\n\tadd\t160, r0, r1\n\tst.1\t64, r1\n\tst.1\t128, r0\n.BB0_193:\n\tadd\t128, r0, r4\n\tadd\tr5, r0, r1\n\tnear_call\tr0, @fun_safeTransferFrom, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_85:\n\tsub.s!\t@CPI0_11[0], r2, r3\n\tjump.eq\t@.BB0_194\n\tsub.s!\t@CPI0_12[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_27[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tsub.s!\t@CPI0_27[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r2\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[6]\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[6], r0, r2\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tjump\t@.BB0_94\n.BB0_109:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[7]\n\tsub.s!\t@CPI0_27[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_27[0], r1, r1\n\tjump.ne\t@.BB0_116\n.BB0_114:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_53[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tjump\t@.BB0_115\n.BB0_170:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[7]\n\tsub.s!\t@CPI0_27[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r2\n\tsub!\tr2, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\tr2, r0, stack-[6]\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.caller\tr2\n\tsub.s!\tstack-[7], r2, r1\n\tjump.ne\t@.BB0_176\n\tadd\t@CPI0_33[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t25, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_34[0], r0, r1\n\tjump\t@.BB0_138\n.BB0_87:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_55[0], r1, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r2\n\tsub.s!\t@CPI0_56[0], r1, r3\n\tjump.eq\t@.BB0_93\n\tsub.s!\t@CPI0_57[0], r1, r3\n\tjump.eq\t@.BB0_93\n\tsub.s!\t@CPI0_58[0], r1, r1\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n.BB0_93:\n\tand\t1, r2, r1\n\tjump\t@.BB0_94\n.BB0_95:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r4\n\tand\t127, r4, r1\n\tadd.ne\tr4, r0, r1\n\tsub.s!\t31, r1, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\txor\tr2, r4, r4\n\tand!\t1, r4, r4\n\tjump.eq\t@.BB0_97\n.BB0_31:\n\tadd\t@CPI0_29[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tjump\t@.BB0_5\n.BB0_152:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_ownerOf, @DEFAULT_UNWIND\n.BB0_108:\n\tand\t@CPI0_27[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_40[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_155:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_27[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_160\n\tadd\t@CPI0_33[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t41, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_37[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_38[0], r0, r1\n\tst.1\t228, r1\n\tadd\t@CPI0_39[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_133:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[7]\n\tsub.s!\t@CPI0_27[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r2\n\tsub!\tstack-[7], r0, r1\n\tjump.ne\t@.BB0_139\n\tadd\t@CPI0_33[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_46[0], r0, r1\n.BB0_138:\n\tst.1\t196, r1\n\tadd\t@CPI0_35[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_194:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_exists, @DEFAULT_UNWIND\n\tnear_call\tr0, @require_helper_stringliteral_b08d, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[7]\n\tnear_call\tr0, @finalize_allocation_11873, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r1\n\tst.1\tr1, r0\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[6]\n\tnear_call\tr0, @finalize_allocation_11873, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r1\n\tst.1\tr1, r0\n\tadd\t32, r0, r2\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[7]\n\tst.1.inc\tr3, r2, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tjump\t@.BB0_99\n.BB0_97:\n\tst.1\t128, r1\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_101\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t160, r2\n\tsub!\tr1, r0, r1\n\tadd\t192, r0, r2\n\tadd.eq\t160, r0, r2\n\tjump\t@.BB0_98\n.BB0_166:\n\tst.1\t0, r3\n\tadd\t160, r0, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_164\n\tadd\t@CPI0_36[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_168:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_168\n\tadd\t192, r3, r2\n.BB0_164:\n.BB0_98:\n\tsub.s\t128, r2, r2\n\tadd\t128, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[6]\n\tst.1.inc\tr2, r1, r2\n\tadd\tstack-[7], r0, r1\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r4\n.BB0_99:\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_160:\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n.BB0_94:\n\tst.1\t128, r1\n\tadd\t@CPI0_28[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_139:\n\tadd\tr2, r0, stack-[6]\n\tst.1\t0, r2\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_27[0], r1, r1\n\tjump.ne\t@.BB0_141\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_27[0], r1, r1\n\tjump.ne\t@.BB0_141\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_43[0], r2, r2\n\tadd\tstack-[7], r0, r6\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_44[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_45[0], r0, r4\n\tadd\tr0, r0, r5\n\tjump\t@.BB0_128\n.BB0_101:\n\tadd\t160, r0, r2\n\tst.1\t0, r0\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_98\n\tadd\t@CPI0_54[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_103:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_103\n\tadd\t192, r3, r2\n\tjump\t@.BB0_98\n.BB0_116:\n\tsub!\tstack-[7], r1, r2\n\tjump.ne\t@.BB0_119\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_51[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_52[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t33, r0, r3\n.BB0_118:\n\tst.1\tr2, r3\n\tadd\t@CPI0_33[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_49[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_176:\n\tadd\tr2, r0, stack-[5]\n\tst.1\t0, r2\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tadd\tstack-[6], r0, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_32[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[7], r0, r6\n\tjump\t@.BB0_129\n.BB0_141:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_41[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t28, r0, r3\n.BB0_115:\n\tst.1\tr2, r3\n\tadd\t@CPI0_33[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_119:\n\tcontext.caller\tr3\n\tsub!\tr3, r1, r2\n\tjump.ne\t@.BB0_120\n.BB0_124:\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_43[0], r2, r2\n\tor\tstack-[7], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_27[0], r1, r5\n\tjump.eq\t@.BB0_114\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_44[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_50[0], r0, r4\n\tadd\tstack-[7], r0, r6\n.BB0_128:\n\tadd\tstack-[6], r0, r7\n.BB0_129:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_120:\n\tadd\tr3, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_124\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_47[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_48[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t61, r0, r3\n\tjump\t@.BB0_118\n.BB0_46:\n\tsub!\tstack-[2], r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_48\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r1\n.BB0_48:\n\tadd\tstack-[2], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n.BB0_38:\n\tsstore\tr0, r1\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_4\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tadd\tr3, r0, stack-[6]\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_31\n\tadd\tstack-[6], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_54\n\tadd\t1, r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[7], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[6], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_54\n.BB0_55:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_55\n.BB0_54:\n\tadd\tstack-[7], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_64\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[7], r0, r3\n\tand!\tstack-[5], r3, r3\n\tadd\t32, r0, r2\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r6\n\tjump.eq\t@.BB0_61\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_60:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_60\n.BB0_61:\n\tsub.s!\tstack-[7], r3, r3\n\tjump.ge\t@.BB0_63\n\tadd\tstack-[7], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[4], r2, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_63:\n\tadd\tstack-[7], r0, r1\n\tshl.s\t1, r1, r1\n\tadd\tstack-[2], r0, r2\n\tjump\t@.BB0_56\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_64:\n\tsub!\tstack-[7], r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_66\n\tadd\tstack-[3], r0, r1\n\tld.1\tr1, r1\n.BB0_66:\n\tadd\tstack-[7], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n.BB0_56:\n\tor\tr1, r2, r1\n\tadd\tstack-[2], r0, r2\n\tsstore\tr2, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_7[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\nabi_encode_string:\n.func_begin1:\n\tld.1\tr1, r3\n\tst.1.inc\tr2, r3, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\tr2, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tadd\tr2, r3, r1\n\tst.1\tr1, r0\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\tr2, r1, r1\n\tret\n.func_end1:\n\nabi_decode_addresst_addresst_uint256:\n.func_begin2:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI2_0[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI2_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI2_0[0], r1, r1\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB2_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI2_1[0], r1, r2\n\tjump.gt\t@.BB2_1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI2_1[0], r2, r4\n\tjump.gt\t@.BB2_1\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tret\n.BB2_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nfinalize_allocation_11873:\n.func_begin3:\n\tsub.s!\t@CPI3_0[0], r1, r2\n\tjump.ge\t@.BB3_1\n\tadd\t32, r1, r1\n\tst.1\t64, r1\n\tret\n.BB3_1:\n\tadd\t@CPI3_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nfinalize_allocation:\n.func_begin4:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI4_0[0], r1, r3\n\tjump.gt\t@.BB4_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB4_2\n\tst.1\t64, r1\n\tret\n.BB4_2:\n\tadd\t@CPI4_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nrequire_helper_stringliteral_b08d:\n.func_begin5:\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB5_1\n\tret\n.BB5_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI5_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI5_1[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI5_2[0], r0, r2\n\tsub.s!\t@CPI5_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI5_3[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nfun_ownerOf:\n.func_begin6:\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI6_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI6_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI6_2[0], r1, r1\n\tjump.eq\t@.BB6_3\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI6_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI6_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI6_0[0], r0, r2\n\tsub.s!\t@CPI6_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI6_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nfun_getApproved:\n.func_begin7:\n\tnop\tstack+=[1]\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI7_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI7_2[0], r1, r1\n\tjump.eq\t@.BB7_3\n\tadd\tstack-[1], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI7_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI7_2[0], r1, r1\n\tret\n.BB7_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI7_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI7_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI7_0[0], r0, r2\n\tsub.s!\t@CPI7_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI7_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\nrequire_helper_stringliteral_12a8:\n.func_begin8:\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB8_1\n\tret\n.BB8_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI8_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI8_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t45, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI8_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI8_3[0], r0, r2\n\tsub.s!\t@CPI8_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI8_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nfun_safeTransferFrom:\n.func_begin9:\n\tnop\tstack+=[9]\n\tadd\tr4, r0, stack-[2]\n\tadd\tr2, r0, stack-[3]\n\tadd\tr1, r0, stack-[6]\n\tadd\tr3, r0, stack-[7]\n\tst.1\t0, r3\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI9_2[0], r1, r1\n\tjump.eq\t@.BB9_3\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[1]\n\tand\t@CPI9_2[0], r2, stack-[4]\n\tsub!\tstack-[4], r1, r2\n\tjump.eq\t@.BB9_14\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\t@CPI9_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB9_14\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI9_2[0], r1, r1\n\tjump.eq\t@.BB9_3\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI9_2[0], r1, r1\n\tsub.s!\tstack-[4], r1, r1\n\tjump.ne\t@.BB9_12\n.BB9_14:\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI9_2[0], r1, r2\n\tjump.eq\t@.BB9_3\n\tadd\tstack-[6], r0, r1\n\tand\t@CPI9_2[0], r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB9_17\n\tadd\tr2, r0, stack-[6]\n\tadd\tstack-[3], r0, r1\n\tand!\t@CPI9_2[0], r1, stack-[4]\n\tjump.eq\t@.BB9_19\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI9_2[0], r1, r1\n\tadd\tstack-[6], r0, r2\n\tjump.eq\t@.BB9_3\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB9_17\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI9_9[0], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\t@CPI9_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI9_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\t@CPI9_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI9_9[0], r2, r2\n\tadd\tstack-[4], r0, r6\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tadd\t@CPI9_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_10[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI9_11[0], r0, r4\n\tadd\tstack-[6], r0, r5\n\tadd\tstack-[7], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB9_1\n\tcontext.sp\tr1\n\tadd\tr1, r0, stack-[5]\n\tadd\t@CPI9_12[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\t@CPI9_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_13[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_29\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[2], r0, r6\n\tjump.eq\t@.BB9_31\n\tld.1\t64, r10\n\tadd\t100, r10, r1\n\tadd\t128, r0, r7\n\tst.1\tr1, r7\n\tadd\t68, r10, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r10, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI9_14[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t4, r10, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\tr1, r2\n\tld.1\tr6, r1\n\tadd\t132, r10, r2\n\tst.1\tr2, r1\n\tadd\t164, r10, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB9_35\n\tadd\tr0, r0, r3\n.BB9_34:\n\tadd\tr3, r2, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB9_34\n.BB9_35:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tcontext.gas_left\tr6\n\tadd\tstack-[4], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB9_37\n\tcontext.sp\tr5\n\tsub.s\t9, r5, r5\n\tmul\t32, r5, r5, r0\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tadd\t0, r0, stack-[9]\n\tjump\t@.BB9_42\n.BB9_31:\n\tcontext.sp\tr1\n\tsub\tstack-[5], r1, r1\n\tnop\tstack+=[r1]\n\tjump\t@.BB9_59\n.BB9_37:\n\tadd\tr7, r0, stack-[6]\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\t@CPI9_0[0], r0, r3\n\tsub.s!\t@CPI9_0[0], r10, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr10, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t164, r1, r1\n\tsub.s!\t@CPI9_0[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI9_0[0], r6, r4\n\tadd.ge\tr3, r0, r6\n\tshl.s\t192, r6, r3\n\tor\tr3, r1, r1\n\tadd\tr10, r0, stack-[7]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI9_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB9_61\n\tadd\tr0, r0, r7\n.BB9_39:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB9_39\n.BB9_61:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB9_41\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB9_41:\n\tadd\tr3, r0, stack[@returndatasize]\n\tcontext.sp\tr5\n\tsub.s\t8, r5, r5\n\tmul\t32, r5, r5, r0\n\tadd\t0, r0, stack-[8]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_47\n.BB9_42:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI9_16[0], r1, r4\n\tjump.gt\t@.BB9_44\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB9_44\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB9_1\n\tld.1\tr10, r1\n\tand\t@CPI9_17[0], r1, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB9_1\n\tshr.s\t5, r5, r2\n\tadd\tr1, r0, stack[r2]\n\tcontext.sp\tr2\n\tsub\tstack-[5], r2, r2\n\tnop\tstack+=[r2]\n\tsub.s!\t@CPI9_14[0], r1, r1\n\tjump.ne\t@.BB9_57\n.BB9_59:\n\tret\n.BB9_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI9_22[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI9_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI9_0[0], r0, r2\n\tsub.s!\t@CPI9_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI9_23[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_17:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI9_7[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI9_8[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tjump\t@.BB9_13\n.BB9_19:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI9_20[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI9_21[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n.BB9_13:\n\tst.1\tr2, r3\n\tadd\t@CPI9_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI9_0[0], r0, r2\n\tsub.s!\t@CPI9_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI9_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_29:\n\trevert\n.BB9_47:\n\tadd\t96, r0, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB9_48\n\tadd\t63, r3, r2\n\tand\t@CPI9_15[0], r2, r4\n\tld.1\t64, r2\n\tadd\tr2, r4, r4\n\tsub!\tr4, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI9_16[0], r4, r6\n\tjump.gt\t@.BB9_44\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB9_44\n\tst.1\t64, r4\n\tand\t31, r3, r4\n\tst.1.inc\tr2, r3, r8\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB9_60\n\tadd\tr0, r0, r5\n.BB9_53:\n\tshl.s\t5, r5, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB9_53\n.BB9_60:\n\tadd\tr8, r0, stack-[6]\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB9_48\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tstack-[6], r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB9_48:\n\tld.1\tr2, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB9_55\n.BB9_57:\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[7]\n\tadd\t@CPI9_5[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tnear_call\tr0, @abi_encode_stringliteral_1e76, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI9_0[0], r0, r2\n\tsub.s!\t@CPI9_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n.BB9_56:\n\tsub.s!\t@CPI9_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_44:\n\tadd\t@CPI9_18[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_19[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_12:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI9_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI9_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t45, r0, r3\n\tjump\t@.BB9_13\n.BB9_55:\n\tadd\t@CPI9_0[0], r0, r2\n\tsub.s!\t@CPI9_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[6], r0, r4\n\tjump\t@.BB9_56\n.func_end9:\n\nabi_encode_stringliteral_1e76:\n.func_begin10:\n\tadd\t96, r1, r2\n\tadd\t@CPI10_0[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\t@CPI10_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\t50, r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t128, r1, r1\n\tret\n.func_end10:\n\nfun_isApprovedOrOwner:\n.func_begin11:\n\tnop\tstack+=[3]\n\tadd\tr1, r0, stack-[3]\n\tadd\tr2, r0, stack-[2]\n\tst.1\t0, r2\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[1]\n\tst.1\t32, r1\n\tadd\t@CPI11_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI11_2[0], r1, r2\n\tjump.eq\t@.BB11_3\n\tadd\t1, r0, r1\n\tadd\tstack-[3], r0, r3\n\tand\t@CPI11_2[0], r3, stack-[3]\n\tsub!\tstack-[3], r2, r3\n\tjump.eq\t@.BB11_12\n\tst.1\t0, r2\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI11_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI11_0[0], r1, r2\n\tadd.ge\t@CPI11_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB11_12\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[1], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI11_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI11_2[0], r1, r1\n\tjump.eq\t@.BB11_3\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI11_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t@CPI11_2[0], r1, r1\n\tsub.s!\tstack-[3], r1, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n.BB11_12:\n\tret\n.BB11_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB11_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI11_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI11_4[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI11_0[0], r0, r2\n\tsub.s!\t@CPI11_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI11_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end11:\n\nfun_transfer:\n.func_begin12:\n\tnop\tstack+=[4]\n\tadd\tr2, r0, stack-[1]\n\tadd\tr1, r0, stack-[3]\n\tadd\tr3, r0, stack-[4]\n\tst.1\t0, r3\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI12_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI12_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI12_2[0], r1, r2\n\tjump.eq\t@.BB12_3\n\tadd\tstack-[3], r0, r1\n\tand\t@CPI12_2[0], r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB12_5\n\tadd\tr2, r0, stack-[3]\n\tadd\tstack-[1], r0, r1\n\tand!\t@CPI12_2[0], r1, stack-[1]\n\tjump.eq\t@.BB12_8\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI12_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI12_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI12_2[0], r1, r1\n\tadd\tstack-[3], r0, r2\n\tjump.eq\t@.BB12_3\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB12_5\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI12_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI12_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI12_7[0], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI12_0[0], r1, r2\n\tadd.ge\t@CPI12_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[1], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI12_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI12_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI12_0[0], r1, r2\n\tadd.ge\t@CPI12_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI12_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI12_7[0], r2, r2\n\tadd\tstack-[1], r0, r6\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tadd\t@CPI12_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI12_8[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI12_9[0], r0, r4\n\tadd\tstack-[3], r0, r5\n\tadd\tstack-[4], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB12_1\n\tret\n.BB12_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI12_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_0[0], r0, r2\n\tsub.s!\t@CPI12_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_13[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB12_5:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI12_3[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI12_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tjump\t@.BB12_6\n.BB12_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI12_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI12_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n.BB12_6:\n\tst.1\tr2, r3\n\tadd\t@CPI12_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI12_0[0], r0, r2\n\tsub.s!\t@CPI12_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI12_6[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\nfun_exists:\n.func_begin13:\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI13_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI13_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI13_2[0], r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tret\n.BB13_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end13:\n\n__cxa_throw:\n\trevert\n\n__sha3:\n.func_begin14:\n\tadd\t@CPI15_0[0], r0, r3\n\tsub.s!\t@CPI15_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI15_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI15_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI15_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB15_2\n\tld\tr1, r1\n\tret\n.BB15_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end14:\n\n__farcall:\n.func_begin15:\n.tmp0:\n\tfar_call\tr1, r2, @.BB16_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB16_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end15:\n\n__staticcall:\n.func_begin16:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB17_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB17_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end16:\n\n\t.data\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI5_2:\nCPI6_0:\nCPI7_0:\nCPI8_3:\nCPI9_0:\nCPI11_0:\nCPI12_0:\nCPI13_0:\nCPI15_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -18446744073709551457\nCPI0_2:\n\t.cell -18446744073709551489\nCPI0_3:\nCPI9_15:\n\t.cell 8589934560\nCPI0_4:\nCPI4_0:\nCPI9_16:\n\t.cell 18446744073709551615\nCPI0_5:\nCPI2_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_6:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_7:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_8:\n\t.cell 1666326813\nCPI0_9:\n\t.cell 2720838756\nCPI0_10:\n\t.cell 3363526364\nCPI0_11:\n\t.cell 3363526365\nCPI0_12:\n\t.cell 3917867461\nCPI0_13:\n\t.cell 2720838757\nCPI0_14:\n\t.cell 3096268766\nCPI0_15:\n\t.cell 1666326814\nCPI0_16:\n\t.cell 1889567281\nCPI0_17:\n\t.cell 2514000705\nCPI0_18:\n\t.cell 157198258\nCPI0_19:\n\t.cell 1086394136\nCPI0_20:\n\t.cell 1086394137\nCPI0_21:\n\t.cell 1115958798\nCPI0_22:\n\t.cell 157198259\nCPI0_23:\n\t.cell 599290589\nCPI0_24:\n\t.cell 33540519\nCPI0_25:\n\t.cell 117300739\nCPI0_26:\n\t.cell 135795452\nCPI0_27:\nCPI2_1:\nCPI6_2:\nCPI7_2:\nCPI9_2:\nCPI11_2:\nCPI12_2:\nCPI13_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_28:\n\t.cell 2535301202817642044428229017600\nCPI0_29:\nCPI3_1:\nCPI4_1:\nCPI9_18:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_30:\nCPI3_2:\nCPI4_2:\nCPI9_19:\n\t.cell 2852213850513516153367582212096\nCPI0_31:\nCPI6_1:\nCPI7_1:\nCPI9_1:\nCPI11_1:\nCPI12_1:\nCPI13_1:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_32:\n\t.cell 10488878412788366941768124514102328501031624832915735463117339209566108871729\nCPI0_33:\nCPI5_1:\nCPI6_4:\nCPI7_4:\nCPI8_2:\nCPI9_5:\nCPI11_4:\nCPI12_5:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_34:\n\t.cell 31354931916645375393762213565866891172307618523953520621822726397682830540800\nCPI0_35:\n\t.cell 7922816253787617000789217640448\nCPI0_36:\n\t.cell -35707666377435648211887908874984608119992236509074197713628505308453184860938\nCPI0_37:\n\t.cell 31354931916645375393761059704421056284766179208589378268252292504104988604001\nCPI0_38:\n\t.cell 49035997637886268239882041675796387503892600671578232905754119059317383495680\nCPI0_39:\n\t.cell 10458117454244075803782624051200\nCPI0_40:\n\t.cell 2535301200456458802993406410752\nCPI0_41:\n\t.cell 31354931916645375394227994539589573020889145011472493424756597455838364303360\nCPI0_42:\nCPI5_3:\nCPI6_5:\nCPI7_5:\nCPI9_23:\nCPI11_5:\nCPI12_13:\n\t.cell 7922816251426433759354395033600\nCPI0_43:\nCPI9_9:\nCPI12_7:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_44:\nCPI9_10:\nCPI12_8:\nCPI15_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_45:\nCPI9_11:\nCPI12_9:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI0_46:\n\t.cell 31354931916645375394055781497097123966713745074512196778955490624888853853043\nCPI0_47:\n\t.cell 48576686418507356219831365361070156960199332940003936683527688631380237877248\nCPI0_48:\n\t.cell 31354931916645375393762213565866891172284950498046585739320112041512459596911\nCPI0_49:\nCPI8_4:\nCPI9_6:\nCPI12_6:\n\t.cell 10458117451882892562347801444352\nCPI0_50:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI0_51:\n\t.cell 51563664738492368274558954261681333965909290046418063673820955378523815542784\nCPI0_52:\n\t.cell 31354931916645375393762213565866890849608307089744918678309194418033790512741\nCPI0_53:\nCPI5_0:\nCPI6_3:\nCPI7_3:\nCPI9_22:\nCPI11_3:\nCPI12_12:\n\t.cell 31354931916645375393958183653158686846599388074356949121886454872141515980800\nCPI0_54:\n\t.cell 18569430475105882587588266137607568536673111973893317399460219858819262702947\nCPI0_55:\nCPI9_17:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_56:\n\t.cell -57591534043048631271602713168962198724648561309353517944097662808962438791168\nCPI0_57:\n\t.cell 41326688264978518566617017154793646184809722027297161851759941631668658372608\nCPI0_58:\n\t.cell 904250603428552709895185118199468575982109441609966099573332780532423983104\nCPI3_0:\n\t.cell 18446744073709551584\nCPI8_0:\nCPI9_3:\n\t.cell 51620973015253767882670130074298444487415533390198982457255807955294746574848\nCPI8_1:\nCPI9_4:\n\t.cell 31354931916645375393809815203201166297542482068262457279726729202739757674085\nCPI9_7:\nCPI12_3:\n\t.cell 50417742920509558439106150551775209266858149941038353264781520106005609840640\nCPI9_8:\nCPI12_4:\n\t.cell 31354931916645375394228278154242914900316605976059021079503402663591234728992\nCPI9_12:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI9_13:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI9_14:\n\t.cell 9518847204935358166548570266051330015907116135037852959641967396525866745856\nCPI9_20:\nCPI12_10:\n\t.cell 51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI9_21:\nCPI12_11:\n\t.cell 31354931916645375394228278154242914900316678601111040334909412358260906878052\nCPI10_0:\n\t.cell 44958151438609599421424650306347963631972141104775375727422033337783813144576\nCPI10_1:\n\t.cell 31354931916645375394228278154242914900316678601109191929828695483653754540645\n","bytecode":{"object":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","mint(address,uint256)":"40c10f19","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":"/// @use-src 4:\"@openzeppelin/contracts/token/ERC721/ERC721.sol\", 5:\"@openzeppelin/contracts/token/ERC721/IERC721.sol\", 8:\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\", 10:\"@openzeppelin/contracts/utils/Context.sol\", 12:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 13:\"@openzeppelin/contracts/utils/introspection/IERC165.sol\", 23:\"contracts/mock/NFTMock.sol\"\nobject \"NFTMock_5126\" {\n    code {\n        {\n            /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"NFTMock_5126\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n            let offset := mload(memoryDataOffset)\n            let _2 := sub(shl(64, 1), 1)\n            if gt(offset, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n            let value0 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n            let _3 := 32\n            let offset_1 := mload(add(memoryDataOffset, _3))\n            if gt(offset_1, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n            let value1 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1)\n            let newLen := mload(value0)\n            if gt(newLen, _2)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ 0x24)\n            }\n            /// @src -1:-1:-1\n            let _4 := 0\n            /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n            let _5 := sload(/** @src -1:-1:-1 */ _4)\n            /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n            let length := /** @src -1:-1:-1 */ _4\n            /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n            let _6 := 1\n            length := shr(_6, _5)\n            let outOfPlaceEncoding := and(_5, _6)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, _3))\n            {\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ _4, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ 0x24)\n            }\n            let _7 := 31\n            if gt(length, _7)\n            {\n                mstore(/** @src -1:-1:-1 */ _4, _4)\n                /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _4, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ _3)\n                let deleteStart := add(data, shr(5, add(newLen, _7)))\n                if lt(newLen, _3) { deleteStart := data }\n                let _8 := add(data, shr(5, add(length, _7)))\n                let start := deleteStart\n                for { } lt(start, _8) { start := add(start, _6) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _4)\n                }\n            }\n            /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n            let srcOffset := /** @src -1:-1:-1 */ _4\n            /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n            srcOffset := _3\n            switch gt(newLen, _7)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                mstore(/** @src -1:-1:-1 */ _4, _4)\n                /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ _4, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ _3)\n                let i := /** @src -1:-1:-1 */ _4\n                /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                for { } lt(i, loopEnd) { i := add(i, _3) }\n                {\n                    sstore(dstPtr, mload(add(value0, srcOffset)))\n                    dstPtr := add(dstPtr, _6)\n                    srcOffset := add(srcOffset, _3)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(value0, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src -1:-1:-1 */ _4, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ add(shl(_6, newLen), _6))\n            }\n            default {\n                let value := /** @src -1:-1:-1 */ _4\n                /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                if newLen\n                {\n                    value := mload(add(value0, srcOffset))\n                }\n                sstore(/** @src -1:-1:-1 */ _4, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ or(and(value, not(shr(shl(3, newLen), not(0)))), shl(_6, newLen)))\n            }\n            let newLen_1 := mload(value1)\n            if gt(newLen_1, _2)\n            {\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ _4, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ 0x24)\n            }\n            let _9 := sload(_6)\n            let length_1 := /** @src -1:-1:-1 */ _4\n            /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n            length_1 := shr(_6, _9)\n            let outOfPlaceEncoding_1 := and(_9, _6)\n            if iszero(outOfPlaceEncoding_1)\n            {\n                length_1 := and(length_1, 0x7f)\n            }\n            if eq(outOfPlaceEncoding_1, lt(length_1, _3))\n            {\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ _4, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ 0x24)\n            }\n            if gt(length_1, _7)\n            {\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ _6)\n                let data_1 := keccak256(/** @src -1:-1:-1 */ _4, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ _3)\n                let deleteStart_1 := add(data_1, shr(5, add(newLen_1, _7)))\n                if lt(newLen_1, _3) { deleteStart_1 := data_1 }\n                let _10 := add(data_1, shr(5, add(length_1, _7)))\n                let start_1 := deleteStart_1\n                for { } lt(start_1, _10) { start_1 := add(start_1, _6) }\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ _4)\n                }\n            }\n            /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n            let srcOffset_1 := /** @src -1:-1:-1 */ _4\n            /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n            srcOffset_1 := _3\n            switch gt(newLen_1, _7)\n            case 1 {\n                let loopEnd_1 := and(newLen_1, not(31))\n                mstore(/** @src -1:-1:-1 */ _4, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ _6)\n                let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ _4, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ _3)\n                let i_1 := /** @src -1:-1:-1 */ _4\n                /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _3) }\n                {\n                    sstore(dstPtr_1, mload(add(value1, srcOffset_1)))\n                    dstPtr_1 := add(dstPtr_1, _6)\n                    srcOffset_1 := add(srcOffset_1, _3)\n                }\n                if lt(loopEnd_1, newLen_1)\n                {\n                    let lastValue_1 := mload(add(value1, srcOffset_1))\n                    sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(3, newLen_1), 248), not(0)))))\n                }\n                sstore(_6, add(shl(_6, newLen_1), _6))\n            }\n            default {\n                let value_1 := /** @src -1:-1:-1 */ _4\n                /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                if newLen_1\n                {\n                    value_1 := mload(add(value1, srcOffset_1))\n                }\n                sstore(_6, or(and(value_1, not(shr(shl(3, newLen_1), not(0)))), shl(_6, newLen_1)))\n            }\n            let _11 := mload(64)\n            let _12 := datasize(\"NFTMock_5126_deployed\")\n            codecopy(_11, dataoffset(\"NFTMock_5126_deployed\"), _12)\n            return(_11, _12)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_string_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n            let _1 := mload(offset)\n            if gt(_1, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ 0x24)\n            }\n            let _2 := 0x20\n            let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n            mstore(array_1, _1)\n            if gt(add(add(offset, _1), _2), end)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n            for { } lt(i, _1) { i := add(i, _2) }\n            {\n                mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n            }\n            mstore(add(add(array_1, _1), _2), /** @src -1:-1:-1 */ 0)\n            /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n            array := array_1\n        }\n    }\n    /// @use-src 4:\"@openzeppelin/contracts/token/ERC721/ERC721.sol\", 9:\"@openzeppelin/contracts/utils/Address.sol\", 10:\"@openzeppelin/contracts/utils/Context.sol\", 11:\"@openzeppelin/contracts/utils/Strings.sol\", 12:\"@openzeppelin/contracts/utils/introspection/ERC165.sol\", 14:\"@openzeppelin/contracts/utils/math/Math.sol\", 23:\"contracts/mock/NFTMock.sol\"\n    object \"NFTMock_5126_deployed\" {\n        code {\n            {\n                /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    switch shr(224, calldataload(_4))\n                    case 0x01ffc9a7 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let value := calldataload(_3)\n                        let _5 := and(value, shl(224, 0xffffffff))\n                        if iszero(eq(value, _5)) { revert(_4, _4) }\n                        /// @src 4:1707:1811  \"interfaceId == type(IERC721).interfaceId ||...\"\n                        let expr := /** @src 4:1707:1747  \"interfaceId == type(IERC721).interfaceId\" */ eq(_5, /** @src 4:1722:1747  \"type(IERC721).interfaceId\" */ shl(224, 0x80ac58cd))\n                        /// @src 4:1707:1811  \"interfaceId == type(IERC721).interfaceId ||...\"\n                        if iszero(expr)\n                        {\n                            expr := /** @src 4:1763:1811  \"interfaceId == type(IERC721Metadata).interfaceId\" */ eq(_5, /** @src 4:1778:1811  \"type(IERC721Metadata).interfaceId\" */ shl(224, 0x5b5e139f))\n                        }\n                        /// @src 4:1707:1863  \"interfaceId == type(IERC721).interfaceId ||...\"\n                        let expr_1 := expr\n                        if iszero(expr)\n                        {\n                            expr_1 := /** @src 12:937:977  \"interfaceId == type(IERC165).interfaceId\" */ eq(_5, /** @src 12:952:977  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                        }\n                        /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                        mstore(_1, iszero(iszero(expr_1)))\n                        return(_1, 32)\n                    }\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPtr := mload(_2)\n                        let ret := _4\n                        let slotValue := sload(_4)\n                        let length := _4\n                        let _6 := 1\n                        length := shr(_6, slotValue)\n                        let outOfPlaceEncoding := and(slotValue, _6)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        let _7 := 32\n                        if eq(outOfPlaceEncoding, lt(length, _7))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x22)\n                            revert(_4, 0x24)\n                        }\n                        mstore(memPtr, length)\n                        switch outOfPlaceEncoding\n                        case 0 {\n                            mstore(add(memPtr, _7), and(slotValue, not(255)))\n                            ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _7)\n                        }\n                        case 1 {\n                            mstore(_4, _4)\n                            let dataPos := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                            let i := _4\n                            for { } lt(i, length) { i := add(i, _7) }\n                            {\n                                mstore(add(add(memPtr, i), _7), sload(dataPos))\n                                dataPos := add(dataPos, _6)\n                            }\n                            ret := add(add(memPtr, i), _7)\n                        }\n                        finalize_allocation(memPtr, sub(ret, memPtr))\n                        let memPos := mload(_2)\n                        mstore(memPos, _7)\n                        return(memPos, sub(abi_encode_string(memPtr, add(memPos, _7)), memPos))\n                    }\n                    case 0x081812fc {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let ret_1 := fun_getApproved(calldataload(_3))\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, and(ret_1, sub(shl(160, 1), 1)))\n                        return(memPos_1, 32)\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0 := abi_decode_address()\n                        let value_1 := calldataload(36)\n                        let _8 := sub(shl(160, 1), 1)\n                        /// @src 4:3605:3616  \"to != owner\"\n                        let _9 := /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ and(/** @src 4:3564:3587  \"ERC721.ownerOf(tokenId)\" */ fun_ownerOf(value_1), /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ _8)\n                        let _10 := and(/** @src 4:3605:3616  \"to != owner\" */ value0, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ _8)\n                        if /** @src 4:3605:3616  \"to != owner\" */ eq(/** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ _10, /** @src 4:3605:3616  \"to != owner\" */ _9)\n                        /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                        {\n                            let memPtr_1 := mload(_2)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, _3), 32)\n                            mstore(add(memPtr_1, 36), 33)\n                            mstore(add(memPtr_1, 68), \"ERC721: approval to current owne\")\n                            mstore(add(memPtr_1, 100), \"r\")\n                            revert(memPtr_1, 132)\n                        }\n                        /// @src 4:3686:3748  \"_msgSender() == owner || isApprovedForAll(owner, _msgSender())\"\n                        let expr_2 := /** @src 4:3686:3707  \"_msgSender() == owner\" */ eq(/** @src 10:719:729  \"msg.sender\" */ caller(), /** @src 4:3686:3707  \"_msgSender() == owner\" */ _9)\n                        /// @src 4:3686:3748  \"_msgSender() == owner || isApprovedForAll(owner, _msgSender())\"\n                        if iszero(expr_2)\n                        {\n                            /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                            mstore(_4, _9)\n                            mstore(32, /** @src 4:4508:4526  \"_operatorApprovals\" */ 0x05)\n                            /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                            let _11 := keccak256(_4, _2)\n                            mstore(_4, /** @src 10:719:729  \"msg.sender\" */ caller())\n                            /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                            mstore(32, _11)\n                            /// @src 4:3686:3748  \"_msgSender() == owner || isApprovedForAll(owner, _msgSender())\"\n                            expr_2 := /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ and(sload(keccak256(_4, _2)), 0xff)\n                        }\n                        if iszero(expr_2)\n                        {\n                            let memPtr_2 := mload(_2)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, _3), 32)\n                            mstore(add(memPtr_2, 36), 61)\n                            mstore(add(memPtr_2, 68), \"ERC721: approve caller is not to\")\n                            mstore(add(memPtr_2, 100), \"ken owner or approved for all\")\n                            revert(memPtr_2, 132)\n                        }\n                        mstore(_4, value_1)\n                        mstore(32, _3)\n                        let _12 := keccak256(_4, _2)\n                        sstore(_12, or(and(sload(_12), shl(160, 0xffffffffffffffffffffffff)), _10))\n                        /// @src 4:12690:12736  \"Approval(ERC721.ownerOf(tokenId), to, tokenId)\"\n                        log4(/** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ _4, _4, /** @src 4:12690:12736  \"Approval(ERC721.ownerOf(tokenId), to, tokenId)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ and(/** @src 4:12699:12722  \"ERC721.ownerOf(tokenId)\" */ fun_ownerOf(value_1), /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ _8), /** @src 4:12690:12736  \"Approval(ERC721.ownerOf(tokenId), to, tokenId)\" */ _10, value_1)\n                        /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                        return(_4, _4)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_4, _4) }\n                        let param, param_1, param_2 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        /// @src 4:4763:4862  \"require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\")\"\n                        require_helper_stringliteral_12a8(/** @src 4:4771:4812  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ fun_isApprovedOrOwner(/** @src 10:719:729  \"msg.sender\" */ caller(), /** @src 4:4771:4812  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ param_2))\n                        /// @src 4:4893:4900  \"tokenId\"\n                        fun_transfer(param, param_1, param_2)\n                        /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                        return(_4, _4)\n                    }\n                    case 0x40c10f19 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_1 := abi_decode_address()\n                        let value_2 := calldataload(36)\n                        let _13 := and(/** @src 4:9004:9020  \"to != address(0)\" */ value0_1, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ sub(shl(160, 1), 1))\n                        if /** @src 4:9004:9020  \"to != address(0)\" */ iszero(/** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ _13)\n                        {\n                            let memPtr_3 := mload(_2)\n                            mstore(memPtr_3, shl(229, 4594637))\n                            mstore(add(memPtr_3, _3), 32)\n                            mstore(add(memPtr_3, 36), 32)\n                            mstore(add(memPtr_3, 68), \"ERC721: mint to the zero address\")\n                            revert(memPtr_3, 100)\n                        }\n                        /// @src 4:9067:9125  \"require(!_exists(tokenId), \\\"ERC721: token already minted\\\")\"\n                        require_helper_stringliteral_2a63(/** @src 4:9075:9092  \"!_exists(tokenId)\" */ iszero(/** @src 4:9076:9092  \"_exists(tokenId)\" */ fun_exists(value_2)))\n                        /// @src 4:9271:9329  \"require(!_exists(tokenId), \\\"ERC721: token already minted\\\")\"\n                        require_helper_stringliteral_2a63(/** @src 4:9279:9296  \"!_exists(tokenId)\" */ iszero(/** @src 4:9280:9296  \"_exists(tokenId)\" */ fun_exists(value_2)))\n                        /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                        mstore(_4, _13)\n                        mstore(32, /** @src 4:9671:9680  \"_balances\" */ 0x03)\n                        /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                        let dataSlot := keccak256(_4, _2)\n                        sstore(dataSlot, add(sload(/** @src 4:9671:9689  \"_balances[to] += 1\" */ dataSlot), /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ 1))\n                        mstore(_4, value_2)\n                        mstore(32, /** @src 4:9710:9717  \"_owners\" */ 0x02)\n                        /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                        let _14 := keccak256(_4, _2)\n                        sstore(_14, or(and(sload(_14), shl(160, 0xffffffffffffffffffffffff)), _13))\n                        /// @src 4:9747:9780  \"Transfer(address(0), to, tokenId)\"\n                        log4(/** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ _4, _4, /** @src 4:9747:9780  \"Transfer(address(0), to, tokenId)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ _4, /** @src 4:9747:9780  \"Transfer(address(0), to, tokenId)\" */ _13, value_2)\n                        /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                        return(_4, _4)\n                    }\n                    case 0x42842e0e {\n                        if callvalue() { revert(_4, _4) }\n                        let param_3, param_4, param_5 := abi_decode_addresst_addresst_uint256(calldatasize())\n                        let memPtr_4 := mload(_2)\n                        let newFreePtr := add(memPtr_4, 0x20)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_4))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_2, newFreePtr)\n                        mstore(memPtr_4, _4)\n                        /// @src 4:5077:5116  \"safeTransferFrom(from, to, tokenId, \\\"\\\")\"\n                        fun_safeTransferFrom(param_3, param_4, param_5, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ memPtr_4)\n                        return(_4, _4)\n                    }\n                    case 0x6352211e {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let ret_2 := fun_ownerOf(calldataload(_3))\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, and(ret_2, sub(shl(160, 1), 1)))\n                        return(memPos_2, 32)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let _15 := and(abi_decode_address(), sub(shl(160, 1), 1))\n                        if /** @src 4:2028:2047  \"owner != address(0)\" */ iszero(/** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ _15)\n                        {\n                            let memPtr_5 := mload(_2)\n                            mstore(memPtr_5, shl(229, 4594637))\n                            mstore(add(memPtr_5, _3), 32)\n                            mstore(add(memPtr_5, 36), 41)\n                            mstore(add(memPtr_5, 68), \"ERC721: address zero is not a va\")\n                            mstore(add(memPtr_5, 100), \"lid owner\")\n                            revert(memPtr_5, 132)\n                        }\n                        mstore(_4, _15)\n                        mstore(32, /** @src 4:2110:2119  \"_balances\" */ 0x03)\n                        /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                        let _16 := sload(keccak256(_4, _2))\n                        let memPos_3 := mload(_2)\n                        mstore(memPos_3, _16)\n                        return(memPos_3, 32)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPtr_6 := mload(_2)\n                        let ret_3 := _4\n                        /// @src 4:2721:2728  \"_symbol\"\n                        let _17 := 0x01\n                        /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                        let slotValue_1 := sload(/** @src 4:2721:2728  \"_symbol\" */ _17)\n                        /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                        let length_1 := _4\n                        length_1 := shr(/** @src 4:2721:2728  \"_symbol\" */ _17, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ slotValue_1)\n                        let outOfPlaceEncoding_1 := and(slotValue_1, /** @src 4:2721:2728  \"_symbol\" */ _17)\n                        /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                        if iszero(outOfPlaceEncoding_1)\n                        {\n                            length_1 := and(length_1, 0x7f)\n                        }\n                        let _18 := 32\n                        if eq(outOfPlaceEncoding_1, lt(length_1, _18))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x22)\n                            revert(_4, 0x24)\n                        }\n                        mstore(memPtr_6, length_1)\n                        switch outOfPlaceEncoding_1\n                        case 0 {\n                            mstore(add(memPtr_6, _18), and(slotValue_1, not(255)))\n                            ret_3 := add(add(memPtr_6, shl(5, iszero(iszero(length_1)))), _18)\n                        }\n                        case 1 {\n                            mstore(_4, /** @src 4:2721:2728  \"_symbol\" */ _17)\n                            /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                            let dataPos_1 := 80084422859880547211683076133703299733277748156566366325829078699459944778998\n                            let i_1 := _4\n                            for { } lt(i_1, length_1) { i_1 := add(i_1, _18) }\n                            {\n                                mstore(add(add(memPtr_6, i_1), _18), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, /** @src 4:2721:2728  \"_symbol\" */ _17)\n                            }\n                            /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                            ret_3 := add(add(memPtr_6, i_1), _18)\n                        }\n                        finalize_allocation(memPtr_6, sub(ret_3, memPtr_6))\n                        let memPos_4 := mload(_2)\n                        mstore(memPos_4, _18)\n                        return(memPos_4, sub(abi_encode_string(memPtr_6, add(memPos_4, _18)), memPos_4))\n                    }\n                    case 0xa22cb465 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_2 := abi_decode_address()\n                        let value_3 := calldataload(36)\n                        let _19 := iszero(iszero(value_3))\n                        if iszero(eq(value_3, _19)) { revert(_4, _4) }\n                        let _20 := and(/** @src 4:12990:13007  \"owner != operator\" */ value0_2, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ sub(shl(160, 1), 1))\n                        if /** @src 4:12990:13007  \"owner != operator\" */ eq(/** @src 10:719:729  \"msg.sender\" */ caller(), /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ _20)\n                        {\n                            let memPtr_7 := mload(_2)\n                            mstore(memPtr_7, shl(229, 4594637))\n                            mstore(add(memPtr_7, _3), 32)\n                            mstore(add(memPtr_7, 36), 25)\n                            mstore(add(memPtr_7, 68), \"ERC721: approve to caller\")\n                            revert(memPtr_7, 100)\n                        }\n                        mstore(_4, /** @src 10:719:729  \"msg.sender\" */ caller())\n                        /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                        mstore(32, /** @src 4:13047:13065  \"_operatorApprovals\" */ 0x05)\n                        /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                        let _21 := keccak256(_4, _2)\n                        mstore(_4, _20)\n                        mstore(32, _21)\n                        let dataSlot_1 := keccak256(_4, _2)\n                        let value_4 := and(sload(dataSlot_1), not(255))\n                        sstore(dataSlot_1, or(value_4, and(_19, 255)))\n                        /// @src 4:13108:13149  \"ApprovalForAll(owner, operator, approved)\"\n                        let _22 := /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ mload(_2)\n                        mstore(_22, _19)\n                        /// @src 4:13108:13149  \"ApprovalForAll(owner, operator, approved)\"\n                        log3(_22, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ 32, /** @src 4:13108:13149  \"ApprovalForAll(owner, operator, approved)\" */ 0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, /** @src 10:719:729  \"msg.sender\" */ caller(), /** @src 4:13108:13149  \"ApprovalForAll(owner, operator, approved)\" */ _20)\n                        /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                        return(_4, _4)\n                    }\n                    case 0xb88d4fde {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 128) { revert(_4, _4) }\n                        let value0_3 := abi_decode_address()\n                        let value1 := abi_decode_address_9354()\n                        let offset := calldataload(100)\n                        if gt(offset, 0xffffffffffffffff) { revert(_4, _4) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(_4, _4) }\n                        let _23 := calldataload(add(_3, offset))\n                        let _24 := array_allocation_size_bytes(_23)\n                        let memPtr_8 := mload(_2)\n                        finalize_allocation(memPtr_8, _24)\n                        mstore(memPtr_8, _23)\n                        if gt(add(add(offset, _23), 36), calldatasize()) { revert(_4, _4) }\n                        calldatacopy(add(memPtr_8, 32), add(offset, 36), _23)\n                        mstore(add(add(memPtr_8, _23), 32), _4)\n                        fun_safeTransferFrom(value0_3, value1, calldataload(68), memPtr_8)\n                        return(_4, _4)\n                    }\n                    case 0xc87b56dd {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        /// @src 4:13313:13366  \"require(_exists(tokenId), \\\"ERC721: invalid token ID\\\")\"\n                        require_helper_stringliteral_b08d(/** @src 4:13321:13337  \"_exists(tokenId)\" */ fun_exists(/** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ calldataload(_3)))\n                        let memPtr_9 := mload(_2)\n                        finalize_allocation_11873(memPtr_9)\n                        mstore(memPtr_9, _4)\n                        let memPtr_10 := mload(_2)\n                        finalize_allocation_11873(memPtr_10)\n                        mstore(memPtr_10, _4)\n                        let memPos_5 := mload(_2)\n                        mstore(memPos_5, 32)\n                        return(memPos_5, sub(abi_encode_string(memPtr_10, add(memPos_5, 32)), memPos_5))\n                    }\n                    case 0xe985e9c5 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_4 := abi_decode_address()\n                        let value1_1 := abi_decode_address_9354()\n                        let _25 := sub(shl(160, 1), 1)\n                        mstore(_4, and(value0_4, _25))\n                        mstore(32, /** @src 4:4508:4526  \"_operatorApprovals\" */ 0x05)\n                        /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                        let _26 := keccak256(_4, _2)\n                        mstore(_4, and(value1_1, _25))\n                        mstore(32, _26)\n                        let value_5 := and(sload(keccak256(_4, _2)), 0xff)\n                        let memPos_6 := mload(_2)\n                        mstore(memPos_6, iszero(iszero(value_5)))\n                        return(memPos_6, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                mstore(add(add(pos, length), 0x20), 0)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_9354() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                value1 := value_1\n                value2 := calldataload(68)\n            }\n            function finalize_allocation_11873(memPtr)\n            {\n                let newFreePtr := add(memPtr, 32)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function require_helper_stringliteral_b08d(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 24)\n                    mstore(add(memPtr, 68), \"ERC721: invalid token ID\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 948 @src 4:2190:2409  \"function ownerOf(uint256 tokenId) public view virtual override returns (address) {...\"\n            function fun_ownerOf(var_tokenId) -> var\n            {\n                /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ var_tokenId)\n                mstore(0x20, /** @src 4:6794:6801  \"_owners\" */ 0x02)\n                /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                let cleaned := and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ 0x40)), sub(shl(160, 1), 1))\n                /// @src 4:2324:2380  \"require(owner != address(0), \\\"ERC721: invalid token ID\\\")\"\n                require_helper_stringliteral_b08d(/** @src 4:2332:2351  \"owner != address(0)\" */ iszero(iszero(/** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ cleaned)))\n                /// @src 4:2390:2402  \"return owner\"\n                var := cleaned\n            }\n            /// @ast-id 1077 @src 4:3935:4102  \"function getApproved(uint256 tokenId) public view virtual override returns (address) {...\"\n            function fun_getApproved(var_tokenId) -> var\n            {\n                /// @src 4:13313:13366  \"require(_exists(tokenId), \\\"ERC721: invalid token ID\\\")\"\n                require_helper_stringliteral_b08d(/** @src 4:13321:13337  \"_exists(tokenId)\" */ fun_exists(var_tokenId))\n                /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ var_tokenId)\n                mstore(0x20, /** @src 4:4071:4086  \"_tokenApprovals\" */ 0x04)\n                /// @src 4:4064:4095  \"return _tokenApprovals[tokenId]\"\n                var := /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ 0x40)), sub(shl(160, 1), 1))\n            }\n            function require_helper_stringliteral_12a8(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 45)\n                    mstore(add(memPtr, 68), \"ERC721: caller is not token owne\")\n                    mstore(add(memPtr, 100), \"r or approved\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 1188 @src 4:5189:5465  \"function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {...\"\n            function fun_safeTransferFrom(var_from, var_to, var_tokenId, var_data_mpos)\n            {\n                /// @src 4:5311:5410  \"require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\")\"\n                require_helper_stringliteral_12a8(/** @src 4:5319:5360  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ fun_isApprovedOrOwner(/** @src 10:719:729  \"msg.sender\" */ caller(), /** @src 4:5319:5360  \"_isApprovedOrOwner(_msgSender(), tokenId)\" */ var_tokenId))\n                /// @src 4:6458:6465  \"tokenId\"\n                fun_transfer(var_from, var_to, var_tokenId)\n                /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                if iszero(/** @src 4:6484:6531  \"_checkOnERC721Received(from, to, tokenId, data)\" */ fun_checkOnERC721Received(var_from, var_to, var_tokenId, var_data_mpos))\n                /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    revert(memPtr, sub(abi_encode_stringliteral_1e76(add(memPtr, 4)), memPtr))\n                }\n            }\n            function abi_encode_stringliteral_1e76(headStart) -> tail\n            {\n                mstore(headStart, 32)\n                mstore(add(headStart, 32), 50)\n                mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n                mstore(add(headStart, 96), \"ceiver implementer\")\n                tail := add(headStart, 128)\n            }\n            /// @ast-id 1282 @src 4:7404:7665  \"function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {...\"\n            function fun_isApprovedOrOwner(var_spender, var_tokenId) -> var\n            {\n                /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 4:7570:7586  \"spender == owner\"\n                let _2 := /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ and(/** @src 4:7529:7552  \"ERC721.ownerOf(tokenId)\" */ fun_ownerOf(var_tokenId), /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ _1)\n                /// @src 4:7570:7586  \"spender == owner\"\n                let _3 := /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ and(/** @src 4:7570:7586  \"spender == owner\" */ var_spender, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ _1)\n                /// @src 4:7570:7622  \"spender == owner || isApprovedForAll(owner, spender)\"\n                let expr := /** @src 4:7570:7586  \"spender == owner\" */ eq(_3, _2)\n                /// @src 4:7570:7622  \"spender == owner || isApprovedForAll(owner, spender)\"\n                if iszero(expr)\n                {\n                    /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ _2)\n                    mstore(0x20, /** @src 4:4508:4526  \"_operatorApprovals\" */ 0x05)\n                    /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                    let _4 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ 0x40)\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ _3)\n                    mstore(0x20, _4)\n                    /// @src 4:7570:7622  \"spender == owner || isApprovedForAll(owner, spender)\"\n                    expr := /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ 0x40)), 0xff)\n                }\n                /// @src 4:7570:7657  \"spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender\"\n                let expr_1 := expr\n                if iszero(expr)\n                {\n                    expr_1 := /** @src 4:7626:7657  \"getApproved(tokenId) == spender\" */ eq(/** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ and(/** @src 4:7626:7646  \"getApproved(tokenId)\" */ fun_getApproved(var_tokenId), /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ _1), /** @src 4:7626:7657  \"getApproved(tokenId) == spender\" */ _3)\n                }\n                /// @src 4:7562:7658  \"return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender)\"\n                var := expr_1\n            }\n            /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n            function require_helper_stringliteral_277f(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC721: transfer from incorrect \")\n                    mstore(add(memPtr, 100), \"owner\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 1555 @src 4:11257:12460  \"function _transfer(address from, address to, uint256 tokenId) internal virtual {...\"\n            function fun_transfer(var_from, var_to, var_tokenId)\n            {\n                /// @src 4:11354:11377  \"ERC721.ownerOf(tokenId)\"\n                let expr := fun_ownerOf(var_tokenId)\n                /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 4:11354:11385  \"ERC721.ownerOf(tokenId) == from\"\n                let _2 := /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ and(/** @src 4:11354:11385  \"ERC721.ownerOf(tokenId) == from\" */ var_from, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ _1)\n                /// @src 4:11346:11427  \"require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\")\"\n                require_helper_stringliteral_277f(/** @src 4:11354:11385  \"ERC721.ownerOf(tokenId) == from\" */ eq(/** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ and(/** @src 4:11354:11385  \"ERC721.ownerOf(tokenId) == from\" */ expr, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ _1), /** @src 4:11354:11385  \"ERC721.ownerOf(tokenId) == from\" */ _2))\n                /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                let _3 := and(/** @src 4:11445:11461  \"to != address(0)\" */ var_to, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ _1)\n                if /** @src 4:11445:11461  \"to != address(0)\" */ iszero(/** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ _3)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC721: transfer to the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n                /// @src 4:11647:11728  \"require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\")\"\n                require_helper_stringliteral_277f(/** @src 4:11655:11686  \"ERC721.ownerOf(tokenId) == from\" */ eq(/** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ and(/** @src 4:11655:11678  \"ERC721.ownerOf(tokenId)\" */ fun_ownerOf(var_tokenId), /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ _1), /** @src 4:11655:11686  \"ERC721.ownerOf(tokenId) == from\" */ _2))\n                /// @src 4:11459:11460  \"0\"\n                let _4 := 0x00\n                /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                mstore(/** @src 4:11459:11460  \"0\" */ _4, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ var_tokenId)\n                mstore(0x20, /** @src 4:11797:11812  \"_tokenApprovals\" */ 0x04)\n                /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                let dataSlot := keccak256(/** @src 4:11459:11460  \"0\" */ _4, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ 0x40)\n                let _5 := shl(160, 0xffffffffffffffffffffffff)\n                sstore(dataSlot, and(sload(dataSlot), _5))\n                mstore(/** @src 4:11459:11460  \"0\" */ _4, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ _2)\n                mstore(0x20, 3)\n                let dataSlot_1 := keccak256(/** @src 4:11459:11460  \"0\" */ _4, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ 0x40)\n                sstore(dataSlot_1, add(sload(/** @src 4:12265:12285  \"_balances[from] -= 1\" */ dataSlot_1), /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ not(0)))\n                mstore(/** @src 4:11459:11460  \"0\" */ _4, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ _3)\n                let dataSlot_2 := keccak256(/** @src 4:11459:11460  \"0\" */ _4, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ 0x40)\n                sstore(dataSlot_2, add(sload(/** @src 4:12299:12317  \"_balances[to] += 1\" */ dataSlot_2), /** @src 4:12284:12285  \"1\" */ 0x01))\n                /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                mstore(/** @src 4:11459:11460  \"0\" */ _4, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ var_tokenId)\n                mstore(0x20, /** @src 4:12337:12344  \"_owners\" */ 0x02)\n                /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                let _6 := keccak256(/** @src 4:11459:11460  \"0\" */ _4, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ 0x40)\n                sstore(_6, or(and(sload(_6), _5), _3))\n                /// @src 4:12374:12401  \"Transfer(from, to, tokenId)\"\n                log4(/** @src 4:11459:11460  \"0\" */ _4, _4, /** @src 4:12374:12401  \"Transfer(from, to, tokenId)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _3, var_tokenId)\n            }\n            /// @ast-id 1248 @src 4:7120:7246  \"function _exists(uint256 tokenId) internal view virtual returns (bool) {...\"\n            function fun_exists(var_tokenId) -> var\n            {\n                /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ var_tokenId)\n                mstore(0x20, /** @src 4:6794:6801  \"_owners\" */ 0x02)\n                /// @src 4:7201:7239  \"return _ownerOf(tokenId) != address(0)\"\n                var := /** @src 4:7208:7239  \"_ownerOf(tokenId) != address(0)\" */ iszero(iszero(/** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ 0x40)), sub(shl(160, 1), 1))))\n            }\n            /// @ast-id 1687 @src 4:13925:14756  \"function _checkOnERC721Received(...\"\n            function fun_checkOnERC721Received(var_from, var_to, var_tokenId, var_data_1634_mpos) -> var\n            {\n                /// @src 4:14074:14078  \"bool\"\n                var := /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ 0\n                /// @src 4:14074:14078  \"bool\"\n                let var_1 := /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ 0\n                /// @src 4:14090:14750  \"if (to.isContract()) {...\"\n                switch /** @src 9:1702:1725  \"account.code.length > 0\" */ iszero(iszero(/** @src 9:1702:1721  \"account.code.length\" */ extcodesize(var_to)))\n                case /** @src 4:14090:14750  \"if (to.isContract()) {...\" */ 0 {\n                    /// @src 4:14728:14739  \"return true\"\n                    var := /** @src 4:14735:14739  \"true\" */ 0x01\n                    /// @src 4:14728:14739  \"return true\"\n                    leave\n                }\n                default /// @src 4:14090:14750  \"if (to.isContract()) {...\"\n                {\n                    /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                    let _1 := sub(shl(160, 1), 1)\n                    /// @src 4:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    let _2 := /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ mload(64)\n                    let _3 := shl(225, 0x0a85bd01)\n                    /// @src 4:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    mstore(_2, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ _3)\n                    mstore(/** @src 4:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ add(_2, 4), /** @src 10:719:729  \"msg.sender\" */ caller())\n                    /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                    mstore(add(/** @src 4:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _2, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ 36), and(var_from, _1))\n                    mstore(add(/** @src 4:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _2, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ 68), var_tokenId)\n                    mstore(add(/** @src 4:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _2, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ 100), 128)\n                    /// @src 4:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    let _4 := 32\n                    let trySuccessCondition := call(gas(), /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ and(/** @src 4:14129:14148  \"IERC721Receiver(to)\" */ var_to, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ _1), var_1, /** @src 4:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _2, sub(/** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ abi_encode_string(var_data_1634_mpos, add(/** @src 4:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _2, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ 132)), /** @src 4:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _2), _2, _4)\n                    let expr := /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ var_1\n                    /// @src 4:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                    if trySuccessCondition\n                    {\n                        let _5 := _4\n                        if gt(_4, returndatasize()) { _5 := returndatasize() }\n                        finalize_allocation(_2, _5)\n                        /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                        if slt(sub(/** @src 4:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ add(_2, _5), /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ _2), /** @src 4:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _4)\n                        /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n                        { revert(var_1, var_1) }\n                        let value := mload(_2)\n                        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(var_1, var_1) }\n                        /// @src 4:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                        expr := value\n                    }\n                    /// @src 4:14125:14698  \"try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {...\"\n                    switch iszero(trySuccessCondition)\n                    case 0 {\n                        /// @src 4:14243:14301  \"return retval == IERC721Receiver.onERC721Received.selector\"\n                        var := /** @src 4:14250:14301  \"retval == IERC721Receiver.onERC721Received.selector\" */ eq(/** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ and(/** @src 4:14250:14301  \"retval == IERC721Receiver.onERC721Received.selector\" */ expr, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ shl(224, 0xffffffff)), _3)\n                        /// @src 4:14243:14301  \"return retval == IERC721Receiver.onERC721Received.selector\"\n                        leave\n                    }\n                    default /// @src 4:14125:14698  \"try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {...\"\n                    {\n                        /// @src 4:14317:14698  \"catch (bytes memory reason) {...\"\n                        let data := /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ var_1\n                        switch returndatasize()\n                        case 0 { data := 96 }\n                        default {\n                            let _6 := returndatasize()\n                            let _7 := array_allocation_size_bytes(_6)\n                            let memPtr := mload(64)\n                            finalize_allocation(memPtr, _7)\n                            mstore(memPtr, _6)\n                            data := memPtr\n                            returndatacopy(add(memPtr, /** @src 4:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _4), /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ var_1, returndatasize())\n                        }\n                        /// @src 4:14367:14380  \"reason.length\"\n                        let expr_1 := /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ mload(/** @src 4:14367:14380  \"reason.length\" */ data)\n                        /// @src 4:14363:14684  \"if (reason.length == 0) {...\"\n                        switch /** @src 4:14367:14385  \"reason.length == 0\" */ iszero(expr_1)\n                        case /** @src 4:14363:14684  \"if (reason.length == 0) {...\" */ 0 {\n                            /// @src 4:14571:14666  \"assembly {...\"\n                            revert(add(/** @src 4:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _4, /** @src 4:14571:14666  \"assembly {...\" */ data), expr_1)\n                        }\n                        default /// @src 4:14363:14684  \"if (reason.length == 0) {...\"\n                        {\n                            /// @src 4:14409:14469  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            let _8 := /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ mload(64)\n                            /// @src 4:14409:14469  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            mstore(_8, /** @src 23:117:380  \"contract NFTMock is ERC721 {...\" */ shl(229, 4594637))\n                            /// @src 4:14409:14469  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\"\n                            revert(_8, sub(abi_encode_stringliteral_1e76(add(_8, /** @src 4:14129:14200  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ 4)), /** @src 4:14409:14469  \"revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\")\" */ _8))\n                        }\n                    }\n                }\n            }\n            /// @src 23:117:380  \"contract NFTMock is ERC721 {...\"\n            function require_helper_stringliteral_2a63(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 28)\n                    mstore(add(memPtr, 68), \"ERC721: token already minted\")\n                    revert(memPtr, 100)\n                }\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212201314ce32d8adae63b13de92f52dfd1e17fe85e54108fd5ce839ffe50389b21a664736f6c63430008110033\"\n    }\n}\n","hash":"0100027fdfed80b02a315cd36136b4458584297d4d20bd12945a728dd982b243","factoryDependencies":{}}}}}}