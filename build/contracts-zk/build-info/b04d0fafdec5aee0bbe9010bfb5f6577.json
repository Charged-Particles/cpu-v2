{"id":"b04d0fafdec5aee0bbe9010bfb5f6577","_format":"hh-sol-build-info-1","solcVersion":"0.8.13","solcLongVersion":"0.8.13+commit.abaa5c0e","input":{"language":"Solidity","sources":{"contracts/ERC712A.sol":{"content":"pragma solidity 0.8.13;\n\nimport \"erc721a/contracts/ERC721A.sol\";\n\ncontract Azuki is ERC721A {\n    constructor() ERC721A(\"Azuki\", \"AZUKI\") {}\n\n    function mint(uint256 quantity) external payable {\n        // `_mint`'s second argument now takes in a `quantity`, not a `tokenId`.\n        _mint(msg.sender, quantity);\n    }\n}"},"erc721a/contracts/ERC721A.sol":{"content":"// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721A.sol';\n\n/**\n * @dev Interface of ERC721 token receiver.\n */\ninterface ERC721A__IERC721Receiver {\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n/**\n * @title ERC721A\n *\n * @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n * Non-Fungible Token Standard, including the Metadata extension.\n * Optimized for lower gas during batch mints.\n *\n * Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n * starting from `_startTokenId()`.\n *\n * Assumptions:\n *\n * - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n * - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\n */\ncontract ERC721A is IERC721A {\n    // Bypass for a `--via-ir` bug (https://github.com/chiru-labs/ERC721A/pull/364).\n    struct TokenApprovalRef {\n        address value;\n    }\n\n    // =============================================================\n    //                           CONSTANTS\n    // =============================================================\n\n    // Mask of an entry in packed address data.\n    uint256 private constant _BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\n\n    // The bit position of `numberMinted` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_MINTED = 64;\n\n    // The bit position of `numberBurned` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_BURNED = 128;\n\n    // The bit position of `aux` in packed address data.\n    uint256 private constant _BITPOS_AUX = 192;\n\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\n    uint256 private constant _BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\n\n    // The bit position of `startTimestamp` in packed ownership.\n    uint256 private constant _BITPOS_START_TIMESTAMP = 160;\n\n    // The bit mask of the `burned` bit in packed ownership.\n    uint256 private constant _BITMASK_BURNED = 1 << 224;\n\n    // The bit position of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITPOS_NEXT_INITIALIZED = 225;\n\n    // The bit mask of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITMASK_NEXT_INITIALIZED = 1 << 225;\n\n    // The bit position of `extraData` in packed ownership.\n    uint256 private constant _BITPOS_EXTRA_DATA = 232;\n\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\n    uint256 private constant _BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\n\n    // The mask of the lower 160 bits for addresses.\n    uint256 private constant _BITMASK_ADDRESS = (1 << 160) - 1;\n\n    // The maximum `quantity` that can be minted with {_mintERC2309}.\n    // This limit is to prevent overflows on the address data entries.\n    // For a limit of 5000, a total of 3.689e15 calls to {_mintERC2309}\n    // is required to cause an overflow, which is unrealistic.\n    uint256 private constant _MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\n\n    // The `Transfer` event signature is given by:\n    // `keccak256(bytes(\"Transfer(address,address,uint256)\"))`.\n    bytes32 private constant _TRANSFER_EVENT_SIGNATURE =\n        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\n\n    // =============================================================\n    //                            STORAGE\n    // =============================================================\n\n    // The next token ID to be minted.\n    uint256 private _currentIndex;\n\n    // The number of tokens burned.\n    uint256 private _burnCounter;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to ownership details\n    // An empty struct value does not necessarily mean the token is unowned.\n    // See {_packedOwnershipOf} implementation for details.\n    //\n    // Bits Layout:\n    // - [0..159]   `addr`\n    // - [160..223] `startTimestamp`\n    // - [224]      `burned`\n    // - [225]      `nextInitialized`\n    // - [232..255] `extraData`\n    mapping(uint256 => uint256) private _packedOwnerships;\n\n    // Mapping owner address to address data.\n    //\n    // Bits Layout:\n    // - [0..63]    `balance`\n    // - [64..127]  `numberMinted`\n    // - [128..191] `numberBurned`\n    // - [192..255] `aux`\n    mapping(address => uint256) private _packedAddressData;\n\n    // Mapping from token ID to approved address.\n    mapping(uint256 => TokenApprovalRef) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // =============================================================\n    //                          CONSTRUCTOR\n    // =============================================================\n\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _currentIndex = _startTokenId();\n    }\n\n    // =============================================================\n    //                   TOKEN COUNTING OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the starting token ID.\n     * To change the starting token ID, please override this function.\n     */\n    function _startTokenId() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev Returns the next token ID to be minted.\n     */\n    function _nextTokenId() internal view virtual returns (uint256) {\n        return _currentIndex;\n    }\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        // Counter underflow is impossible as _burnCounter cannot be incremented\n        // more than `_currentIndex - _startTokenId()` times.\n        unchecked {\n            return _currentIndex - _burnCounter - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total amount of tokens minted in the contract.\n     */\n    function _totalMinted() internal view virtual returns (uint256) {\n        // Counter underflow is impossible as `_currentIndex` does not decrement,\n        // and it is initialized to `_startTokenId()`.\n        unchecked {\n            return _currentIndex - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total number of tokens burned.\n     */\n    function _totalBurned() internal view virtual returns (uint256) {\n        return _burnCounter;\n    }\n\n    // =============================================================\n    //                    ADDRESS DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        if (owner == address(0)) revert BalanceQueryForZeroAddress();\n        return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens minted by `owner`.\n     */\n    function _numberMinted(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_MINTED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens burned by or on behalf of `owner`.\n     */\n    function _numberBurned(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_BURNED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     */\n    function _getAux(address owner) internal view returns (uint64) {\n        return uint64(_packedAddressData[owner] >> _BITPOS_AUX);\n    }\n\n    /**\n     * Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     * If there are multiple variables, please pack them into a uint64.\n     */\n    function _setAux(address owner, uint64 aux) internal virtual {\n        uint256 packed = _packedAddressData[owner];\n        uint256 auxCasted;\n        // Cast `aux` with assembly to avoid redundant masking.\n        assembly {\n            auxCasted := aux\n        }\n        packed = (packed & _BITMASK_AUX_COMPLEMENT) | (auxCasted << _BITPOS_AUX);\n        _packedAddressData[owner] = packed;\n    }\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        // The interface IDs are constants representing the first 4 bytes\n        // of the XOR of all function selectors in the interface.\n        // See: [ERC165](https://eips.ethereum.org/EIPS/eip-165)\n        // (e.g. `bytes4(i.functionA.selector ^ i.functionB.selector ^ ...)`)\n        return\n            interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\n            interfaceId == 0x80ac58cd || // ERC165 interface ID for ERC721.\n            interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\n    }\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        if (!_exists(tokenId)) revert URIQueryForNonexistentToken();\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, it can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return '';\n    }\n\n    // =============================================================\n    //                     OWNERSHIPS OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        return address(uint160(_packedOwnershipOf(tokenId)));\n    }\n\n    /**\n     * @dev Gas spent here starts off proportional to the maximum mint batch size.\n     * It gradually moves to O(1) as tokens get transferred around over time.\n     */\n    function _ownershipOf(uint256 tokenId) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct at `index`.\n     */\n    function _ownershipAt(uint256 index) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnerships[index]);\n    }\n\n    /**\n     * @dev Initializes the ownership slot minted at `index` for efficiency purposes.\n     */\n    function _initializeOwnershipAt(uint256 index) internal virtual {\n        if (_packedOwnerships[index] == 0) {\n            _packedOwnerships[index] = _packedOwnershipOf(index);\n        }\n    }\n\n    /**\n     * Returns the packed ownership data of `tokenId`.\n     */\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {\n        uint256 curr = tokenId;\n\n        unchecked {\n            if (_startTokenId() <= curr)\n                if (curr < _currentIndex) {\n                    uint256 packed = _packedOwnerships[curr];\n                    // If not burned.\n                    if (packed & _BITMASK_BURNED == 0) {\n                        // Invariant:\n                        // There will always be an initialized ownership slot\n                        // (i.e. `ownership.addr != address(0) && ownership.burned == false`)\n                        // before an unintialized ownership slot\n                        // (i.e. `ownership.addr == address(0) && ownership.burned == false`)\n                        // Hence, `curr` will not underflow.\n                        //\n                        // We can directly compare the packed value.\n                        // If the address is zero, packed will be zero.\n                        while (packed == 0) {\n                            packed = _packedOwnerships[--curr];\n                        }\n                        return packed;\n                    }\n                }\n        }\n        revert OwnerQueryForNonexistentToken();\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct from `packed`.\n     */\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\n        ownership.addr = address(uint160(packed));\n        ownership.startTimestamp = uint64(packed >> _BITPOS_START_TIMESTAMP);\n        ownership.burned = packed & _BITMASK_BURNED != 0;\n        ownership.extraData = uint24(packed >> _BITPOS_EXTRA_DATA);\n    }\n\n    /**\n     * @dev Packs ownership data into a single uint256.\n     */\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // `owner | (block.timestamp << _BITPOS_START_TIMESTAMP) | flags`.\n            result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags))\n        }\n    }\n\n    /**\n     * @dev Returns the `nextInitialized` flag set if `quantity` equals 1.\n     */\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\n        // For branchless setting of the `nextInitialized` flag.\n        assembly {\n            // `(quantity == 1) << _BITPOS_NEXT_INITIALIZED`.\n            result := shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\n        }\n    }\n\n    // =============================================================\n    //                      APPROVAL OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) public payable virtual override {\n        address owner = ownerOf(tokenId);\n\n        if (_msgSenderERC721A() != owner)\n            if (!isApprovedForAll(owner, _msgSenderERC721A())) {\n                revert ApprovalCallerNotOwnerNorApproved();\n            }\n\n        _tokenApprovals[tokenId].value = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken();\n\n        return _tokenApprovals[tokenId].value;\n    }\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _operatorApprovals[_msgSenderERC721A()][operator] = approved;\n        emit ApprovalForAll(_msgSenderERC721A(), operator, approved);\n    }\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted. See {_mint}.\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return\n            _startTokenId() <= tokenId &&\n            tokenId < _currentIndex && // If within bounds,\n            _packedOwnerships[tokenId] & _BITMASK_BURNED == 0; // and not burned.\n    }\n\n    /**\n     * @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`.\n     */\n    function _isSenderApprovedOrOwner(\n        address approvedAddress,\n        address owner,\n        address msgSender\n    ) private pure returns (bool result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            msgSender := and(msgSender, _BITMASK_ADDRESS)\n            // `msgSender == owner || msgSender == approvedAddress`.\n            result := or(eq(msgSender, owner), eq(msgSender, approvedAddress))\n        }\n    }\n\n    /**\n     * @dev Returns the storage slot and value for the approved address of `tokenId`.\n     */\n    function _getApprovedSlotAndAddress(uint256 tokenId)\n        private\n        view\n        returns (uint256 approvedAddressSlot, address approvedAddress)\n    {\n        TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId];\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId].value`.\n        assembly {\n            approvedAddressSlot := tokenApproval.slot\n            approvedAddress := sload(approvedAddressSlot)\n        }\n    }\n\n    // =============================================================\n    //                      TRANSFER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner();\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        // The nested ifs save around 20+ gas over a compound boolean condition.\n        if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n            if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\n\n        if (to == address(0)) revert TransferToZeroAddress();\n\n        _beforeTokenTransfers(from, to, tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // We can directly increment and decrement the balances.\n            --_packedAddressData[from]; // Updates: `balance -= 1`.\n            ++_packedAddressData[to]; // Updates: `balance += 1`.\n\n            // Updates:\n            // - `address` to the next owner.\n            // - `startTimestamp` to the timestamp of transfering.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                to,\n                _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, to, tokenId);\n        _afterTokenTransfers(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        safeTransferFrom(from, to, tokenId, '');\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public payable virtual override {\n        transferFrom(from, to, tokenId);\n        if (to.code.length != 0)\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\n                revert TransferToNonERC721ReceiverImplementer();\n            }\n    }\n\n    /**\n     * @dev Hook that is called before a set of serially-ordered token IDs\n     * are about to be transferred. This includes minting.\n     * And also called before burning one token.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after a set of serially-ordered token IDs\n     * have been transferred. This includes minting.\n     * And also called after one token has been burned.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` has been minted for `to`.\n     * - When `to` is zero, `tokenId` has been burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _afterTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n     *\n     * `from` - Previous owner of the given token ID.\n     * `to` - Target address that will receive the token.\n     * `tokenId` - Token ID to be transferred.\n     * `_data` - Optional data to send along with the call.\n     *\n     * Returns whether the call correctly returned the expected magic value.\n     */\n    function _checkContractOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\n            bytes4 retval\n        ) {\n            return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector;\n        } catch (bytes memory reason) {\n            if (reason.length == 0) {\n                revert TransferToNonERC721ReceiverImplementer();\n            } else {\n                assembly {\n                    revert(add(32, reason), mload(reason))\n                }\n            }\n        }\n    }\n\n    // =============================================================\n    //                        MINT OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _mint(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (quantity == 0) revert MintZeroQuantity();\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are incredibly unrealistic.\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\n        // `tokenId` has a maximum limit of 2**256.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            uint256 toMasked;\n            uint256 end = startTokenId + quantity;\n\n            // Use assembly to loop and emit the `Transfer` event for gas savings.\n            // The duplicated `log4` removes an extra check and reduces stack juggling.\n            // The assembly, together with the surrounding Solidity code, have been\n            // delicately arranged to nudge the compiler into producing optimized opcodes.\n            assembly {\n                // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n                toMasked := and(to, _BITMASK_ADDRESS)\n                // Emit the `Transfer` event.\n                log4(\n                    0, // Start of data (0, since no data).\n                    0, // End of data (0, since no data).\n                    _TRANSFER_EVENT_SIGNATURE, // Signature.\n                    0, // `address(0)`.\n                    toMasked, // `to`.\n                    startTokenId // `tokenId`.\n                )\n\n                // The `iszero(eq(,))` check ensures that large values of `quantity`\n                // that overflows uint256 will make the loop run out of gas.\n                // The compiler will optimize the `iszero` away for performance.\n                for {\n                    let tokenId := add(startTokenId, 1)\n                } iszero(eq(tokenId, end)) {\n                    tokenId := add(tokenId, 1)\n                } {\n                    // Emit the `Transfer` event. Similar to above.\n                    log4(0, 0, _TRANSFER_EVENT_SIGNATURE, 0, toMasked, tokenId)\n                }\n            }\n            if (toMasked == 0) revert MintToZeroAddress();\n\n            _currentIndex = end;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * This function is intended for efficient minting only during contract creation.\n     *\n     * It emits only one {ConsecutiveTransfer} as defined in\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n     * instead of a sequence of {Transfer} event(s).\n     *\n     * Calling this function outside of contract creation WILL make your contract\n     * non-compliant with the ERC721 standard.\n     * For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n     * {ConsecutiveTransfer} event is only permissible during contract creation.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {ConsecutiveTransfer} event.\n     */\n    function _mintERC2309(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (to == address(0)) revert MintToZeroAddress();\n        if (quantity == 0) revert MintZeroQuantity();\n        if (quantity > _MAX_MINT_ERC2309_QUANTITY_LIMIT) revert MintERC2309QuantityExceedsLimit();\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\n\n            _currentIndex = startTokenId + quantity;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n     * - `quantity` must be greater than 0.\n     *\n     * See {_mint}.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _safeMint(\n        address to,\n        uint256 quantity,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, quantity);\n\n        unchecked {\n            if (to.code.length != 0) {\n                uint256 end = _currentIndex;\n                uint256 index = end - quantity;\n                do {\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\n                        revert TransferToNonERC721ReceiverImplementer();\n                    }\n                } while (index < end);\n                // Reentrancy protection.\n                if (_currentIndex != end) revert();\n            }\n        }\n    }\n\n    /**\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\n     */\n    function _safeMint(address to, uint256 quantity) internal virtual {\n        _safeMint(to, quantity, '');\n    }\n\n    // =============================================================\n    //                        BURN OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Equivalent to `_burn(tokenId, false)`.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        _burn(tokenId, false);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        address from = address(uint160(prevOwnershipPacked));\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        if (approvalCheck) {\n            // The nested ifs save around 20+ gas over a compound boolean condition.\n            if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n                if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\n        }\n\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // Updates:\n            // - `balance -= 1`.\n            // - `numberBurned += 1`.\n            //\n            // We can directly decrement the balance, and increment the number burned.\n            // This is equivalent to `packed -= 1; packed += 1 << _BITPOS_NUMBER_BURNED;`.\n            _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1;\n\n            // Updates:\n            // - `address` to the last owner.\n            // - `startTimestamp` to the timestamp of burning.\n            // - `burned` to `true`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                from,\n                (_BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, address(0), tokenId);\n        _afterTokenTransfers(from, address(0), tokenId, 1);\n\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\n        unchecked {\n            _burnCounter++;\n        }\n    }\n\n    // =============================================================\n    //                     EXTRA DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Directly sets the extra data for the ownership data `index`.\n     */\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal virtual {\n        uint256 packed = _packedOwnerships[index];\n        if (packed == 0) revert OwnershipNotInitializedForExtraData();\n        uint256 extraDataCasted;\n        // Cast `extraData` with assembly to avoid redundant masking.\n        assembly {\n            extraDataCasted := extraData\n        }\n        packed = (packed & _BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << _BITPOS_EXTRA_DATA);\n        _packedOwnerships[index] = packed;\n    }\n\n    /**\n     * @dev Called during each token transfer to set the 24bit `extraData` field.\n     * Intended to be overridden by the cosumer contract.\n     *\n     * `previousExtraData` - the value of `extraData` before transfer.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _extraData(\n        address from,\n        address to,\n        uint24 previousExtraData\n    ) internal view virtual returns (uint24) {}\n\n    /**\n     * @dev Returns the next extra data for the packed ownership data.\n     * The returned result is shifted into position.\n     */\n    function _nextExtraData(\n        address from,\n        address to,\n        uint256 prevOwnershipPacked\n    ) private view returns (uint256) {\n        uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA);\n        return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA;\n    }\n\n    // =============================================================\n    //                       OTHER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the message sender (defaults to `msg.sender`).\n     *\n     * If you are writing GSN compatible contracts, you need to override this function.\n     */\n    function _msgSenderERC721A() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    /**\n     * @dev Converts a uint256 to its ASCII string decimal representation.\n     */\n    function _toString(uint256 value) internal pure virtual returns (string memory str) {\n        assembly {\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit), but\n            // we allocate 0xa0 bytes to keep the free memory pointer 32-byte word aligned.\n            // We will need 1 word for the trailing zeros padding, 1 word for the length,\n            // and 3 words for a maximum of 78 digits. Total: 5 * 0x20 = 0xa0.\n            let m := add(mload(0x40), 0xa0)\n            // Update the free memory pointer to allocate.\n            mstore(0x40, m)\n            // Assign the `str` to the end.\n            str := sub(m, 0x20)\n            // Zeroize the slot after the string.\n            mstore(str, 0)\n\n            // Cache the end of the memory to calculate the length later.\n            let end := str\n\n            // We write the string from rightmost digit to leftmost digit.\n            // The following is essentially a do-while loop that also handles the zero case.\n            // prettier-ignore\n            for { let temp := value } 1 {} {\n                str := sub(str, 1)\n                // Write the character to the pointer.\n                // The ASCII index of the '0' character is 48.\n                mstore8(str, add(48, mod(temp, 10)))\n                // Keep dividing `temp` until zero.\n                temp := div(temp, 10)\n                // prettier-ignore\n                if iszero(temp) { break }\n            }\n\n            let length := sub(end, str)\n            // Move the pointer 32 bytes leftwards to make room for the length.\n            str := sub(str, 0x20)\n            // Store the length.\n            mstore(str, length)\n        }\n    }\n}\n"},"erc721a/contracts/IERC721A.sol":{"content":"// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n/**\n * @dev Interface of ERC721A.\n */\ninterface IERC721A {\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error ApprovalCallerNotOwnerNorApproved();\n\n    /**\n     * The token does not exist.\n     */\n    error ApprovalQueryForNonexistentToken();\n\n    /**\n     * Cannot query the balance for the zero address.\n     */\n    error BalanceQueryForZeroAddress();\n\n    /**\n     * Cannot mint to the zero address.\n     */\n    error MintToZeroAddress();\n\n    /**\n     * The quantity of tokens minted must be more than zero.\n     */\n    error MintZeroQuantity();\n\n    /**\n     * The token does not exist.\n     */\n    error OwnerQueryForNonexistentToken();\n\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error TransferCallerNotOwnerNorApproved();\n\n    /**\n     * The token must be owned by `from`.\n     */\n    error TransferFromIncorrectOwner();\n\n    /**\n     * Cannot safely transfer to a contract that does not implement the\n     * ERC721Receiver interface.\n     */\n    error TransferToNonERC721ReceiverImplementer();\n\n    /**\n     * Cannot transfer to the zero address.\n     */\n    error TransferToZeroAddress();\n\n    /**\n     * The token does not exist.\n     */\n    error URIQueryForNonexistentToken();\n\n    /**\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\n     */\n    error MintERC2309QuantityExceedsLimit();\n\n    /**\n     * The `extraData` cannot be set on an unintialized ownership slot.\n     */\n    error OwnershipNotInitializedForExtraData();\n\n    // =============================================================\n    //                            STRUCTS\n    // =============================================================\n\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Stores the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n        // Arbitrary data similar to `startTimestamp` that can be set via {_extraData}.\n        uint24 extraData;\n    }\n\n    // =============================================================\n    //                         TOKEN COUNTERS\n    // =============================================================\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n\n    // =============================================================\n    //                            IERC721\n    // =============================================================\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables\n     * (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`,\n     * checking first that contract recipients are aware of the ERC721 protocol\n     * to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move\n     * this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external payable;\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n     * whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external payable;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n\n    // =============================================================\n    //                           IERC2309\n    // =============================================================\n\n    /**\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n     * (inclusive) is transferred from `from` to `to`, as defined in the\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n     *\n     * See {_mintERC2309} for more details.\n     */\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\n}\n"}},"settings":{"optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout"],"":["ast"]}},"libraries":{}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/ERC712A.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"file":"contracts/ERC712A.sol","start":-1,"end":-1},"type":"Warning"}],"version":"0.8.13","long_version":"0.8.13+commit.abaa5c0e.Darwin.appleclang","zk_version":"1.3.17","sources":{"contracts/ERC712A.sol":{"id":0,"ast":{"absolutePath":"contracts/ERC712A.sol","exportedSymbols":{"Azuki":[25],"ERC721A":[1648],"ERC721A__IERC721Receiver":[43],"IERC721A":[1854]},"id":26,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","0.8",".13"],"nodeType":"PragmaDirective","src":"0:23:0"},{"absolutePath":"erc721a/contracts/ERC721A.sol","file":"erc721a/contracts/ERC721A.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":26,"sourceUnit":1649,"src":"25:39:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3,"name":"ERC721A","nodeType":"IdentifierPath","referencedDeclaration":1648,"src":"84:7:0"},"id":4,"nodeType":"InheritanceSpecifier","src":"84:7:0"}],"canonicalName":"Azuki","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":25,"linearizedBaseContracts":[25,1648,1854],"name":"Azuki","nameLocation":"75:5:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":11,"nodeType":"Block","src":"138:2:0","statements":[]},"id":12,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"417a756b69","id":7,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"120:7:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_8259708f963947d28484bf669e6cdd15ac12e7d813de008356896f65b003a79b","typeString":"literal_string \"Azuki\""},"value":"Azuki"},{"hexValue":"415a554b49","id":8,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"129:7:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_184a09271b0532717108cdd656088ca8d5a200eb75d6eb742b2d77961d97dd73","typeString":"literal_string \"AZUKI\""},"value":"AZUKI"}],"id":9,"kind":"baseConstructorSpecifier","modifierName":{"id":6,"name":"ERC721A","nodeType":"IdentifierPath","referencedDeclaration":1648,"src":"112:7:0"},"nodeType":"ModifierInvocation","src":"112:25:0"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5,"nodeType":"ParameterList","parameters":[],"src":"109:2:0"},"returnParameters":{"id":10,"nodeType":"ParameterList","parameters":[],"src":"138:0:0"},"scope":25,"src":"98:42:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":23,"nodeType":"Block","src":"195:125:0","statements":[{"expression":{"arguments":[{"expression":{"id":18,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"292:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"292:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":20,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"304:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":17,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"286:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":21,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"286:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":22,"nodeType":"ExpressionStatement","src":"286:27:0"}]},"functionSelector":"a0712d68","id":24,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"155:4:0","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"quantity","nameLocation":"168:8:0","nodeType":"VariableDeclaration","scope":24,"src":"160:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"160:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"159:18:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"195:0:0"},"scope":25,"src":"146:174:0","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":26,"src":"66:256:0","usedErrors":[1654,1657,1660,1663,1666,1669,1672,1675,1678,1681,1684,1687,1690]}],"src":"0:322:0"}},"erc721a/contracts/ERC721A.sol":{"id":1,"ast":{"absolutePath":"erc721a/contracts/ERC721A.sol","exportedSymbols":{"ERC721A":[1648],"ERC721A__IERC721Receiver":[43],"IERC721A":[1854]},"id":1649,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":27,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"84:23:1"},{"absolutePath":"erc721a/contracts/IERC721A.sol","file":"./IERC721A.sol","id":28,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1649,"sourceUnit":1855,"src":"109:24:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721A__IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":29,"nodeType":"StructuredDocumentation","src":"135:51:1","text":" @dev Interface of ERC721 token receiver."},"fullyImplemented":false,"id":43,"linearizedBaseContracts":[43],"name":"ERC721A__IERC721Receiver","nameLocation":"197:24:1","nodeType":"ContractDefinition","nodes":[{"functionSelector":"150b7a02","id":42,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"237:16:1","nodeType":"FunctionDefinition","parameters":{"id":38,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31,"mutability":"mutable","name":"operator","nameLocation":"271:8:1","nodeType":"VariableDeclaration","scope":42,"src":"263:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30,"name":"address","nodeType":"ElementaryTypeName","src":"263:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":33,"mutability":"mutable","name":"from","nameLocation":"297:4:1","nodeType":"VariableDeclaration","scope":42,"src":"289:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"289:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35,"mutability":"mutable","name":"tokenId","nameLocation":"319:7:1","nodeType":"VariableDeclaration","scope":42,"src":"311:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34,"name":"uint256","nodeType":"ElementaryTypeName","src":"311:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":37,"mutability":"mutable","name":"data","nameLocation":"351:4:1","nodeType":"VariableDeclaration","scope":42,"src":"336:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":36,"name":"bytes","nodeType":"ElementaryTypeName","src":"336:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"253:108:1"},"returnParameters":{"id":41,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":42,"src":"380:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":39,"name":"bytes4","nodeType":"ElementaryTypeName","src":"380:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"379:8:1"},"scope":43,"src":"228:160:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1649,"src":"187:203:1","usedErrors":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":45,"name":"IERC721A","nodeType":"IdentifierPath","referencedDeclaration":1854,"src":"915:8:1"},"id":46,"nodeType":"InheritanceSpecifier","src":"915:8:1"}],"canonicalName":"ERC721A","contractDependencies":[],"contractKind":"contract","documentation":{"id":44,"nodeType":"StructuredDocumentation","src":"392:502:1","text":" @title ERC721A\n @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n Non-Fungible Token Standard, including the Metadata extension.\n Optimized for lower gas during batch mints.\n Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n starting from `_startTokenId()`.\n Assumptions:\n - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256)."},"fullyImplemented":true,"id":1648,"linearizedBaseContracts":[1648,1854],"name":"ERC721A","nameLocation":"904:7:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC721A.TokenApprovalRef","id":49,"members":[{"constant":false,"id":48,"mutability":"mutable","name":"value","nameLocation":"1057:5:1","nodeType":"VariableDeclaration","scope":49,"src":"1049:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":47,"name":"address","nodeType":"ElementaryTypeName","src":"1049:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"TokenApprovalRef","nameLocation":"1022:16:1","nodeType":"StructDefinition","scope":1648,"src":"1015:54:1","visibility":"public"},{"constant":true,"id":57,"mutability":"constant","name":"_BITMASK_ADDRESS_DATA_ENTRY","nameLocation":"1330:27:1","nodeType":"VariableDeclaration","scope":1648,"src":"1305:68:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":50,"name":"uint256","nodeType":"ElementaryTypeName","src":"1305:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":56,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":51,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1361:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1366:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"1361:7:1","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":54,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1360:9:1","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":55,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1372:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1360:13:1","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"visibility":"private"},{"constant":true,"id":60,"mutability":"constant","name":"_BITPOS_NUMBER_MINTED","nameLocation":"1471:21:1","nodeType":"VariableDeclaration","scope":1648,"src":"1446:51:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":58,"name":"uint256","nodeType":"ElementaryTypeName","src":"1446:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3634","id":59,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1495:2:1","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"visibility":"private"},{"constant":true,"id":63,"mutability":"constant","name":"_BITPOS_NUMBER_BURNED","nameLocation":"1595:21:1","nodeType":"VariableDeclaration","scope":1648,"src":"1570:52:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61,"name":"uint256","nodeType":"ElementaryTypeName","src":"1570:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313238","id":62,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1619:3:1","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"visibility":"private"},{"constant":true,"id":66,"mutability":"constant","name":"_BITPOS_AUX","nameLocation":"1711:11:1","nodeType":"VariableDeclaration","scope":1648,"src":"1686:42:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":64,"name":"uint256","nodeType":"ElementaryTypeName","src":"1686:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313932","id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1725:3:1","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},"visibility":"private"},{"constant":true,"id":74,"mutability":"constant","name":"_BITMASK_AUX_COMPLEMENT","nameLocation":"1841:23:1","nodeType":"VariableDeclaration","scope":1648,"src":"1816:65:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":67,"name":"uint256","nodeType":"ElementaryTypeName","src":"1816:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512895_by_1","typeString":"int_const 6277...(50 digits omitted)...2895"},"id":73,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512896_by_1","typeString":"int_const 6277...(50 digits omitted)...2896"},"id":70,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":68,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1868:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313932","id":69,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1873:3:1","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},"src":"1868:8:1","typeDescriptions":{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512896_by_1","typeString":"int_const 6277...(50 digits omitted)...2896"}}],"id":71,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1867:10:1","typeDescriptions":{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512896_by_1","typeString":"int_const 6277...(50 digits omitted)...2896"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":72,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1880:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1867:14:1","typeDescriptions":{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512895_by_1","typeString":"int_const 6277...(50 digits omitted)...2895"}},"visibility":"private"},{"constant":true,"id":77,"mutability":"constant","name":"_BITPOS_START_TIMESTAMP","nameLocation":"1978:23:1","nodeType":"VariableDeclaration","scope":1648,"src":"1953:54:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":75,"name":"uint256","nodeType":"ElementaryTypeName","src":"1953:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313630","id":76,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2004:3:1","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"visibility":"private"},{"constant":true,"id":82,"mutability":"constant","name":"_BITMASK_BURNED","nameLocation":"2100:15:1","nodeType":"VariableDeclaration","scope":1648,"src":"2075:51:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":78,"name":"uint256","nodeType":"ElementaryTypeName","src":"2075:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1","typeString":"int_const 2695...(60 digits omitted)...9216"},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":79,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2118:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323234","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2123:3:1","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},"src":"2118:8:1","typeDescriptions":{"typeIdentifier":"t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1","typeString":"int_const 2695...(60 digits omitted)...9216"}},"visibility":"private"},{"constant":true,"id":85,"mutability":"constant","name":"_BITPOS_NEXT_INITIALIZED","nameLocation":"2232:24:1","nodeType":"VariableDeclaration","scope":1648,"src":"2207:55:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":83,"name":"uint256","nodeType":"ElementaryTypeName","src":"2207:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323235","id":84,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:3:1","typeDescriptions":{"typeIdentifier":"t_rational_225_by_1","typeString":"int_const 225"},"value":"225"},"visibility":"private"},{"constant":true,"id":90,"mutability":"constant","name":"_BITMASK_NEXT_INITIALIZED","nameLocation":"2364:25:1","nodeType":"VariableDeclaration","scope":1648,"src":"2339:61:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":86,"name":"uint256","nodeType":"ElementaryTypeName","src":"2339:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1","typeString":"int_const 5391...(60 digits omitted)...8432"},"id":89,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":87,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2392:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323235","id":88,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2397:3:1","typeDescriptions":{"typeIdentifier":"t_rational_225_by_1","typeString":"int_const 225"},"value":"225"},"src":"2392:8:1","typeDescriptions":{"typeIdentifier":"t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1","typeString":"int_const 5391...(60 digits omitted)...8432"}},"visibility":"private"},{"constant":true,"id":93,"mutability":"constant","name":"_BITPOS_EXTRA_DATA","nameLocation":"2492:18:1","nodeType":"VariableDeclaration","scope":1648,"src":"2467:49:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":91,"name":"uint256","nodeType":"ElementaryTypeName","src":"2467:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323332","id":92,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2513:3:1","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},"visibility":"private"},{"constant":true,"id":101,"mutability":"constant","name":"_BITMASK_EXTRA_DATA_COMPLEMENT","nameLocation":"2634:30:1","nodeType":"VariableDeclaration","scope":1648,"src":"2609:72:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":94,"name":"uint256","nodeType":"ElementaryTypeName","src":"2609:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1","typeString":"int_const 6901...(62 digits omitted)...9295"},"id":100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1","typeString":"int_const 6901...(62 digits omitted)...9296"},"id":97,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":95,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2668:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323332","id":96,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2673:3:1","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},"src":"2668:8:1","typeDescriptions":{"typeIdentifier":"t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1","typeString":"int_const 6901...(62 digits omitted)...9296"}}],"id":98,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2667:10:1","typeDescriptions":{"typeIdentifier":"t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1","typeString":"int_const 6901...(62 digits omitted)...9296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":99,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2680:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2667:14:1","typeDescriptions":{"typeIdentifier":"t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1","typeString":"int_const 6901...(62 digits omitted)...9295"}},"visibility":"private"},{"constant":true,"id":109,"mutability":"constant","name":"_BITMASK_ADDRESS","nameLocation":"2766:16:1","nodeType":"VariableDeclaration","scope":1648,"src":"2741:58:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102,"name":"uint256","nodeType":"ElementaryTypeName","src":"2741:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542975_by_1","typeString":"int_const 1461...(41 digits omitted)...2975"},"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"},"id":105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2786:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2791:3:1","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2786:8:1","typeDescriptions":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"}}],"id":106,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2785:10:1","typeDescriptions":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2798:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2785:14:1","typeDescriptions":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542975_by_1","typeString":"int_const 1461...(41 digits omitted)...2975"}},"visibility":"private"},{"constant":true,"id":112,"mutability":"constant","name":"_MAX_MINT_ERC2309_QUANTITY_LIMIT","nameLocation":"3107:32:1","nodeType":"VariableDeclaration","scope":1648,"src":"3082:64:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":110,"name":"uint256","nodeType":"ElementaryTypeName","src":"3082:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35303030","id":111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3142:4:1","typeDescriptions":{"typeIdentifier":"t_rational_5000_by_1","typeString":"int_const 5000"},"value":"5000"},"visibility":"private"},{"constant":true,"id":115,"mutability":"constant","name":"_TRANSFER_EVENT_SIGNATURE","nameLocation":"3293:25:1","nodeType":"VariableDeclaration","scope":1648,"src":"3268:127:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":113,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3268:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307864646632353261643162653263383962363963326230363866633337386461613935326261376631363363346131313632386635356134646635323362336566","id":114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3329:66:1","typeDescriptions":{"typeIdentifier":"t_rational_100389287136786176327247604509743168900146139575972864366142685224231313322991_by_1","typeString":"int_const 1003...(70 digits omitted)...2991"},"value":"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"},"visibility":"private"},{"constant":false,"id":117,"mutability":"mutable","name":"_currentIndex","nameLocation":"3638:13:1","nodeType":"VariableDeclaration","scope":1648,"src":"3622:29:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":116,"name":"uint256","nodeType":"ElementaryTypeName","src":"3622:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":119,"mutability":"mutable","name":"_burnCounter","nameLocation":"3710:12:1","nodeType":"VariableDeclaration","scope":1648,"src":"3694:28:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"3694:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":121,"mutability":"mutable","name":"_name","nameLocation":"3762:5:1","nodeType":"VariableDeclaration","scope":1648,"src":"3747:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":120,"name":"string","nodeType":"ElementaryTypeName","src":"3747:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":123,"mutability":"mutable","name":"_symbol","nameLocation":"3809:7:1","nodeType":"VariableDeclaration","scope":1648,"src":"3794:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":122,"name":"string","nodeType":"ElementaryTypeName","src":"3794:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":127,"mutability":"mutable","name":"_packedOwnerships","nameLocation":"4236:17:1","nodeType":"VariableDeclaration","scope":1648,"src":"4200:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":126,"keyType":{"id":124,"name":"uint256","nodeType":"ElementaryTypeName","src":"4208:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"4200:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":125,"name":"uint256","nodeType":"ElementaryTypeName","src":"4219:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":131,"mutability":"mutable","name":"_packedAddressData","nameLocation":"4495:18:1","nodeType":"VariableDeclaration","scope":1648,"src":"4459:54:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":130,"keyType":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"4467:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"4459:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":129,"name":"uint256","nodeType":"ElementaryTypeName","src":"4478:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":136,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"4615:15:1","nodeType":"VariableDeclaration","scope":1648,"src":"4570:60:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$49_storage_$","typeString":"mapping(uint256 => struct ERC721A.TokenApprovalRef)"},"typeName":{"id":135,"keyType":{"id":132,"name":"uint256","nodeType":"ElementaryTypeName","src":"4578:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"4570:36:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$49_storage_$","typeString":"mapping(uint256 => struct ERC721A.TokenApprovalRef)"},"valueType":{"id":134,"nodeType":"UserDefinedTypeName","pathNode":{"id":133,"name":"TokenApprovalRef","nodeType":"IdentifierPath","referencedDeclaration":49,"src":"4589:16:1"},"referencedDeclaration":49,"src":"4589:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_TokenApprovalRef_$49_storage_ptr","typeString":"struct ERC721A.TokenApprovalRef"}}},"visibility":"private"},{"constant":false,"id":142,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"4738:18:1","nodeType":"VariableDeclaration","scope":1648,"src":"4685:71:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":141,"keyType":{"id":137,"name":"address","nodeType":"ElementaryTypeName","src":"4693:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"4685:44:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":140,"keyType":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"4712:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"4704:24:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":139,"name":"bool","nodeType":"ElementaryTypeName","src":"4723:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":162,"nodeType":"Block","src":"5002:98:1","statements":[{"expression":{"id":151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":149,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"5012:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":150,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"5020:5:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"5012:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":152,"nodeType":"ExpressionStatement","src":"5012:13:1"},{"expression":{"id":155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":153,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"5035:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":154,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5045:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"5035:17:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":156,"nodeType":"ExpressionStatement","src":"5035:17:1"},{"expression":{"id":160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":157,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"5062:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":158,"name":"_startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"5078:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5078:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5062:31:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":161,"nodeType":"ExpressionStatement","src":"5062:31:1"}]},"id":163,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":144,"mutability":"mutable","name":"name_","nameLocation":"4972:5:1","nodeType":"VariableDeclaration","scope":163,"src":"4958:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":143,"name":"string","nodeType":"ElementaryTypeName","src":"4958:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":146,"mutability":"mutable","name":"symbol_","nameLocation":"4993:7:1","nodeType":"VariableDeclaration","scope":163,"src":"4979:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":145,"name":"string","nodeType":"ElementaryTypeName","src":"4979:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4957:44:1"},"returnParameters":{"id":148,"nodeType":"ParameterList","parameters":[],"src":"5002:0:1"},"scope":1648,"src":"4946:154:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":171,"nodeType":"Block","src":"5491:25:1","statements":[{"expression":{"hexValue":"30","id":169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5508:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":168,"id":170,"nodeType":"Return","src":"5501:8:1"}]},"documentation":{"id":164,"nodeType":"StructuredDocumentation","src":"5296:125:1","text":" @dev Returns the starting token ID.\n To change the starting token ID, please override this function."},"id":172,"implemented":true,"kind":"function","modifiers":[],"name":"_startTokenId","nameLocation":"5435:13:1","nodeType":"FunctionDefinition","parameters":{"id":165,"nodeType":"ParameterList","parameters":[],"src":"5448:2:1"},"returnParameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":172,"src":"5482:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":166,"name":"uint256","nodeType":"ElementaryTypeName","src":"5482:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5481:9:1"},"scope":1648,"src":"5426:90:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":180,"nodeType":"Block","src":"5654:37:1","statements":[{"expression":{"id":178,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"5671:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":177,"id":179,"nodeType":"Return","src":"5664:20:1"}]},"documentation":{"id":173,"nodeType":"StructuredDocumentation","src":"5522:63:1","text":" @dev Returns the next token ID to be minted."},"id":181,"implemented":true,"kind":"function","modifiers":[],"name":"_nextTokenId","nameLocation":"5599:12:1","nodeType":"FunctionDefinition","parameters":{"id":174,"nodeType":"ParameterList","parameters":[],"src":"5611:2:1"},"returnParameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":181,"src":"5645:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"5645:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5644:9:1"},"scope":1648,"src":"5590:101:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1705],"body":{"id":196,"nodeType":"Block","src":"5964:247:1","statements":[{"id":195,"nodeType":"UncheckedBlock","src":"6117:88:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":188,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"6148:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":189,"name":"_burnCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"6164:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6148:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":191,"name":"_startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"6179:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6179:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6148:46:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":187,"id":194,"nodeType":"Return","src":"6141:53:1"}]}]},"documentation":{"id":182,"nodeType":"StructuredDocumentation","src":"5697:192:1","text":" @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."},"functionSelector":"18160ddd","id":197,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"5903:11:1","nodeType":"FunctionDefinition","overrides":{"id":184,"nodeType":"OverrideSpecifier","overrides":[],"src":"5937:8:1"},"parameters":{"id":183,"nodeType":"ParameterList","parameters":[],"src":"5914:2:1"},"returnParameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":197,"src":"5955:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":185,"name":"uint256","nodeType":"ElementaryTypeName","src":"5955:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5954:9:1"},"scope":1648,"src":"5894:317:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":209,"nodeType":"Block","src":"6368:226:1","statements":[{"id":208,"nodeType":"UncheckedBlock","src":"6515:73:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":203,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"6546:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":204,"name":"_startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"6562:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6562:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6546:31:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":202,"id":207,"nodeType":"Return","src":"6539:38:1"}]}]},"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"6217:82:1","text":" @dev Returns the total amount of tokens minted in the contract."},"id":210,"implemented":true,"kind":"function","modifiers":[],"name":"_totalMinted","nameLocation":"6313:12:1","nodeType":"FunctionDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[],"src":"6325:2:1"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":210,"src":"6359:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":200,"name":"uint256","nodeType":"ElementaryTypeName","src":"6359:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6358:9:1"},"scope":1648,"src":"6304:290:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":218,"nodeType":"Block","src":"6735:36:1","statements":[{"expression":{"id":216,"name":"_burnCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"6752:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":215,"id":217,"nodeType":"Return","src":"6745:19:1"}]},"documentation":{"id":211,"nodeType":"StructuredDocumentation","src":"6600:66:1","text":" @dev Returns the total number of tokens burned."},"id":219,"implemented":true,"kind":"function","modifiers":[],"name":"_totalBurned","nameLocation":"6680:12:1","nodeType":"FunctionDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[],"src":"6692:2:1"},"returnParameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":219,"src":"6726:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":213,"name":"uint256","nodeType":"ElementaryTypeName","src":"6726:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6725:9:1"},"scope":1648,"src":"6671:100:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1748],"body":{"id":244,"nodeType":"Block","src":"7126:149:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":228,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"7140:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7157:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7149:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":229,"name":"address","nodeType":"ElementaryTypeName","src":"7149:7:1","typeDescriptions":{}}},"id":232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7149:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7140:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":237,"nodeType":"IfStatement","src":"7136:60:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":234,"name":"BalanceQueryForZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"7168:26:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7168:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":236,"nodeType":"RevertStatement","src":"7161:35:1"}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":238,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"7213:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":240,"indexExpression":{"id":239,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"7232:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7213:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":241,"name":"_BITMASK_ADDRESS_DATA_ENTRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"7241:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7213:55:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":227,"id":243,"nodeType":"Return","src":"7206:62:1"}]},"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"6966:74:1","text":" @dev Returns the number of tokens in `owner`'s account."},"functionSelector":"70a08231","id":245,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"7054:9:1","nodeType":"FunctionDefinition","overrides":{"id":224,"nodeType":"OverrideSpecifier","overrides":[],"src":"7099:8:1"},"parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"owner","nameLocation":"7072:5:1","nodeType":"VariableDeclaration","scope":245,"src":"7064:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"7064:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7063:15:1"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":245,"src":"7117:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":225,"name":"uint256","nodeType":"ElementaryTypeName","src":"7117:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7116:9:1"},"scope":1648,"src":"7045:230:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":262,"nodeType":"Block","src":"7422:106:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":253,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"7440:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":255,"indexExpression":{"id":254,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"7459:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7440:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":256,"name":"_BITPOS_NUMBER_MINTED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"7469:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7440:50:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":258,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7439:52:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":259,"name":"_BITMASK_ADDRESS_DATA_ENTRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"7494:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7439:82:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":252,"id":261,"nodeType":"Return","src":"7432:89:1"}]},"documentation":{"id":246,"nodeType":"StructuredDocumentation","src":"7281:66:1","text":" Returns the number of tokens minted by `owner`."},"id":263,"implemented":true,"kind":"function","modifiers":[],"name":"_numberMinted","nameLocation":"7361:13:1","nodeType":"FunctionDefinition","parameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":248,"mutability":"mutable","name":"owner","nameLocation":"7383:5:1","nodeType":"VariableDeclaration","scope":263,"src":"7375:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":247,"name":"address","nodeType":"ElementaryTypeName","src":"7375:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7374:15:1"},"returnParameters":{"id":252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":263,"src":"7413:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":250,"name":"uint256","nodeType":"ElementaryTypeName","src":"7413:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7412:9:1"},"scope":1648,"src":"7352:176:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":280,"nodeType":"Block","src":"7691:106:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":271,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"7709:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":273,"indexExpression":{"id":272,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"7728:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7709:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":274,"name":"_BITPOS_NUMBER_BURNED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"7738:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:50:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":276,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7708:52:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":277,"name":"_BITMASK_ADDRESS_DATA_ENTRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"7763:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7708:82:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":270,"id":279,"nodeType":"Return","src":"7701:89:1"}]},"documentation":{"id":264,"nodeType":"StructuredDocumentation","src":"7534:82:1","text":" Returns the number of tokens burned by or on behalf of `owner`."},"id":281,"implemented":true,"kind":"function","modifiers":[],"name":"_numberBurned","nameLocation":"7630:13:1","nodeType":"FunctionDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"owner","nameLocation":"7652:5:1","nodeType":"VariableDeclaration","scope":281,"src":"7644:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"7644:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7643:15:1"},"returnParameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":281,"src":"7682:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":268,"name":"uint256","nodeType":"ElementaryTypeName","src":"7682:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7681:9:1"},"scope":1648,"src":"7621:176:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":298,"nodeType":"Block","src":"7973:72:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":291,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"7997:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":293,"indexExpression":{"id":292,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"8016:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7997:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":294,"name":"_BITPOS_AUX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"8026:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:40:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7990:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":289,"name":"uint64","nodeType":"ElementaryTypeName","src":"7990:6:1","typeDescriptions":{}}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7990:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":288,"id":297,"nodeType":"Return","src":"7983:55:1"}]},"documentation":{"id":282,"nodeType":"StructuredDocumentation","src":"7803:102:1","text":" Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used)."},"id":299,"implemented":true,"kind":"function","modifiers":[],"name":"_getAux","nameLocation":"7919:7:1","nodeType":"FunctionDefinition","parameters":{"id":285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":284,"mutability":"mutable","name":"owner","nameLocation":"7935:5:1","nodeType":"VariableDeclaration","scope":299,"src":"7927:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":283,"name":"address","nodeType":"ElementaryTypeName","src":"7927:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7926:15:1"},"returnParameters":{"id":288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":299,"src":"7965:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":286,"name":"uint64","nodeType":"ElementaryTypeName","src":"7965:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"7964:8:1"},"scope":1648,"src":"7910:135:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":335,"nodeType":"Block","src":"8288:334:1","statements":[{"assignments":[308],"declarations":[{"constant":false,"id":308,"mutability":"mutable","name":"packed","nameLocation":"8306:6:1","nodeType":"VariableDeclaration","scope":335,"src":"8298:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":307,"name":"uint256","nodeType":"ElementaryTypeName","src":"8298:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":312,"initialValue":{"baseExpression":{"id":309,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"8315:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":311,"indexExpression":{"id":310,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"8334:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8315:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8298:42:1"},{"assignments":[314],"declarations":[{"constant":false,"id":314,"mutability":"mutable","name":"auxCasted","nameLocation":"8358:9:1","nodeType":"VariableDeclaration","scope":335,"src":"8350:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":313,"name":"uint256","nodeType":"ElementaryTypeName","src":"8350:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":315,"nodeType":"VariableDeclarationStatement","src":"8350:17:1"},{"AST":{"nodeType":"YulBlock","src":"8450:40:1","statements":[{"nodeType":"YulAssignment","src":"8464:16:1","value":{"name":"aux","nodeType":"YulIdentifier","src":"8477:3:1"},"variableNames":[{"name":"auxCasted","nodeType":"YulIdentifier","src":"8464:9:1"}]}]},"evmVersion":"london","externalReferences":[{"declaration":304,"isOffset":false,"isSlot":false,"src":"8477:3:1","valueSize":1},{"declaration":314,"isOffset":false,"isSlot":false,"src":"8464:9:1","valueSize":1}],"id":316,"nodeType":"InlineAssembly","src":"8441:49:1"},{"expression":{"id":327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":317,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"8499:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":318,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"8509:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":319,"name":"_BITMASK_AUX_COMPLEMENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"8518:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8509:32:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":321,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8508:34:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":322,"name":"auxCasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"8546:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":323,"name":"_BITPOS_AUX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"8559:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8546:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":325,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8545:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8508:63:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8499:72:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":328,"nodeType":"ExpressionStatement","src":"8499:72:1"},{"expression":{"id":333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":329,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"8581:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":331,"indexExpression":{"id":330,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"8600:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8581:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":332,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"8609:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8581:34:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":334,"nodeType":"ExpressionStatement","src":"8581:34:1"}]},"documentation":{"id":300,"nodeType":"StructuredDocumentation","src":"8051:171:1","text":" Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."},"id":336,"implemented":true,"kind":"function","modifiers":[],"name":"_setAux","nameLocation":"8236:7:1","nodeType":"FunctionDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"owner","nameLocation":"8252:5:1","nodeType":"VariableDeclaration","scope":336,"src":"8244:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":301,"name":"address","nodeType":"ElementaryTypeName","src":"8244:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":304,"mutability":"mutable","name":"aux","nameLocation":"8266:3:1","nodeType":"VariableDeclaration","scope":336,"src":"8259:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":303,"name":"uint64","nodeType":"ElementaryTypeName","src":"8259:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8243:27:1"},"returnParameters":{"id":306,"nodeType":"ParameterList","parameters":[],"src":"8288:0:1"},"scope":1648,"src":"8227:395:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1713],"body":{"id":357,"nodeType":"Block","src":"9246:539:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":345,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"9558:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783031666663396137","id":346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9573:10:1","typeDescriptions":{"typeIdentifier":"t_rational_33540519_by_1","typeString":"int_const 33540519"},"value":"0x01ffc9a7"},"src":"9558:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":348,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"9634:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783830616335386364","id":349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9649:10:1","typeDescriptions":{"typeIdentifier":"t_rational_2158778573_by_1","typeString":"int_const 2158778573"},"value":"0x80ac58cd"},"src":"9634:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9558:101:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":352,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"9710:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783562356531333966","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9725:10:1","typeDescriptions":{"typeIdentifier":"t_rational_1532892063_by_1","typeString":"int_const 1532892063"},"value":"0x5b5e139f"},"src":"9710:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9558:177:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":344,"id":356,"nodeType":"Return","src":"9539:196:1"}]},"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"8809:341:1","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."},"functionSelector":"01ffc9a7","id":358,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"9164:17:1","nodeType":"FunctionDefinition","overrides":{"id":341,"nodeType":"OverrideSpecifier","overrides":[],"src":"9222:8:1"},"parameters":{"id":340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"mutability":"mutable","name":"interfaceId","nameLocation":"9189:11:1","nodeType":"VariableDeclaration","scope":358,"src":"9182:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":338,"name":"bytes4","nodeType":"ElementaryTypeName","src":"9182:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"9181:20:1"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":358,"src":"9240:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":342,"name":"bool","nodeType":"ElementaryTypeName","src":"9240:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9239:6:1"},"scope":1648,"src":"9155:630:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1828],"body":{"id":367,"nodeType":"Block","src":"10108:29:1","statements":[{"expression":{"id":365,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"10125:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":364,"id":366,"nodeType":"Return","src":"10118:12:1"}]},"documentation":{"id":359,"nodeType":"StructuredDocumentation","src":"9976:58:1","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":368,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"10048:4:1","nodeType":"FunctionDefinition","overrides":{"id":361,"nodeType":"OverrideSpecifier","overrides":[],"src":"10075:8:1"},"parameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"10052:2:1"},"returnParameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":368,"src":"10093:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":362,"name":"string","nodeType":"ElementaryTypeName","src":"10093:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10092:15:1"},"scope":1648,"src":"10039:98:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1834],"body":{"id":377,"nodeType":"Block","src":"10279:31:1","statements":[{"expression":{"id":375,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"10296:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":374,"id":376,"nodeType":"Return","src":"10289:14:1"}]},"documentation":{"id":369,"nodeType":"StructuredDocumentation","src":"10143:60:1","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":378,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"10217:6:1","nodeType":"FunctionDefinition","overrides":{"id":371,"nodeType":"OverrideSpecifier","overrides":[],"src":"10246:8:1"},"parameters":{"id":370,"nodeType":"ParameterList","parameters":[],"src":"10223:2:1"},"returnParameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":378,"src":"10264:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":372,"name":"string","nodeType":"ElementaryTypeName","src":"10264:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10263:15:1"},"scope":1648,"src":"10208:102:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1842],"body":{"id":420,"nodeType":"Block","src":"10499:225:1","statements":[{"condition":{"id":390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10513:17:1","subExpression":{"arguments":[{"id":388,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"10522:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":387,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"10514:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10514:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":394,"nodeType":"IfStatement","src":"10509:59:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":391,"name":"URIQueryForNonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"10539:27:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10539:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":393,"nodeType":"RevertStatement","src":"10532:36:1"}},{"assignments":[396],"declarations":[{"constant":false,"id":396,"mutability":"mutable","name":"baseURI","nameLocation":"10593:7:1","nodeType":"VariableDeclaration","scope":420,"src":"10579:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":395,"name":"string","nodeType":"ElementaryTypeName","src":"10579:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":399,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":397,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"10603:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10603:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"10579:34:1"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":402,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"10636:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10630:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":400,"name":"bytes","nodeType":"ElementaryTypeName","src":"10630:5:1","typeDescriptions":{}}},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10630:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"10630:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10655:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10630:26:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10715:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10630:87:1","trueExpression":{"arguments":[{"arguments":[{"id":411,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"10683:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"id":413,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"10702:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":412,"name":"_toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"10692:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10692:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":409,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10666:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"10666:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10666:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10659:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":407,"name":"string","nodeType":"ElementaryTypeName","src":"10659:6:1","typeDescriptions":{}}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10659:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":386,"id":419,"nodeType":"Return","src":"10623:94:1"}]},"documentation":{"id":379,"nodeType":"StructuredDocumentation","src":"10316:90:1","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":421,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"10420:8:1","nodeType":"FunctionDefinition","overrides":{"id":383,"nodeType":"OverrideSpecifier","overrides":[],"src":"10466:8:1"},"parameters":{"id":382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":381,"mutability":"mutable","name":"tokenId","nameLocation":"10437:7:1","nodeType":"VariableDeclaration","scope":421,"src":"10429:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":380,"name":"uint256","nodeType":"ElementaryTypeName","src":"10429:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10428:17:1"},"returnParameters":{"id":386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":421,"src":"10484:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":384,"name":"string","nodeType":"ElementaryTypeName","src":"10484:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10483:15:1"},"scope":1648,"src":"10411:313:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":429,"nodeType":"Block","src":"11035:26:1","statements":[{"expression":{"hexValue":"","id":427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11052:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":426,"id":428,"nodeType":"Return","src":"11045:9:1"}]},"documentation":{"id":422,"nodeType":"StructuredDocumentation","src":"10730:234:1","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, it can be overridden in child contracts."},"id":430,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"10978:8:1","nodeType":"FunctionDefinition","parameters":{"id":423,"nodeType":"ParameterList","parameters":[],"src":"10986:2:1"},"returnParameters":{"id":426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":430,"src":"11020:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":424,"name":"string","nodeType":"ElementaryTypeName","src":"11020:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11019:15:1"},"scope":1648,"src":"10969:92:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1756],"body":{"id":449,"nodeType":"Block","src":"11472:69:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":444,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"11524:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":443,"name":"_packedOwnershipOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"11505:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11505:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11497:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":441,"name":"uint160","nodeType":"ElementaryTypeName","src":"11497:7:1","typeDescriptions":{}}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11497:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":439,"name":"address","nodeType":"ElementaryTypeName","src":"11489:7:1","typeDescriptions":{}}},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11489:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":438,"id":448,"nodeType":"Return","src":"11482:52:1"}]},"documentation":{"id":431,"nodeType":"StructuredDocumentation","src":"11255:131:1","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":450,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"11400:7:1","nodeType":"FunctionDefinition","overrides":{"id":435,"nodeType":"OverrideSpecifier","overrides":[],"src":"11445:8:1"},"parameters":{"id":434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":433,"mutability":"mutable","name":"tokenId","nameLocation":"11416:7:1","nodeType":"VariableDeclaration","scope":450,"src":"11408:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":432,"name":"uint256","nodeType":"ElementaryTypeName","src":"11408:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11407:17:1"},"returnParameters":{"id":438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":450,"src":"11463:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"11463:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11462:9:1"},"scope":1648,"src":"11391:150:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":465,"nodeType":"Block","src":"11817:71:1","statements":[{"expression":{"arguments":[{"arguments":[{"id":461,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"11872:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":460,"name":"_packedOwnershipOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"11853:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11853:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":459,"name":"_unpackedOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"11834:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$1699_memory_ptr_$","typeString":"function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11834:47:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$1699_memory_ptr","typeString":"struct IERC721A.TokenOwnership memory"}},"functionReturnParameters":458,"id":464,"nodeType":"Return","src":"11827:54:1"}]},"documentation":{"id":451,"nodeType":"StructuredDocumentation","src":"11547:172:1","text":" @dev Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around over time."},"id":466,"implemented":true,"kind":"function","modifiers":[],"name":"_ownershipOf","nameLocation":"11733:12:1","nodeType":"FunctionDefinition","parameters":{"id":454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"tokenId","nameLocation":"11754:7:1","nodeType":"VariableDeclaration","scope":466,"src":"11746:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":452,"name":"uint256","nodeType":"ElementaryTypeName","src":"11746:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11745:17:1"},"returnParameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":466,"src":"11794:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$1699_memory_ptr","typeString":"struct IERC721A.TokenOwnership"},"typeName":{"id":456,"nodeType":"UserDefinedTypeName","pathNode":{"id":455,"name":"TokenOwnership","nodeType":"IdentifierPath","referencedDeclaration":1699,"src":"11794:14:1"},"referencedDeclaration":1699,"src":"11794:14:1","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$1699_storage_ptr","typeString":"struct IERC721A.TokenOwnership"}},"visibility":"internal"}],"src":"11793:23:1"},"scope":1648,"src":"11724:164:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":481,"nodeType":"Block","src":"12070:68:1","statements":[{"expression":{"arguments":[{"baseExpression":{"id":476,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"12106:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":478,"indexExpression":{"id":477,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"12124:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12106:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":475,"name":"_unpackedOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"12087:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$1699_memory_ptr_$","typeString":"function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12087:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$1699_memory_ptr","typeString":"struct IERC721A.TokenOwnership memory"}},"functionReturnParameters":474,"id":480,"nodeType":"Return","src":"12080:51:1"}]},"documentation":{"id":467,"nodeType":"StructuredDocumentation","src":"11894:80:1","text":" @dev Returns the unpacked `TokenOwnership` struct at `index`."},"id":482,"implemented":true,"kind":"function","modifiers":[],"name":"_ownershipAt","nameLocation":"11988:12:1","nodeType":"FunctionDefinition","parameters":{"id":470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":469,"mutability":"mutable","name":"index","nameLocation":"12009:5:1","nodeType":"VariableDeclaration","scope":482,"src":"12001:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":468,"name":"uint256","nodeType":"ElementaryTypeName","src":"12001:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12000:15:1"},"returnParameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":482,"src":"12047:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$1699_memory_ptr","typeString":"struct IERC721A.TokenOwnership"},"typeName":{"id":472,"nodeType":"UserDefinedTypeName","pathNode":{"id":471,"name":"TokenOwnership","nodeType":"IdentifierPath","referencedDeclaration":1699,"src":"12047:14:1"},"referencedDeclaration":1699,"src":"12047:14:1","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$1699_storage_ptr","typeString":"struct IERC721A.TokenOwnership"}},"visibility":"internal"}],"src":"12046:23:1"},"scope":1648,"src":"11979:159:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":503,"nodeType":"Block","src":"12310:128:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":488,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"12324:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":490,"indexExpression":{"id":489,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"12342:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12324:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12352:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12324:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":502,"nodeType":"IfStatement","src":"12320:112:1","trueBody":{"id":501,"nodeType":"Block","src":"12355:77:1","statements":[{"expression":{"id":499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":493,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"12369:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":495,"indexExpression":{"id":494,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"12387:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12369:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":497,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"12415:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":496,"name":"_packedOwnershipOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"12396:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12396:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12369:52:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":500,"nodeType":"ExpressionStatement","src":"12369:52:1"}]}}]},"documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"12144:97:1","text":" @dev Initializes the ownership slot minted at `index` for efficiency purposes."},"id":504,"implemented":true,"kind":"function","modifiers":[],"name":"_initializeOwnershipAt","nameLocation":"12255:22:1","nodeType":"FunctionDefinition","parameters":{"id":486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"index","nameLocation":"12286:5:1","nodeType":"VariableDeclaration","scope":504,"src":"12278:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":484,"name":"uint256","nodeType":"ElementaryTypeName","src":"12278:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12277:15:1"},"returnParameters":{"id":487,"nodeType":"ParameterList","parameters":[],"src":"12310:0:1"},"scope":1648,"src":"12246:192:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":557,"nodeType":"Block","src":"12591:1173:1","statements":[{"assignments":[513],"declarations":[{"constant":false,"id":513,"mutability":"mutable","name":"curr","nameLocation":"12609:4:1","nodeType":"VariableDeclaration","scope":557,"src":"12601:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":512,"name":"uint256","nodeType":"ElementaryTypeName","src":"12601:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":515,"initialValue":{"id":514,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"12616:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12601:22:1"},{"id":553,"nodeType":"UncheckedBlock","src":"12634:1076:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":516,"name":"_startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"12662:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12662:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":518,"name":"curr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"12681:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12662:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":552,"nodeType":"IfStatement","src":"12658:1042:1","trueBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":520,"name":"curr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"12707:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":521,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"12714:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12707:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":551,"nodeType":"IfStatement","src":"12703:997:1","trueBody":{"id":550,"nodeType":"Block","src":"12729:971:1","statements":[{"assignments":[524],"declarations":[{"constant":false,"id":524,"mutability":"mutable","name":"packed","nameLocation":"12759:6:1","nodeType":"VariableDeclaration","scope":550,"src":"12751:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":523,"name":"uint256","nodeType":"ElementaryTypeName","src":"12751:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":528,"initialValue":{"baseExpression":{"id":525,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"12768:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":527,"indexExpression":{"id":526,"name":"curr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"12786:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12768:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12751:40:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":529,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"12855:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":530,"name":"_BITMASK_BURNED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"12864:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12855:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12855:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":549,"nodeType":"IfStatement","src":"12851:831:1","trueBody":{"id":548,"nodeType":"Block","src":"12886:796:1","statements":[{"body":{"id":544,"nodeType":"Block","src":"13530:91:1","statements":[{"expression":{"id":542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":537,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"13560:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":538,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"13569:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":541,"indexExpression":{"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"13587:6:1","subExpression":{"id":539,"name":"curr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"13589:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13569:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13560:34:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":543,"nodeType":"ExpressionStatement","src":"13560:34:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":534,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"13517:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13527:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13517:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":545,"nodeType":"WhileStatement","src":"13510:111:1"},{"expression":{"id":546,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"13653:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":511,"id":547,"nodeType":"Return","src":"13646:13:1"}]}}]}}}]},{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":554,"name":"OwnerQueryForNonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"13726:29:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13726:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":556,"nodeType":"RevertStatement","src":"13719:38:1"}]},"documentation":{"id":505,"nodeType":"StructuredDocumentation","src":"12444:66:1","text":" Returns the packed ownership data of `tokenId`."},"id":558,"implemented":true,"kind":"function","modifiers":[],"name":"_packedOwnershipOf","nameLocation":"12524:18:1","nodeType":"FunctionDefinition","parameters":{"id":508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"tokenId","nameLocation":"12551:7:1","nodeType":"VariableDeclaration","scope":558,"src":"12543:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":506,"name":"uint256","nodeType":"ElementaryTypeName","src":"12543:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12542:17:1"},"returnParameters":{"id":511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":558,"src":"12582:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":509,"name":"uint256","nodeType":"ElementaryTypeName","src":"12582:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12581:9:1"},"scope":1648,"src":"12515:1249:1","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":611,"nodeType":"Block","src":"13957:262:1","statements":[{"expression":{"id":577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":567,"name":"ownership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"13967:9:1","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$1699_memory_ptr","typeString":"struct IERC721A.TokenOwnership memory"}},"id":569,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"addr","nodeType":"MemberAccess","referencedDeclaration":1692,"src":"13967:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":574,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"14000:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13992:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":572,"name":"uint160","nodeType":"ElementaryTypeName","src":"13992:7:1","typeDescriptions":{}}},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13992:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13984:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":570,"name":"address","nodeType":"ElementaryTypeName","src":"13984:7:1","typeDescriptions":{}}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13984:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13967:41:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":578,"nodeType":"ExpressionStatement","src":"13967:41:1"},{"expression":{"id":588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":579,"name":"ownership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"14018:9:1","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$1699_memory_ptr","typeString":"struct IERC721A.TokenOwnership memory"}},"id":581,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"startTimestamp","nodeType":"MemberAccess","referencedDeclaration":1694,"src":"14018:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":584,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"14052:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":585,"name":"_BITPOS_START_TIMESTAMP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"14062:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14052:33:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14045:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":582,"name":"uint64","nodeType":"ElementaryTypeName","src":"14045:6:1","typeDescriptions":{}}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14045:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"14018:68:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":589,"nodeType":"ExpressionStatement","src":"14018:68:1"},{"expression":{"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":590,"name":"ownership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"14096:9:1","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$1699_memory_ptr","typeString":"struct IERC721A.TokenOwnership memory"}},"id":592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"burned","nodeType":"MemberAccess","referencedDeclaration":1696,"src":"14096:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":593,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"14115:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":594,"name":"_BITMASK_BURNED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"14124:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14115:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14143:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14115:29:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14096:48:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":599,"nodeType":"ExpressionStatement","src":"14096:48:1"},{"expression":{"id":609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":600,"name":"ownership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"14154:9:1","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$1699_memory_ptr","typeString":"struct IERC721A.TokenOwnership memory"}},"id":602,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"extraData","nodeType":"MemberAccess","referencedDeclaration":1698,"src":"14154:19:1","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":605,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"14183:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":606,"name":"_BITPOS_EXTRA_DATA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"14193:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14183:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14176:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":603,"name":"uint24","nodeType":"ElementaryTypeName","src":"14176:6:1","typeDescriptions":{}}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14176:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"14154:58:1","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":610,"nodeType":"ExpressionStatement","src":"14154:58:1"}]},"documentation":{"id":559,"nodeType":"StructuredDocumentation","src":"13770:83:1","text":" @dev Returns the unpacked `TokenOwnership` struct from `packed`."},"id":612,"implemented":true,"kind":"function","modifiers":[],"name":"_unpackedOwnership","nameLocation":"13867:18:1","nodeType":"FunctionDefinition","parameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"mutability":"mutable","name":"packed","nameLocation":"13894:6:1","nodeType":"VariableDeclaration","scope":612,"src":"13886:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":560,"name":"uint256","nodeType":"ElementaryTypeName","src":"13886:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13885:16:1"},"returnParameters":{"id":566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":565,"mutability":"mutable","name":"ownership","nameLocation":"13946:9:1","nodeType":"VariableDeclaration","scope":612,"src":"13924:31:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$1699_memory_ptr","typeString":"struct IERC721A.TokenOwnership"},"typeName":{"id":564,"nodeType":"UserDefinedTypeName","pathNode":{"id":563,"name":"TokenOwnership","nodeType":"IdentifierPath","referencedDeclaration":1699,"src":"13924:14:1"},"referencedDeclaration":1699,"src":"13924:14:1","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$1699_storage_ptr","typeString":"struct IERC721A.TokenOwnership"}},"visibility":"internal"}],"src":"13923:33:1"},"scope":1648,"src":"13858:361:1","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":623,"nodeType":"Block","src":"14393:347:1","statements":[{"AST":{"nodeType":"YulBlock","src":"14412:322:1","statements":[{"nodeType":"YulAssignment","src":"14522:37:1","value":{"arguments":[{"name":"owner","nodeType":"YulIdentifier","src":"14535:5:1"},{"name":"_BITMASK_ADDRESS","nodeType":"YulIdentifier","src":"14542:16:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14531:3:1"},"nodeType":"YulFunctionCall","src":"14531:28:1"},"variableNames":[{"name":"owner","nodeType":"YulIdentifier","src":"14522:5:1"}]},{"nodeType":"YulAssignment","src":"14651:73:1","value":{"arguments":[{"name":"owner","nodeType":"YulIdentifier","src":"14664:5:1"},{"arguments":[{"arguments":[{"name":"_BITPOS_START_TIMESTAMP","nodeType":"YulIdentifier","src":"14678:23:1"},{"arguments":[],"functionName":{"name":"timestamp","nodeType":"YulIdentifier","src":"14703:9:1"},"nodeType":"YulFunctionCall","src":"14703:11:1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14674:3:1"},"nodeType":"YulFunctionCall","src":"14674:41:1"},{"name":"flags","nodeType":"YulIdentifier","src":"14717:5:1"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"14671:2:1"},"nodeType":"YulFunctionCall","src":"14671:52:1"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"14661:2:1"},"nodeType":"YulFunctionCall","src":"14661:63:1"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"14651:6:1"}]}]},"evmVersion":"london","externalReferences":[{"declaration":109,"isOffset":false,"isSlot":false,"src":"14542:16:1","valueSize":1},{"declaration":77,"isOffset":false,"isSlot":false,"src":"14678:23:1","valueSize":1},{"declaration":617,"isOffset":false,"isSlot":false,"src":"14717:5:1","valueSize":1},{"declaration":615,"isOffset":false,"isSlot":false,"src":"14522:5:1","valueSize":1},{"declaration":615,"isOffset":false,"isSlot":false,"src":"14535:5:1","valueSize":1},{"declaration":615,"isOffset":false,"isSlot":false,"src":"14664:5:1","valueSize":1},{"declaration":620,"isOffset":false,"isSlot":false,"src":"14651:6:1","valueSize":1}],"id":622,"nodeType":"InlineAssembly","src":"14403:331:1"}]},"documentation":{"id":613,"nodeType":"StructuredDocumentation","src":"14225:67:1","text":" @dev Packs ownership data into a single uint256."},"id":624,"implemented":true,"kind":"function","modifiers":[],"name":"_packOwnershipData","nameLocation":"14306:18:1","nodeType":"FunctionDefinition","parameters":{"id":618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":615,"mutability":"mutable","name":"owner","nameLocation":"14333:5:1","nodeType":"VariableDeclaration","scope":624,"src":"14325:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":614,"name":"address","nodeType":"ElementaryTypeName","src":"14325:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":617,"mutability":"mutable","name":"flags","nameLocation":"14348:5:1","nodeType":"VariableDeclaration","scope":624,"src":"14340:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":616,"name":"uint256","nodeType":"ElementaryTypeName","src":"14340:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14324:30:1"},"returnParameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"result","nameLocation":"14385:6:1","nodeType":"VariableDeclaration","scope":624,"src":"14377:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":619,"name":"uint256","nodeType":"ElementaryTypeName","src":"14377:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14376:16:1"},"scope":1648,"src":"14297:443:1","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":633,"nodeType":"Block","src":"14923:232:1","statements":[{"AST":{"nodeType":"YulBlock","src":"15007:142:1","statements":[{"nodeType":"YulAssignment","src":"15083:56:1","value":{"arguments":[{"name":"_BITPOS_NEXT_INITIALIZED","nodeType":"YulIdentifier","src":"15097:24:1"},{"arguments":[{"name":"quantity","nodeType":"YulIdentifier","src":"15126:8:1"},{"kind":"number","nodeType":"YulLiteral","src":"15136:1:1","type":"","value":"1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15123:2:1"},"nodeType":"YulFunctionCall","src":"15123:15:1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15093:3:1"},"nodeType":"YulFunctionCall","src":"15093:46:1"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"15083:6:1"}]}]},"evmVersion":"london","externalReferences":[{"declaration":85,"isOffset":false,"isSlot":false,"src":"15097:24:1","valueSize":1},{"declaration":627,"isOffset":false,"isSlot":false,"src":"15126:8:1","valueSize":1},{"declaration":630,"isOffset":false,"isSlot":false,"src":"15083:6:1","valueSize":1}],"id":632,"nodeType":"InlineAssembly","src":"14998:151:1"}]},"documentation":{"id":625,"nodeType":"StructuredDocumentation","src":"14746:86:1","text":" @dev Returns the `nextInitialized` flag set if `quantity` equals 1."},"id":634,"implemented":true,"kind":"function","modifiers":[],"name":"_nextInitializedFlag","nameLocation":"14846:20:1","nodeType":"FunctionDefinition","parameters":{"id":628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":627,"mutability":"mutable","name":"quantity","nameLocation":"14875:8:1","nodeType":"VariableDeclaration","scope":634,"src":"14867:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":626,"name":"uint256","nodeType":"ElementaryTypeName","src":"14867:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14866:18:1"},"returnParameters":{"id":631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":630,"mutability":"mutable","name":"result","nameLocation":"14915:6:1","nodeType":"VariableDeclaration","scope":634,"src":"14907:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":629,"name":"uint256","nodeType":"ElementaryTypeName","src":"14907:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14906:16:1"},"scope":1648,"src":"14837:318:1","stateMutability":"pure","virtual":false,"visibility":"private"},{"baseFunctions":[1796],"body":{"id":678,"nodeType":"Block","src":"15890:320:1","statements":[{"assignments":[644],"declarations":[{"constant":false,"id":644,"mutability":"mutable","name":"owner","nameLocation":"15908:5:1","nodeType":"VariableDeclaration","scope":678,"src":"15900:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":643,"name":"address","nodeType":"ElementaryTypeName","src":"15900:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":648,"initialValue":{"arguments":[{"id":646,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"15924:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":645,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"15916:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15916:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15900:32:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":649,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"15947:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15947:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":651,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"15970:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15947:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":664,"nodeType":"IfStatement","src":"15943:172:1","trueBody":{"condition":{"id":658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15993:45:1","subExpression":{"arguments":[{"id":654,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"16011:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":655,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"16018:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16018:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":653,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"15994:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15994:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":663,"nodeType":"IfStatement","src":"15989:126:1","trueBody":{"id":662,"nodeType":"Block","src":"16040:75:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":659,"name":"ApprovalCallerNotOwnerNorApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"16065:33:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16065:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":661,"nodeType":"RevertStatement","src":"16058:42:1"}]}}},{"expression":{"id":670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":665,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"16125:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$49_storage_$","typeString":"mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"}},"id":667,"indexExpression":{"id":666,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"16141:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16125:24:1","typeDescriptions":{"typeIdentifier":"t_struct$_TokenApprovalRef_$49_storage","typeString":"struct ERC721A.TokenApprovalRef storage ref"}},"id":668,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":48,"src":"16125:30:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":669,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"16158:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16125:35:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":671,"nodeType":"ExpressionStatement","src":"16125:35:1"},{"eventCall":{"arguments":[{"id":673,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"16184:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":674,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"16191:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":675,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"16195:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":672,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"16175:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16175:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":677,"nodeType":"EmitStatement","src":"16170:33:1"}]},"documentation":{"id":635,"nodeType":"StructuredDocumentation","src":"15348:459:1","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":679,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"15821:7:1","nodeType":"FunctionDefinition","overrides":{"id":641,"nodeType":"OverrideSpecifier","overrides":[],"src":"15881:8:1"},"parameters":{"id":640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":637,"mutability":"mutable","name":"to","nameLocation":"15837:2:1","nodeType":"VariableDeclaration","scope":679,"src":"15829:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":636,"name":"address","nodeType":"ElementaryTypeName","src":"15829:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":639,"mutability":"mutable","name":"tokenId","nameLocation":"15849:7:1","nodeType":"VariableDeclaration","scope":679,"src":"15841:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":638,"name":"uint256","nodeType":"ElementaryTypeName","src":"15841:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15828:29:1"},"returnParameters":{"id":642,"nodeType":"ParameterList","parameters":[],"src":"15890:0:1"},"scope":1648,"src":"15812:398:1","stateMutability":"payable","virtual":true,"visibility":"public"},{"baseFunctions":[1812],"body":{"id":701,"nodeType":"Block","src":"16445:129:1","statements":[{"condition":{"id":691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16459:17:1","subExpression":{"arguments":[{"id":689,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"16468:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":688,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"16460:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16460:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":695,"nodeType":"IfStatement","src":"16455:64:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":692,"name":"ApprovalQueryForNonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"16485:32:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16485:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":694,"nodeType":"RevertStatement","src":"16478:41:1"}},{"expression":{"expression":{"baseExpression":{"id":696,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"16537:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$49_storage_$","typeString":"mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"}},"id":698,"indexExpression":{"id":697,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"16553:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16537:24:1","typeDescriptions":{"typeIdentifier":"t_struct$_TokenApprovalRef_$49_storage","typeString":"struct ERC721A.TokenApprovalRef storage ref"}},"id":699,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":48,"src":"16537:30:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":687,"id":700,"nodeType":"Return","src":"16530:37:1"}]},"documentation":{"id":680,"nodeType":"StructuredDocumentation","src":"16216:139:1","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":702,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"16369:11:1","nodeType":"FunctionDefinition","overrides":{"id":684,"nodeType":"OverrideSpecifier","overrides":[],"src":"16418:8:1"},"parameters":{"id":683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":682,"mutability":"mutable","name":"tokenId","nameLocation":"16389:7:1","nodeType":"VariableDeclaration","scope":702,"src":"16381:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":681,"name":"uint256","nodeType":"ElementaryTypeName","src":"16381:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16380:17:1"},"returnParameters":{"id":687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":702,"src":"16436:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":685,"name":"address","nodeType":"ElementaryTypeName","src":"16436:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16435:9:1"},"scope":1648,"src":"16360:214:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1804],"body":{"id":727,"nodeType":"Block","src":"16985:147:1","statements":[{"expression":{"id":718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":711,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"16995:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":715,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":712,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"17014:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17014:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16995:39:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":716,"indexExpression":{"id":714,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"17035:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16995:49:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":717,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"17047:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16995:60:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":719,"nodeType":"ExpressionStatement","src":"16995:60:1"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":721,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"17085:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17085:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":723,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"17106:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":724,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"17116:8:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":720,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"17070:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17070:55:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":726,"nodeType":"EmitStatement","src":"17065:60:1"}]},"documentation":{"id":703,"nodeType":"StructuredDocumentation","src":"16580:316:1","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":728,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"16910:17:1","nodeType":"FunctionDefinition","overrides":{"id":709,"nodeType":"OverrideSpecifier","overrides":[],"src":"16976:8:1"},"parameters":{"id":708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":705,"mutability":"mutable","name":"operator","nameLocation":"16936:8:1","nodeType":"VariableDeclaration","scope":728,"src":"16928:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":704,"name":"address","nodeType":"ElementaryTypeName","src":"16928:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":707,"mutability":"mutable","name":"approved","nameLocation":"16951:8:1","nodeType":"VariableDeclaration","scope":728,"src":"16946:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":706,"name":"bool","nodeType":"ElementaryTypeName","src":"16946:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16927:33:1"},"returnParameters":{"id":710,"nodeType":"ParameterList","parameters":[],"src":"16985:0:1"},"scope":1648,"src":"16901:231:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1822],"body":{"id":745,"nodeType":"Block","src":"17385:59:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":739,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"17402:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":741,"indexExpression":{"id":740,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"17421:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17402:25:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":743,"indexExpression":{"id":742,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"17428:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17402:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":738,"id":744,"nodeType":"Return","src":"17395:42:1"}]},"documentation":{"id":729,"nodeType":"StructuredDocumentation","src":"17138:139:1","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":746,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"17291:16:1","nodeType":"FunctionDefinition","overrides":{"id":735,"nodeType":"OverrideSpecifier","overrides":[],"src":"17361:8:1"},"parameters":{"id":734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":731,"mutability":"mutable","name":"owner","nameLocation":"17316:5:1","nodeType":"VariableDeclaration","scope":746,"src":"17308:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":730,"name":"address","nodeType":"ElementaryTypeName","src":"17308:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":733,"mutability":"mutable","name":"operator","nameLocation":"17331:8:1","nodeType":"VariableDeclaration","scope":746,"src":"17323:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":732,"name":"address","nodeType":"ElementaryTypeName","src":"17323:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17307:33:1"},"returnParameters":{"id":738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":746,"src":"17379:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":736,"name":"bool","nodeType":"ElementaryTypeName","src":"17379:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17378:6:1"},"scope":1648,"src":"17282:162:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":771,"nodeType":"Block","src":"17764:206:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":754,"name":"_startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"17793:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17793:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":756,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"17812:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17793:26:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":758,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"17835:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":759,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"17845:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17835:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17793:65:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":762,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"17895:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":764,"indexExpression":{"id":763,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"17913:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17895:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":765,"name":"_BITMASK_BURNED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"17924:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17895:44:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17943:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17895:49:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17793:151:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":753,"id":770,"nodeType":"Return","src":"17774:170:1"}]},"documentation":{"id":747,"nodeType":"StructuredDocumentation","src":"17450:238:1","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted. See {_mint}."},"id":772,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"17702:7:1","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":749,"mutability":"mutable","name":"tokenId","nameLocation":"17718:7:1","nodeType":"VariableDeclaration","scope":772,"src":"17710:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":748,"name":"uint256","nodeType":"ElementaryTypeName","src":"17710:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17709:17:1"},"returnParameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":772,"src":"17758:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":751,"name":"bool","nodeType":"ElementaryTypeName","src":"17758:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17757:6:1"},"scope":1648,"src":"17693:277:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":785,"nodeType":"Block","src":"18232:488:1","statements":[{"AST":{"nodeType":"YulBlock","src":"18251:463:1","statements":[{"nodeType":"YulAssignment","src":"18361:37:1","value":{"arguments":[{"name":"owner","nodeType":"YulIdentifier","src":"18374:5:1"},{"name":"_BITMASK_ADDRESS","nodeType":"YulIdentifier","src":"18381:16:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18370:3:1"},"nodeType":"YulFunctionCall","src":"18370:28:1"},"variableNames":[{"name":"owner","nodeType":"YulIdentifier","src":"18361:5:1"}]},{"nodeType":"YulAssignment","src":"18511:45:1","value":{"arguments":[{"name":"msgSender","nodeType":"YulIdentifier","src":"18528:9:1"},{"name":"_BITMASK_ADDRESS","nodeType":"YulIdentifier","src":"18539:16:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18524:3:1"},"nodeType":"YulFunctionCall","src":"18524:32:1"},"variableNames":[{"name":"msgSender","nodeType":"YulIdentifier","src":"18511:9:1"}]},{"nodeType":"YulAssignment","src":"18638:66:1","value":{"arguments":[{"arguments":[{"name":"msgSender","nodeType":"YulIdentifier","src":"18654:9:1"},{"name":"owner","nodeType":"YulIdentifier","src":"18665:5:1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18651:2:1"},"nodeType":"YulFunctionCall","src":"18651:20:1"},{"arguments":[{"name":"msgSender","nodeType":"YulIdentifier","src":"18676:9:1"},{"name":"approvedAddress","nodeType":"YulIdentifier","src":"18687:15:1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18673:2:1"},"nodeType":"YulFunctionCall","src":"18673:30:1"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"18648:2:1"},"nodeType":"YulFunctionCall","src":"18648:56:1"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18638:6:1"}]}]},"evmVersion":"london","externalReferences":[{"declaration":109,"isOffset":false,"isSlot":false,"src":"18381:16:1","valueSize":1},{"declaration":109,"isOffset":false,"isSlot":false,"src":"18539:16:1","valueSize":1},{"declaration":775,"isOffset":false,"isSlot":false,"src":"18687:15:1","valueSize":1},{"declaration":779,"isOffset":false,"isSlot":false,"src":"18511:9:1","valueSize":1},{"declaration":779,"isOffset":false,"isSlot":false,"src":"18528:9:1","valueSize":1},{"declaration":779,"isOffset":false,"isSlot":false,"src":"18654:9:1","valueSize":1},{"declaration":779,"isOffset":false,"isSlot":false,"src":"18676:9:1","valueSize":1},{"declaration":777,"isOffset":false,"isSlot":false,"src":"18361:5:1","valueSize":1},{"declaration":777,"isOffset":false,"isSlot":false,"src":"18374:5:1","valueSize":1},{"declaration":777,"isOffset":false,"isSlot":false,"src":"18665:5:1","valueSize":1},{"declaration":782,"isOffset":false,"isSlot":false,"src":"18638:6:1","valueSize":1}],"id":784,"nodeType":"InlineAssembly","src":"18242:472:1"}]},"documentation":{"id":773,"nodeType":"StructuredDocumentation","src":"17976:93:1","text":" @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`."},"id":786,"implemented":true,"kind":"function","modifiers":[],"name":"_isSenderApprovedOrOwner","nameLocation":"18083:24:1","nodeType":"FunctionDefinition","parameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":775,"mutability":"mutable","name":"approvedAddress","nameLocation":"18125:15:1","nodeType":"VariableDeclaration","scope":786,"src":"18117:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":774,"name":"address","nodeType":"ElementaryTypeName","src":"18117:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":777,"mutability":"mutable","name":"owner","nameLocation":"18158:5:1","nodeType":"VariableDeclaration","scope":786,"src":"18150:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":776,"name":"address","nodeType":"ElementaryTypeName","src":"18150:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":779,"mutability":"mutable","name":"msgSender","nameLocation":"18181:9:1","nodeType":"VariableDeclaration","scope":786,"src":"18173:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":778,"name":"address","nodeType":"ElementaryTypeName","src":"18173:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18107:89:1"},"returnParameters":{"id":783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":782,"mutability":"mutable","name":"result","nameLocation":"18224:6:1","nodeType":"VariableDeclaration","scope":786,"src":"18219:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":781,"name":"bool","nodeType":"ElementaryTypeName","src":"18219:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18218:13:1"},"scope":1648,"src":"18074:646:1","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":804,"nodeType":"Block","src":"18985:317:1","statements":[{"assignments":[798],"declarations":[{"constant":false,"id":798,"mutability":"mutable","name":"tokenApproval","nameLocation":"19020:13:1","nodeType":"VariableDeclaration","scope":804,"src":"18995:38:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TokenApprovalRef_$49_storage_ptr","typeString":"struct ERC721A.TokenApprovalRef"},"typeName":{"id":797,"nodeType":"UserDefinedTypeName","pathNode":{"id":796,"name":"TokenApprovalRef","nodeType":"IdentifierPath","referencedDeclaration":49,"src":"18995:16:1"},"referencedDeclaration":49,"src":"18995:16:1","typeDescriptions":{"typeIdentifier":"t_struct$_TokenApprovalRef_$49_storage_ptr","typeString":"struct ERC721A.TokenApprovalRef"}},"visibility":"internal"}],"id":802,"initialValue":{"baseExpression":{"id":799,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"19036:15:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$49_storage_$","typeString":"mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"}},"id":801,"indexExpression":{"id":800,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"19052:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19036:24:1","typeDescriptions":{"typeIdentifier":"t_struct$_TokenApprovalRef_$49_storage","typeString":"struct ERC721A.TokenApprovalRef storage ref"}},"nodeType":"VariableDeclarationStatement","src":"18995:65:1"},{"AST":{"nodeType":"YulBlock","src":"19173:123:1","statements":[{"nodeType":"YulAssignment","src":"19187:41:1","value":{"name":"tokenApproval.slot","nodeType":"YulIdentifier","src":"19210:18:1"},"variableNames":[{"name":"approvedAddressSlot","nodeType":"YulIdentifier","src":"19187:19:1"}]},{"nodeType":"YulAssignment","src":"19241:45:1","value":{"arguments":[{"name":"approvedAddressSlot","nodeType":"YulIdentifier","src":"19266:19:1"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"19260:5:1"},"nodeType":"YulFunctionCall","src":"19260:26:1"},"variableNames":[{"name":"approvedAddress","nodeType":"YulIdentifier","src":"19241:15:1"}]}]},"evmVersion":"london","externalReferences":[{"declaration":794,"isOffset":false,"isSlot":false,"src":"19241:15:1","valueSize":1},{"declaration":792,"isOffset":false,"isSlot":false,"src":"19187:19:1","valueSize":1},{"declaration":792,"isOffset":false,"isSlot":false,"src":"19266:19:1","valueSize":1},{"declaration":798,"isOffset":false,"isSlot":true,"src":"19210:18:1","suffix":"slot","valueSize":1}],"id":803,"nodeType":"InlineAssembly","src":"19164:132:1"}]},"documentation":{"id":787,"nodeType":"StructuredDocumentation","src":"18726:97:1","text":" @dev Returns the storage slot and value for the approved address of `tokenId`."},"id":805,"implemented":true,"kind":"function","modifiers":[],"name":"_getApprovedSlotAndAddress","nameLocation":"18837:26:1","nodeType":"FunctionDefinition","parameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"tokenId","nameLocation":"18872:7:1","nodeType":"VariableDeclaration","scope":805,"src":"18864:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"18864:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18863:17:1"},"returnParameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"mutability":"mutable","name":"approvedAddressSlot","nameLocation":"18935:19:1","nodeType":"VariableDeclaration","scope":805,"src":"18927:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":791,"name":"uint256","nodeType":"ElementaryTypeName","src":"18927:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":794,"mutability":"mutable","name":"approvedAddress","nameLocation":"18964:15:1","nodeType":"VariableDeclaration","scope":805,"src":"18956:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":793,"name":"address","nodeType":"ElementaryTypeName","src":"18956:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18926:54:1"},"scope":1648,"src":"18828:474:1","stateMutability":"view","virtual":false,"visibility":"private"},{"baseFunctions":[1788],"body":{"id":949,"nodeType":"Block","src":"20030:2637:1","statements":[{"assignments":[817],"declarations":[{"constant":false,"id":817,"mutability":"mutable","name":"prevOwnershipPacked","nameLocation":"20048:19:1","nodeType":"VariableDeclaration","scope":949,"src":"20040:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":816,"name":"uint256","nodeType":"ElementaryTypeName","src":"20040:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":821,"initialValue":{"arguments":[{"id":819,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"20089:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":818,"name":"_packedOwnershipOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"20070:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20070:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20040:57:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":826,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"20128:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20120:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":824,"name":"uint160","nodeType":"ElementaryTypeName","src":"20120:7:1","typeDescriptions":{}}},"id":827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20120:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20112:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":822,"name":"address","nodeType":"ElementaryTypeName","src":"20112:7:1","typeDescriptions":{}}},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20112:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":829,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"20153:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20112:45:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":834,"nodeType":"IfStatement","src":"20108:86:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":831,"name":"TransferFromIncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"20166:26:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20166:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":833,"nodeType":"RevertStatement","src":"20159:35:1"}},{"assignments":[836,838],"declarations":[{"constant":false,"id":836,"mutability":"mutable","name":"approvedAddressSlot","nameLocation":"20214:19:1","nodeType":"VariableDeclaration","scope":949,"src":"20206:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":835,"name":"uint256","nodeType":"ElementaryTypeName","src":"20206:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":838,"mutability":"mutable","name":"approvedAddress","nameLocation":"20243:15:1","nodeType":"VariableDeclaration","scope":949,"src":"20235:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":837,"name":"address","nodeType":"ElementaryTypeName","src":"20235:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":842,"initialValue":{"arguments":[{"id":840,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"20289:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":839,"name":"_getApprovedSlotAndAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"20262:26:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$","typeString":"function (uint256) view returns (uint256,address)"}},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20262:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_address_$","typeString":"tuple(uint256,address)"}},"nodeType":"VariableDeclarationStatement","src":"20205:92:1"},{"condition":{"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"20393:69:1","subExpression":{"arguments":[{"id":844,"name":"approvedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"20419:15:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":845,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"20436:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":846,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"20442:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20442:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":843,"name":"_isSenderApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"20394:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address,address) pure returns (bool)"}},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20394:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":860,"nodeType":"IfStatement","src":"20389:179:1","trueBody":{"condition":{"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"20480:44:1","subExpression":{"arguments":[{"id":851,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"20498:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":852,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"20504:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20504:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":850,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"20481:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20481:43:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":859,"nodeType":"IfStatement","src":"20476:92:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":856,"name":"TransferCallerNotOwnerNorApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"20533:33:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20533:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":858,"nodeType":"RevertStatement","src":"20526:42:1"}}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":861,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"20583:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20597:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20589:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":862,"name":"address","nodeType":"ElementaryTypeName","src":"20589:7:1","typeDescriptions":{}}},"id":865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20589:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20583:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":870,"nodeType":"IfStatement","src":"20579:52:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":867,"name":"TransferToZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"20608:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20608:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":869,"nodeType":"RevertStatement","src":"20601:30:1"}},{"expression":{"arguments":[{"id":872,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"20664:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":873,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"20670:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":874,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"20674:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20683:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":871,"name":"_beforeTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"20642:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20642:43:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":877,"nodeType":"ExpressionStatement","src":"20642:43:1"},{"AST":{"nodeType":"YulBlock","src":"20757:181:1","statements":[{"body":{"nodeType":"YulBlock","src":"20790:138:1","statements":[{"expression":{"arguments":[{"name":"approvedAddressSlot","nodeType":"YulIdentifier","src":"20891:19:1"},{"kind":"number","nodeType":"YulLiteral","src":"20912:1:1","type":"","value":"0"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20884:6:1"},"nodeType":"YulFunctionCall","src":"20884:30:1"},"nodeType":"YulExpressionStatement","src":"20884:30:1"}]},"condition":{"name":"approvedAddress","nodeType":"YulIdentifier","src":"20774:15:1"},"nodeType":"YulIf","src":"20771:157:1"}]},"evmVersion":"london","externalReferences":[{"declaration":838,"isOffset":false,"isSlot":false,"src":"20774:15:1","valueSize":1},{"declaration":836,"isOffset":false,"isSlot":false,"src":"20891:19:1","valueSize":1}],"id":878,"nodeType":"InlineAssembly","src":"20748:190:1"},{"id":935,"nodeType":"UncheckedBlock","src":"21205:1361:1","statements":[{"expression":{"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"21298:26:1","subExpression":{"baseExpression":{"id":879,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"21300:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":881,"indexExpression":{"id":880,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"21319:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"21300:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":883,"nodeType":"ExpressionStatement","src":"21298:26:1"},{"expression":{"id":887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"21366:24:1","subExpression":{"baseExpression":{"id":884,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"21368:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":886,"indexExpression":{"id":885,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"21387:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"21368:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":888,"nodeType":"ExpressionStatement","src":"21366:24:1"},{"expression":{"id":902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":889,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"21654:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":891,"indexExpression":{"id":890,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"21672:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"21654:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":893,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"21719:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":894,"name":"_BITMASK_NEXT_INITIALIZED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"21739:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"id":896,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"21782:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":897,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"21788:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":898,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"21792:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":895,"name":"_nextExtraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"21767:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21767:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21739:73:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":892,"name":"_packOwnershipData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"21683:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21683:143:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21654:172:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":903,"nodeType":"ExpressionStatement","src":"21654:172:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":904,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"21943:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":905,"name":"_BITMASK_NEXT_INITIALIZED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"21965:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21943:47:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21994:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21943:52:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":934,"nodeType":"IfStatement","src":"21939:617:1","trueBody":{"id":933,"nodeType":"Block","src":"21997:559:1","statements":[{"assignments":[910],"declarations":[{"constant":false,"id":910,"mutability":"mutable","name":"nextTokenId","nameLocation":"22023:11:1","nodeType":"VariableDeclaration","scope":933,"src":"22015:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":909,"name":"uint256","nodeType":"ElementaryTypeName","src":"22015:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":914,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":911,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"22037:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22047:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22037:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22015:33:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":915,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"22168:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":917,"indexExpression":{"id":916,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"22186:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22168:30:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22202:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22168:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":932,"nodeType":"IfStatement","src":"22164:378:1","trueBody":{"id":931,"nodeType":"Block","src":"22205:337:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":920,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"22289:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":921,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"22304:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22289:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":930,"nodeType":"IfStatement","src":"22285:239:1","trueBody":{"id":929,"nodeType":"Block","src":"22319:205:1","statements":[{"expression":{"id":927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":923,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"22449:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":925,"indexExpression":{"id":924,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"22467:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"22449:30:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":926,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"22482:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22449:52:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":928,"nodeType":"ExpressionStatement","src":"22449:52:1"}]}}]}}]}}]},{"eventCall":{"arguments":[{"id":937,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"22590:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":938,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"22596:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":939,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"22600:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":936,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"22581:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22581:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":941,"nodeType":"EmitStatement","src":"22576:32:1"},{"expression":{"arguments":[{"id":943,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"22639:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":944,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"22645:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":945,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"22649:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22658:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":942,"name":"_afterTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"22618:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22618:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":948,"nodeType":"ExpressionStatement","src":"22618:42:1"}]},"documentation":{"id":806,"nodeType":"StructuredDocumentation","src":"19495:403:1","text":" @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":950,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"19912:12:1","nodeType":"FunctionDefinition","overrides":{"id":814,"nodeType":"OverrideSpecifier","overrides":[],"src":"20021:8:1"},"parameters":{"id":813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"from","nameLocation":"19942:4:1","nodeType":"VariableDeclaration","scope":950,"src":"19934:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"19934:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":810,"mutability":"mutable","name":"to","nameLocation":"19964:2:1","nodeType":"VariableDeclaration","scope":950,"src":"19956:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":809,"name":"address","nodeType":"ElementaryTypeName","src":"19956:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":812,"mutability":"mutable","name":"tokenId","nameLocation":"19984:7:1","nodeType":"VariableDeclaration","scope":950,"src":"19976:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":811,"name":"uint256","nodeType":"ElementaryTypeName","src":"19976:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19924:73:1"},"returnParameters":{"id":815,"nodeType":"ParameterList","parameters":[],"src":"20030:0:1"},"scope":1648,"src":"19903:2764:1","stateMutability":"payable","virtual":true,"visibility":"public"},{"baseFunctions":[1778],"body":{"id":968,"nodeType":"Block","src":"22889:56:1","statements":[{"expression":{"arguments":[{"id":962,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"22916:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":963,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"22922:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":964,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"22926:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22935:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":961,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[969,1007],"referencedDeclaration":1007,"src":"22899:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22899:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":967,"nodeType":"ExpressionStatement","src":"22899:39:1"}]},"documentation":{"id":951,"nodeType":"StructuredDocumentation","src":"22673:80:1","text":" @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."},"functionSelector":"42842e0e","id":969,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"22767:16:1","nodeType":"FunctionDefinition","overrides":{"id":959,"nodeType":"OverrideSpecifier","overrides":[],"src":"22880:8:1"},"parameters":{"id":958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"from","nameLocation":"22801:4:1","nodeType":"VariableDeclaration","scope":969,"src":"22793:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"22793:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":955,"mutability":"mutable","name":"to","nameLocation":"22823:2:1","nodeType":"VariableDeclaration","scope":969,"src":"22815:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":954,"name":"address","nodeType":"ElementaryTypeName","src":"22815:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":957,"mutability":"mutable","name":"tokenId","nameLocation":"22843:7:1","nodeType":"VariableDeclaration","scope":969,"src":"22835:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":956,"name":"uint256","nodeType":"ElementaryTypeName","src":"22835:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22783:73:1"},"returnParameters":{"id":960,"nodeType":"ParameterList","parameters":[],"src":"22889:0:1"},"scope":1648,"src":"22758:187:1","stateMutability":"payable","virtual":true,"visibility":"public"},{"baseFunctions":[1768],"body":{"id":1006,"nodeType":"Block","src":"23685:237:1","statements":[{"expression":{"arguments":[{"id":983,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"23708:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":984,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"23714:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":985,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"23718:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":982,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"23695:12:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23695:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":987,"nodeType":"ExpressionStatement","src":"23695:31:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":988,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"23740:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"23740:7:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"23740:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23758:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23740:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1005,"nodeType":"IfStatement","src":"23736:180:1","trueBody":{"condition":{"id":999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"23777:57:1","subExpression":{"arguments":[{"id":994,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"23809:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":995,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"23815:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":996,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"23819:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":997,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"23828:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":993,"name":"_checkContractOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"23778:30:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23778:56:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1004,"nodeType":"IfStatement","src":"23773:143:1","trueBody":{"id":1003,"nodeType":"Block","src":"23836:80:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1000,"name":"TransferToNonERC721ReceiverImplementer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"23861:38:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23861:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1002,"nodeType":"RevertStatement","src":"23854:47:1"}]}}}]},"documentation":{"id":970,"nodeType":"StructuredDocumentation","src":"22951:570:1","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1007,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"23535:16:1","nodeType":"FunctionDefinition","overrides":{"id":980,"nodeType":"OverrideSpecifier","overrides":[],"src":"23676:8:1"},"parameters":{"id":979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":972,"mutability":"mutable","name":"from","nameLocation":"23569:4:1","nodeType":"VariableDeclaration","scope":1007,"src":"23561:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"23561:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":974,"mutability":"mutable","name":"to","nameLocation":"23591:2:1","nodeType":"VariableDeclaration","scope":1007,"src":"23583:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":973,"name":"address","nodeType":"ElementaryTypeName","src":"23583:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":976,"mutability":"mutable","name":"tokenId","nameLocation":"23611:7:1","nodeType":"VariableDeclaration","scope":1007,"src":"23603:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":975,"name":"uint256","nodeType":"ElementaryTypeName","src":"23603:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":978,"mutability":"mutable","name":"_data","nameLocation":"23641:5:1","nodeType":"VariableDeclaration","scope":1007,"src":"23628:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":977,"name":"bytes","nodeType":"ElementaryTypeName","src":"23628:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"23551:101:1"},"returnParameters":{"id":981,"nodeType":"ParameterList","parameters":[],"src":"23685:0:1"},"scope":1648,"src":"23526:396:1","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":1019,"nodeType":"Block","src":"24718:2:1","statements":[]},"documentation":{"id":1008,"nodeType":"StructuredDocumentation","src":"23928:633:1","text":" @dev Hook that is called before a set of serially-ordered token IDs\n are about to be transferred. This includes minting.\n And also called before burning one token.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."},"id":1020,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfers","nameLocation":"24575:21:1","nodeType":"FunctionDefinition","parameters":{"id":1017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1010,"mutability":"mutable","name":"from","nameLocation":"24614:4:1","nodeType":"VariableDeclaration","scope":1020,"src":"24606:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1009,"name":"address","nodeType":"ElementaryTypeName","src":"24606:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1012,"mutability":"mutable","name":"to","nameLocation":"24636:2:1","nodeType":"VariableDeclaration","scope":1020,"src":"24628:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1011,"name":"address","nodeType":"ElementaryTypeName","src":"24628:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1014,"mutability":"mutable","name":"startTokenId","nameLocation":"24656:12:1","nodeType":"VariableDeclaration","scope":1020,"src":"24648:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1013,"name":"uint256","nodeType":"ElementaryTypeName","src":"24648:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1016,"mutability":"mutable","name":"quantity","nameLocation":"24686:8:1","nodeType":"VariableDeclaration","scope":1020,"src":"24678:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1015,"name":"uint256","nodeType":"ElementaryTypeName","src":"24678:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24596:104:1"},"returnParameters":{"id":1018,"nodeType":"ParameterList","parameters":[],"src":"24718:0:1"},"scope":1648,"src":"24566:154:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1032,"nodeType":"Block","src":"25518:2:1","statements":[]},"documentation":{"id":1021,"nodeType":"StructuredDocumentation","src":"24726:636:1","text":" @dev Hook that is called after a set of serially-ordered token IDs\n have been transferred. This includes minting.\n And also called after one token has been burned.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."},"id":1033,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfers","nameLocation":"25376:20:1","nodeType":"FunctionDefinition","parameters":{"id":1030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1023,"mutability":"mutable","name":"from","nameLocation":"25414:4:1","nodeType":"VariableDeclaration","scope":1033,"src":"25406:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1022,"name":"address","nodeType":"ElementaryTypeName","src":"25406:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1025,"mutability":"mutable","name":"to","nameLocation":"25436:2:1","nodeType":"VariableDeclaration","scope":1033,"src":"25428:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1024,"name":"address","nodeType":"ElementaryTypeName","src":"25428:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1027,"mutability":"mutable","name":"startTokenId","nameLocation":"25456:12:1","nodeType":"VariableDeclaration","scope":1033,"src":"25448:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1026,"name":"uint256","nodeType":"ElementaryTypeName","src":"25448:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1029,"mutability":"mutable","name":"quantity","nameLocation":"25486:8:1","nodeType":"VariableDeclaration","scope":1033,"src":"25478:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1028,"name":"uint256","nodeType":"ElementaryTypeName","src":"25478:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25396:104:1"},"returnParameters":{"id":1031,"nodeType":"ParameterList","parameters":[],"src":"25518:0:1"},"scope":1648,"src":"25367:153:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1087,"nodeType":"Block","src":"26112:533:1","statements":[{"clauses":[{"block":{"id":1068,"nodeType":"Block","src":"26261:96:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1060,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"26282:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"arguments":[{"id":1062,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"26317:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1061,"name":"ERC721A__IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"26292:24:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721A__IERC721Receiver_$43_$","typeString":"type(contract ERC721A__IERC721Receiver)"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26292:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC721A__IERC721Receiver_$43","typeString":"contract ERC721A__IERC721Receiver"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":42,"src":"26292:45:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"26292:54:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"26282:64:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1046,"id":1067,"nodeType":"Return","src":"26275:71:1"}]},"errorName":"","id":1069,"nodeType":"TryCatchClause","parameters":{"id":1059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1058,"mutability":"mutable","name":"retval","nameLocation":"26244:6:1","nodeType":"VariableDeclaration","scope":1069,"src":"26237:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1057,"name":"bytes4","nodeType":"ElementaryTypeName","src":"26237:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"26223:37:1"},"src":"26215:142:1"},{"block":{"id":1084,"nodeType":"Block","src":"26386:253:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1073,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"26404:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"26404:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26421:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"26404:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1082,"nodeType":"Block","src":"26510:119:1","statements":[{"AST":{"nodeType":"YulBlock","src":"26537:78:1","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26570:2:1","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"26574:6:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26566:3:1"},"nodeType":"YulFunctionCall","src":"26566:15:1"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"26589:6:1"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"26583:5:1"},"nodeType":"YulFunctionCall","src":"26583:13:1"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26559:6:1"},"nodeType":"YulFunctionCall","src":"26559:38:1"},"nodeType":"YulExpressionStatement","src":"26559:38:1"}]},"evmVersion":"london","externalReferences":[{"declaration":1071,"isOffset":false,"isSlot":false,"src":"26574:6:1","valueSize":1},{"declaration":1071,"isOffset":false,"isSlot":false,"src":"26589:6:1","valueSize":1}],"id":1081,"nodeType":"InlineAssembly","src":"26528:87:1"}]},"id":1083,"nodeType":"IfStatement","src":"26400:229:1","trueBody":{"id":1080,"nodeType":"Block","src":"26424:80:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1077,"name":"TransferToNonERC721ReceiverImplementer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"26449:38:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26449:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1079,"nodeType":"RevertStatement","src":"26442:47:1"}]}}]},"errorName":"","id":1085,"nodeType":"TryCatchClause","parameters":{"id":1072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1071,"mutability":"mutable","name":"reason","nameLocation":"26378:6:1","nodeType":"VariableDeclaration","scope":1085,"src":"26365:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1070,"name":"bytes","nodeType":"ElementaryTypeName","src":"26365:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"26364:21:1"},"src":"26358:281:1"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1051,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"26172:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26172:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1053,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"26193:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1054,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"26199:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1055,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"26208:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1048,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"26151:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1047,"name":"ERC721A__IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"26126:24:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721A__IERC721Receiver_$43_$","typeString":"type(contract ERC721A__IERC721Receiver)"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26126:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC721A__IERC721Receiver_$43","typeString":"contract ERC721A__IERC721Receiver"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":42,"src":"26126:45:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"26126:88:1","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1086,"nodeType":"TryStatement","src":"26122:517:1"}]},"documentation":{"id":1034,"nodeType":"StructuredDocumentation","src":"25526:417:1","text":" @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n `from` - Previous owner of the given token ID.\n `to` - Target address that will receive the token.\n `tokenId` - Token ID to be transferred.\n `_data` - Optional data to send along with the call.\n Returns whether the call correctly returned the expected magic value."},"id":1088,"implemented":true,"kind":"function","modifiers":[],"name":"_checkContractOnERC721Received","nameLocation":"25957:30:1","nodeType":"FunctionDefinition","parameters":{"id":1043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1036,"mutability":"mutable","name":"from","nameLocation":"26005:4:1","nodeType":"VariableDeclaration","scope":1088,"src":"25997:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"25997:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1038,"mutability":"mutable","name":"to","nameLocation":"26027:2:1","nodeType":"VariableDeclaration","scope":1088,"src":"26019:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1037,"name":"address","nodeType":"ElementaryTypeName","src":"26019:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1040,"mutability":"mutable","name":"tokenId","nameLocation":"26047:7:1","nodeType":"VariableDeclaration","scope":1088,"src":"26039:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1039,"name":"uint256","nodeType":"ElementaryTypeName","src":"26039:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1042,"mutability":"mutable","name":"_data","nameLocation":"26077:5:1","nodeType":"VariableDeclaration","scope":1088,"src":"26064:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1041,"name":"bytes","nodeType":"ElementaryTypeName","src":"26064:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"25987:101:1"},"returnParameters":{"id":1046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1045,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1088,"src":"26106:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1044,"name":"bool","nodeType":"ElementaryTypeName","src":"26106:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"26105:6:1"},"scope":1648,"src":"25948:697:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1183,"nodeType":"Block","src":"27153:2840:1","statements":[{"assignments":[1097],"declarations":[{"constant":false,"id":1097,"mutability":"mutable","name":"startTokenId","nameLocation":"27171:12:1","nodeType":"VariableDeclaration","scope":1183,"src":"27163:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1096,"name":"uint256","nodeType":"ElementaryTypeName","src":"27163:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1099,"initialValue":{"id":1098,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"27186:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27163:36:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1100,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"27213:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27225:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"27213:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1106,"nodeType":"IfStatement","src":"27209:44:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1103,"name":"MintZeroQuantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"27235:16:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27235:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1105,"nodeType":"RevertStatement","src":"27228:25:1"}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27294:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27286:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1108,"name":"address","nodeType":"ElementaryTypeName","src":"27286:7:1","typeDescriptions":{}}},"id":1111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27286:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1112,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"27298:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1113,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"27302:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1114,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"27316:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1107,"name":"_beforeTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"27264:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"27264:61:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1116,"nodeType":"ExpressionStatement","src":"27264:61:1"},{"id":1172,"nodeType":"UncheckedBlock","src":"27508:2409:1","statements":[{"expression":{"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1117,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"27728:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1119,"indexExpression":{"id":1118,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"27747:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"27728:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1120,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"27754:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27767:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1122,"name":"_BITPOS_NUMBER_MINTED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"27772:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27767:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1124,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27766:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"31","id":1125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27797:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27766:32:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1127,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27765:34:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27754:45:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27728:71:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1130,"nodeType":"ExpressionStatement","src":"27728:71:1"},{"expression":{"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1131,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"28035:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1133,"indexExpression":{"id":1132,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"28053:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"28035:31:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1135,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"28105:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1137,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"28146:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1136,"name":"_nextInitializedFlag","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"28125:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28125:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"arguments":[{"hexValue":"30","id":1142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28181:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28173:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1140,"name":"address","nodeType":"ElementaryTypeName","src":"28173:7:1","typeDescriptions":{}}},"id":1143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28173:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1144,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"28185:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28189:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1139,"name":"_nextExtraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"28158:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28158:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28125:66:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1134,"name":"_packOwnershipData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"28069:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"28069:136:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28035:170:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1150,"nodeType":"ExpressionStatement","src":"28035:170:1"},{"assignments":[1152],"declarations":[{"constant":false,"id":1152,"mutability":"mutable","name":"toMasked","nameLocation":"28228:8:1","nodeType":"VariableDeclaration","scope":1172,"src":"28220:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1151,"name":"uint256","nodeType":"ElementaryTypeName","src":"28220:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1153,"nodeType":"VariableDeclarationStatement","src":"28220:16:1"},{"assignments":[1155],"declarations":[{"constant":false,"id":1155,"mutability":"mutable","name":"end","nameLocation":"28258:3:1","nodeType":"VariableDeclaration","scope":1172,"src":"28250:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1154,"name":"uint256","nodeType":"ElementaryTypeName","src":"28250:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1159,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1156,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"28264:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1157,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"28279:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28264:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28250:37:1"},{"AST":{"nodeType":"YulBlock","src":"28657:1157:1","statements":[{"nodeType":"YulAssignment","src":"28772:37:1","value":{"arguments":[{"name":"to","nodeType":"YulIdentifier","src":"28788:2:1"},{"name":"_BITMASK_ADDRESS","nodeType":"YulIdentifier","src":"28792:16:1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28784:3:1"},"nodeType":"YulFunctionCall","src":"28784:25:1"},"variableNames":[{"name":"toMasked","nodeType":"YulIdentifier","src":"28772:8:1"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28898:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28958:1:1","type":"","value":"0"},{"name":"_TRANSFER_EVENT_SIGNATURE","nodeType":"YulIdentifier","src":"29016:25:1"},{"kind":"number","nodeType":"YulLiteral","src":"29077:1:1","type":"","value":"0"},{"name":"toMasked","nodeType":"YulIdentifier","src":"29117:8:1"},{"name":"startTokenId","nodeType":"YulIdentifier","src":"29156:12:1"}],"functionName":{"name":"log4","nodeType":"YulIdentifier","src":"28872:4:1"},"nodeType":"YulFunctionCall","src":"28872:328:1"},"nodeType":"YulExpressionStatement","src":"28872:328:1"},{"body":{"nodeType":"YulBlock","src":"29633:167:1","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29728:1:1","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29731:1:1","type":"","value":"0"},{"name":"_TRANSFER_EVENT_SIGNATURE","nodeType":"YulIdentifier","src":"29734:25:1"},{"kind":"number","nodeType":"YulLiteral","src":"29761:1:1","type":"","value":"0"},{"name":"toMasked","nodeType":"YulIdentifier","src":"29764:8:1"},{"name":"tokenId","nodeType":"YulIdentifier","src":"29774:7:1"}],"functionName":{"name":"log4","nodeType":"YulIdentifier","src":"29723:4:1"},"nodeType":"YulFunctionCall","src":"29723:59:1"},"nodeType":"YulExpressionStatement","src":"29723:59:1"}]},"condition":{"arguments":[{"arguments":[{"name":"tokenId","nodeType":"YulIdentifier","src":"29551:7:1"},{"name":"end","nodeType":"YulIdentifier","src":"29560:3:1"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"29548:2:1"},"nodeType":"YulFunctionCall","src":"29548:16:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"29541:6:1"},"nodeType":"YulFunctionCall","src":"29541:24:1"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"29566:66:1","statements":[{"nodeType":"YulAssignment","src":"29588:26:1","value":{"arguments":[{"name":"tokenId","nodeType":"YulIdentifier","src":"29603:7:1"},{"kind":"number","nodeType":"YulLiteral","src":"29612:1:1","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29599:3:1"},"nodeType":"YulFunctionCall","src":"29599:15:1"},"variableNames":[{"name":"tokenId","nodeType":"YulIdentifier","src":"29588:7:1"}]}]},"pre":{"nodeType":"YulBlock","src":"29465:75:1","statements":[{"nodeType":"YulVariableDeclaration","src":"29487:35:1","value":{"arguments":[{"name":"startTokenId","nodeType":"YulIdentifier","src":"29506:12:1"},{"kind":"number","nodeType":"YulLiteral","src":"29520:1:1","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29502:3:1"},"nodeType":"YulFunctionCall","src":"29502:20:1"},"variables":[{"name":"tokenId","nodeType":"YulTypedName","src":"29491:7:1","type":""}]}]},"src":"29461:339:1"}]},"evmVersion":"london","externalReferences":[{"declaration":109,"isOffset":false,"isSlot":false,"src":"28792:16:1","valueSize":1},{"declaration":115,"isOffset":false,"isSlot":false,"src":"29016:25:1","valueSize":1},{"declaration":115,"isOffset":false,"isSlot":false,"src":"29734:25:1","valueSize":1},{"declaration":1155,"isOffset":false,"isSlot":false,"src":"29560:3:1","valueSize":1},{"declaration":1097,"isOffset":false,"isSlot":false,"src":"29156:12:1","valueSize":1},{"declaration":1097,"isOffset":false,"isSlot":false,"src":"29506:12:1","valueSize":1},{"declaration":1091,"isOffset":false,"isSlot":false,"src":"28788:2:1","valueSize":1},{"declaration":1152,"isOffset":false,"isSlot":false,"src":"28772:8:1","valueSize":1},{"declaration":1152,"isOffset":false,"isSlot":false,"src":"29117:8:1","valueSize":1},{"declaration":1152,"isOffset":false,"isSlot":false,"src":"29764:8:1","valueSize":1}],"id":1160,"nodeType":"InlineAssembly","src":"28648:1166:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1161,"name":"toMasked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"29831:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29843:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"29831:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1167,"nodeType":"IfStatement","src":"29827:45:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1164,"name":"MintToZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"29853:17:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29853:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1166,"nodeType":"RevertStatement","src":"29846:26:1"}},{"expression":{"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1168,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"29887:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1169,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"29903:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29887:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1171,"nodeType":"ExpressionStatement","src":"29887:19:1"}]},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29955:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29947:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1174,"name":"address","nodeType":"ElementaryTypeName","src":"29947:7:1","typeDescriptions":{}}},"id":1177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29947:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1178,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"29959:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1179,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"29963:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1180,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"29977:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1173,"name":"_afterTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"29926:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"29926:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1182,"nodeType":"ExpressionStatement","src":"29926:60:1"}]},"documentation":{"id":1089,"nodeType":"StructuredDocumentation","src":"26836:250:1","text":" @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event for each mint."},"id":1184,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"27100:5:1","nodeType":"FunctionDefinition","parameters":{"id":1094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1091,"mutability":"mutable","name":"to","nameLocation":"27114:2:1","nodeType":"VariableDeclaration","scope":1184,"src":"27106:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1090,"name":"address","nodeType":"ElementaryTypeName","src":"27106:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1093,"mutability":"mutable","name":"quantity","nameLocation":"27126:8:1","nodeType":"VariableDeclaration","scope":1184,"src":"27118:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1092,"name":"uint256","nodeType":"ElementaryTypeName","src":"27118:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27105:30:1"},"returnParameters":{"id":1095,"nodeType":"ParameterList","parameters":[],"src":"27153:0:1"},"scope":1648,"src":"27091:2902:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1295,"nodeType":"Block","src":"30902:1374:1","statements":[{"assignments":[1193],"declarations":[{"constant":false,"id":1193,"mutability":"mutable","name":"startTokenId","nameLocation":"30920:12:1","nodeType":"VariableDeclaration","scope":1295,"src":"30912:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1192,"name":"uint256","nodeType":"ElementaryTypeName","src":"30912:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1195,"initialValue":{"id":1194,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"30935:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30912:36:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1196,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"30962:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30976:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30968:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1197,"name":"address","nodeType":"ElementaryTypeName","src":"30968:7:1","typeDescriptions":{}}},"id":1200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30968:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"30962:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1205,"nodeType":"IfStatement","src":"30958:48:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1202,"name":"MintToZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"30987:17:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"30987:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1204,"nodeType":"RevertStatement","src":"30980:26:1"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1206,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"31020:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31032:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"31020:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1212,"nodeType":"IfStatement","src":"31016:44:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1209,"name":"MintZeroQuantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"31042:16:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31042:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1211,"nodeType":"RevertStatement","src":"31035:25:1"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1213,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"31074:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1214,"name":"_MAX_MINT_ERC2309_QUANTITY_LIMIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"31085:32:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31074:43:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1219,"nodeType":"IfStatement","src":"31070:89:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1216,"name":"MintERC2309QuantityExceedsLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"31126:31:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31126:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1218,"nodeType":"RevertStatement","src":"31119:40:1"}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31192:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1221,"name":"address","nodeType":"ElementaryTypeName","src":"31192:7:1","typeDescriptions":{}}},"id":1224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31192:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1225,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"31204:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1226,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"31208:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1227,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"31222:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1220,"name":"_beforeTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"31170:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31170:61:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1229,"nodeType":"ExpressionStatement","src":"31170:61:1"},{"id":1284,"nodeType":"UncheckedBlock","src":"31340:860:1","statements":[{"expression":{"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1230,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"31560:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1232,"indexExpression":{"id":1231,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"31579:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"31560:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1233,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"31586:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31599:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1235,"name":"_BITPOS_NUMBER_MINTED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60,"src":"31604:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31599:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1237,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"31598:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"31","id":1238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31629:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"31598:32:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1240,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"31597:34:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31586:45:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31560:71:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1243,"nodeType":"ExpressionStatement","src":"31560:71:1"},{"expression":{"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1244,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"31867:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1246,"indexExpression":{"id":1245,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"31885:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"31867:31:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1248,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"31937:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1250,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"31978:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1249,"name":"_nextInitializedFlag","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"31957:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31957:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"arguments":[{"hexValue":"30","id":1255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32013:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32005:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1253,"name":"address","nodeType":"ElementaryTypeName","src":"32005:7:1","typeDescriptions":{}}},"id":1256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32005:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1257,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"32017:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32021:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1252,"name":"_nextExtraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"31990:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31990:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31957:66:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1247,"name":"_packOwnershipData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"31901:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"31901:136:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31867:170:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1263,"nodeType":"ExpressionStatement","src":"31867:170:1"},{"eventCall":{"arguments":[{"id":1265,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"32077:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1266,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"32091:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1267,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"32106:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32091:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32117:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32091:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32128:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32120:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1271,"name":"address","nodeType":"ElementaryTypeName","src":"32120:7:1","typeDescriptions":{}}},"id":1274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32120:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1275,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"32132:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1264,"name":"ConsecutiveTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"32057:19:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address,address)"}},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32057:78:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1277,"nodeType":"EmitStatement","src":"32052:83:1"},{"expression":{"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1278,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"32150:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1279,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"32166:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1280,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"32181:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32166:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32150:39:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1283,"nodeType":"ExpressionStatement","src":"32150:39:1"}]},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32238:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32230:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1286,"name":"address","nodeType":"ElementaryTypeName","src":"32230:7:1","typeDescriptions":{}}},"id":1289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32230:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1290,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"32242:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1291,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"32246:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1292,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"32260:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1285,"name":"_afterTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"32209:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32209:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1294,"nodeType":"ExpressionStatement","src":"32209:60:1"}]},"documentation":{"id":1185,"nodeType":"StructuredDocumentation","src":"29999:829:1","text":" @dev Mints `quantity` tokens and transfers them to `to`.\n This function is intended for efficient minting only during contract creation.\n It emits only one {ConsecutiveTransfer} as defined in\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n instead of a sequence of {Transfer} event(s).\n Calling this function outside of contract creation WILL make your contract\n non-compliant with the ERC721 standard.\n For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n {ConsecutiveTransfer} event is only permissible during contract creation.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {ConsecutiveTransfer} event."},"id":1296,"implemented":true,"kind":"function","modifiers":[],"name":"_mintERC2309","nameLocation":"30842:12:1","nodeType":"FunctionDefinition","parameters":{"id":1190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1187,"mutability":"mutable","name":"to","nameLocation":"30863:2:1","nodeType":"VariableDeclaration","scope":1296,"src":"30855:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1186,"name":"address","nodeType":"ElementaryTypeName","src":"30855:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1189,"mutability":"mutable","name":"quantity","nameLocation":"30875:8:1","nodeType":"VariableDeclaration","scope":1296,"src":"30867:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1188,"name":"uint256","nodeType":"ElementaryTypeName","src":"30867:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30854:30:1"},"returnParameters":{"id":1191,"nodeType":"ParameterList","parameters":[],"src":"30902:0:1"},"scope":1648,"src":"30833:1443:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1357,"nodeType":"Block","src":"32791:553:1","statements":[{"expression":{"arguments":[{"id":1307,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"32807:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1308,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"32811:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1306,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"32801:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"32801:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1310,"nodeType":"ExpressionStatement","src":"32801:19:1"},{"id":1356,"nodeType":"UncheckedBlock","src":"32831:507:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1311,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"32859:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"32859:7:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"32859:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32877:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"32859:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1355,"nodeType":"IfStatement","src":"32855:473:1","trueBody":{"id":1354,"nodeType":"Block","src":"32880:448:1","statements":[{"assignments":[1317],"declarations":[{"constant":false,"id":1317,"mutability":"mutable","name":"end","nameLocation":"32906:3:1","nodeType":"VariableDeclaration","scope":1354,"src":"32898:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1316,"name":"uint256","nodeType":"ElementaryTypeName","src":"32898:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1319,"initialValue":{"id":1318,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"32912:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"32898:27:1"},{"assignments":[1321],"declarations":[{"constant":false,"id":1321,"mutability":"mutable","name":"index","nameLocation":"32951:5:1","nodeType":"VariableDeclaration","scope":1354,"src":"32943:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1320,"name":"uint256","nodeType":"ElementaryTypeName","src":"32943:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1325,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1322,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"32959:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1323,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"32965:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32959:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"32943:30:1"},{"body":{"id":1342,"nodeType":"Block","src":"32994:205:1","statements":[{"condition":{"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"33020:63:1","subExpression":{"arguments":[{"arguments":[{"hexValue":"30","id":1329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33060:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33052:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1327,"name":"address","nodeType":"ElementaryTypeName","src":"33052:7:1","typeDescriptions":{}}},"id":1330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33052:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1331,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"33064:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"33068:7:1","subExpression":{"id":1332,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"33068:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1334,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"33077:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1326,"name":"_checkContractOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"33021:30:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33021:62:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1341,"nodeType":"IfStatement","src":"33016:165:1","trueBody":{"id":1340,"nodeType":"Block","src":"33085:96:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1337,"name":"TransferToNonERC721ReceiverImplementer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"33118:38:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33118:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1339,"nodeType":"RevertStatement","src":"33111:47:1"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1343,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"33207:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1344,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"33215:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"33207:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1346,"nodeType":"DoWhileStatement","src":"32991:229:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1347,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"33283:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1348,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"33300:3:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"33283:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1353,"nodeType":"IfStatement","src":"33279:34:1","trueBody":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1350,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"33305:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33305:8:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1352,"nodeType":"ExpressionStatement","src":"33305:8:1"}}]}}]}]},"documentation":{"id":1297,"nodeType":"StructuredDocumentation","src":"32282:388:1","text":" @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n See {_mint}.\n Emits a {Transfer} event for each mint."},"id":1358,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"32684:9:1","nodeType":"FunctionDefinition","parameters":{"id":1304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1299,"mutability":"mutable","name":"to","nameLocation":"32711:2:1","nodeType":"VariableDeclaration","scope":1358,"src":"32703:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1298,"name":"address","nodeType":"ElementaryTypeName","src":"32703:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1301,"mutability":"mutable","name":"quantity","nameLocation":"32731:8:1","nodeType":"VariableDeclaration","scope":1358,"src":"32723:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1300,"name":"uint256","nodeType":"ElementaryTypeName","src":"32723:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1303,"mutability":"mutable","name":"_data","nameLocation":"32762:5:1","nodeType":"VariableDeclaration","scope":1358,"src":"32749:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1302,"name":"bytes","nodeType":"ElementaryTypeName","src":"32749:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"32693:80:1"},"returnParameters":{"id":1305,"nodeType":"ParameterList","parameters":[],"src":"32791:0:1"},"scope":1648,"src":"32675:669:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1372,"nodeType":"Block","src":"33489:44:1","statements":[{"expression":{"arguments":[{"id":1367,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"33509:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1368,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"33513:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33523:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1366,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1358,1373],"referencedDeclaration":1358,"src":"33499:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33499:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1371,"nodeType":"ExpressionStatement","src":"33499:27:1"}]},"documentation":{"id":1359,"nodeType":"StructuredDocumentation","src":"33350:68:1","text":" @dev Equivalent to `_safeMint(to, quantity, '')`."},"id":1373,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"33432:9:1","nodeType":"FunctionDefinition","parameters":{"id":1364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1361,"mutability":"mutable","name":"to","nameLocation":"33450:2:1","nodeType":"VariableDeclaration","scope":1373,"src":"33442:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1360,"name":"address","nodeType":"ElementaryTypeName","src":"33442:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1363,"mutability":"mutable","name":"quantity","nameLocation":"33462:8:1","nodeType":"VariableDeclaration","scope":1373,"src":"33454:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1362,"name":"uint256","nodeType":"ElementaryTypeName","src":"33454:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"33441:30:1"},"returnParameters":{"id":1365,"nodeType":"ParameterList","parameters":[],"src":"33489:0:1"},"scope":1648,"src":"33423:110:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1384,"nodeType":"Block","src":"33840:38:1","statements":[{"expression":{"arguments":[{"id":1380,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"33856:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"33865:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1379,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[1385,1537],"referencedDeclaration":1537,"src":"33850:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,bool)"}},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"33850:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1383,"nodeType":"ExpressionStatement","src":"33850:21:1"}]},"documentation":{"id":1374,"nodeType":"StructuredDocumentation","src":"33724:62:1","text":" @dev Equivalent to `_burn(tokenId, false)`."},"id":1385,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"33800:5:1","nodeType":"FunctionDefinition","parameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1376,"mutability":"mutable","name":"tokenId","nameLocation":"33814:7:1","nodeType":"VariableDeclaration","scope":1385,"src":"33806:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1375,"name":"uint256","nodeType":"ElementaryTypeName","src":"33806:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"33805:17:1"},"returnParameters":{"id":1378,"nodeType":"ParameterList","parameters":[],"src":"33840:0:1"},"scope":1648,"src":"33791:87:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1536,"nodeType":"Block","src":"34164:2946:1","statements":[{"assignments":[1394],"declarations":[{"constant":false,"id":1394,"mutability":"mutable","name":"prevOwnershipPacked","nameLocation":"34182:19:1","nodeType":"VariableDeclaration","scope":1536,"src":"34174:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1393,"name":"uint256","nodeType":"ElementaryTypeName","src":"34174:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1398,"initialValue":{"arguments":[{"id":1396,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"34223:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1395,"name":"_packedOwnershipOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"34204:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34204:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"34174:57:1"},{"assignments":[1400],"declarations":[{"constant":false,"id":1400,"mutability":"mutable","name":"from","nameLocation":"34250:4:1","nodeType":"VariableDeclaration","scope":1536,"src":"34242:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1399,"name":"address","nodeType":"ElementaryTypeName","src":"34242:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1408,"initialValue":{"arguments":[{"arguments":[{"id":1405,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"34273:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34265:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1403,"name":"uint160","nodeType":"ElementaryTypeName","src":"34265:7:1","typeDescriptions":{}}},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34265:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34257:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1401,"name":"address","nodeType":"ElementaryTypeName","src":"34257:7:1","typeDescriptions":{}}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34257:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"34242:52:1"},{"assignments":[1410,1412],"declarations":[{"constant":false,"id":1410,"mutability":"mutable","name":"approvedAddressSlot","nameLocation":"34314:19:1","nodeType":"VariableDeclaration","scope":1536,"src":"34306:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1409,"name":"uint256","nodeType":"ElementaryTypeName","src":"34306:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1412,"mutability":"mutable","name":"approvedAddress","nameLocation":"34343:15:1","nodeType":"VariableDeclaration","scope":1536,"src":"34335:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1411,"name":"address","nodeType":"ElementaryTypeName","src":"34335:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1416,"initialValue":{"arguments":[{"id":1414,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"34389:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1413,"name":"_getApprovedSlotAndAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"34362:26:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$","typeString":"function (uint256) view returns (uint256,address)"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34362:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_address_$","typeString":"tuple(uint256,address)"}},"nodeType":"VariableDeclarationStatement","src":"34305:92:1"},{"condition":{"id":1417,"name":"approvalCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"34412:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1437,"nodeType":"IfStatement","src":"34408:312:1","trueBody":{"id":1436,"nodeType":"Block","src":"34427:293:1","statements":[{"condition":{"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"34530:69:1","subExpression":{"arguments":[{"id":1419,"name":"approvedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"34556:15:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1420,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"34573:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1421,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"34579:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34579:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1418,"name":"_isSenderApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"34531:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address,address) pure returns (bool)"}},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34531:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1435,"nodeType":"IfStatement","src":"34526:183:1","trueBody":{"condition":{"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"34621:44:1","subExpression":{"arguments":[{"id":1426,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"34639:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1427,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"34645:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34645:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1425,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"34622:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34622:43:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1434,"nodeType":"IfStatement","src":"34617:92:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1431,"name":"TransferCallerNotOwnerNorApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"34674:33:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34674:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1433,"nodeType":"RevertStatement","src":"34667:42:1"}}}]}},{"expression":{"arguments":[{"id":1439,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"34752:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34766:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34758:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1440,"name":"address","nodeType":"ElementaryTypeName","src":"34758:7:1","typeDescriptions":{}}},"id":1443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34758:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1444,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"34770:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34779:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1438,"name":"_beforeTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"34730:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"34730:51:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1447,"nodeType":"ExpressionStatement","src":"34730:51:1"},{"AST":{"nodeType":"YulBlock","src":"34853:181:1","statements":[{"body":{"nodeType":"YulBlock","src":"34886:138:1","statements":[{"expression":{"arguments":[{"name":"approvedAddressSlot","nodeType":"YulIdentifier","src":"34987:19:1"},{"kind":"number","nodeType":"YulLiteral","src":"35008:1:1","type":"","value":"0"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"34980:6:1"},"nodeType":"YulFunctionCall","src":"34980:30:1"},"nodeType":"YulExpressionStatement","src":"34980:30:1"}]},"condition":{"name":"approvedAddress","nodeType":"YulIdentifier","src":"34870:15:1"},"nodeType":"YulIf","src":"34867:157:1"}]},"evmVersion":"london","externalReferences":[{"declaration":1412,"isOffset":false,"isSlot":false,"src":"34870:15:1","valueSize":1},{"declaration":1410,"isOffset":false,"isSlot":false,"src":"34987:19:1","valueSize":1}],"id":1448,"nodeType":"InlineAssembly","src":"34844:190:1"},{"id":1512,"nodeType":"UncheckedBlock","src":"35301:1545:1","statements":[{"expression":{"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1449,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"35613:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1451,"indexExpression":{"id":1450,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"35632:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"35613:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35642:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1453,"name":"_BITPOS_NUMBER_BURNED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"35647:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35642:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1455,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"35641:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35672:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"35641:32:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35613:60:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1459,"nodeType":"ExpressionStatement","src":"35613:60:1"},{"expression":{"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1460,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"35904:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1462,"indexExpression":{"id":1461,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"35922:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"35904:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1464,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"35969:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":1465,"name":"_BITMASK_BURNED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"35992:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":1466,"name":"_BITMASK_NEXT_INITIALIZED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"36010:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35992:43:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1468,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"35991:45:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"id":1470,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"36054:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36068:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"36060:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1471,"name":"address","nodeType":"ElementaryTypeName","src":"36060:7:1","typeDescriptions":{}}},"id":1474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"36060:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1475,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"36072:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1469,"name":"_nextExtraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"36039:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"36039:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35991:101:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1463,"name":"_packOwnershipData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"35933:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"35933:173:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35904:202:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1480,"nodeType":"ExpressionStatement","src":"35904:202:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1481,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"36223:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1482,"name":"_BITMASK_NEXT_INITIALIZED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"36245:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"36223:47:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36274:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"36223:52:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1511,"nodeType":"IfStatement","src":"36219:617:1","trueBody":{"id":1510,"nodeType":"Block","src":"36277:559:1","statements":[{"assignments":[1487],"declarations":[{"constant":false,"id":1487,"mutability":"mutable","name":"nextTokenId","nameLocation":"36303:11:1","nodeType":"VariableDeclaration","scope":1510,"src":"36295:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1486,"name":"uint256","nodeType":"ElementaryTypeName","src":"36295:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1491,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1488,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"36317:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36327:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"36317:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"36295:33:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1492,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"36448:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1494,"indexExpression":{"id":1493,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"36466:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"36448:30:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36482:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"36448:35:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1509,"nodeType":"IfStatement","src":"36444:378:1","trueBody":{"id":1508,"nodeType":"Block","src":"36485:337:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1497,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"36569:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1498,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"36584:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"36569:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1507,"nodeType":"IfStatement","src":"36565:239:1","trueBody":{"id":1506,"nodeType":"Block","src":"36599:205:1","statements":[{"expression":{"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1500,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"36729:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1502,"indexExpression":{"id":1501,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"36747:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"36729:30:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1503,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"36762:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"36729:52:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1505,"nodeType":"ExpressionStatement","src":"36729:52:1"}]}}]}}]}}]},{"eventCall":{"arguments":[{"id":1514,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"36870:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36884:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"36876:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1515,"name":"address","nodeType":"ElementaryTypeName","src":"36876:7:1","typeDescriptions":{}}},"id":1518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"36876:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1519,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"36888:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1513,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"36861:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"36861:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1521,"nodeType":"EmitStatement","src":"36856:40:1"},{"expression":{"arguments":[{"id":1523,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"36927:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36941:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"36933:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1524,"name":"address","nodeType":"ElementaryTypeName","src":"36933:7:1","typeDescriptions":{}}},"id":1527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"36933:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1528,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"36945:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36954:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1522,"name":"_afterTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"36906:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"36906:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1531,"nodeType":"ExpressionStatement","src":"36906:50:1"},{"id":1535,"nodeType":"UncheckedBlock","src":"37055:49:1","statements":[{"expression":{"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"37079:14:1","subExpression":{"id":1532,"name":"_burnCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"37079:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1534,"nodeType":"ExpressionStatement","src":"37079:14:1"}]}]},"documentation":{"id":1386,"nodeType":"StructuredDocumentation","src":"33884:206:1","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1537,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"34104:5:1","nodeType":"FunctionDefinition","parameters":{"id":1391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1388,"mutability":"mutable","name":"tokenId","nameLocation":"34118:7:1","nodeType":"VariableDeclaration","scope":1537,"src":"34110:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1387,"name":"uint256","nodeType":"ElementaryTypeName","src":"34110:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1390,"mutability":"mutable","name":"approvalCheck","nameLocation":"34132:13:1","nodeType":"VariableDeclaration","scope":1537,"src":"34127:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1389,"name":"bool","nodeType":"ElementaryTypeName","src":"34127:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34109:37:1"},"returnParameters":{"id":1392,"nodeType":"ParameterList","parameters":[],"src":"34164:0:1"},"scope":1648,"src":"34095:3015:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1580,"nodeType":"Block","src":"37468:447:1","statements":[{"assignments":[1546],"declarations":[{"constant":false,"id":1546,"mutability":"mutable","name":"packed","nameLocation":"37486:6:1","nodeType":"VariableDeclaration","scope":1580,"src":"37478:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1545,"name":"uint256","nodeType":"ElementaryTypeName","src":"37478:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1550,"initialValue":{"baseExpression":{"id":1547,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"37495:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1549,"indexExpression":{"id":1548,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"37513:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"37495:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"37478:41:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1551,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"37533:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"37543:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"37533:11:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1557,"nodeType":"IfStatement","src":"37529:61:1","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1554,"name":"OwnershipNotInitializedForExtraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"37553:35:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"37553:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1556,"nodeType":"RevertStatement","src":"37546:44:1"}},{"assignments":[1559],"declarations":[{"constant":false,"id":1559,"mutability":"mutable","name":"extraDataCasted","nameLocation":"37608:15:1","nodeType":"VariableDeclaration","scope":1580,"src":"37600:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1558,"name":"uint256","nodeType":"ElementaryTypeName","src":"37600:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1560,"nodeType":"VariableDeclarationStatement","src":"37600:23:1"},{"AST":{"nodeType":"YulBlock","src":"37712:52:1","statements":[{"nodeType":"YulAssignment","src":"37726:28:1","value":{"name":"extraData","nodeType":"YulIdentifier","src":"37745:9:1"},"variableNames":[{"name":"extraDataCasted","nodeType":"YulIdentifier","src":"37726:15:1"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1542,"isOffset":false,"isSlot":false,"src":"37745:9:1","valueSize":1},{"declaration":1559,"isOffset":false,"isSlot":false,"src":"37726:15:1","valueSize":1}],"id":1561,"nodeType":"InlineAssembly","src":"37703:61:1"},{"expression":{"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1562,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"37773:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1563,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"37783:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1564,"name":"_BITMASK_EXTRA_DATA_COMPLEMENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"37792:30:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"37783:39:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1566,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"37782:41:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1567,"name":"extraDataCasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"37827:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1568,"name":"_BITPOS_EXTRA_DATA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"37846:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"37827:37:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1570,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"37826:39:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"37782:83:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"37773:92:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1573,"nodeType":"ExpressionStatement","src":"37773:92:1"},{"expression":{"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1574,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"37875:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1576,"indexExpression":{"id":1575,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"37893:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"37875:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1577,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"37902:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"37875:33:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1579,"nodeType":"ExpressionStatement","src":"37875:33:1"}]},"documentation":{"id":1538,"nodeType":"StructuredDocumentation","src":"37304:84:1","text":" @dev Directly sets the extra data for the ownership data `index`."},"id":1581,"implemented":true,"kind":"function","modifiers":[],"name":"_setExtraDataAt","nameLocation":"37402:15:1","nodeType":"FunctionDefinition","parameters":{"id":1543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1540,"mutability":"mutable","name":"index","nameLocation":"37426:5:1","nodeType":"VariableDeclaration","scope":1581,"src":"37418:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1539,"name":"uint256","nodeType":"ElementaryTypeName","src":"37418:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1542,"mutability":"mutable","name":"extraData","nameLocation":"37440:9:1","nodeType":"VariableDeclaration","scope":1581,"src":"37433:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1541,"name":"uint24","nodeType":"ElementaryTypeName","src":"37433:6:1","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"37417:33:1"},"returnParameters":{"id":1544,"nodeType":"ParameterList","parameters":[],"src":"37468:0:1"},"scope":1648,"src":"37393:522:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1593,"nodeType":"Block","src":"38616:2:1","statements":[]},"documentation":{"id":1582,"nodeType":"StructuredDocumentation","src":"37921:549:1","text":" @dev Called during each token transfer to set the 24bit `extraData` field.\n Intended to be overridden by the cosumer contract.\n `previousExtraData` - the value of `extraData` before transfer.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."},"id":1594,"implemented":true,"kind":"function","modifiers":[],"name":"_extraData","nameLocation":"38484:10:1","nodeType":"FunctionDefinition","parameters":{"id":1589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1584,"mutability":"mutable","name":"from","nameLocation":"38512:4:1","nodeType":"VariableDeclaration","scope":1594,"src":"38504:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1583,"name":"address","nodeType":"ElementaryTypeName","src":"38504:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1586,"mutability":"mutable","name":"to","nameLocation":"38534:2:1","nodeType":"VariableDeclaration","scope":1594,"src":"38526:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1585,"name":"address","nodeType":"ElementaryTypeName","src":"38526:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1588,"mutability":"mutable","name":"previousExtraData","nameLocation":"38553:17:1","nodeType":"VariableDeclaration","scope":1594,"src":"38546:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1587,"name":"uint24","nodeType":"ElementaryTypeName","src":"38546:6:1","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"38494:82:1"},"returnParameters":{"id":1592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1591,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1594,"src":"38608:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1590,"name":"uint24","nodeType":"ElementaryTypeName","src":"38608:6:1","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"38607:8:1"},"scope":1648,"src":"38475:143:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1626,"nodeType":"Block","src":"38904:164:1","statements":[{"assignments":[1607],"declarations":[{"constant":false,"id":1607,"mutability":"mutable","name":"extraData","nameLocation":"38921:9:1","nodeType":"VariableDeclaration","scope":1626,"src":"38914:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1606,"name":"uint24","nodeType":"ElementaryTypeName","src":"38914:6:1","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"id":1614,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1610,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"38940:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":1611,"name":"_BITPOS_EXTRA_DATA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"38963:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"38940:41:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"38933:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":1608,"name":"uint24","nodeType":"ElementaryTypeName","src":"38933:6:1","typeDescriptions":{}}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"38933:49:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"VariableDeclarationStatement","src":"38914:68:1"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1618,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"39018:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1619,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"39024:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1620,"name":"extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"39028:9:1","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"}],"id":1617,"name":"_extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"39007:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_uint24_$","typeString":"function (address,address,uint24) view returns (uint24)"}},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"39007:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint24","typeString":"uint24"}],"id":1616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"38999:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1615,"name":"uint256","nodeType":"ElementaryTypeName","src":"38999:7:1","typeDescriptions":{}}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"38999:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1623,"name":"_BITPOS_EXTRA_DATA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"39043:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"38999:62:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1605,"id":1625,"nodeType":"Return","src":"38992:69:1"}]},"documentation":{"id":1595,"nodeType":"StructuredDocumentation","src":"38624:135:1","text":" @dev Returns the next extra data for the packed ownership data.\n The returned result is shifted into position."},"id":1627,"implemented":true,"kind":"function","modifiers":[],"name":"_nextExtraData","nameLocation":"38773:14:1","nodeType":"FunctionDefinition","parameters":{"id":1602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1597,"mutability":"mutable","name":"from","nameLocation":"38805:4:1","nodeType":"VariableDeclaration","scope":1627,"src":"38797:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1596,"name":"address","nodeType":"ElementaryTypeName","src":"38797:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1599,"mutability":"mutable","name":"to","nameLocation":"38827:2:1","nodeType":"VariableDeclaration","scope":1627,"src":"38819:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1598,"name":"address","nodeType":"ElementaryTypeName","src":"38819:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1601,"mutability":"mutable","name":"prevOwnershipPacked","nameLocation":"38847:19:1","nodeType":"VariableDeclaration","scope":1627,"src":"38839:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1600,"name":"uint256","nodeType":"ElementaryTypeName","src":"38839:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"38787:85:1"},"returnParameters":{"id":1605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1627,"src":"38895:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1603,"name":"uint256","nodeType":"ElementaryTypeName","src":"38895:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"38894:9:1"},"scope":1648,"src":"38764:304:1","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1636,"nodeType":"Block","src":"39506:34:1","statements":[{"expression":{"expression":{"id":1633,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"39523:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"39523:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1632,"id":1635,"nodeType":"Return","src":"39516:17:1"}]},"documentation":{"id":1628,"nodeType":"StructuredDocumentation","src":"39259:173:1","text":" @dev Returns the message sender (defaults to `msg.sender`).\n If you are writing GSN compatible contracts, you need to override this function."},"id":1637,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSenderERC721A","nameLocation":"39446:17:1","nodeType":"FunctionDefinition","parameters":{"id":1629,"nodeType":"ParameterList","parameters":[],"src":"39463:2:1"},"returnParameters":{"id":1632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1637,"src":"39497:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1630,"name":"address","nodeType":"ElementaryTypeName","src":"39497:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"39496:9:1"},"scope":1648,"src":"39437:103:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1646,"nodeType":"Block","src":"39721:1624:1","statements":[{"AST":{"nodeType":"YulBlock","src":"39740:1599:1","statements":[{"nodeType":"YulVariableDeclaration","src":"40104:31:1","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40123:4:1","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"40117:5:1"},"nodeType":"YulFunctionCall","src":"40117:11:1"},{"kind":"number","nodeType":"YulLiteral","src":"40130:4:1","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40113:3:1"},"nodeType":"YulFunctionCall","src":"40113:22:1"},"variables":[{"name":"m","nodeType":"YulTypedName","src":"40108:1:1","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40214:4:1","type":"","value":"0x40"},{"name":"m","nodeType":"YulIdentifier","src":"40220:1:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40207:6:1"},"nodeType":"YulFunctionCall","src":"40207:15:1"},"nodeType":"YulExpressionStatement","src":"40207:15:1"},{"nodeType":"YulAssignment","src":"40279:19:1","value":{"arguments":[{"name":"m","nodeType":"YulIdentifier","src":"40290:1:1"},{"kind":"number","nodeType":"YulLiteral","src":"40293:4:1","type":"","value":"0x20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40286:3:1"},"nodeType":"YulFunctionCall","src":"40286:12:1"},"variableNames":[{"name":"str","nodeType":"YulIdentifier","src":"40279:3:1"}]},{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"40368:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"40373:1:1","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40361:6:1"},"nodeType":"YulFunctionCall","src":"40361:14:1"},"nodeType":"YulExpressionStatement","src":"40361:14:1"},{"nodeType":"YulVariableDeclaration","src":"40463:14:1","value":{"name":"str","nodeType":"YulIdentifier","src":"40474:3:1"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"40467:3:1","type":""}]},{"body":{"nodeType":"YulBlock","src":"40721:388:1","statements":[{"nodeType":"YulAssignment","src":"40739:18:1","value":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"40750:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"40755:1:1","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40746:3:1"},"nodeType":"YulFunctionCall","src":"40746:11:1"},"variableNames":[{"name":"str","nodeType":"YulIdentifier","src":"40739:3:1"}]},{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"40900:3:1"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40909:2:1","type":"","value":"48"},{"arguments":[{"name":"temp","nodeType":"YulIdentifier","src":"40917:4:1"},{"kind":"number","nodeType":"YulLiteral","src":"40923:2:1","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"40913:3:1"},"nodeType":"YulFunctionCall","src":"40913:13:1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40905:3:1"},"nodeType":"YulFunctionCall","src":"40905:22:1"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"40892:7:1"},"nodeType":"YulFunctionCall","src":"40892:36:1"},"nodeType":"YulExpressionStatement","src":"40892:36:1"},{"nodeType":"YulAssignment","src":"40997:21:1","value":{"arguments":[{"name":"temp","nodeType":"YulIdentifier","src":"41009:4:1"},{"kind":"number","nodeType":"YulLiteral","src":"41015:2:1","type":"","value":"10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"41005:3:1"},"nodeType":"YulFunctionCall","src":"41005:13:1"},"variableNames":[{"name":"temp","nodeType":"YulIdentifier","src":"40997:4:1"}]},{"body":{"nodeType":"YulBlock","src":"41086:9:1","statements":[{"nodeType":"YulBreak","src":"41088:5:1"}]},"condition":{"arguments":[{"name":"temp","nodeType":"YulIdentifier","src":"41080:4:1"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"41073:6:1"},"nodeType":"YulFunctionCall","src":"41073:12:1"},"nodeType":"YulIf","src":"41070:25:1"}]},"condition":{"kind":"number","nodeType":"YulLiteral","src":"40716:1:1","type":"","value":"1"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"40718:2:1","statements":[]},"pre":{"nodeType":"YulBlock","src":"40694:21:1","statements":[{"nodeType":"YulVariableDeclaration","src":"40696:17:1","value":{"name":"value","nodeType":"YulIdentifier","src":"40708:5:1"},"variables":[{"name":"temp","nodeType":"YulTypedName","src":"40700:4:1","type":""}]}]},"src":"40690:419:1"},{"nodeType":"YulVariableDeclaration","src":"41123:27:1","value":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"41141:3:1"},{"name":"str","nodeType":"YulIdentifier","src":"41146:3:1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41137:3:1"},"nodeType":"YulFunctionCall","src":"41137:13:1"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"41127:6:1","type":""}]},{"nodeType":"YulAssignment","src":"41243:21:1","value":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"41254:3:1"},{"kind":"number","nodeType":"YulLiteral","src":"41259:4:1","type":"","value":"0x20"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41250:3:1"},"nodeType":"YulFunctionCall","src":"41250:14:1"},"variableNames":[{"name":"str","nodeType":"YulIdentifier","src":"41243:3:1"}]},{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"41317:3:1"},{"name":"length","nodeType":"YulIdentifier","src":"41322:6:1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41310:6:1"},"nodeType":"YulFunctionCall","src":"41310:19:1"},"nodeType":"YulExpressionStatement","src":"41310:19:1"}]},"evmVersion":"london","externalReferences":[{"declaration":1643,"isOffset":false,"isSlot":false,"src":"40279:3:1","valueSize":1},{"declaration":1643,"isOffset":false,"isSlot":false,"src":"40368:3:1","valueSize":1},{"declaration":1643,"isOffset":false,"isSlot":false,"src":"40474:3:1","valueSize":1},{"declaration":1643,"isOffset":false,"isSlot":false,"src":"40739:3:1","valueSize":1},{"declaration":1643,"isOffset":false,"isSlot":false,"src":"40750:3:1","valueSize":1},{"declaration":1643,"isOffset":false,"isSlot":false,"src":"40900:3:1","valueSize":1},{"declaration":1643,"isOffset":false,"isSlot":false,"src":"41146:3:1","valueSize":1},{"declaration":1643,"isOffset":false,"isSlot":false,"src":"41243:3:1","valueSize":1},{"declaration":1643,"isOffset":false,"isSlot":false,"src":"41254:3:1","valueSize":1},{"declaration":1643,"isOffset":false,"isSlot":false,"src":"41317:3:1","valueSize":1},{"declaration":1640,"isOffset":false,"isSlot":false,"src":"40708:5:1","valueSize":1}],"id":1645,"nodeType":"InlineAssembly","src":"39731:1608:1"}]},"documentation":{"id":1638,"nodeType":"StructuredDocumentation","src":"39546:86:1","text":" @dev Converts a uint256 to its ASCII string decimal representation."},"id":1647,"implemented":true,"kind":"function","modifiers":[],"name":"_toString","nameLocation":"39646:9:1","nodeType":"FunctionDefinition","parameters":{"id":1641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1640,"mutability":"mutable","name":"value","nameLocation":"39664:5:1","nodeType":"VariableDeclaration","scope":1647,"src":"39656:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1639,"name":"uint256","nodeType":"ElementaryTypeName","src":"39656:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"39655:15:1"},"returnParameters":{"id":1644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1643,"mutability":"mutable","name":"str","nameLocation":"39716:3:1","nodeType":"VariableDeclaration","scope":1647,"src":"39702:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1642,"name":"string","nodeType":"ElementaryTypeName","src":"39702:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39701:19:1"},"scope":1648,"src":"39637:1708:1","stateMutability":"pure","virtual":true,"visibility":"internal"}],"scope":1649,"src":"895:40452:1","usedErrors":[1654,1657,1660,1663,1666,1669,1672,1675,1678,1681,1684,1687,1690]}],"src":"84:41264:1"}},"erc721a/contracts/IERC721A.sol":{"id":2,"ast":{"absolutePath":"erc721a/contracts/IERC721A.sol","exportedSymbols":{"IERC721A":[1854]},"id":1855,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1650,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"84:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721A","contractDependencies":[],"contractKind":"interface","documentation":{"id":1651,"nodeType":"StructuredDocumentation","src":"109:37:2","text":" @dev Interface of ERC721A."},"fullyImplemented":false,"id":1854,"linearizedBaseContracts":[1854],"name":"IERC721A","nameLocation":"157:8:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1652,"nodeType":"StructuredDocumentation","src":"172:76:2","text":" The caller must own the token or be an approved operator."},"errorSelector":"cfb3b942","id":1654,"name":"ApprovalCallerNotOwnerNorApproved","nameLocation":"259:33:2","nodeType":"ErrorDefinition","parameters":{"id":1653,"nodeType":"ParameterList","parameters":[],"src":"292:2:2"},"src":"253:42:2"},{"documentation":{"id":1655,"nodeType":"StructuredDocumentation","src":"301:44:2","text":" The token does not exist."},"errorSelector":"cf4700e4","id":1657,"name":"ApprovalQueryForNonexistentToken","nameLocation":"356:32:2","nodeType":"ErrorDefinition","parameters":{"id":1656,"nodeType":"ParameterList","parameters":[],"src":"388:2:2"},"src":"350:41:2"},{"documentation":{"id":1658,"nodeType":"StructuredDocumentation","src":"397:65:2","text":" Cannot query the balance for the zero address."},"errorSelector":"8f4eb604","id":1660,"name":"BalanceQueryForZeroAddress","nameLocation":"473:26:2","nodeType":"ErrorDefinition","parameters":{"id":1659,"nodeType":"ParameterList","parameters":[],"src":"499:2:2"},"src":"467:35:2"},{"documentation":{"id":1661,"nodeType":"StructuredDocumentation","src":"508:51:2","text":" Cannot mint to the zero address."},"errorSelector":"2e076300","id":1663,"name":"MintToZeroAddress","nameLocation":"570:17:2","nodeType":"ErrorDefinition","parameters":{"id":1662,"nodeType":"ParameterList","parameters":[],"src":"587:2:2"},"src":"564:26:2"},{"documentation":{"id":1664,"nodeType":"StructuredDocumentation","src":"596:72:2","text":" The quantity of tokens minted must be more than zero."},"errorSelector":"b562e8dd","id":1666,"name":"MintZeroQuantity","nameLocation":"679:16:2","nodeType":"ErrorDefinition","parameters":{"id":1665,"nodeType":"ParameterList","parameters":[],"src":"695:2:2"},"src":"673:25:2"},{"documentation":{"id":1667,"nodeType":"StructuredDocumentation","src":"704:44:2","text":" The token does not exist."},"errorSelector":"df2d9b42","id":1669,"name":"OwnerQueryForNonexistentToken","nameLocation":"759:29:2","nodeType":"ErrorDefinition","parameters":{"id":1668,"nodeType":"ParameterList","parameters":[],"src":"788:2:2"},"src":"753:38:2"},{"documentation":{"id":1670,"nodeType":"StructuredDocumentation","src":"797:76:2","text":" The caller must own the token or be an approved operator."},"errorSelector":"59c896be","id":1672,"name":"TransferCallerNotOwnerNorApproved","nameLocation":"884:33:2","nodeType":"ErrorDefinition","parameters":{"id":1671,"nodeType":"ParameterList","parameters":[],"src":"917:2:2"},"src":"878:42:2"},{"documentation":{"id":1673,"nodeType":"StructuredDocumentation","src":"926:53:2","text":" The token must be owned by `from`."},"errorSelector":"a1148100","id":1675,"name":"TransferFromIncorrectOwner","nameLocation":"990:26:2","nodeType":"ErrorDefinition","parameters":{"id":1674,"nodeType":"ParameterList","parameters":[],"src":"1016:2:2"},"src":"984:35:2"},{"documentation":{"id":1676,"nodeType":"StructuredDocumentation","src":"1025:116:2","text":" Cannot safely transfer to a contract that does not implement the\n ERC721Receiver interface."},"errorSelector":"d1a57ed6","id":1678,"name":"TransferToNonERC721ReceiverImplementer","nameLocation":"1152:38:2","nodeType":"ErrorDefinition","parameters":{"id":1677,"nodeType":"ParameterList","parameters":[],"src":"1190:2:2"},"src":"1146:47:2"},{"documentation":{"id":1679,"nodeType":"StructuredDocumentation","src":"1199:55:2","text":" Cannot transfer to the zero address."},"errorSelector":"ea553b34","id":1681,"name":"TransferToZeroAddress","nameLocation":"1265:21:2","nodeType":"ErrorDefinition","parameters":{"id":1680,"nodeType":"ParameterList","parameters":[],"src":"1286:2:2"},"src":"1259:30:2"},{"documentation":{"id":1682,"nodeType":"StructuredDocumentation","src":"1295:44:2","text":" The token does not exist."},"errorSelector":"a14c4b50","id":1684,"name":"URIQueryForNonexistentToken","nameLocation":"1350:27:2","nodeType":"ErrorDefinition","parameters":{"id":1683,"nodeType":"ParameterList","parameters":[],"src":"1377:2:2"},"src":"1344:36:2"},{"documentation":{"id":1685,"nodeType":"StructuredDocumentation","src":"1386:79:2","text":" The `quantity` minted with ERC2309 exceeds the safety limit."},"errorSelector":"3db1f9af","id":1687,"name":"MintERC2309QuantityExceedsLimit","nameLocation":"1476:31:2","nodeType":"ErrorDefinition","parameters":{"id":1686,"nodeType":"ParameterList","parameters":[],"src":"1507:2:2"},"src":"1470:40:2"},{"documentation":{"id":1688,"nodeType":"StructuredDocumentation","src":"1516:83:2","text":" The `extraData` cannot be set on an unintialized ownership slot."},"errorSelector":"00d58153","id":1690,"name":"OwnershipNotInitializedForExtraData","nameLocation":"1610:35:2","nodeType":"ErrorDefinition","parameters":{"id":1689,"nodeType":"ParameterList","parameters":[],"src":"1645:2:2"},"src":"1604:44:2"},{"canonicalName":"IERC721A.TokenOwnership","id":1699,"members":[{"constant":false,"id":1692,"mutability":"mutable","name":"addr","nameLocation":"1912:4:2","nodeType":"VariableDeclaration","scope":1699,"src":"1904:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1691,"name":"address","nodeType":"ElementaryTypeName","src":"1904:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1694,"mutability":"mutable","name":"startTimestamp","nameLocation":"2017:14:2","nodeType":"VariableDeclaration","scope":1699,"src":"2010:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1693,"name":"uint64","nodeType":"ElementaryTypeName","src":"2010:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1696,"mutability":"mutable","name":"burned","nameLocation":"2092:6:2","nodeType":"VariableDeclaration","scope":1699,"src":"2087:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1695,"name":"bool","nodeType":"ElementaryTypeName","src":"2087:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1698,"mutability":"mutable","name":"extraData","nameLocation":"2203:9:2","nodeType":"VariableDeclaration","scope":1699,"src":"2196:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1697,"name":"uint24","nodeType":"ElementaryTypeName","src":"2196:6:2","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"name":"TokenOwnership","nameLocation":"1842:14:2","nodeType":"StructDefinition","scope":1854,"src":"1835:384:2","visibility":"public"},{"documentation":{"id":1700,"nodeType":"StructuredDocumentation","src":"2410:192:2","text":" @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."},"functionSelector":"18160ddd","id":1705,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2616:11:2","nodeType":"FunctionDefinition","parameters":{"id":1701,"nodeType":"ParameterList","parameters":[],"src":"2627:2:2"},"returnParameters":{"id":1704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1705,"src":"2653:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1702,"name":"uint256","nodeType":"ElementaryTypeName","src":"2653:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:9:2"},"scope":1854,"src":"2607:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1706,"nodeType":"StructuredDocumentation","src":"2849:341:2","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."},"functionSelector":"01ffc9a7","id":1713,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3204:17:2","nodeType":"FunctionDefinition","parameters":{"id":1709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1708,"mutability":"mutable","name":"interfaceId","nameLocation":"3229:11:2","nodeType":"VariableDeclaration","scope":1713,"src":"3222:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1707,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3222:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3221:20:2"},"returnParameters":{"id":1712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1713,"src":"3265:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1710,"name":"bool","nodeType":"ElementaryTypeName","src":"3265:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3264:6:2"},"scope":1854,"src":"3195:76:2","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":1714,"nodeType":"StructuredDocumentation","src":"3458:88:2","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1722,"name":"Transfer","nameLocation":"3557:8:2","nodeType":"EventDefinition","parameters":{"id":1721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1716,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"3582:4:2","nodeType":"VariableDeclaration","scope":1722,"src":"3566:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1715,"name":"address","nodeType":"ElementaryTypeName","src":"3566:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1718,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"3604:2:2","nodeType":"VariableDeclaration","scope":1722,"src":"3588:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1717,"name":"address","nodeType":"ElementaryTypeName","src":"3588:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1720,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"3624:7:2","nodeType":"VariableDeclaration","scope":1722,"src":"3608:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1719,"name":"uint256","nodeType":"ElementaryTypeName","src":"3608:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3565:67:2"},"src":"3551:82:2"},{"anonymous":false,"documentation":{"id":1723,"nodeType":"StructuredDocumentation","src":"3639:94:2","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1731,"name":"Approval","nameLocation":"3744:8:2","nodeType":"EventDefinition","parameters":{"id":1730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1725,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"3769:5:2","nodeType":"VariableDeclaration","scope":1731,"src":"3753:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1724,"name":"address","nodeType":"ElementaryTypeName","src":"3753:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1727,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"3792:8:2","nodeType":"VariableDeclaration","scope":1731,"src":"3776:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1726,"name":"address","nodeType":"ElementaryTypeName","src":"3776:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1729,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"3818:7:2","nodeType":"VariableDeclaration","scope":1731,"src":"3802:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1728,"name":"uint256","nodeType":"ElementaryTypeName","src":"3802:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3752:74:2"},"src":"3738:89:2"},{"anonymous":false,"documentation":{"id":1732,"nodeType":"StructuredDocumentation","src":"3833:124:2","text":" @dev Emitted when `owner` enables or disables\n (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1740,"name":"ApprovalForAll","nameLocation":"3968:14:2","nodeType":"EventDefinition","parameters":{"id":1739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1734,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"3999:5:2","nodeType":"VariableDeclaration","scope":1740,"src":"3983:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1733,"name":"address","nodeType":"ElementaryTypeName","src":"3983:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1736,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"4022:8:2","nodeType":"VariableDeclaration","scope":1740,"src":"4006:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1735,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1738,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"4037:8:2","nodeType":"VariableDeclaration","scope":1740,"src":"4032:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1737,"name":"bool","nodeType":"ElementaryTypeName","src":"4032:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3982:64:2"},"src":"3962:85:2"},{"documentation":{"id":1741,"nodeType":"StructuredDocumentation","src":"4053:74:2","text":" @dev Returns the number of tokens in `owner`'s account."},"functionSelector":"70a08231","id":1748,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"4141:9:2","nodeType":"FunctionDefinition","parameters":{"id":1744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1743,"mutability":"mutable","name":"owner","nameLocation":"4159:5:2","nodeType":"VariableDeclaration","scope":1748,"src":"4151:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1742,"name":"address","nodeType":"ElementaryTypeName","src":"4151:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4150:15:2"},"returnParameters":{"id":1747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"balance","nameLocation":"4197:7:2","nodeType":"VariableDeclaration","scope":1748,"src":"4189:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1745,"name":"uint256","nodeType":"ElementaryTypeName","src":"4189:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4188:17:2"},"scope":1854,"src":"4132:74:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1749,"nodeType":"StructuredDocumentation","src":"4212:131:2","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1756,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"4357:7:2","nodeType":"FunctionDefinition","parameters":{"id":1752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1751,"mutability":"mutable","name":"tokenId","nameLocation":"4373:7:2","nodeType":"VariableDeclaration","scope":1756,"src":"4365:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1750,"name":"uint256","nodeType":"ElementaryTypeName","src":"4365:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4364:17:2"},"returnParameters":{"id":1755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1754,"mutability":"mutable","name":"owner","nameLocation":"4413:5:2","nodeType":"VariableDeclaration","scope":1756,"src":"4405:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1753,"name":"address","nodeType":"ElementaryTypeName","src":"4405:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4404:15:2"},"scope":1854,"src":"4348:72:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1757,"nodeType":"StructuredDocumentation","src":"4426:711:2","text":" @dev Safely transfers `tokenId` token from `from` to `to`,\n checking first that contract recipients are aware of the ERC721 protocol\n to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move\n this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1768,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5151:16:2","nodeType":"FunctionDefinition","parameters":{"id":1766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1759,"mutability":"mutable","name":"from","nameLocation":"5185:4:2","nodeType":"VariableDeclaration","scope":1768,"src":"5177:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1758,"name":"address","nodeType":"ElementaryTypeName","src":"5177:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1761,"mutability":"mutable","name":"to","nameLocation":"5207:2:2","nodeType":"VariableDeclaration","scope":1768,"src":"5199:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1760,"name":"address","nodeType":"ElementaryTypeName","src":"5199:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1763,"mutability":"mutable","name":"tokenId","nameLocation":"5227:7:2","nodeType":"VariableDeclaration","scope":1768,"src":"5219:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1762,"name":"uint256","nodeType":"ElementaryTypeName","src":"5219:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1765,"mutability":"mutable","name":"data","nameLocation":"5259:4:2","nodeType":"VariableDeclaration","scope":1768,"src":"5244:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1764,"name":"bytes","nodeType":"ElementaryTypeName","src":"5244:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5167:102:2"},"returnParameters":{"id":1767,"nodeType":"ParameterList","parameters":[],"src":"5286:0:2"},"scope":1854,"src":"5142:145:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":1769,"nodeType":"StructuredDocumentation","src":"5293:80:2","text":" @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."},"functionSelector":"42842e0e","id":1778,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5387:16:2","nodeType":"FunctionDefinition","parameters":{"id":1776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1771,"mutability":"mutable","name":"from","nameLocation":"5421:4:2","nodeType":"VariableDeclaration","scope":1778,"src":"5413:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1770,"name":"address","nodeType":"ElementaryTypeName","src":"5413:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1773,"mutability":"mutable","name":"to","nameLocation":"5443:2:2","nodeType":"VariableDeclaration","scope":1778,"src":"5435:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1772,"name":"address","nodeType":"ElementaryTypeName","src":"5435:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1775,"mutability":"mutable","name":"tokenId","nameLocation":"5463:7:2","nodeType":"VariableDeclaration","scope":1778,"src":"5455:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1774,"name":"uint256","nodeType":"ElementaryTypeName","src":"5455:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5403:73:2"},"returnParameters":{"id":1777,"nodeType":"ParameterList","parameters":[],"src":"5493:0:2"},"scope":1854,"src":"5378:116:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":1779,"nodeType":"StructuredDocumentation","src":"5500:512:2","text":" @dev Transfers `tokenId` from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1788,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"6026:12:2","nodeType":"FunctionDefinition","parameters":{"id":1786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1781,"mutability":"mutable","name":"from","nameLocation":"6056:4:2","nodeType":"VariableDeclaration","scope":1788,"src":"6048:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1780,"name":"address","nodeType":"ElementaryTypeName","src":"6048:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1783,"mutability":"mutable","name":"to","nameLocation":"6078:2:2","nodeType":"VariableDeclaration","scope":1788,"src":"6070:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1782,"name":"address","nodeType":"ElementaryTypeName","src":"6070:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1785,"mutability":"mutable","name":"tokenId","nameLocation":"6098:7:2","nodeType":"VariableDeclaration","scope":1788,"src":"6090:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1784,"name":"uint256","nodeType":"ElementaryTypeName","src":"6090:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6038:73:2"},"returnParameters":{"id":1787,"nodeType":"ParameterList","parameters":[],"src":"6128:0:2"},"scope":1854,"src":"6017:112:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":1789,"nodeType":"StructuredDocumentation","src":"6135:459:2","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1796,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"6608:7:2","nodeType":"FunctionDefinition","parameters":{"id":1794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1791,"mutability":"mutable","name":"to","nameLocation":"6624:2:2","nodeType":"VariableDeclaration","scope":1796,"src":"6616:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1790,"name":"address","nodeType":"ElementaryTypeName","src":"6616:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1793,"mutability":"mutable","name":"tokenId","nameLocation":"6636:7:2","nodeType":"VariableDeclaration","scope":1796,"src":"6628:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1792,"name":"uint256","nodeType":"ElementaryTypeName","src":"6628:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6615:29:2"},"returnParameters":{"id":1795,"nodeType":"ParameterList","parameters":[],"src":"6661:0:2"},"scope":1854,"src":"6599:63:2","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":1797,"nodeType":"StructuredDocumentation","src":"6668:316:2","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1804,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"6998:17:2","nodeType":"FunctionDefinition","parameters":{"id":1802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1799,"mutability":"mutable","name":"operator","nameLocation":"7024:8:2","nodeType":"VariableDeclaration","scope":1804,"src":"7016:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1798,"name":"address","nodeType":"ElementaryTypeName","src":"7016:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1801,"mutability":"mutable","name":"_approved","nameLocation":"7039:9:2","nodeType":"VariableDeclaration","scope":1804,"src":"7034:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1800,"name":"bool","nodeType":"ElementaryTypeName","src":"7034:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7015:34:2"},"returnParameters":{"id":1803,"nodeType":"ParameterList","parameters":[],"src":"7058:0:2"},"scope":1854,"src":"6989:70:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1805,"nodeType":"StructuredDocumentation","src":"7065:139:2","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1812,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"7218:11:2","nodeType":"FunctionDefinition","parameters":{"id":1808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1807,"mutability":"mutable","name":"tokenId","nameLocation":"7238:7:2","nodeType":"VariableDeclaration","scope":1812,"src":"7230:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1806,"name":"uint256","nodeType":"ElementaryTypeName","src":"7230:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7229:17:2"},"returnParameters":{"id":1811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1810,"mutability":"mutable","name":"operator","nameLocation":"7278:8:2","nodeType":"VariableDeclaration","scope":1812,"src":"7270:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1809,"name":"address","nodeType":"ElementaryTypeName","src":"7270:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7269:18:2"},"scope":1854,"src":"7209:79:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1813,"nodeType":"StructuredDocumentation","src":"7294:139:2","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":1822,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"7447:16:2","nodeType":"FunctionDefinition","parameters":{"id":1818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1815,"mutability":"mutable","name":"owner","nameLocation":"7472:5:2","nodeType":"VariableDeclaration","scope":1822,"src":"7464:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1814,"name":"address","nodeType":"ElementaryTypeName","src":"7464:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1817,"mutability":"mutable","name":"operator","nameLocation":"7487:8:2","nodeType":"VariableDeclaration","scope":1822,"src":"7479:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1816,"name":"address","nodeType":"ElementaryTypeName","src":"7479:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7463:33:2"},"returnParameters":{"id":1821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1822,"src":"7520:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1819,"name":"bool","nodeType":"ElementaryTypeName","src":"7520:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7519:6:2"},"scope":1854,"src":"7438:88:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1823,"nodeType":"StructuredDocumentation","src":"7717:58:2","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1828,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"7789:4:2","nodeType":"FunctionDefinition","parameters":{"id":1824,"nodeType":"ParameterList","parameters":[],"src":"7793:2:2"},"returnParameters":{"id":1827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1828,"src":"7819:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1825,"name":"string","nodeType":"ElementaryTypeName","src":"7819:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7818:15:2"},"scope":1854,"src":"7780:54:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1829,"nodeType":"StructuredDocumentation","src":"7840:60:2","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1834,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"7914:6:2","nodeType":"FunctionDefinition","parameters":{"id":1830,"nodeType":"ParameterList","parameters":[],"src":"7920:2:2"},"returnParameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1834,"src":"7946:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1831,"name":"string","nodeType":"ElementaryTypeName","src":"7946:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7945:15:2"},"scope":1854,"src":"7905:56:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1835,"nodeType":"StructuredDocumentation","src":"7967:90:2","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1842,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"8071:8:2","nodeType":"FunctionDefinition","parameters":{"id":1838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1837,"mutability":"mutable","name":"tokenId","nameLocation":"8088:7:2","nodeType":"VariableDeclaration","scope":1842,"src":"8080:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1836,"name":"uint256","nodeType":"ElementaryTypeName","src":"8080:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8079:17:2"},"returnParameters":{"id":1841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1842,"src":"8120:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1839,"name":"string","nodeType":"ElementaryTypeName","src":"8120:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8119:15:2"},"scope":1854,"src":"8062:73:2","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":1843,"nodeType":"StructuredDocumentation","src":"8322:267:2","text":" @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n (inclusive) is transferred from `from` to `to`, as defined in the\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n See {_mintERC2309} for more details."},"eventSelector":"deaa91b6123d068f5821d0fb0678463d1a8a6079fe8af5de3ce5e896dcf9133d","id":1853,"name":"ConsecutiveTransfer","nameLocation":"8600:19:2","nodeType":"EventDefinition","parameters":{"id":1852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1845,"indexed":true,"mutability":"mutable","name":"fromTokenId","nameLocation":"8636:11:2","nodeType":"VariableDeclaration","scope":1853,"src":"8620:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1844,"name":"uint256","nodeType":"ElementaryTypeName","src":"8620:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1847,"indexed":false,"mutability":"mutable","name":"toTokenId","nameLocation":"8657:9:2","nodeType":"VariableDeclaration","scope":1853,"src":"8649:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1846,"name":"uint256","nodeType":"ElementaryTypeName","src":"8649:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1849,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"8684:4:2","nodeType":"VariableDeclaration","scope":1853,"src":"8668:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1848,"name":"address","nodeType":"ElementaryTypeName","src":"8668:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1851,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"8706:2:2","nodeType":"VariableDeclaration","scope":1853,"src":"8690:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1850,"name":"address","nodeType":"ElementaryTypeName","src":"8690:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8619:90:2"},"src":"8594:116:2"}],"scope":1855,"src":"147:8565:2","usedErrors":[1654,1657,1660,1663,1666,1669,1672,1675,1678,1681,1684,1687,1690]}],"src":"84:8629:2"}}},"contracts":{"contracts/ERC712A.sol":{"Azuki":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ApprovalCallerNotOwnerNorApproved","type":"error"},{"inputs":[],"name":"ApprovalQueryForNonexistentToken","type":"error"},{"inputs":[],"name":"BalanceQueryForZeroAddress","type":"error"},{"inputs":[],"name":"MintERC2309QuantityExceedsLimit","type":"error"},{"inputs":[],"name":"MintToZeroAddress","type":"error"},{"inputs":[],"name":"MintZeroQuantity","type":"error"},{"inputs":[],"name":"OwnerQueryForNonexistentToken","type":"error"},{"inputs":[],"name":"OwnershipNotInitializedForExtraData","type":"error"},{"inputs":[],"name":"TransferCallerNotOwnerNorApproved","type":"error"},{"inputs":[],"name":"TransferFromIncorrectOwner","type":"error"},{"inputs":[],"name":"TransferToNonERC721ReceiverImplementer","type":"error"},{"inputs":[],"name":"TransferToZeroAddress","type":"error"},{"inputs":[],"name":"URIQueryForNonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"toTokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"ConsecutiveTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"quantity","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"payable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC712A.sol\":\"Azuki\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ERC712A.sol\":{\"keccak256\":\"0x5bcdc8179726efd76121b561136143d91289eeb5e455602d7895122e067d0132\",\"urls\":[\"bzz-raw://fd094e53c91f680d65bc89381436ee8833a6d0202693dc8e86778ee52e2818eb\",\"dweb:/ipfs/QmcuN8mo8bRaRAGfDf29rSUJe1L66T2HPKeoHVNSNoXCRi\"]},\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x23116c16976b7d8c0c714ba1b38ae6b16c16fc90ec69b568fb1ebf1bc063e01c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7874e48418b55b9d718680915454f2b0054d19d2a387e123b0c139294d0e809\",\"dweb:/ipfs/QmdryJHATT4R454JY8FXCE5qTxanYWfjGKGMv5U6YJntWy\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]}},\"version\":1}","zk_version":"1.3.17"},"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in `owner`'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Equivalent to `safeTransferFrom(from, to, tokenId, '')`."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"totalSupply()":{"details":"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"userdoc":{"errors":{"ApprovalCallerNotOwnerNorApproved()":[{"notice":"The caller must own the token or be an approved operator."}],"ApprovalQueryForNonexistentToken()":[{"notice":"The token does not exist."}],"BalanceQueryForZeroAddress()":[{"notice":"Cannot query the balance for the zero address."}],"MintERC2309QuantityExceedsLimit()":[{"notice":"The `quantity` minted with ERC2309 exceeds the safety limit."}],"MintToZeroAddress()":[{"notice":"Cannot mint to the zero address."}],"MintZeroQuantity()":[{"notice":"The quantity of tokens minted must be more than zero."}],"OwnerQueryForNonexistentToken()":[{"notice":"The token does not exist."}],"OwnershipNotInitializedForExtraData()":[{"notice":"The `extraData` cannot be set on an unintialized ownership slot."}],"TransferCallerNotOwnerNorApproved()":[{"notice":"The caller must own the token or be an approved operator."}],"TransferFromIncorrectOwner()":[{"notice":"The token must be owned by `from`."}],"TransferToNonERC721ReceiverImplementer()":[{"notice":"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."}],"TransferToZeroAddress()":[{"notice":"Cannot transfer to the zero address."}],"URIQueryForNonexistentToken()":[{"notice":"The token does not exist."}]},"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":117,"contract":"contracts/ERC712A.sol:Azuki","label":"_currentIndex","offset":0,"slot":"0","type":"t_uint256"},{"astId":119,"contract":"contracts/ERC712A.sol:Azuki","label":"_burnCounter","offset":0,"slot":"1","type":"t_uint256"},{"astId":121,"contract":"contracts/ERC712A.sol:Azuki","label":"_name","offset":0,"slot":"2","type":"t_string_storage"},{"astId":123,"contract":"contracts/ERC712A.sol:Azuki","label":"_symbol","offset":0,"slot":"3","type":"t_string_storage"},{"astId":127,"contract":"contracts/ERC712A.sol:Azuki","label":"_packedOwnerships","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_uint256)"},{"astId":131,"contract":"contracts/ERC712A.sol:Azuki","label":"_packedAddressData","offset":0,"slot":"5","type":"t_mapping(t_address,t_uint256)"},{"astId":136,"contract":"contracts/ERC712A.sol:Azuki","label":"_tokenApprovals","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_struct(TokenApprovalRef)49_storage)"},{"astId":142,"contract":"contracts/ERC712A.sol:Azuki","label":"_operatorApprovals","offset":0,"slot":"7","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_struct(TokenApprovalRef)49_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct ERC721A.TokenApprovalRef)","numberOfBytes":"32","value":"t_struct(TokenApprovalRef)49_storage"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(TokenApprovalRef)49_storage":{"encoding":"inplace","label":"struct ERC721A.TokenApprovalRef","members":[{"astId":48,"contract":"contracts/ERC712A.sol:Azuki","label":"value","offset":0,"slot":"0","type":"t_address"}],"numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ERC712A.sol:Azuki\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[5]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tadd\t128, r0, r5\n\tst.1\t64, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r4, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_8[0], r2, r3\n\tjump.le\t@.BB0_33\n\tsub.s!\t@CPI0_9[0], r2, r3\n\tjump.gt\t@.BB0_48\n\tsub.s!\t@CPI0_15[0], r2, r3\n\tjump.gt\t@.BB0_46\n\tsub.s!\t@CPI0_18[0], r2, r3\n\tjump.eq\t@.BB0_106\n\tsub.s!\t@CPI0_19[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_29[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_117\n\tadd\t@CPI0_50[0], r0, r1\n\tjump\t@.BB0_116\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t5, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_1[0], r0, r2\n\tst.1\t160, r2\n\tadd\t256, r0, r2\n\tst.1\t64, r2\n\tst.1\t192, r1\n\tadd\t@CPI0_2[0], r0, r1\n\tst.1\t224, r1\n\tadd\t2, r0, r4\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB0_6\n.BB0_4:\n\tadd\t@CPI0_37[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tjump\t@.BB0_5\n.BB0_6:\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_11\n\tadd\tr3, r0, stack-[4]\n\tadd\tr4, r0, stack-[5]\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r2, r2\n\tsub!\tr1, r2, r3\n\tadd\tstack-[5], r0, r4\n\tjump.ge\t@.BB0_11\n.BB0_10:\n\tsstore\tr1, r0\n\tadd\t1, r1, r1\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB0_10\n.BB0_11:\n\tld.1\t160, r1\n\tand\t@CPI0_4[0], r1, r1\n\tor\t10, r1, r1\n\tsstore\tr4, r1\n\tld.1\t192, r8\n\tsub.s!\t@CPI0_5[0], r8, r1\n\tjump.lt\t@.BB0_13\n.BB0_12:\n\tadd\t@CPI0_37[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB0_5:\n\tst.1\t4, r1\n\tadd\t@CPI0_38[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_33:\n\tsub.s!\t@CPI0_20[0], r2, r3\n\tjump.le\t@.BB0_34\n\tsub.s!\t@CPI0_21[0], r2, r3\n\tjump.gt\t@.BB0_40\n\tsub.s!\t@CPI0_24[0], r2, r3\n\tjump.eq\t@.BB0_80\n\tsub.s!\t@CPI0_25[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tsload\tr0, r2\n\tsub\tr2, r1, r1\n\tjump\t@.BB0_60\n.BB0_48:\n\tsub.s!\t@CPI0_10[0], r2, r3\n\tjump.gt\t@.BB0_51\n\tsub.s!\t@CPI0_13[0], r2, r3\n\tjump.eq\t@.BB0_141\n\tsub.s!\t@CPI0_14[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t128, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r5\n\tsub.s!\t@CPI0_29[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_29[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t100, r1, r3\n\tld\tr3, r6\n\tsub.s!\t@CPI0_35[0], r6, r3\n\tjump.gt\t@.BB0_2\n\tadd\t35, r6, r3\n\tadd\t@CPI0_36[0], r0, r7\n\tsub!\tr3, r4, r8\n\tadd\tr0, r0, r8\n\tadd.ge\tr7, r0, r8\n\tand\t@CPI0_36[0], r3, r3\n\tsub!\tr3, r0, r9\n\tadd.ge\tr0, r0, r7\n\tsub.s!\t@CPI0_36[0], r3, r3\n\tadd.ne\tr8, r0, r7\n\tsub!\tr7, r0, r3\n\tjump.ne\t@.BB0_2\n\tadd\t4, r6, r7\n\tptr.add\tr1, r7, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_35[0], r3, r8\n\tjump.gt\t@.BB0_12\n\tadd\t191, r3, r8\n\tsub.s\t32, r0, r9\n\tand\tr8, r9, r8\n\tsub.s!\t@CPI0_35[0], r8, r9\n\tjump.gt\t@.BB0_12\n\tst.1\t64, r8\n\tst.1\t128, r3\n\tadd\tr6, r3, r6\n\tadd\t36, r6, r6\n\tsub!\tr6, r4, r4\n\tjump.gt\t@.BB0_2\n\tadd\t32, r7, r4\n\tptr.add\tr1, r4, r4\n\tand\t31, r3, r6\n\tshr.s!\t5, r3, r7\n\tjump.eq\t@.BB0_176\n\tadd\tr0, r0, r8\n.BB0_159:\n\tshl.s\t5, r8, r9\n\tptr.add\tr4, r9, r10\n\tld\tr10, r10\n\tadd\t160, r9, r9\n\tst.1\tr9, r10\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB0_159\n.BB0_176:\n\tsub!\tr6, r0, r8\n\tjump.eq\t@.BB0_161\n\tshl.s\t5, r7, r7\n\tptr.add\tr4, r7, r4\n\tshl.s\t3, r6, r6\n\tadd\t160, r7, r7\n\tld.1\tr7, r8\n\tshl\tr8, r6, r8\n\tshr\tr8, r6, r8\n\tld\tr4, r4\n\tsub\t256, r6, r6\n\tshr\tr4, r6, r4\n\tshl\tr4, r6, r4\n\tor\tr4, r8, r4\n\tst.1\tr7, r4\n.BB0_161:\n\tadd\t160, r3, r3\n\tst.1\tr3, r0\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r3\n\tjump\t@.BB0_162\n.BB0_34:\n\tsub.s!\t@CPI0_26[0], r2, r3\n\tjump.eq\t@.BB0_53\n\tsub.s!\t@CPI0_27[0], r2, r3\n\tjump.eq\t@.BB0_61\n\tsub.s!\t@CPI0_28[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tadd\t128, r0, r2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r3\n\tsload\tr0, r1\n\tsub!\tr1, r3, r1\n\tjump.le\t@.BB0_77\n\tadd\tr3, r0, stack-[5]\n\tst.1\t0, r3\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_32[0], r1, r1\n\tjump.ne\t@.BB0_76\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tjump\t@.BB0_109\n.BB0_13:\n\tadd\t3, r0, r7\n\tsload\tr7, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_4\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_19\n\tadd\tr3, r0, stack-[3]\n\tadd\tr8, r0, stack-[4]\n\tadd\tr7, r0, stack-[5]\n\tst.1\t0, r7\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[4], r0, r8\n\tadd\t31, r8, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r8, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[3], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[5], r0, r7\n\tjump.ge\t@.BB0_19\n.BB0_18:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_18\n.BB0_19:\n\tsub.s!\t32, r8, r1\n\tjump.lt\t@.BB0_27\n\tst.1\t0, r7\n\tsub.s\t32, r0, r1\n\tand!\tr8, r1, r2\n\tadd\t224, r0, r3\n\tadd\t@CPI0_6[0], r0, r1\n\tjump.eq\t@.BB0_24\n\tadd\t@CPI0_6[0], r0, r1\n\tadd\t32, r0, r5\n\tadd\tr0, r0, r3\n.BB0_22:\n\tadd\tr5, r0, r4\n\tadd\t192, r4, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r4, r5\n\tadd\t1, r1, r1\n\tadd\t32, r3, r3\n\tsub!\tr3, r2, r6\n\tjump.lt\t@.BB0_22\n\tadd\t224, r4, r3\n.BB0_24:\n\tsub!\tr2, r8, r2\n\tjump.ge\t@.BB0_26\n\tshl.s\t3, r8, r2\n\tand\t248, r2, r2\n\tsub.s\t1, r0, r4\n\tshr\tr4, r2, r2\n\txor\tr2, r4, r2\n\tld.1\tr3, r3\n\tand\tr3, r2, r2\n\tsstore\tr1, r2\n.BB0_26:\n\tadd\t1, r0, r1\n\tshl.s\t1, r8, r2\n\tjump\t@.BB0_29\n.BB0_46:\n\tsub.s!\t@CPI0_16[0], r2, r3\n\tjump.eq\t@.BB0_118\n\tsub.s!\t@CPI0_17[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tsload\tr0, r3\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r2\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_130\n\tadd\t@CPI0_47[0], r0, r1\n.BB0_116:\n\tst.1\t128, r1\n\tadd\t@CPI0_48[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_40:\n\tsub.s!\t@CPI0_22[0], r2, r3\n\tjump.eq\t@.BB0_101\n\tsub.s!\t@CPI0_23[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t96, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r5\n\tsub.s!\t@CPI0_29[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_29[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r3\n\tadd\t160, r0, r1\n\tst.1\t64, r1\n\tst.1\t128, r0\n.BB0_162:\n\tadd\t128, r0, r4\n\tadd\tr5, r0, r1\n\tnear_call\tr0, @fun_safeTransferFrom, @DEFAULT_UNWIND\n\tjump\t@.BB0_163\n.BB0_51:\n\tsub.s!\t@CPI0_11[0], r2, r3\n\tjump.eq\t@.BB0_164\n\tsub.s!\t@CPI0_12[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_29[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI0_29[0], r3, r1\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r2\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tadd\tr3, r0, stack-[5]\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r2\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tjump\t@.BB0_110\n.BB0_106:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_packedOwnershipOf, @DEFAULT_UNWIND\n.BB0_109:\n\tand\t@CPI0_29[0], r1, r1\n.BB0_110:\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_30[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_80:\n\tsub.s\t4, r4, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[2]\n\tsub.s!\t@CPI0_29[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tadd\t128, r0, r2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tsload\tr0, r1\n\tsub!\tr1, r3, r1\n\tjump.le\t@.BB0_88\n\tadd\tr3, r0, stack-[1]\n\tst.1\t0, r3\n\tadd\t4, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_32[0], r1, r2\n\tjump.ne\t@.BB0_85\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_91\n\tadd\t32784, r0, stack-[3]\n\tadd\tstack-[1], r0, r2\n.BB0_89:\n\tsub.s\t1, r2, r2\n\tadd\tr2, r0, stack-[5]\n\tst.1\t0, r2\n\tadd\tstack-[4], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\tstack-[3], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\tstack-[5], r0, r2\n\tjump.eq\t@.BB0_89\n.BB0_91:\n\tand\t@CPI0_29[0], r1, r2\n\tcontext.caller\tr3\n\tsub!\tr3, r2, r1\n\tadd\tr2, r0, stack-[5]\n\tjump.ne\t@.BB0_92\n.BB0_95:\n\tadd\tstack-[1], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[2], r0, r2\n\tand\t@CPI0_29[0], r2, r6\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_53[0], r2, r2\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, stack-[4]\n\tshl.s\t192, r2, r1\n\tor\tstack-[4], r1, r1\n\tor\t@CPI0_44[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_54[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[1], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[4], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_141:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_29[0], r3, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r2\n\tsub!\tr2, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\tr2, r0, stack-[4]\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr3, r0, stack-[5]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tst.1\t0, r3\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tadd\tstack-[4], r0, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_39[0], r0, r4\n\tadd\tstack-[3], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_53:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_57[0], r1, r2\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r2\n\tsub.s!\t@CPI0_58[0], r1, r3\n\tjump.eq\t@.BB0_59\n\tsub.s!\t@CPI0_59[0], r1, r3\n\tjump.eq\t@.BB0_59\n\tsub.s!\t@CPI0_60[0], r1, r1\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n.BB0_59:\n\tand\t1, r2, r1\n\tjump\t@.BB0_60\n.BB0_61:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r1\n\tadd.ne\tr5, r0, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_4\n\tst.1\t128, r1\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_68\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tst.1\t160, r1\n\tadd\t64, r0, r2\n\tjump\t@.BB0_65\n.BB0_118:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t3, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r1\n\tadd.ne\tr5, r0, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_4\n\tst.1\t128, r1\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_124\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tst.1\t160, r1\n\tadd\t64, r0, r2\n\tjump\t@.BB0_122\n.BB0_101:\n\tadd\tr4, r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_transferFrom, @DEFAULT_UNWIND\n.BB0_163:\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_164:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsload\tr0, r2\n\tsub!\tr2, r1, r2\n\tjump.le\t@.BB0_169\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r5\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_32[0], r1, r1\n\tjump.ne\t@.BB0_169\n\tadd\tr5, r0, r1\n\tadd\tr5, r0, stack-[5]\n\tnear_call\tr0, @finalize_allocation_6842, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r1\n\tst.1\tr1, r0\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[4]\n\tnear_call\tr0, @finalize_allocation_6842, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r1\n\tst.1\tr1, r0\n\tadd\t32, r0, r2\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[5]\n\tst.1.inc\tr3, r2, r2\n\tnear_call\tr0, @abi_encode_string_to_string, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r4\n\tjump\t@.BB0_66\n.BB0_27:\n\tsub!\tr8, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_30\n\tshl.s\t3, r8, r1\n\tsub.s\t1, r0, r2\n\tshr\tr2, r1, r1\n\txor\tr1, r2, r1\n\tld.1\t224, r2\n\tand\tr2, r1, r2\n\tshl.s\t1, r8, r1\n.BB0_29:\n\tor\tr2, r1, r1\n.BB0_30:\n\tsstore\tr7, r1\n\tsstore\tr0, r0\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_7[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_169:\n\tadd\t@CPI0_33[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r5, r2\n\tadd.ge\tr1, r0, r5\n\tshl.s\t64, r5, r1\n\tor\t@CPI0_34[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_130:\n\tadd\tr2, r0, stack-[3]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tand\t@CPI0_29[0], r1, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr3, r0, stack-[5]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[3], r0, r2\n\tmul\t@CPI0_40[0], r2, r2, r3\n\tld\tr1, r1\n\tsload\tr1, r3\n\tadd\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_41[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_132\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\t@CPI0_43[0], r0, r2\n\tadd\tstack-[3], r0, r3\n\tsub.s!\t1, r3, r3\n\tadd.ne\tr0, r0, r2\n\tor\tstack-[2], r2, r2\n\tadd\tstack-[1], r0, r3\n\tshl.s\t160, r3, r3\n\tor\tr2, r3, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_44[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_45[0], r0, r4\n\tadd\tr0, r0, r5\n\tadd\tstack-[4], r0, r6\n\tadd\tstack-[5], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[3], r2, stack-[3]\n\tadd\t32781, r0, stack-[2]\n\tadd\t4, r0, stack-[1]\n.BB0_136:\n\tadd\tstack-[5], r0, r7\n\tadd\t1, r7, r7\n\tsub.s!\tstack-[3], r7, r1\n\tjump.eq\t@.BB0_138\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_44[0], r1, r1\n\tadd\tstack-[2], r0, r2\n\tadd\tstack-[1], r0, r3\n\tadd\t@CPI0_45[0], r0, r4\n\tadd\tr0, r0, r5\n\tadd\tstack-[4], r0, r6\n\tadd\tr7, r0, stack-[5]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_136\n\tjump\t@.BB0_2\n.BB0_117:\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand\t@CPI0_35[0], r1, r1\n.BB0_60:\n\tst.1\t128, r1\n\tadd\t@CPI0_49[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_68:\n\tst.1\t0, r3\n\tadd\t32, r0, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_65\n\tadd\t@CPI0_56[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_70:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_70\n\tadd\t64, r3, r2\n\tjump\t@.BB0_65\n.BB0_124:\n\tst.1\t0, r3\n\tadd\t32, r0, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_122\n\tadd\t@CPI0_6[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_126:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_126\n\tadd\t64, r3, r2\n.BB0_122:\n.BB0_65:\n\tadd\t128, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[4]\n\tadd\tstack-[5], r0, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r4\n.BB0_66:\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_76:\n\tld.1\t64, r2\n.BB0_77:\n\tadd\t@CPI0_55[0], r0, r1\n\tjump\t@.BB0_78\n.BB0_132:\n\trevert\n.BB0_85:\n\tld.1\t64, r2\n.BB0_88:\n\tadd\t@CPI0_51[0], r0, r1\n.BB0_78:\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_34[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_92:\n\tadd\tr3, r0, stack-[4]\n\tst.1\t0, r2\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tand\t@CPI0_29[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_95\n\tld.1\t64, r1\n\tadd\t@CPI0_52[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_34[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_138:\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tsub!\tstack-[4], r0, r3\n\tjump.ne\t@.BB0_140\n\tadd\t@CPI0_46[0], r0, r3\n\tst.1\tr2, r3\n\tor\t@CPI0_34[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_140:\n\tadd\tstack-[3], r0, r2\n\tsstore\tr0, r2\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\nabi_encode_string_to_string:\n.func_begin1:\n\tld.1\tr1, r3\n\tst.1.inc\tr2, r3, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB1_4\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\tr2, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_2\n\tsub!\tr4, r3, r1\n\tjump.le\t@.BB1_4\n\tadd\tr2, r3, r1\n\tst.1\tr1, r0\n\tjump\t@.BB1_6\n.BB1_4:\n.BB1_6:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\tr2, r1, r1\n\tret\n.func_end1:\n\nabi_encode_string:\n.func_begin2:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tadd\t64, r1, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB2_5\n\tadd\tr0, r0, r4\n.BB2_2:\n\tadd\tr4, r1, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB2_2\n\tsub!\tr4, r3, r2\n\tjump.le\t@.BB2_5\n\tadd\tr3, r1, r2\n\tst.1\tr2, r0\n.BB2_5:\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end2:\n\nabi_decode_addresst_addresst_uint256:\n.func_begin3:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI3_0[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI3_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI3_0[0], r1, r1\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB3_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_1[0], r1, r2\n\tjump.gt\t@.BB3_1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI3_1[0], r2, r4\n\tjump.gt\t@.BB3_1\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tret\n.BB3_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nfinalize_allocation_6842:\n.func_begin4:\n\tsub.s!\t@CPI4_0[0], r1, r2\n\tjump.ge\t@.BB4_1\n\tadd\t32, r1, r1\n\tst.1\t64, r1\n\tret\n.BB4_1:\n\tadd\t@CPI4_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nfinalize_allocation:\n.func_begin5:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI5_0[0], r1, r3\n\tjump.gt\t@.BB5_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB5_2\n\tst.1\t64, r1\n\tret\n.BB5_2:\n\tadd\t@CPI5_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nmapping_index_access_mapping_address_uint256_of_address:\n.func_begin6:\n\tand\t@CPI6_0[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI6_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI6_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_1\n\tld\tr1, r1\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nfun_packedOwnershipOf:\n.func_begin7:\n\tnop\tstack+=[3]\n\tsload\tr0, r2\n\tsub!\tr2, r1, r2\n\tjump.le\t@.BB7_6\n\tadd\tr1, r0, stack-[3]\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI7_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI7_2[0], r1, r2\n\tadd\tstack-[3], r0, r3\n\tjump.ne\t@.BB7_6\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB7_9\n\tadd\t32784, r0, stack-[1]\n.BB7_7:\n\tsub.s\t1, r3, r3\n\tadd\tr3, r0, stack-[3]\n\tst.1\t0, r3\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\tstack-[1], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\tstack-[3], r0, r3\n\tjump.eq\t@.BB7_7\n.BB7_9:\n\tret\n.BB7_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_6:\n\tld.1\t64, r1\n\tadd\t@CPI7_3[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI7_0[0], r0, r2\n\tsub.s!\t@CPI7_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI7_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\nfun_transferFrom:\n.func_begin8:\n\tnop\tstack+=[8]\n\tadd\tr2, r0, stack-[3]\n\tadd\tr1, r0, stack-[4]\n\tsload\tr0, r1\n\tadd\tr3, r0, stack-[5]\n\tsub!\tr1, r3, r1\n\tjump.le\t@.BB8_6\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tand!\t@CPI8_2[0], r3, r1\n\tjump.ne\t@.BB8_6\n\tsub!\tr3, r0, r1\n\tjump.ne\t@.BB8_10\n\tadd\t32784, r0, stack-[6]\n\tadd\tstack-[5], r0, r1\n.BB8_8:\n\tsub.s\t1, r1, r1\n\tadd\tr1, r0, stack-[8]\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\tstack-[6], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub!\tr3, r0, r1\n\tadd\tstack-[8], r0, r1\n\tjump.eq\t@.BB8_8\n.BB8_10:\n\tadd\tstack-[4], r0, r1\n\tand\t@CPI8_5[0], r1, r2\n\tadd\tr3, r0, stack-[4]\n\tand\t@CPI8_5[0], r3, r1\n\tadd\tr2, r0, stack-[8]\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB8_11\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_2\n\tld\tr1, r2\n\tsload\tr2, r3\n\tcontext.caller\tr1\n\tand\t@CPI8_5[0], r1, r4\n\tsub.s!\tstack-[8], r4, r1\n\tjump.eq\t@.BB8_18\n\tsub!\tr4, r3, r1\n\tjump.eq\t@.BB8_18\n\tadd\tr4, r0, stack-[6]\n\tadd\tr3, r0, stack-[1]\n\tadd\tr2, r0, stack-[2]\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_2\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\tstack-[2], r0, r2\n\tadd\tstack-[1], r0, r3\n\tjump.eq\t@.BB8_19\n.BB8_18:\n\tadd\tstack-[3], r0, r1\n\tand!\t@CPI8_5[0], r1, stack-[6]\n\tjump.eq\t@.BB8_20\n\tsub!\tr3, r0, r1\n\tjump.eq\t@.BB8_23\n\tsstore\tr2, r0\n.BB8_23:\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI8_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI8_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_9[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_26\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_2\n\tadd\tstack-[3], r0, r2\n\tshl.s\t160, r2, r2\n\tor\tstack-[6], r2, r2\n\tor\t@CPI8_10[0], r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI8_10[0], r1, r1\n\tjump.ne\t@.BB8_31\n\tadd\tstack-[5], r0, r1\n\tadd\t1, r1, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB8_31\n\tsload\tr0, r1\n\tsub!\tstack-[3], r1, r1\n\tjump.eq\t@.BB8_31\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_2\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tsstore\tr1, r2\n.BB8_31:\n\tld.1\t64, r1\n\tadd\t@CPI8_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI8_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI8_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI8_11[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI8_12[0], r0, r4\n\tadd\tstack-[8], r0, r5\n\tadd\tstack-[6], r0, r6\n\tadd\tstack-[5], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB8_2\n\tret\n.BB8_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_6:\n\tld.1\t64, r1\n\tadd\t@CPI8_3[0], r0, r2\n\tjump\t@.BB8_7\n.BB8_11:\n\tld.1\t64, r1\n\tadd\t@CPI8_6[0], r0, r2\n\tjump\t@.BB8_7\n.BB8_20:\n\tld.1\t64, r1\n\tadd\t@CPI8_13[0], r0, r2\n\tjump\t@.BB8_7\n.BB8_26:\n\trevert\n.BB8_19:\n\tld.1\t64, r1\n\tadd\t@CPI8_7[0], r0, r2\n.BB8_7:\n\tst.1\tr1, r2\n\tadd\t@CPI8_0[0], r0, r2\n\tsub.s!\t@CPI8_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI8_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nfun_safeTransferFrom:\n.func_begin9:\n\tnop\tstack+=[11]\n\tadd\tr4, r0, stack-[1]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[4]\n\tsload\tr0, r1\n\tadd\tr3, r0, stack-[6]\n\tsub!\tr1, r3, r1\n\tjump.le\t@.BB9_6\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tadd\tr1, r0, stack-[8]\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tand!\t@CPI9_2[0], r3, r1\n\tjump.ne\t@.BB9_6\n\tsub!\tr3, r0, r1\n\tjump.ne\t@.BB9_10\n\tadd\t32784, r0, stack-[7]\n\tadd\tstack-[6], r0, r1\n.BB9_8:\n\tsub.s\t1, r1, r1\n\tadd\tr1, r0, stack-[9]\n\tst.1\t0, r1\n\tadd\tstack-[8], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\t@CPI9_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub!\tr3, r0, r1\n\tadd\tstack-[9], r0, r1\n\tjump.eq\t@.BB9_8\n.BB9_10:\n\tadd\tstack-[4], r0, r1\n\tand\t@CPI9_5[0], r1, r2\n\tadd\tr3, r0, stack-[3]\n\tand\t@CPI9_5[0], r3, r1\n\tadd\tr2, r0, stack-[9]\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB9_11\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_2\n\tld\tr1, r3\n\tsload\tr3, r4\n\tcontext.caller\tr1\n\tand\t@CPI9_5[0], r1, r2\n\tadd\tr2, r0, stack-[4]\n\tsub.s!\tstack-[9], r2, r1\n\tjump.eq\t@.BB9_18\n\tsub!\tstack-[4], r4, r1\n\tjump.eq\t@.BB9_18\n\tadd\tr4, r0, stack-[2]\n\tadd\tr3, r0, stack-[7]\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_2\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\t@CPI9_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\tstack-[7], r0, r3\n\tadd\tstack-[2], r0, r4\n\tjump.eq\t@.BB9_19\n.BB9_18:\n\tadd\tstack-[5], r0, r1\n\tand!\t@CPI9_5[0], r1, r1\n\tjump.eq\t@.BB9_20\n\tadd\tr1, r0, stack-[7]\n\tsub!\tr4, r0, r1\n\tjump.eq\t@.BB9_23\n\tsstore\tr3, r0\n.BB9_23:\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\t@CPI9_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI9_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI9_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_9[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_26\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[8], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\t@CPI9_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_2\n\tadd\tstack-[2], r0, r2\n\tshl.s\t160, r2, r2\n\tadd\tstack-[7], r0, r6\n\tor\tr2, r6, r2\n\tor\t@CPI9_10[0], r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[3], r0, r1\n\tand!\t@CPI9_10[0], r1, r1\n\tjump.ne\t@.BB9_31\n\tadd\tstack-[6], r0, r1\n\tadd\t1, r1, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t0, r1\n\tadd\tstack-[8], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[7], r0, r6\n\tjump.ne\t@.BB9_31\n\tsload\tr0, r1\n\tsub!\tstack-[2], r1, r1\n\tjump.eq\t@.BB9_31\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[8], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_2\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tsstore\tr1, r2\n\tadd\tstack-[7], r0, r6\n.BB9_31:\n\tld.1\t64, r1\n\tadd\t@CPI9_0[0], r0, r4\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI9_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI9_11[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI9_12[0], r0, r4\n\tadd\tstack-[9], r0, r5\n\tadd\tstack-[6], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB9_2\n\tadd\t@CPI9_13[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\t@CPI9_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_14[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_26\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB9_65\n\tcontext.sp\tr8\n\tld.1\t64, r10\n\tadd\t100, r10, r1\n\tadd\t128, r0, r7\n\tst.1\tr1, r7\n\tadd\t68, r10, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r10, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI9_15[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t4, r10, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[1], r0, r6\n\tld.1\tr6, r1\n\tadd\t132, r10, r2\n\tst.1\tr2, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB9_42\n\tadd\t164, r10, r2\n\tadd\tr0, r0, r3\n.BB9_39:\n\tadd\tr3, r2, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB9_39\n\tsub!\tr3, r1, r3\n\tjump.le\t@.BB9_42\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n.BB9_42:\n\tcontext.gas_left\tr6\n\tadd\tstack-[7], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB9_44\n\tcontext.sp\tr5\n\tsub.s\t11, r5, r5\n\tmul\t32, r5, r5, r0\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tadd\t0, r0, stack-[11]\n\tjump\t@.BB9_49\n.BB9_44:\n\tadd\tr8, r0, stack-[9]\n\tadd\tr7, r0, stack-[6]\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\t@CPI9_0[0], r0, r3\n\tsub.s!\t@CPI9_0[0], r10, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr10, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t164, r1, r1\n\tsub.s!\t@CPI9_0[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI9_0[0], r6, r4\n\tadd.ge\tr3, r0, r6\n\tshl.s\t192, r6, r3\n\tor\tr3, r1, r1\n\tadd\tr10, r0, stack-[8]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI9_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB9_67\n\tadd\tr0, r0, r7\n.BB9_46:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB9_46\n.BB9_67:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB9_48\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB9_48:\n\tadd\tr3, r0, stack[@returndatasize]\n\tcontext.sp\tr5\n\tsub.s\t10, r5, r5\n\tmul\t32, r5, r5, r0\n\tadd\t0, r0, stack-[10]\n\tand!\t1, r2, r2\n\tadd\tstack-[9], r0, r8\n\tjump.eq\t@.BB9_54\n.BB9_49:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI9_17[0], r1, r4\n\tjump.gt\t@.BB9_51\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB9_51\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB9_2\n\tld.1\tr10, r1\n\tand\t@CPI9_18[0], r1, r2\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB9_2\n\tshr.s\t5, r5, r2\n\tadd\tr1, r0, stack[r2]\n\tcontext.sp\tr2\n\tsub\tr8, r2, r2\n\tnop\tstack+=[r2]\n\tsub.s!\t@CPI9_15[0], r1, r1\n\tjump.ne\t@.BB9_63\n.BB9_65:\n\tret\n.BB9_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_6:\n\tld.1\t64, r1\n\tadd\t@CPI9_3[0], r0, r2\n\tjump\t@.BB9_7\n.BB9_26:\n\trevert\n.BB9_11:\n\tld.1\t64, r1\n\tadd\t@CPI9_6[0], r0, r2\n\tjump\t@.BB9_7\n.BB9_20:\n\tld.1\t64, r1\n\tadd\t@CPI9_22[0], r0, r2\n\tjump\t@.BB9_7\n.BB9_19:\n\tld.1\t64, r1\n\tadd\t@CPI9_7[0], r0, r2\n\tjump\t@.BB9_7\n.BB9_54:\n\tadd\t96, r0, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB9_61\n\tadd\t63, r3, r2\n\tand\t@CPI9_16[0], r2, r4\n\tld.1\t64, r2\n\tadd\tr2, r4, r4\n\tsub!\tr4, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI9_17[0], r4, r6\n\tjump.gt\t@.BB9_51\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB9_51\n\tst.1\t64, r4\n\tand\t31, r3, r4\n\tst.1.inc\tr2, r3, r8\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB9_66\n\tadd\tr0, r0, r5\n.BB9_59:\n\tshl.s\t5, r5, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB9_59\n.BB9_66:\n\tadd\tr8, r0, stack-[6]\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB9_61\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tstack-[6], r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB9_61:\n\tld.1\tr2, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB9_62\n.BB9_63:\n\tld.1\t64, r1\n\tadd\t@CPI9_19[0], r0, r2\n.BB9_7:\n\tst.1\tr1, r2\n\tadd\t@CPI9_0[0], r0, r2\n\tsub.s!\t@CPI9_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI9_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_51:\n\tadd\t@CPI9_20[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_21[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_62:\n\tadd\t@CPI9_0[0], r0, r2\n\tsub.s!\t@CPI9_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[6], r0, r4\n\tsub.s!\t@CPI9_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\n__cxa_throw:\n\trevert\n\n__sha3:\n.func_begin10:\n\tadd\t@CPI11_0[0], r0, r3\n\tsub.s!\t@CPI11_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI11_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_2\n\tld\tr1, r1\n\tret\n.BB11_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\n__farcall:\n.func_begin11:\n.tmp0:\n\tfar_call\tr1, r2, @.BB12_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB12_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end11:\n\n__staticcall:\n.func_begin12:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB13_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB13_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end12:\n\n\t.data\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI6_1:\nCPI7_0:\nCPI8_0:\nCPI9_0:\nCPI11_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 29616700899909936638755325206540693792164099331837307140160229321190026510336\nCPI0_2:\n\t.cell 29559940071865644359953158370651467864337506021056913307014681766520021843968\nCPI0_3:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_4:\n\t.cell -105312291668557186697918027683670432318895095400549111254310977536\nCPI0_5:\n\t.cell 18446744073709551616\nCPI0_6:\n\t.cell -27889059366240281169193357100633332908378892778709981755071813198463099602853\nCPI0_7:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_8:\n\t.cell 1666326813\nCPI0_9:\n\t.cell 2720838756\nCPI0_10:\n\t.cell 3363526364\nCPI0_11:\n\t.cell 3363526365\nCPI0_12:\n\t.cell 3917867461\nCPI0_13:\n\t.cell 2720838757\nCPI0_14:\n\t.cell 3096268766\nCPI0_15:\n\t.cell 2514000704\nCPI0_16:\n\t.cell 2514000705\nCPI0_17:\n\t.cell 2691771752\nCPI0_18:\n\t.cell 1666326814\nCPI0_19:\n\t.cell 1889567281\nCPI0_20:\n\t.cell 157198258\nCPI0_21:\n\t.cell 599290588\nCPI0_22:\n\t.cell 599290589\nCPI0_23:\n\t.cell 1115958798\nCPI0_24:\n\t.cell 157198259\nCPI0_25:\n\t.cell 404098525\nCPI0_26:\n\t.cell 33540519\nCPI0_27:\n\t.cell 117300739\nCPI0_28:\n\t.cell 135795452\nCPI0_29:\nCPI3_1:\nCPI6_0:\nCPI8_5:\nCPI9_5:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_30:\n\t.cell 2535301200456458802993406410752\nCPI0_31:\nCPI6_2:\nCPI7_1:\nCPI8_1:\nCPI9_1:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_32:\nCPI7_2:\nCPI8_2:\nCPI9_2:\n\t.cell 26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_33:\n\t.cell -42834920450715407022082223427960438759242131871708039438462785066532668964864\nCPI0_34:\nCPI7_4:\nCPI8_4:\nCPI9_4:\n\t.cell 316912650057057350374175801344\nCPI0_35:\nCPI5_0:\nCPI9_17:\n\t.cell 18446744073709551615\nCPI0_36:\nCPI3_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_37:\nCPI4_1:\nCPI5_1:\nCPI9_20:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_38:\nCPI4_2:\nCPI5_2:\nCPI9_21:\n\t.cell 2852213850513516153367582212096\nCPI0_39:\n\t.cell 10488878412788366941768124514102328501031624832915735463117339209566108871729\nCPI0_40:\n\t.cell 18446744073709551617\nCPI0_41:\nCPI8_8:\nCPI9_8:\n\t.cell 54919857843691310904240101001871775513466943666296306094405906504622902841650\nCPI0_42:\nCPI8_9:\nCPI9_9:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI0_43:\nCPI8_10:\nCPI9_10:\n\t.cell 53919893334301279589334030174039261347274288845081144962207220498432\nCPI0_44:\nCPI8_11:\nCPI9_11:\nCPI11_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_45:\nCPI8_12:\nCPI9_12:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI0_46:\n\t.cell 20819442237172034821294950492084174297515035416673663051815846959729094950912\nCPI0_47:\n\t.cell -33748705468096028612610069374420846988093249867027612426891605627573836447744\nCPI0_48:\n\t.cell 316912652418240591808998408192\nCPI0_49:\n\t.cell 2535301202817642044428229017600\nCPI0_50:\n\t.cell -50972281593181485357266260592198204414912041628480094241293009403468908068864\nCPI0_51:\nCPI7_3:\nCPI8_3:\nCPI9_3:\n\t.cell -14845744335292530952159170063561095606257592803503607807502022965368918638592\nCPI0_52:\n\t.cell -21845785353554085949054571718828670455202510469655645007983171859163564212224\nCPI0_53:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_54:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI0_55:\n\t.cell -22037877292112947632546596542686982807440413056460666925400268457099709644800\nCPI0_56:\n\t.cell 29102676481673041902632991033461445430619272659676223336789171408008386403022\nCPI0_57:\nCPI9_18:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_58:\n\t.cell 904250603428552709895185118199468575982109441609966099573332780532423983104\nCPI0_59:\n\t.cell -57591534043048631271602713168962198724648561309353517944097662808962438791168\nCPI0_60:\n\t.cell 41326688264978518566617017154793646184809722027297161851759941631668658372608\nCPI4_0:\n\t.cell 18446744073709551584\nCPI8_6:\nCPI9_6:\n\t.cell -42933493348836003226145550184546686198324492501020130702489414725785790447616\nCPI8_7:\nCPI9_7:\n\t.cell 40610253321208270774332185957187447255326585543192491974159042718829090177024\nCPI8_13:\nCPI9_22:\n\t.cell -9800292063374010541101823263340310137772563531408190335784025992253224779776\nCPI9_13:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI9_14:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI9_15:\n\t.cell 9518847204935358166548570266051330015907116135037852959641967396525866745856\nCPI9_16:\n\t.cell 8589934560\nCPI9_19:\n\t.cell -20966298728256804457890858603336338499916778406143570283640639356514726838272\n","bytecode":{"object":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","mint(uint256)":"a0712d68","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":"/// @use-src 0:\"contracts/ERC712A.sol\", 1:\"erc721a/contracts/ERC721A.sol\", 2:\"erc721a/contracts/IERC721A.sol\"\nobject \"Azuki_25\" {\n    code {\n        {\n            /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let memPtr := allocate_memory_array_string()\n            let _1 := 32\n            mstore(add(memPtr, _1), \"Azuki\")\n            let memPtr_1 := allocate_memory_array_string()\n            mstore(add(memPtr_1, _1), \"AZUKI\")\n            let newLen := mload(memPtr)\n            if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            clean_up_bytearray_end_slots_string_storage_1087(extract_byte_array_length(sload(/** @src 1:5012:5025  \"_name = name_\" */ 0x02)), /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ newLen)\n            let srcOffset := /** @src -1:-1:-1 */ 0\n            /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n            srcOffset := _1\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage_1088()\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                for { } lt(i, loopEnd) { i := add(i, _1) }\n                {\n                    sstore(dstPtr, mload(add(memPtr, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, _1)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(memPtr, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src 1:5012:5025  \"_name = name_\" */ 0x02, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := /** @src -1:-1:-1 */ 0\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                if newLen\n                {\n                    value := mload(add(memPtr, srcOffset))\n                }\n                sstore(/** @src 1:5012:5025  \"_name = name_\" */ 0x02, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n            copy_byte_array_to_storage_from_string_to_string(memPtr_1)\n            sstore(/** @src -1:-1:-1 */ 0, 0)\n            /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n            let _2 := mload(64)\n            let _3 := datasize(\"Azuki_25_deployed\")\n            codecopy(_2, dataoffset(\"Azuki_25_deployed\"), _3)\n            return(_2, _3)\n        }\n        function panic_error_0x41()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        function allocate_memory_array_string() -> memPtr\n        {\n            let memPtr_1 := mload(64)\n            let newFreePtr := add(memPtr_1, 64)\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr_1)) { panic_error_0x41() }\n            mstore(64, newFreePtr)\n            memPtr := memPtr_1\n            mstore(memPtr_1, 5)\n        }\n        function extract_byte_array_length(data) -> length\n        {\n            length := shr(1, data)\n            let outOfPlaceEncoding := and(data, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(0, 0x24)\n            }\n        }\n        function array_dataslot_string_storage_1088() -> data\n        {\n            mstore(0, /** @src 1:5012:5025  \"_name = name_\" */ 0x02)\n            /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n            data := keccak256(0, 0x20)\n        }\n        function array_dataslot_string_storage() -> data\n        {\n            mstore(0, /** @src 1:5035:5052  \"_symbol = symbol_\" */ 0x03)\n            /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n            data := keccak256(0, 0x20)\n        }\n        function clean_up_bytearray_end_slots_string_storage_1087(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 1:5012:5025  \"_name = name_\" */ 0x02)\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _1)\n                }\n            }\n        }\n        /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n        function clean_up_bytearray_end_slots_string_storage(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 1:5035:5052  \"_symbol = symbol_\" */ 0x03)\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _1)\n                }\n            }\n        }\n        /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n        function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n        {\n            used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n        }\n        function copy_byte_array_to_storage_from_string_to_string(src)\n        {\n            let newLen := mload(src)\n            if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            clean_up_bytearray_end_slots_string_storage(extract_byte_array_length(sload(/** @src 1:5035:5052  \"_symbol = symbol_\" */ 0x03)), /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ newLen)\n            let srcOffset := 0\n            let srcOffset_1 := 0x20\n            srcOffset := srcOffset_1\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage()\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n                {\n                    sstore(dstPtr, mload(add(src, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, srcOffset_1)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(src, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 1:5035:5052  \"_symbol = symbol_\" */ 0x03, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ newLen), 248), not(0)))))\n                }\n                sstore(/** @src 1:5035:5052  \"_symbol = symbol_\" */ 0x03, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(src, srcOffset))\n                }\n                sstore(/** @src 1:5035:5052  \"_symbol = symbol_\" */ 0x03, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n        }\n    }\n    /// @use-src 0:\"contracts/ERC712A.sol\", 1:\"erc721a/contracts/ERC721A.sol\"\n    object \"Azuki_25_deployed\" {\n        code {\n            {\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                mstore(64, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x01ffc9a7 {\n                        external_fun_supportsInterface()\n                    }\n                    case 0x06fdde03 { external_fun_name() }\n                    case 0x081812fc { external_fun_getApproved() }\n                    case 0x095ea7b3 { external_fun_approve() }\n                    case 0x18160ddd { external_fun_totalSupply() }\n                    case 0x23b872dd { external_fun_transferFrom() }\n                    case 0x42842e0e {\n                        external_fun_safeTransferFrom()\n                    }\n                    case 0x6352211e { external_fun_ownerOf() }\n                    case 0x70a08231 { external_fun_balanceOf() }\n                    case 0x95d89b41 { external_fun_symbol() }\n                    case 0xa0712d68 { external_fun_mint() }\n                    case 0xa22cb465 {\n                        external_fun_setApprovalForAll()\n                    }\n                    case 0xb88d4fde {\n                        external_fun_safeTransferFrom_1007()\n                    }\n                    case 0xc87b56dd { external_fun_tokenURI() }\n                    case 0xe985e9c5 {\n                        external_fun_isApprovedForAll()\n                    }\n                }\n                revert(0, 0)\n            }\n            function validator_revert_bytes4(value)\n            {\n                if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n            }\n            function cleanup_bool(value) -> cleaned\n            {\n                cleaned := iszero(iszero(value))\n            }\n            function external_fun_supportsInterface()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                let value := calldataload(4)\n                validator_revert_bytes4(value)\n                /// @src 1:9558:9583  \"interfaceId == 0x01ffc9a7\"\n                let _1 := /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ and(/** @src 1:9558:9583  \"interfaceId == 0x01ffc9a7\" */ value, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ shl(224, 0xffffffff))\n                /// @src 1:9558:9659  \"interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165....\"\n                let expr := /** @src 1:9558:9583  \"interfaceId == 0x01ffc9a7\" */ eq(_1, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ shl(224, 0x01ffc9a7))\n                /// @src 1:9558:9659  \"interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165....\"\n                if iszero(expr)\n                {\n                    expr := /** @src 1:9634:9659  \"interfaceId == 0x80ac58cd\" */ eq(_1, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ shl(224, 0x80ac58cd))\n                }\n                /// @src 1:9558:9735  \"interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165....\"\n                let expr_1 := expr\n                if iszero(expr)\n                {\n                    expr_1 := /** @src 1:9710:9735  \"interfaceId == 0x5b5e139f\" */ eq(_1, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ shl(224, 0x5b5e139f))\n                }\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(expr_1)))\n                return(memPos, 32)\n            }\n            function array_storeLengthForEncoding_string(pos, length) -> updated_pos\n            {\n                mstore(pos, length)\n                updated_pos := add(pos, 0x20)\n            }\n            function abi_encode_string_to_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                if gt(i, length)\n                {\n                    mstore(add(add(pos, length), 0x20), 0)\n                }\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                mstore(headStart, 32)\n                tail := abi_encode_string_to_string(value0, add(headStart, 32))\n            }\n            function external_fun_name()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := 0\n                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                let memPtr := mload(64)\n                let ret := _1\n                let slotValue := sload(/** @src 1:10125:10130  \"_name\" */ 0x02)\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                let length := _1\n                let _2 := 1\n                length := shr(_2, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _2)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _3 := 32\n                if eq(outOfPlaceEncoding, lt(length, _3))\n                {\n                    mstore(_1, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(_1, 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _3)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage()\n                    let i := _1\n                    for { } lt(i, length) { i := add(i, _3) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _2)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_string(memPos, memPtr), memPos))\n            }\n            function external_fun_getApproved()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                let value0 := calldataload(4)\n                /// @src 1:16455:16519  \"if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken()\"\n                if /** @src 1:16459:16476  \"!_exists(tokenId)\" */ iszero(/** @src 1:16460:16476  \"_exists(tokenId)\" */ fun_exists(value0))\n                /// @src 1:16455:16519  \"if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken()\"\n                {\n                    /// @src 1:16485:16519  \"ApprovalQueryForNonexistentToken()\"\n                    let _1 := /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ mload(64)\n                    /// @src 1:16485:16519  \"ApprovalQueryForNonexistentToken()\"\n                    mstore(_1, shl(226, 0x33d1c039))\n                    revert(_1, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ 4)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ value0)\n                mstore(32, /** @src 1:16537:16552  \"_tokenApprovals\" */ 0x06)\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                let converted := and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ 0x40)), sub(shl(160, 1), 1))\n                let memPos := mload(0x40)\n                mstore(memPos, converted)\n                return(memPos, 32)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_4455() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function external_fun_approve()\n            {\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                let value0 := abi_decode_address()\n                let value1 := calldataload(36)\n                let _1 := sub(shl(160, 1), 1)\n                let converted := and(/** @src 1:11505:11532  \"_packedOwnershipOf(tokenId)\" */ fun_packedOwnershipOf(/** @src 1:15916:15932  \"ownerOf(tokenId)\" */ value1), /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ _1)\n                /// @src 1:15943:16115  \"if (_msgSenderERC721A() != owner)...\"\n                if /** @src 1:15947:15975  \"_msgSenderERC721A() != owner\" */ iszero(eq(/** @src 1:39523:39533  \"msg.sender\" */ caller(), /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ converted))\n                /// @src 1:15943:16115  \"if (_msgSenderERC721A() != owner)...\"\n                {\n                    /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ converted)\n                    mstore(32, /** @src 1:17402:17420  \"_operatorApprovals\" */ 0x07)\n                    /// @src 1:15989:16115  \"if (!isApprovedForAll(owner, _msgSenderERC721A())) {...\"\n                    if /** @src 1:15993:16038  \"!isApprovedForAll(owner, _msgSenderERC721A())\" */ iszero(/** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ and(sload(/** @src 1:17402:17437  \"_operatorApprovals[owner][operator]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ 64), /** @src 1:39523:39533  \"msg.sender\" */ caller())), /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ 0xff))\n                    /// @src 1:15989:16115  \"if (!isApprovedForAll(owner, _msgSenderERC721A())) {...\"\n                    {\n                        /// @src 1:16065:16100  \"ApprovalCallerNotOwnerNorApproved()\"\n                        let _2 := /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ mload(64)\n                        /// @src 1:16065:16100  \"ApprovalCallerNotOwnerNorApproved()\"\n                        mstore(_2, shl(225, 0x67d9dca1))\n                        revert(_2, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ 4)\n                    }\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ value1)\n                mstore(0x20, /** @src 1:16125:16140  \"_tokenApprovals\" */ 0x06)\n                /// @src 1:16125:16160  \"_tokenApprovals[tokenId].value = to\"\n                update_storage_value_offsett_address_to_address(/** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ 64), /** @src 1:16125:16160  \"_tokenApprovals[tokenId].value = to\" */ value0)\n                /// @src 1:16175:16203  \"Approval(owner, to, tokenId)\"\n                let _3 := /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ mload(64)\n                /// @src 1:16175:16203  \"Approval(owner, to, tokenId)\"\n                log4(_3, /** @src -1:-1:-1 */ 0, /** @src 1:16175:16203  \"Approval(owner, to, tokenId)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, converted, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ and(/** @src 1:16175:16203  \"Approval(owner, to, tokenId)\" */ value0, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ _1), /** @src 1:16175:16203  \"Approval(owner, to, tokenId)\" */ value1)\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                return(_3, /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n            function external_fun_totalSupply()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let _1 := sload(0)\n                let diff := sub(_1, sload(/** @src 1:6164:6176  \"_burnCounter\" */ 0x01))\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                let memPos := mload(64)\n                mstore(memPos, diff)\n                return(memPos, 32)\n            }\n            function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                value1 := value_1\n                value2 := calldataload(68)\n            }\n            function external_fun_transferFrom()\n            {\n                let param, param_1, param_2 := abi_decode_addresst_addresst_uint256(calldatasize())\n                fun_transferFrom(param, param_1, param_2)\n                return(mload(64), 0)\n            }\n            function external_fun_safeTransferFrom()\n            {\n                let param, param_1, param_2 := abi_decode_addresst_addresst_uint256(calldatasize())\n                let memPtr := mload(64)\n                let newFreePtr := add(memPtr, 0x20)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n                mstore(memPtr, 0)\n                /// @src 1:22899:22938  \"safeTransferFrom(from, to, tokenId, '')\"\n                fun_safeTransferFrom(param, param_1, param_2, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ memPtr)\n                return(mload(64), 0)\n            }\n            function external_fun_ownerOf()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                let converted := and(/** @src 1:11505:11532  \"_packedOwnershipOf(tokenId)\" */ fun_packedOwnershipOf(/** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ calldataload(4)), sub(shl(160, 1), 1))\n                let memPos := mload(64)\n                mstore(memPos, converted)\n                return(memPos, 32)\n            }\n            function external_fun_balanceOf()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                let _1 := and(abi_decode_address(), sub(shl(160, 1), 1))\n                /// @src 1:7136:7196  \"if (owner == address(0)) revert BalanceQueryForZeroAddress()\"\n                if /** @src 1:7140:7159  \"owner == address(0)\" */ iszero(/** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ _1)\n                /// @src 1:7136:7196  \"if (owner == address(0)) revert BalanceQueryForZeroAddress()\"\n                {\n                    /// @src 1:7168:7196  \"BalanceQueryForZeroAddress()\"\n                    let _2 := /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ mload(64)\n                    /// @src 1:7168:7196  \"BalanceQueryForZeroAddress()\"\n                    mstore(_2, shl(226, 0x23d3ad81))\n                    revert(_2, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ 4)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ _1)\n                mstore(32, /** @src 1:7213:7231  \"_packedAddressData\" */ 0x05)\n                /// @src 1:7206:7268  \"return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY\"\n                let var := /** @src 1:7213:7268  \"_packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY\" */ and(/** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ 0x40)), /** @src 1:1360:1373  \"(1 << 64) - 1\" */ 0xffffffffffffffff)\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                let memPos := mload(0x40)\n                mstore(memPos, var)\n                return(memPos, 32)\n            }\n            function external_fun_symbol()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := 0\n                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                let memPtr := mload(64)\n                let ret := _1\n                let slotValue := sload(/** @src 1:10296:10303  \"_symbol\" */ 0x03)\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                let length := _1\n                let _2 := 1\n                length := shr(_2, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _2)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _3 := 32\n                if eq(outOfPlaceEncoding, lt(length, _3))\n                {\n                    mstore(_1, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(_1, 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _3)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage_4447()\n                    let i := _1\n                    for { } lt(i, length) { i := add(i, _3) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _2)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_string(memPos, memPtr), memPos))\n            }\n            function external_fun_mint()\n            {\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                let value0 := calldataload(4)\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                let _2 := sload(/** @src -1:-1:-1 */ _1)\n                /// @src 1:27209:27253  \"if (quantity == 0) revert MintZeroQuantity()\"\n                if /** @src 1:27213:27226  \"quantity == 0\" */ iszero(value0)\n                /// @src 1:27209:27253  \"if (quantity == 0) revert MintZeroQuantity()\"\n                {\n                    /// @src 1:27235:27253  \"MintZeroQuantity()\"\n                    let _3 := /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ mload(64)\n                    /// @src 1:27235:27253  \"MintZeroQuantity()\"\n                    mstore(_3, shl(224, 0xb562e8dd))\n                    revert(_3, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ 4)\n                }\n                /// @src 1:27728:27750  \"_packedAddressData[to]\"\n                let _4 := mapping_index_access_mapping_address_uint256_of_address_4449(/** @src 0:292:302  \"msg.sender\" */ caller())\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                sstore(_4, /** @src 1:2392:2400  \"1 << 225\" */ add(/** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ sload(/** @src 1:27728:27799  \"_packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1)\" */ _4), /** @src 1:1495:1497  \"64\" */ mul(value0, /** @src 1:27766:27798  \"(1 << _BITPOS_NUMBER_MINTED) | 1\" */ 0x010000000000000001)))\n                /// @src 1:27767:27768  \"1\"\n                let _5 := 0x01\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                sstore(/** @src 1:28035:28066  \"_packedOwnerships[startTokenId]\" */ mapping_index_access_mapping_uint256_uint256_of_uint256(_2), /** @src 1:28069:28205  \"_packOwnershipData(...\" */ fun_packOwnershipData(/** @src 0:292:302  \"msg.sender\" */ caller(), /** @src 1:14998:15149  \"assembly {...\" */ shl(225, eq(/** @src 1:28125:28155  \"_nextInitializedFlag(quantity)\" */ value0, /** @src 1:27767:27768  \"1\" */ _5))))\n                /// @src 1:28264:28287  \"startTokenId + quantity\"\n                let expr := /** @src 1:2392:2400  \"1 << 225\" */ add(/** @src 1:28264:28287  \"startTokenId + quantity\" */ _2, value0)\n                /// @src 1:28648:29814  \"assembly {...\"\n                let _6 := 100389287136786176327247604509743168900146139575972864366142685224231313322991\n                log4(/** @src -1:-1:-1 */ _1, _1, /** @src 1:28648:29814  \"assembly {...\" */ _6, /** @src -1:-1:-1 */ _1, /** @src 0:292:302  \"msg.sender\" */ caller(), /** @src 1:28648:29814  \"assembly {...\" */ _2)\n                let usr$tokenId := add(_2, /** @src 1:27767:27768  \"1\" */ _5)\n                /// @src 1:28648:29814  \"assembly {...\"\n                for { }\n                iszero(eq(usr$tokenId, expr))\n                {\n                    usr$tokenId := add(usr$tokenId, /** @src 1:27767:27768  \"1\" */ _5)\n                }\n                /// @src 1:28648:29814  \"assembly {...\"\n                {\n                    log4(/** @src -1:-1:-1 */ _1, _1, /** @src 1:28648:29814  \"assembly {...\" */ _6, /** @src -1:-1:-1 */ _1, /** @src 0:292:302  \"msg.sender\" */ caller(), /** @src 1:28648:29814  \"assembly {...\" */ usr$tokenId)\n                }\n                /// @src 1:29827:29872  \"if (toMasked == 0) revert MintToZeroAddress()\"\n                if /** @src 1:29831:29844  \"toMasked == 0\" */ iszero(/** @src 0:292:302  \"msg.sender\" */ caller())\n                /// @src 1:29827:29872  \"if (toMasked == 0) revert MintToZeroAddress()\"\n                {\n                    /// @src 1:29853:29872  \"MintToZeroAddress()\"\n                    let _7 := /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ mload(/** @src 1:1495:1497  \"64\" */ 0x40)\n                    /// @src 1:29853:29872  \"MintToZeroAddress()\"\n                    mstore(_7, shl(232, 3016547))\n                    revert(_7, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ 4)\n                }\n                sstore(/** @src -1:-1:-1 */ _1, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ expr)\n                return(mload(/** @src 1:1495:1497  \"64\" */ 0x40), /** @src -1:-1:-1 */ _1)\n            }\n            /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n            function external_fun_setApprovalForAll()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                let value0 := abi_decode_address()\n                let value := calldataload(36)\n                let _1 := iszero(iszero(value))\n                if iszero(eq(value, _1))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:39523:39533  \"msg.sender\" */ caller())\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                mstore(32, /** @src 1:16995:17013  \"_operatorApprovals\" */ 0x07)\n                /// @src 1:16995:17044  \"_operatorApprovals[_msgSenderERC721A()][operator]\"\n                let _2 := mapping_index_access_mapping_address_uint256_of_address(/** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ 64), /** @src 1:16995:17044  \"_operatorApprovals[_msgSenderERC721A()][operator]\" */ value0)\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                let value_1 := and(sload(_2), not(255))\n                sstore(_2, or(value_1, and(_1, 255)))\n                /// @src 1:17070:17125  \"ApprovalForAll(_msgSenderERC721A(), operator, approved)\"\n                let _3 := /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ mload(64)\n                mstore(_3, _1)\n                /// @src 1:17070:17125  \"ApprovalForAll(_msgSenderERC721A(), operator, approved)\"\n                log3(_3, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ 32, /** @src 1:17070:17125  \"ApprovalForAll(_msgSenderERC721A(), operator, approved)\" */ 0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, /** @src 1:39523:39533  \"msg.sender\" */ caller(), /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ and(/** @src 1:17070:17125  \"ApprovalForAll(_msgSenderERC721A(), operator, approved)\" */ value0, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ sub(shl(160, 1), 1)))\n                return(mload(64), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation_6842(memPtr)\n            {\n                let newFreePtr := add(memPtr, 32)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function external_fun_safeTransferFrom_1007()\n            {\n                if slt(add(calldatasize(), not(3)), 128)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                let value0 := abi_decode_address()\n                let value1 := abi_decode_address_4455()\n                let offset := calldataload(100)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                if iszero(slt(add(offset, 35), calldatasize()))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                let _1 := calldataload(add(4, offset))\n                let _2 := array_allocation_size_bytes(_1)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _2)\n                mstore(memPtr, _1)\n                if gt(add(add(offset, _1), 36), calldatasize())\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                calldatacopy(add(memPtr, 32), add(offset, 36), _1)\n                mstore(add(add(memPtr, _1), 32), /** @src -1:-1:-1 */ 0)\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                fun_safeTransferFrom(value0, value1, calldataload(68), memPtr)\n                return(mload(64), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n            function external_fun_tokenURI()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:10509:10568  \"if (!_exists(tokenId)) revert URIQueryForNonexistentToken()\"\n                if /** @src 1:10513:10530  \"!_exists(tokenId)\" */ iszero(/** @src 1:10514:10530  \"_exists(tokenId)\" */ fun_exists(/** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ calldataload(4)))\n                /// @src 1:10509:10568  \"if (!_exists(tokenId)) revert URIQueryForNonexistentToken()\"\n                {\n                    /// @src 1:10539:10568  \"URIQueryForNonexistentToken()\"\n                    let _1 := /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ mload(64)\n                    /// @src 1:10539:10568  \"URIQueryForNonexistentToken()\"\n                    mstore(_1, shl(228, 0x0a14c4b5))\n                    revert(_1, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ 4)\n                }\n                let memPtr := mload(64)\n                finalize_allocation_6842(memPtr)\n                mstore(memPtr, /** @src -1:-1:-1 */ 0)\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                let memPtr_1 := mload(64)\n                finalize_allocation_6842(memPtr_1)\n                mstore(memPtr_1, /** @src -1:-1:-1 */ 0)\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                let memPos := mload(64)\n                mstore(memPos, 32)\n                return(memPos, sub(abi_encode_string_to_string(memPtr_1, add(memPos, 32)), memPos))\n            }\n            function external_fun_isApprovedForAll()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                let value0 := abi_decode_address()\n                let value1 := abi_decode_address_4455()\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ and(value0, sub(shl(160, 1), 1)))\n                mstore(32, /** @src 1:17402:17420  \"_operatorApprovals\" */ 0x07)\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                let value := and(sload(/** @src 1:17402:17437  \"_operatorApprovals[owner][operator]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ 64), value1)), 0xff)\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(value)))\n                return(memPos, 32)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_4449(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:27728:27746  \"_packedAddressData\" */ 0x05)\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_4470(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:17402:17420  \"_operatorApprovals\" */ 0x07)\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address(slot, key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            function array_dataslot_string_storage() -> data\n            {\n                mstore(0, /** @src 1:10125:10130  \"_name\" */ 0x02)\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                data := 29102676481673041902632991033461445430619272659676223336789171408008386403022\n            }\n            function array_dataslot_string_storage_4447() -> data\n            {\n                mstore(0, /** @src 1:10296:10303  \"_symbol\" */ 0x03)\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                data := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n            }\n            function mapping_index_access_mapping_uint256_uint256_of_uint256(key) -> dataSlot\n            {\n                mstore(0, key)\n                mstore(0x20, 4)\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_uint256_uint256_of_uint256_4473(key) -> dataSlot\n            {\n                mstore(0, key)\n                mstore(0x20, /** @src 1:21654:21671  \"_packedOwnerships\" */ 0x04)\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            /// @src 1:2118:2126  \"1 << 224\"\n            function decrement_wrapping_uint256(value) -> ret\n            { ret := add(value, not(0)) }\n            /// @ast-id 558 @src 1:12515:13764  \"function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {...\"\n            function fun_packedOwnershipOf(var_tokenId) -> var\n            {\n                /// @src 1:12582:12589  \"uint256\"\n                var := /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ 0\n                /// @src 1:12582:12589  \"uint256\"\n                let var_1 := /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ 0\n                /// @src 1:12601:12623  \"uint256 curr = tokenId\"\n                let var_curr := var_tokenId\n                /// @src 1:12703:13700  \"if (curr < _currentIndex) {...\"\n                if /** @src 1:12707:12727  \"curr < _currentIndex\" */ lt(var_tokenId, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ sload(var_1))\n                /// @src 1:12703:13700  \"if (curr < _currentIndex) {...\"\n                {\n                    /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                    mstore(var_1, var_tokenId)\n                    /// @src 1:12768:12785  \"_packedOwnerships\"\n                    let _1 := 0x04\n                    /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                    let _2 := 0x20\n                    mstore(_2, /** @src 1:12768:12785  \"_packedOwnerships\" */ _1)\n                    /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                    let _3 := 0x40\n                    /// @src 1:12751:12791  \"uint256 packed = _packedOwnerships[curr]\"\n                    let var_packed := /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ sload(keccak256(var_1, _3))\n                    /// @src 1:12851:13682  \"if (packed & _BITMASK_BURNED == 0) {...\"\n                    if /** @src 1:12855:12884  \"packed & _BITMASK_BURNED == 0\" */ iszero(/** @src 1:12855:12879  \"packed & _BITMASK_BURNED\" */ and(var_packed, /** @src 1:2118:2126  \"1 << 224\" */ shl(224, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ 1)))\n                    /// @src 1:12851:13682  \"if (packed & _BITMASK_BURNED == 0) {...\"\n                    {\n                        /// @src 1:13510:13621  \"while (packed == 0) {...\"\n                        for { }\n                        /** @src 1:13517:13528  \"packed == 0\" */ iszero(var_packed)\n                        /// @src 1:13510:13621  \"while (packed == 0) {...\"\n                        { }\n                        {\n                            /// @src 1:13587:13593  \"--curr\"\n                            var_curr := /** @src 1:2118:2126  \"1 << 224\" */ add(/** @src 1:13587:13593  \"--curr\" */ var_curr, /** @src 1:2118:2126  \"1 << 224\" */ not(0))\n                            /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                            mstore(var_1, var_curr)\n                            mstore(_2, /** @src 1:12768:12785  \"_packedOwnerships\" */ _1)\n                            /// @src 1:13560:13594  \"packed = _packedOwnerships[--curr]\"\n                            var_packed := /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ sload(keccak256(var_1, _3))\n                        }\n                        /// @src 1:13646:13659  \"return packed\"\n                        var := var_packed\n                        leave\n                    }\n                }\n                /// @src 1:13726:13757  \"OwnerQueryForNonexistentToken()\"\n                let _4 := /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ mload(64)\n                /// @src 1:13726:13757  \"OwnerQueryForNonexistentToken()\"\n                mstore(_4, shl(225, 0x6f96cda1))\n                revert(_4, 4)\n            }\n            /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n            function update_storage_value_offsett_address_to_address(slot, value)\n            {\n                sstore(slot, or(and(sload(slot), shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n            }\n            function read_from_storage_split_offset_bool(slot) -> value\n            {\n                value := and(sload(slot), 0xff)\n            }\n            /// @ast-id 772 @src 1:17693:17970  \"function _exists(uint256 tokenId) internal view virtual returns (bool) {...\"\n            function fun_exists(var_tokenId) -> var\n            {\n                /// @src 1:17793:17944  \"_startTokenId() <= tokenId &&...\"\n                let expr := /** @src 1:17835:17858  \"tokenId < _currentIndex\" */ lt(var_tokenId, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ sload(/** @src 1:5508:5509  \"0\" */ 0x00))\n                /// @src 1:17793:17944  \"_startTokenId() <= tokenId &&...\"\n                if expr\n                {\n                    /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                    mstore(/** @src 1:5508:5509  \"0\" */ 0x00, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ var_tokenId)\n                    mstore(0x20, /** @src 1:17895:17912  \"_packedOwnerships\" */ 0x04)\n                    /// @src 1:17793:17944  \"_startTokenId() <= tokenId &&...\"\n                    expr := /** @src 1:17895:17944  \"_packedOwnerships[tokenId] & _BITMASK_BURNED == 0\" */ iszero(/** @src 1:17895:17939  \"_packedOwnerships[tokenId] & _BITMASK_BURNED\" */ and(/** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ sload(keccak256(/** @src 1:5508:5509  \"0\" */ 0x00, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ 0x40)), /** @src 1:2118:2126  \"1 << 224\" */ shl(224, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ 1)))\n                }\n                /// @src 1:17774:17944  \"return...\"\n                var := expr\n            }\n            /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n            function increment_wrapping_uint256(value) -> ret\n            { ret := add(value, 1) }\n            /// @ast-id 950 @src 1:19903:22667  \"function transferFrom(...\"\n            function fun_transferFrom(var_from, var_to, var_tokenId)\n            {\n                /// @src 1:20070:20097  \"_packedOwnershipOf(tokenId)\"\n                let expr := fun_packedOwnershipOf(var_tokenId)\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 1:20112:20157  \"address(uint160(prevOwnershipPacked)) != from\" */ var_from, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ _1)\n                /// @src 1:20108:20194  \"if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner()\"\n                if /** @src 1:20112:20157  \"address(uint160(prevOwnershipPacked)) != from\" */ iszero(eq(/** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ and(/** @src 1:20120:20148  \"uint160(prevOwnershipPacked)\" */ expr, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ _1), _2))\n                /// @src 1:20108:20194  \"if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner()\"\n                {\n                    /// @src 1:20166:20194  \"TransferFromIncorrectOwner()\"\n                    let _3 := /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ mload(64)\n                    /// @src 1:20166:20194  \"TransferFromIncorrectOwner()\"\n                    mstore(_3, shl(232, 10556545))\n                    revert(_3, 4)\n                }\n                /// @src 1:20262:20297  \"_getApprovedSlotAndAddress(tokenId)\"\n                let expr_component, expr_component_1 := fun_getApprovedSlotAndAddress(var_tokenId)\n                /// @src 1:20389:20568  \"if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))...\"\n                if /** @src 1:20393:20462  \"!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A())\" */ cleanup_bool(iszero(/** @src 1:20394:20462  \"_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A())\" */ fun_isSenderApprovedOrOwner(expr_component_1, var_from, /** @src 1:39523:39533  \"msg.sender\" */ caller())))\n                /// @src 1:20389:20568  \"if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))...\"\n                {\n                    /// @src 1:20476:20568  \"if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved()\"\n                    if /** @src 1:20480:20524  \"!isApprovedForAll(from, _msgSenderERC721A())\" */ cleanup_bool(iszero(/** @src 1:17402:17437  \"_operatorApprovals[owner][operator]\" */ read_from_storage_split_offset_bool(mapping_index_access_mapping_address_uint256_of_address(/** @src 1:17402:17427  \"_operatorApprovals[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_4470(/** @src 1:20481:20524  \"isApprovedForAll(from, _msgSenderERC721A())\" */ var_from), /** @src 1:39523:39533  \"msg.sender\" */ caller()))))\n                    /// @src 1:20476:20568  \"if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved()\"\n                    {\n                        /// @src 1:20533:20568  \"TransferCallerNotOwnerNorApproved()\"\n                        let _4 := /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ mload(64)\n                        /// @src 1:20533:20568  \"TransferCallerNotOwnerNorApproved()\"\n                        mstore(_4, shl(225, 0x2ce44b5f))\n                        revert(_4, 4)\n                    }\n                }\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                let _5 := and(/** @src 1:20583:20599  \"to == address(0)\" */ var_to, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ _1)\n                /// @src 1:20579:20631  \"if (to == address(0)) revert TransferToZeroAddress()\"\n                if /** @src 1:20583:20599  \"to == address(0)\" */ iszero(/** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ _5)\n                /// @src 1:20579:20631  \"if (to == address(0)) revert TransferToZeroAddress()\"\n                {\n                    /// @src 1:20608:20631  \"TransferToZeroAddress()\"\n                    let _6 := /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ mload(64)\n                    /// @src 1:20608:20631  \"TransferToZeroAddress()\"\n                    mstore(_6, shl(226, 0x3a954ecd))\n                    revert(_6, 4)\n                }\n                /// @src 1:20748:20938  \"assembly {...\"\n                if expr_component_1\n                {\n                    sstore(expr_component, /** @src 1:20597:20598  \"0\" */ 0x00)\n                }\n                /// @src 1:21300:21324  \"_packedAddressData[from]\"\n                let _7 := mapping_index_access_mapping_address_uint256_of_address_4449(var_from)\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                sstore(_7, /** @src 1:21298:21324  \"--_packedAddressData[from]\" */ decrement_wrapping_uint256(/** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ sload(/** @src 1:21298:21324  \"--_packedAddressData[from]\" */ _7)))\n                /// @src 1:21368:21390  \"_packedAddressData[to]\"\n                let _8 := mapping_index_access_mapping_address_uint256_of_address_4449(var_to)\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                sstore(_8, /** @src 1:21366:21390  \"++_packedAddressData[to]\" */ increment_wrapping_uint256(/** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ sload(/** @src 1:21366:21390  \"++_packedAddressData[to]\" */ _8)))\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                sstore(/** @src 1:21654:21680  \"_packedOwnerships[tokenId]\" */ mapping_index_access_mapping_uint256_uint256_of_uint256_4473(var_tokenId), /** @src 1:21683:21826  \"_packOwnershipData(...\" */ fun_packOwnershipData_6844(var_to))\n                /// @src 1:21939:22556  \"if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {...\"\n                if /** @src 1:21943:21995  \"prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0\" */ iszero(/** @src 1:21943:21990  \"prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED\" */ and(expr, /** @src 1:2392:2400  \"1 << 225\" */ shl(225, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ 1)))\n                /// @src 1:21939:22556  \"if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {...\"\n                {\n                    /// @src 1:22037:22048  \"tokenId + 1\"\n                    let expr_1 := /** @src 1:2392:2400  \"1 << 225\" */ add(/** @src 1:22037:22048  \"tokenId + 1\" */ var_tokenId, /** @src 1:22047:22048  \"1\" */ 0x01)\n                    /// @src 1:22164:22542  \"if (_packedOwnerships[nextTokenId] == 0) {...\"\n                    if /** @src 1:22168:22203  \"_packedOwnerships[nextTokenId] == 0\" */ iszero(/** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ sload(/** @src 1:22168:22198  \"_packedOwnerships[nextTokenId]\" */ mapping_index_access_mapping_uint256_uint256_of_uint256_4473(expr_1)))\n                    /// @src 1:22164:22542  \"if (_packedOwnerships[nextTokenId] == 0) {...\"\n                    {\n                        /// @src 1:22285:22524  \"if (nextTokenId != _currentIndex) {...\"\n                        if /** @src 1:22289:22317  \"nextTokenId != _currentIndex\" */ iszero(eq(expr_1, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ sload(/** @src -1:-1:-1 */ 0)))\n                        /// @src 1:22285:22524  \"if (nextTokenId != _currentIndex) {...\"\n                        {\n                            /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                            sstore(/** @src 1:22449:22479  \"_packedOwnerships[nextTokenId]\" */ mapping_index_access_mapping_uint256_uint256_of_uint256_4473(expr_1), /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ expr)\n                        }\n                    }\n                }\n                /// @src 1:22581:22608  \"Transfer(from, to, tokenId)\"\n                log4(/** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ mload(64), /** @src -1:-1:-1 */ 0, /** @src 1:22581:22608  \"Transfer(from, to, tokenId)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _5, var_tokenId)\n            }\n            /// @ast-id 624 @src 1:14297:14740  \"function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {...\"\n            function fun_packOwnershipData_6844(var_owner) -> var_result\n            {\n                /// @src 1:14403:14734  \"assembly {...\"\n                var_result := or(or(and(var_owner, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ sub(shl(160, 1), 1)), /** @src 1:14403:14734  \"assembly {...\" */ shl(160, timestamp())), /** @src 1:2392:2400  \"1 << 225\" */ shl(225, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ 1))\n            }\n            /// @ast-id 624 @src 1:14297:14740  \"function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {...\"\n            function fun_packOwnershipData(var_owner, var_flags) -> var_result\n            {\n                /// @src 1:14403:14734  \"assembly {...\"\n                var_result := or(and(var_owner, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ sub(shl(160, 1), 1)), /** @src 1:14403:14734  \"assembly {...\" */ or(shl(160, timestamp()), var_flags))\n            }\n            /// @ast-id 786 @src 1:18074:18720  \"function _isSenderApprovedOrOwner(...\"\n            function fun_isSenderApprovedOrOwner(var_approvedAddress, var_owner, var_msgSender) -> var_result\n            {\n                /// @src 1:18242:18714  \"assembly {...\"\n                let _1 := /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ sub(shl(160, 1), 1)\n                /// @src 1:18242:18714  \"assembly {...\"\n                let var_msgSender_1 := and(var_msgSender, _1)\n                var_result := or(eq(var_msgSender_1, and(var_owner, _1)), eq(var_msgSender_1, var_approvedAddress))\n            }\n            /// @ast-id 805 @src 1:18828:19302  \"function _getApprovedSlotAndAddress(uint256 tokenId)...\"\n            function fun_getApprovedSlotAndAddress(var_tokenId) -> var_approvedAddressSlot, var_approvedAddress\n            {\n                /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ var_tokenId)\n                mstore(0x20, /** @src 1:19036:19051  \"_tokenApprovals\" */ 0x06)\n                /// @src 1:19164:19296  \"assembly {...\"\n                var_approvedAddressSlot := /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ 0x40)\n                /// @src 1:19164:19296  \"assembly {...\"\n                var_approvedAddress := sload(var_approvedAddressSlot)\n            }\n            /// @ast-id 1007 @src 1:23526:23922  \"function safeTransferFrom(...\"\n            function fun_safeTransferFrom(var_from, var_to, var_tokenId, var__data_mpos)\n            {\n                /// @src 1:23718:23725  \"tokenId\"\n                fun_transferFrom(var_from, var_to, var_tokenId)\n                /// @src 1:23736:23916  \"if (to.code.length != 0)...\"\n                if /** @src 1:23740:23759  \"to.code.length != 0\" */ iszero(iszero(/** @src 1:23740:23754  \"to.code.length\" */ extcodesize(var_to)))\n                /// @src 1:23736:23916  \"if (to.code.length != 0)...\"\n                {\n                    /// @src 1:23773:23916  \"if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {...\"\n                    if /** @src 1:23777:23834  \"!_checkContractOnERC721Received(from, to, tokenId, _data)\" */ iszero(/** @src 1:23778:23834  \"_checkContractOnERC721Received(from, to, tokenId, _data)\" */ fun_checkContractOnERC721Received(var_from, var_to, var_tokenId, var__data_mpos))\n                    /// @src 1:23773:23916  \"if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {...\"\n                    {\n                        /// @src 1:23861:23901  \"TransferToNonERC721ReceiverImplementer()\"\n                        let _1 := /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ mload(64)\n                        /// @src 1:23861:23901  \"TransferToNonERC721ReceiverImplementer()\"\n                        mstore(_1, shl(225, 0x68d2bf6b))\n                        revert(_1, 4)\n                    }\n                }\n            }\n            /// @src 0:66:322  \"contract Azuki is ERC721A {...\"\n            function abi_decode_bytes4_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                validator_revert_bytes4(value)\n                value0 := value\n            }\n            function abi_encode_address_address_uint256_bytes(headStart, value0, value1, value2, value3) -> tail\n            {\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n                mstore(add(headStart, 64), value2)\n                mstore(add(headStart, 96), 128)\n                tail := abi_encode_string_to_string(value3, add(headStart, 128))\n            }\n            function extract_returndata() -> data\n            {\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _1 := returndatasize()\n                    let _2 := array_allocation_size_bytes(_1)\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, _2)\n                    mstore(memPtr, _1)\n                    data := memPtr\n                    returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ returndatasize())\n                }\n            }\n            /// @ast-id 1088 @src 1:25948:26645  \"function _checkContractOnERC721Received(...\"\n            function fun_checkContractOnERC721Received(var_from, var_to, var_tokenId, var_data_mpos) -> var\n            {\n                /// @src 1:26106:26110  \"bool\"\n                var := /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ 0\n                /// @src 1:26126:26214  \"ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data)\"\n                let _1 := /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ mload(64)\n                let _2 := shl(225, 0x0a85bd01)\n                /// @src 1:26126:26214  \"ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data)\"\n                mstore(_1, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ _2)\n                /// @src 1:26126:26214  \"ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data)\"\n                let trySuccessCondition := call(gas(), /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ and(/** @src 1:26126:26154  \"ERC721A__IERC721Receiver(to)\" */ var_to, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ sub(shl(160, 1), 1)), 0, /** @src 1:26126:26214  \"ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data)\" */ _1, sub(abi_encode_address_address_uint256_bytes(add(_1, 4), /** @src 1:39523:39533  \"msg.sender\" */ caller(), /** @src 1:26126:26214  \"ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data)\" */ var_from, var_tokenId, var_data_mpos), _1), _1, 32)\n                let expr := /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ 0\n                /// @src 1:26126:26214  \"ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data)\"\n                if trySuccessCondition\n                {\n                    let _3 := 32\n                    if gt(_3, returndatasize()) { _3 := returndatasize() }\n                    finalize_allocation(_1, _3)\n                    expr := abi_decode_bytes4_fromMemory(_1, add(_1, _3))\n                }\n                /// @src 1:26122:26639  \"try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (...\"\n                switch iszero(trySuccessCondition)\n                case 0 {\n                    /// @src 1:26275:26346  \"return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector\"\n                    var := /** @src 1:26282:26346  \"retval == ERC721A__IERC721Receiver(to).onERC721Received.selector\" */ eq(/** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ and(/** @src 1:26282:26346  \"retval == ERC721A__IERC721Receiver(to).onERC721Received.selector\" */ expr, /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ shl(224, 0xffffffff)), _2)\n                    /// @src 1:26275:26346  \"return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector\"\n                    leave\n                }\n                default /// @src 1:26122:26639  \"try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (...\"\n                {\n                    /// @src 1:26358:26639  \"catch (bytes memory reason) {...\"\n                    let var_reason_mpos := extract_returndata()\n                    /// @src 1:26404:26417  \"reason.length\"\n                    let expr_1 := /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ mload(/** @src 1:26404:26417  \"reason.length\" */ var_reason_mpos)\n                    /// @src 1:26400:26629  \"if (reason.length == 0) {...\"\n                    switch /** @src 1:26404:26422  \"reason.length == 0\" */ iszero(expr_1)\n                    case /** @src 1:26400:26629  \"if (reason.length == 0) {...\" */ 0 {\n                        /// @src 1:26528:26615  \"assembly {...\"\n                        revert(add(/** @src 1:26126:26214  \"ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data)\" */ 32, /** @src 1:26528:26615  \"assembly {...\" */ var_reason_mpos), expr_1)\n                    }\n                    default /// @src 1:26400:26629  \"if (reason.length == 0) {...\"\n                    {\n                        /// @src 1:26449:26489  \"TransferToNonERC721ReceiverImplementer()\"\n                        let _4 := /** @src 0:66:322  \"contract Azuki is ERC721A {...\" */ mload(64)\n                        /// @src 1:26449:26489  \"TransferToNonERC721ReceiverImplementer()\"\n                        mstore(_4, /** @src 1:23861:23901  \"TransferToNonERC721ReceiverImplementer()\" */ shl(225, 0x68d2bf6b))\n                        /// @src 1:26449:26489  \"TransferToNonERC721ReceiverImplementer()\"\n                        revert(_4, /** @src 1:26126:26214  \"ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data)\" */ 4)\n                    }\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220396d0f30204529348d5b5a64c538be53abd2e714b7a1dafa9b64d072b19cdb2c64736f6c634300080d0033\"\n    }\n}\n","hash":"01000233d2c9ec3d7661737d1f8ca24e5ff9885f4d301c6ab5d4cc90b7006a84","factoryDependencies":{}}},"erc721a/contracts/ERC721A.sol":{"ERC721A":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ApprovalCallerNotOwnerNorApproved","type":"error"},{"inputs":[],"name":"ApprovalQueryForNonexistentToken","type":"error"},{"inputs":[],"name":"BalanceQueryForZeroAddress","type":"error"},{"inputs":[],"name":"MintERC2309QuantityExceedsLimit","type":"error"},{"inputs":[],"name":"MintToZeroAddress","type":"error"},{"inputs":[],"name":"MintZeroQuantity","type":"error"},{"inputs":[],"name":"OwnerQueryForNonexistentToken","type":"error"},{"inputs":[],"name":"OwnershipNotInitializedForExtraData","type":"error"},{"inputs":[],"name":"TransferCallerNotOwnerNorApproved","type":"error"},{"inputs":[],"name":"TransferFromIncorrectOwner","type":"error"},{"inputs":[],"name":"TransferToNonERC721ReceiverImplementer","type":"error"},{"inputs":[],"name":"TransferToZeroAddress","type":"error"},{"inputs":[],"name":"URIQueryForNonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"toTokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"ConsecutiveTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"payable","type":"function"}],"metadata":{"optimizer_settings":"M3B3","solc_metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721A\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x23116c16976b7d8c0c714ba1b38ae6b16c16fc90ec69b568fb1ebf1bc063e01c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7874e48418b55b9d718680915454f2b0054d19d2a387e123b0c139294d0e809\",\"dweb:/ipfs/QmdryJHATT4R454JY8FXCE5qTxanYWfjGKGMv5U6YJntWy\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]}},\"version\":1}","zk_version":"1.3.17"},"devdoc":{"details":"Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).","kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in `owner`'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Equivalent to `safeTransferFrom(from, to, tokenId, '')`."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"totalSupply()":{"details":"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC721A","version":1},"userdoc":{"errors":{"ApprovalCallerNotOwnerNorApproved()":[{"notice":"The caller must own the token or be an approved operator."}],"ApprovalQueryForNonexistentToken()":[{"notice":"The token does not exist."}],"BalanceQueryForZeroAddress()":[{"notice":"Cannot query the balance for the zero address."}],"MintERC2309QuantityExceedsLimit()":[{"notice":"The `quantity` minted with ERC2309 exceeds the safety limit."}],"MintToZeroAddress()":[{"notice":"Cannot mint to the zero address."}],"MintZeroQuantity()":[{"notice":"The quantity of tokens minted must be more than zero."}],"OwnerQueryForNonexistentToken()":[{"notice":"The token does not exist."}],"OwnershipNotInitializedForExtraData()":[{"notice":"The `extraData` cannot be set on an unintialized ownership slot."}],"TransferCallerNotOwnerNorApproved()":[{"notice":"The caller must own the token or be an approved operator."}],"TransferFromIncorrectOwner()":[{"notice":"The token must be owned by `from`."}],"TransferToNonERC721ReceiverImplementer()":[{"notice":"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."}],"TransferToZeroAddress()":[{"notice":"Cannot transfer to the zero address."}],"URIQueryForNonexistentToken()":[{"notice":"The token does not exist."}]},"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[{"astId":117,"contract":"erc721a/contracts/ERC721A.sol:ERC721A","label":"_currentIndex","offset":0,"slot":"0","type":"t_uint256"},{"astId":119,"contract":"erc721a/contracts/ERC721A.sol:ERC721A","label":"_burnCounter","offset":0,"slot":"1","type":"t_uint256"},{"astId":121,"contract":"erc721a/contracts/ERC721A.sol:ERC721A","label":"_name","offset":0,"slot":"2","type":"t_string_storage"},{"astId":123,"contract":"erc721a/contracts/ERC721A.sol:ERC721A","label":"_symbol","offset":0,"slot":"3","type":"t_string_storage"},{"astId":127,"contract":"erc721a/contracts/ERC721A.sol:ERC721A","label":"_packedOwnerships","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_uint256)"},{"astId":131,"contract":"erc721a/contracts/ERC721A.sol:ERC721A","label":"_packedAddressData","offset":0,"slot":"5","type":"t_mapping(t_address,t_uint256)"},{"astId":136,"contract":"erc721a/contracts/ERC721A.sol:ERC721A","label":"_tokenApprovals","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_struct(TokenApprovalRef)49_storage)"},{"astId":142,"contract":"erc721a/contracts/ERC721A.sol:ERC721A","label":"_operatorApprovals","offset":0,"slot":"7","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_struct(TokenApprovalRef)49_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct ERC721A.TokenApprovalRef)","numberOfBytes":"32","value":"t_struct(TokenApprovalRef)49_storage"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(TokenApprovalRef)49_storage":{"encoding":"inplace","label":"struct ERC721A.TokenApprovalRef","members":[{"astId":48,"contract":"erc721a/contracts/ERC721A.sol:ERC721A","label":"value","offset":0,"slot":"0","type":"t_address"}],"numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"ERC721A.sol:ERC721A\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[8]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tadd\t128, r0, r5\n\tst.1\t64, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r4, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_10[0], r2, r3\n\tjump.gt\t@.BB0_82\n\tsub.s!\t@CPI0_20[0], r2, r3\n\tjump.le\t@.BB0_74\n\tsub.s!\t@CPI0_21[0], r2, r3\n\tjump.gt\t@.BB0_80\n\tsub.s!\t@CPI0_24[0], r2, r3\n\tjump.eq\t@.BB0_118\n\tsub.s!\t@CPI0_25[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tsload\tr0, r2\n\tsub\tr2, r1, r1\n\tjump\t@.BB0_98\n.BB0_1:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_1[0], r4, r2\n\tsub.s!\t@CPI0_2[0], r2, r2\n\tjump.gt\t@.BB0_6\n.BB0_4:\n\tadd\t@CPI0_35[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n.BB0_5:\n\tst.1\t4, r1\n\tadd\t@CPI0_36[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_82:\n\tsub.s!\t@CPI0_11[0], r2, r3\n\tjump.le\t@.BB0_83\n\tsub.s!\t@CPI0_12[0], r2, r3\n\tjump.gt\t@.BB0_89\n\tsub.s!\t@CPI0_15[0], r2, r3\n\tjump.eq\t@.BB0_164\n\tsub.s!\t@CPI0_16[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t128, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r5\n\tsub.s!\t@CPI0_29[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_29[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t100, r1, r3\n\tld\tr3, r6\n\tsub.s!\t@CPI0_4[0], r6, r3\n\tjump.gt\t@.BB0_2\n\tadd\t35, r6, r3\n\tadd\t@CPI0_5[0], r0, r7\n\tsub!\tr3, r4, r8\n\tadd\tr0, r0, r8\n\tadd.ge\tr7, r0, r8\n\tand\t@CPI0_5[0], r3, r3\n\tsub!\tr3, r0, r9\n\tadd.ge\tr0, r0, r7\n\tsub.s!\t@CPI0_5[0], r3, r3\n\tadd.ne\tr8, r0, r7\n\tsub!\tr7, r0, r3\n\tjump.ne\t@.BB0_2\n\tadd\t4, r6, r7\n\tptr.add\tr1, r7, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_4[0], r3, r8\n\tjump.gt\t@.BB0_4\n\tadd\t191, r3, r8\n\tsub.s\t32, r0, r9\n\tand\tr8, r9, r8\n\tsub.s!\t@CPI0_4[0], r8, r9\n\tjump.gt\t@.BB0_4\n\tst.1\t64, r8\n\tst.1\t128, r3\n\tadd\tr6, r3, r6\n\tadd\t36, r6, r6\n\tsub!\tr6, r4, r4\n\tjump.gt\t@.BB0_2\n\tadd\t32, r7, r4\n\tptr.add\tr1, r4, r4\n\tand\t31, r3, r6\n\tshr.s!\t5, r3, r7\n\tjump.eq\t@.BB0_199\n\tadd\tr0, r0, r8\n.BB0_182:\n\tshl.s\t5, r8, r9\n\tptr.add\tr4, r9, r10\n\tld\tr10, r10\n\tadd\t160, r9, r9\n\tst.1\tr9, r10\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB0_182\n.BB0_199:\n\tsub!\tr6, r0, r8\n\tjump.eq\t@.BB0_184\n\tshl.s\t5, r7, r7\n\tptr.add\tr4, r7, r4\n\tshl.s\t3, r6, r6\n\tadd\t160, r7, r7\n\tld.1\tr7, r8\n\tshl\tr8, r6, r8\n\tshr\tr8, r6, r8\n\tld\tr4, r4\n\tsub\t256, r6, r6\n\tshr\tr4, r6, r4\n\tshl\tr4, r6, r4\n\tor\tr4, r8, r4\n\tst.1\tr7, r4\n.BB0_184:\n\tadd\t160, r3, r3\n\tst.1\tr3, r0\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r3\n\tjump\t@.BB0_185\n.BB0_6:\n\tadd\t159, r4, r2\n\tand\t@CPI0_3[0], r2, r2\n\tst.1\t64, r2\n\tand\t31, r4, r2\n\tshr.s!\t5, r4, r3\n\tjump.eq\t@.BB0_200\n\tadd\tr0, r0, r5\n.BB0_8:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_8\n.BB0_200:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_10\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tshl.s\t3, r2, r2\n\tadd\t128, r3, r3\n\tld.1\tr3, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB0_10:\n\tsub.s!\t64, r4, r1\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r5\n\tsub.s!\t@CPI0_4[0], r5, r1\n\tjump.gt\t@.BB0_2\n\tadd\t128, r4, r1\n\tadd\t159, r5, r2\n\tsub!\tr2, r1, r2\n\tjump.ge\t@.BB0_2\n\tadd\t128, r5, r3\n\tld.1\tr3, r2\n\tsub.s!\t@CPI0_4[0], r2, r6\n\tjump.gt\t@.BB0_4\n\tadd\t63, r2, r6\n\tsub.s\t32, r0, r9\n\tand\tr6, r9, r6\n\tld.1\t64, r10\n\tadd\tr10, r6, r6\n\tsub!\tr6, r10, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_4[0], r6, r8\n\tjump.gt\t@.BB0_4\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r6\n\tst.1.inc\tr10, r2, r11\n\tadd\tr5, r2, r5\n\tadd\t160, r5, r5\n\tsub!\tr5, r1, r5\n\tjump.gt\t@.BB0_2\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_22\n\tadd\tr0, r0, r5\n.BB0_19:\n\tadd\t32, r5, r5\n\tadd\tr5, r10, r6\n\tadd\tr5, r3, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB0_19\n\tsub!\tr5, r2, r3\n\tjump.le\t@.BB0_22\n\tadd\tr10, r2, r2\n\tadd\t32, r2, r2\n\tst.1\tr2, r0\n.BB0_22:\n\tld.1\t160, r5\n\tsub.s!\t@CPI0_4[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tadd\t31, r5, r2\n\tadd\t@CPI0_5[0], r0, r3\n\tsub!\tr2, r4, r4\n\tadd\tr0, r0, r4\n\tadd.ge\tr3, r0, r4\n\tand\t@CPI0_5[0], r2, r2\n\tsub!\tr2, r0, r6\n\tadd.ge\tr0, r0, r3\n\tsub.s!\t@CPI0_5[0], r2, r2\n\tadd.ne\tr4, r0, r3\n\tsub!\tr3, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t128, r5, r3\n\tld.1\tr3, r2\n\tsub.s!\t@CPI0_4[0], r2, r4\n\tjump.gt\t@.BB0_4\n\tadd\t63, r2, r4\n\tand\tr4, r9, r4\n\tld.1\t64, r8\n\tadd\tr8, r4, r4\n\tsub!\tr4, r8, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI0_4[0], r4, r7\n\tjump.gt\t@.BB0_4\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_4\n\tst.1\t64, r4\n\tst.1.inc\tr8, r2, r4\n\tadd\tr4, r0, stack-[7]\n\tadd\tr5, r2, r4\n\tadd\t160, r4, r4\n\tsub!\tr4, r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tr11, r0, stack-[4]\n\tadd\tr10, r0, stack-[8]\n\tadd\tr9, r0, stack-[5]\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB0_33\n\tadd\tr0, r0, r1\n.BB0_30:\n\tadd\t32, r1, r1\n\tadd\tr1, r8, r4\n\tadd\tr1, r3, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr1, r2, r4\n\tjump.lt\t@.BB0_30\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB0_33\n\tadd\tr8, r2, r1\n\tadd\t32, r1, r1\n\tst.1\tr1, r0\n.BB0_33:\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_4\n\tadd\tr8, r0, stack-[1]\n\tadd\t2, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tadd\tr3, r0, stack-[2]\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tand\t1, r1, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_35\n\tadd\tstack-[2], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_41\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[2], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_41\n.BB0_40:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_40\n.BB0_41:\n\tadd\tstack-[6], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_68\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r2\n\tand!\tstack-[5], r2, r3\n\tadd\t32, r0, r2\n\tadd\t@CPI0_7[0], r0, r1\n\tjump.eq\t@.BB0_65\n\tadd\t@CPI0_7[0], r0, r1\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n\tadd\tstack-[8], r0, r6\n.BB0_63:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_63\n.BB0_65:\n\tsub.s!\tstack-[6], r3, r3\n\tjump.ge\t@.BB0_67\n\tadd\tstack-[6], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[8], r2, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_67:\n\tadd\tstack-[6], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n\tjump\t@.BB0_42\n.BB0_74:\n\tsub.s!\t@CPI0_26[0], r2, r3\n\tjump.eq\t@.BB0_91\n\tsub.s!\t@CPI0_27[0], r2, r3\n\tjump.eq\t@.BB0_99\n\tsub.s!\t@CPI0_28[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tadd\t128, r0, r2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r3\n\tsload\tr0, r1\n\tsub!\tr1, r3, r1\n\tjump.le\t@.BB0_115\n\tadd\tr3, r0, stack-[8]\n\tst.1\t0, r3\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_32[0], r1, r1\n\tjump.ne\t@.BB0_114\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tjump\t@.BB0_147\n.BB0_83:\n\tsub.s!\t@CPI0_17[0], r2, r3\n\tjump.eq\t@.BB0_144\n\tsub.s!\t@CPI0_18[0], r2, r3\n\tjump.eq\t@.BB0_149\n\tsub.s!\t@CPI0_19[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t3, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r1\n\tadd.ne\tr5, r0, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_35\n\tst.1\t128, r1\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_161\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tst.1\t160, r1\n\tadd\t64, r0, r2\n\tjump\t@.BB0_159\n.BB0_80:\n\tsub.s!\t@CPI0_22[0], r2, r3\n\tjump.eq\t@.BB0_139\n\tsub.s!\t@CPI0_23[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t96, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r5\n\tsub.s!\t@CPI0_29[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_29[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r3\n\tadd\t160, r0, r1\n\tst.1\t64, r1\n\tst.1\t128, r0\n.BB0_185:\n\tadd\t128, r0, r4\n\tadd\tr5, r0, r1\n\tnear_call\tr0, @fun_safeTransferFrom, @DEFAULT_UNWIND\n\tjump\t@.BB0_186\n.BB0_89:\n\tsub.s!\t@CPI0_13[0], r2, r3\n\tjump.eq\t@.BB0_187\n\tsub.s!\t@CPI0_14[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_29[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI0_29[0], r3, r1\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r2\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tadd\tr3, r0, stack-[8]\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @mapping_index_access_mapping_address_uint256_of_address, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tjump\t@.BB0_148\n.BB0_118:\n\tsub.s\t4, r4, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[5]\n\tsub.s!\t@CPI0_29[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tadd\t128, r0, r2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tsload\tr0, r1\n\tsub!\tr1, r3, r1\n\tjump.le\t@.BB0_126\n\tadd\tr3, r0, stack-[4]\n\tst.1\t0, r3\n\tadd\t4, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_32[0], r1, r2\n\tjump.ne\t@.BB0_123\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_129\n\tadd\t32784, r0, stack-[6]\n\tadd\tstack-[4], r0, r2\n.BB0_127:\n\tsub.s\t1, r2, r2\n\tadd\tr2, r0, stack-[8]\n\tst.1\t0, r2\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\tstack-[6], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\tstack-[8], r0, r2\n\tjump.eq\t@.BB0_127\n.BB0_129:\n\tand\t@CPI0_29[0], r1, r2\n\tcontext.caller\tr3\n\tsub!\tr3, r2, r1\n\tadd\tr2, r0, stack-[8]\n\tjump.ne\t@.BB0_130\n.BB0_133:\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[5], r0, r2\n\tand\t@CPI0_29[0], r2, r6\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_43[0], r2, r2\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, stack-[7]\n\tshl.s\t192, r2, r1\n\tor\tstack-[7], r1, r1\n\tor\t@CPI0_44[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_45[0], r0, r4\n\tadd\tstack-[8], r0, r5\n\tadd\tstack-[4], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[7], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_164:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t64, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_29[0], r3, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r2\n\tsub!\tr2, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tadd\tr2, r0, stack-[7]\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr3, r0, stack-[8]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tst.1\t0, r3\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tadd\tstack-[7], r0, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_37[0], r0, r4\n\tadd\tstack-[6], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t64, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_91:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_47[0], r1, r2\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r2\n\tsub.s!\t@CPI0_48[0], r1, r3\n\tjump.eq\t@.BB0_97\n\tsub.s!\t@CPI0_49[0], r1, r3\n\tjump.eq\t@.BB0_97\n\tsub.s!\t@CPI0_50[0], r1, r1\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n.BB0_97:\n\tand\t1, r2, r1\n\tjump\t@.BB0_98\n.BB0_99:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r1\n\tadd.ne\tr5, r0, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.eq\t@.BB0_101\n.BB0_35:\n\tadd\t@CPI0_35[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tjump\t@.BB0_5\n.BB0_144:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_packedOwnershipOf, @DEFAULT_UNWIND\n.BB0_147:\n\tand\t@CPI0_29[0], r1, r1\n.BB0_148:\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_30[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_149:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_29[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_154\n\tadd\t@CPI0_39[0], r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_40[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_139:\n\tadd\tr4, r0, r1\n\tnear_call\tr0, @abi_decode_addresst_addresst_uint256, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_transferFrom, @DEFAULT_UNWIND\n.BB0_186:\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_187:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsub.s\t4, r4, r2\n\tsub.s!\t32, r2, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsload\tr0, r2\n\tsub!\tr2, r1, r2\n\tjump.le\t@.BB0_192\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r5\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_32[0], r1, r1\n\tjump.ne\t@.BB0_192\n\tadd\tr5, r0, r1\n\tadd\tr5, r0, stack-[8]\n\tnear_call\tr0, @finalize_allocation_6022, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r1\n\tst.1\tr1, r0\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[7]\n\tnear_call\tr0, @finalize_allocation_6022, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r1\n\tst.1\tr1, r0\n\tadd\t32, r0, r2\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[8]\n\tst.1.inc\tr3, r2, r2\n\tnear_call\tr0, @abi_encode_string_to_string, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r4\n\tjump\t@.BB0_104\n.BB0_192:\n\tadd\t@CPI0_33[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r5, r2\n\tadd.ge\tr1, r0, r5\n\tshl.s\t64, r5, r1\n\tor\t@CPI0_34[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_101:\n\tst.1\t128, r1\n\tsub!\tr4, r0, r4\n\tjump.ne\t@.BB0_106\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tst.1\t160, r1\n\tadd\t64, r0, r2\n\tjump\t@.BB0_103\n.BB0_161:\n\tst.1\t0, r3\n\tadd\t32, r0, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_159\n\tadd\t@CPI0_8[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_163:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_163\n\tadd\t64, r3, r2\n.BB0_159:\n.BB0_103:\n\tadd\t128, r0, r1\n\tadd\tr1, r0, stack-[8]\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r4\n.BB0_104:\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_154:\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand\t@CPI0_4[0], r1, r1\n.BB0_98:\n\tst.1\t128, r1\n\tadd\t@CPI0_38[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_106:\n\tst.1\t0, r3\n\tadd\t32, r0, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_103\n\tadd\t@CPI0_7[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_108:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_108\n\tadd\t64, r3, r2\n\tjump\t@.BB0_103\n.BB0_114:\n\tld.1\t64, r2\n.BB0_115:\n\tadd\t@CPI0_46[0], r0, r1\n\tjump\t@.BB0_116\n.BB0_123:\n\tld.1\t64, r2\n.BB0_126:\n\tadd\t@CPI0_41[0], r0, r1\n.BB0_116:\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_34[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_130:\n\tadd\tr3, r0, stack-[7]\n\tst.1\t0, r2\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[7], r0, r2\n\tand\t@CPI0_29[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_133\n\tld.1\t64, r1\n\tadd\t@CPI0_42[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_34[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_68:\n\tsub!\tstack-[6], r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_70\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n.BB0_70:\n\tadd\tstack-[6], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n.BB0_42:\n\tadd\tstack-[3], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[1], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.gt\t@.BB0_4\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tadd\tr3, r0, stack-[4]\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_35\n\tadd\tstack-[4], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_49\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[8], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[4], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_49\n.BB0_48:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_48\n.BB0_49:\n\tadd\tstack-[8], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_57\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[8], r0, r2\n\tand!\tstack-[5], r2, r3\n\tadd\t32, r0, r2\n\tadd\t@CPI0_8[0], r0, r1\n\tjump.eq\t@.BB0_54\n\tadd\t@CPI0_8[0], r0, r1\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n\tadd\tstack-[1], r0, r6\n.BB0_52:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_52\n.BB0_54:\n\tsub.s!\tstack-[8], r3, r3\n\tjump.ge\t@.BB0_56\n\tadd\tstack-[8], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[1], r2, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_56:\n\tadd\t1, r0, r1\n\tadd\tstack-[8], r0, r2\n\tshl.s\t1, r2, r2\n\tjump\t@.BB0_59\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_57:\n\tsub!\tstack-[8], r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_60\n\tadd\tstack-[8], r0, r3\n\tshl.s\t3, r3, r1\n\tsub.s\t1, r0, r2\n\tshr\tr2, r1, r1\n\txor\tr1, r2, r1\n\tadd\tstack-[7], r0, r2\n\tld.1\tr2, r2\n\tand\tr2, r1, r2\n\tshl.s\t1, r3, r1\n.BB0_59:\n\tor\tr2, r1, r1\n.BB0_60:\n\tadd\tstack-[6], r0, r2\n\tsstore\tr2, r1\n\tsstore\tr0, r0\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_9[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\nabi_encode_string_to_string:\n.func_begin1:\n\tld.1\tr1, r3\n\tst.1.inc\tr2, r3, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB1_4\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\tr2, r4, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_2\n\tsub!\tr4, r3, r1\n\tjump.le\t@.BB1_4\n\tadd\tr2, r3, r1\n\tst.1\tr1, r0\n\tjump\t@.BB1_6\n.BB1_4:\n.BB1_6:\n\tadd\t31, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\tr2, r1, r1\n\tret\n.func_end1:\n\nabi_encode_string:\n.func_begin2:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tadd\t64, r1, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB2_5\n\tadd\tr0, r0, r4\n.BB2_2:\n\tadd\tr4, r1, r5\n\tadd\t32, r4, r4\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB2_2\n\tsub!\tr4, r3, r2\n\tjump.le\t@.BB2_5\n\tadd\tr3, r1, r2\n\tst.1\tr2, r0\n.BB2_5:\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end2:\n\nabi_decode_addresst_addresst_uint256:\n.func_begin3:\n\tsub.s\t4, r1, r1\n\tadd\t@CPI3_0[0], r0, r2\n\tsub.s!\t95, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI3_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI3_0[0], r1, r1\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB3_1\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI3_1[0], r1, r2\n\tjump.gt\t@.BB3_1\n\tptr.add.s\t36, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI3_1[0], r2, r4\n\tjump.gt\t@.BB3_1\n\tptr.add.s\t68, r3, r3\n\tld\tr3, r3\n\tret\n.BB3_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nfinalize_allocation_6022:\n.func_begin4:\n\tsub.s!\t@CPI4_0[0], r1, r2\n\tjump.ge\t@.BB4_1\n\tadd\t32, r1, r1\n\tst.1\t64, r1\n\tret\n.BB4_1:\n\tadd\t@CPI4_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nfinalize_allocation:\n.func_begin5:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI5_0[0], r1, r3\n\tjump.gt\t@.BB5_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB5_2\n\tst.1\t64, r1\n\tret\n.BB5_2:\n\tadd\t@CPI5_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nmapping_index_access_mapping_address_uint256_of_address:\n.func_begin6:\n\tand\t@CPI6_0[0], r2, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI6_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI6_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_1\n\tld\tr1, r1\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nfun_packedOwnershipOf:\n.func_begin7:\n\tnop\tstack+=[3]\n\tsload\tr0, r2\n\tsub!\tr2, r1, r2\n\tjump.le\t@.BB7_6\n\tadd\tr1, r0, stack-[3]\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI7_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI7_2[0], r1, r2\n\tadd\tstack-[3], r0, r3\n\tjump.ne\t@.BB7_6\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB7_9\n\tadd\t32784, r0, stack-[1]\n.BB7_7:\n\tsub.s\t1, r3, r3\n\tadd\tr3, r0, stack-[3]\n\tst.1\t0, r3\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\tstack-[1], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\tstack-[3], r0, r3\n\tjump.eq\t@.BB7_7\n.BB7_9:\n\tret\n.BB7_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_6:\n\tld.1\t64, r1\n\tadd\t@CPI7_3[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI7_0[0], r0, r2\n\tsub.s!\t@CPI7_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI7_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\nfun_transferFrom:\n.func_begin8:\n\tnop\tstack+=[8]\n\tadd\tr2, r0, stack-[3]\n\tadd\tr1, r0, stack-[4]\n\tsload\tr0, r1\n\tadd\tr3, r0, stack-[5]\n\tsub!\tr1, r3, r1\n\tjump.le\t@.BB8_6\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tand!\t@CPI8_2[0], r3, r1\n\tjump.ne\t@.BB8_6\n\tsub!\tr3, r0, r1\n\tjump.ne\t@.BB8_10\n\tadd\t32784, r0, stack-[6]\n\tadd\tstack-[5], r0, r1\n.BB8_8:\n\tsub.s\t1, r1, r1\n\tadd\tr1, r0, stack-[8]\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\tstack-[6], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub!\tr3, r0, r1\n\tadd\tstack-[8], r0, r1\n\tjump.eq\t@.BB8_8\n.BB8_10:\n\tadd\tstack-[4], r0, r1\n\tand\t@CPI8_5[0], r1, r2\n\tadd\tr3, r0, stack-[4]\n\tand\t@CPI8_5[0], r3, r1\n\tadd\tr2, r0, stack-[8]\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB8_11\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_2\n\tld\tr1, r2\n\tsload\tr2, r3\n\tcontext.caller\tr1\n\tand\t@CPI8_5[0], r1, r4\n\tsub.s!\tstack-[8], r4, r1\n\tjump.eq\t@.BB8_18\n\tsub!\tr4, r3, r1\n\tjump.eq\t@.BB8_18\n\tadd\tr4, r0, stack-[6]\n\tadd\tr3, r0, stack-[1]\n\tadd\tr2, r0, stack-[2]\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_2\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\tstack-[2], r0, r2\n\tadd\tstack-[1], r0, r3\n\tjump.eq\t@.BB8_19\n.BB8_18:\n\tadd\tstack-[3], r0, r1\n\tand!\t@CPI8_5[0], r1, stack-[6]\n\tjump.eq\t@.BB8_20\n\tsub!\tr3, r0, r1\n\tjump.eq\t@.BB8_23\n\tsstore\tr2, r0\n.BB8_23:\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI8_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI8_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_9[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_26\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_0[0], r1, r2\n\tadd.ge\t@CPI8_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_2\n\tadd\tstack-[3], r0, r2\n\tshl.s\t160, r2, r2\n\tor\tstack-[6], r2, r2\n\tor\t@CPI8_10[0], r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tand!\t@CPI8_10[0], r1, r1\n\tjump.ne\t@.BB8_31\n\tadd\tstack-[5], r0, r1\n\tadd\t1, r1, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB8_31\n\tsload\tr0, r1\n\tsub!\tstack-[3], r1, r1\n\tjump.eq\t@.BB8_31\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_2\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tsstore\tr1, r2\n.BB8_31:\n\tld.1\t64, r1\n\tadd\t@CPI8_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI8_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI8_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI8_11[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI8_12[0], r0, r4\n\tadd\tstack-[8], r0, r5\n\tadd\tstack-[6], r0, r6\n\tadd\tstack-[5], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB8_2\n\tret\n.BB8_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_6:\n\tld.1\t64, r1\n\tadd\t@CPI8_3[0], r0, r2\n\tjump\t@.BB8_7\n.BB8_11:\n\tld.1\t64, r1\n\tadd\t@CPI8_6[0], r0, r2\n\tjump\t@.BB8_7\n.BB8_20:\n\tld.1\t64, r1\n\tadd\t@CPI8_13[0], r0, r2\n\tjump\t@.BB8_7\n.BB8_26:\n\trevert\n.BB8_19:\n\tld.1\t64, r1\n\tadd\t@CPI8_7[0], r0, r2\n.BB8_7:\n\tst.1\tr1, r2\n\tadd\t@CPI8_0[0], r0, r2\n\tsub.s!\t@CPI8_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI8_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nfun_safeTransferFrom:\n.func_begin9:\n\tnop\tstack+=[11]\n\tadd\tr4, r0, stack-[1]\n\tadd\tr2, r0, stack-[5]\n\tadd\tr1, r0, stack-[4]\n\tsload\tr0, r1\n\tadd\tr3, r0, stack-[6]\n\tsub!\tr1, r3, r1\n\tjump.le\t@.BB9_6\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tadd\tr1, r0, stack-[8]\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tand!\t@CPI9_2[0], r3, r1\n\tjump.ne\t@.BB9_6\n\tsub!\tr3, r0, r1\n\tjump.ne\t@.BB9_10\n\tadd\t32784, r0, stack-[7]\n\tadd\tstack-[6], r0, r1\n.BB9_8:\n\tsub.s\t1, r1, r1\n\tadd\tr1, r0, stack-[9]\n\tst.1\t0, r1\n\tadd\tstack-[8], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\t@CPI9_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub!\tr3, r0, r1\n\tadd\tstack-[9], r0, r1\n\tjump.eq\t@.BB9_8\n.BB9_10:\n\tadd\tstack-[4], r0, r1\n\tand\t@CPI9_5[0], r1, r2\n\tadd\tr3, r0, stack-[3]\n\tand\t@CPI9_5[0], r3, r1\n\tadd\tr2, r0, stack-[9]\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB9_11\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_2\n\tld\tr1, r3\n\tsload\tr3, r4\n\tcontext.caller\tr1\n\tand\t@CPI9_5[0], r1, r2\n\tadd\tr2, r0, stack-[4]\n\tsub.s!\tstack-[9], r2, r1\n\tjump.eq\t@.BB9_18\n\tsub!\tstack-[4], r4, r1\n\tjump.eq\t@.BB9_18\n\tadd\tr4, r0, stack-[2]\n\tadd\tr3, r0, stack-[7]\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_2\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\t@CPI9_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\tstack-[7], r0, r3\n\tadd\tstack-[2], r0, r4\n\tjump.eq\t@.BB9_19\n.BB9_18:\n\tadd\tstack-[5], r0, r1\n\tand!\t@CPI9_5[0], r1, r1\n\tjump.eq\t@.BB9_20\n\tadd\tr1, r0, stack-[7]\n\tsub!\tr4, r0, r1\n\tjump.eq\t@.BB9_23\n\tsstore\tr3, r0\n.BB9_23:\n\tadd\tstack-[9], r0, r1\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\t@CPI9_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI9_8[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI9_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_9[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_26\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[8], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\t@CPI9_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_2\n\tadd\tstack-[2], r0, r2\n\tshl.s\t160, r2, r2\n\tadd\tstack-[7], r0, r6\n\tor\tr2, r6, r2\n\tor\t@CPI9_10[0], r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[3], r0, r1\n\tand!\t@CPI9_10[0], r1, r1\n\tjump.ne\t@.BB9_31\n\tadd\tstack-[6], r0, r1\n\tadd\t1, r1, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t0, r1\n\tadd\tstack-[8], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[7], r0, r6\n\tjump.ne\t@.BB9_31\n\tsload\tr0, r1\n\tsub!\tstack-[2], r1, r1\n\tjump.eq\t@.BB9_31\n\tadd\tstack-[2], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[8], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI9_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_2\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tsstore\tr1, r2\n\tadd\tstack-[7], r0, r6\n.BB9_31:\n\tld.1\t64, r1\n\tadd\t@CPI9_0[0], r0, r4\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI9_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI9_11[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI9_12[0], r0, r4\n\tadd\tstack-[9], r0, r5\n\tadd\tstack-[6], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB9_2\n\tadd\t@CPI9_13[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.2\t4, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tadd.ge\t@CPI9_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI9_14[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_26\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB9_65\n\tcontext.sp\tr8\n\tld.1\t64, r10\n\tadd\t100, r10, r1\n\tadd\t128, r0, r7\n\tst.1\tr1, r7\n\tadd\t68, r10, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r10, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI9_15[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t4, r10, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[1], r0, r6\n\tld.1\tr6, r1\n\tadd\t132, r10, r2\n\tst.1\tr2, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB9_42\n\tadd\t164, r10, r2\n\tadd\tr0, r0, r3\n.BB9_39:\n\tadd\tr3, r2, r4\n\tadd\t32, r3, r3\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB9_39\n\tsub!\tr3, r1, r3\n\tjump.le\t@.BB9_42\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n.BB9_42:\n\tcontext.gas_left\tr6\n\tadd\tstack-[7], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB9_44\n\tcontext.sp\tr5\n\tsub.s\t11, r5, r5\n\tmul\t32, r5, r5, r0\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tadd\t0, r0, stack-[11]\n\tjump\t@.BB9_49\n.BB9_44:\n\tadd\tr8, r0, stack-[9]\n\tadd\tr7, r0, stack-[6]\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\t@CPI9_0[0], r0, r3\n\tsub.s!\t@CPI9_0[0], r10, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr10, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t164, r1, r1\n\tsub.s!\t@CPI9_0[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI9_0[0], r6, r4\n\tadd.ge\tr3, r0, r6\n\tshl.s\t192, r6, r3\n\tor\tr3, r1, r1\n\tadd\tr10, r0, stack-[8]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI9_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB9_67\n\tadd\tr0, r0, r7\n.BB9_46:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB9_46\n.BB9_67:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB9_48\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB9_48:\n\tadd\tr3, r0, stack[@returndatasize]\n\tcontext.sp\tr5\n\tsub.s\t10, r5, r5\n\tmul\t32, r5, r5, r0\n\tadd\t0, r0, stack-[10]\n\tand!\t1, r2, r2\n\tadd\tstack-[9], r0, r8\n\tjump.eq\t@.BB9_54\n.BB9_49:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI9_17[0], r1, r4\n\tjump.gt\t@.BB9_51\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB9_51\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB9_2\n\tld.1\tr10, r1\n\tand\t@CPI9_18[0], r1, r2\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB9_2\n\tshr.s\t5, r5, r2\n\tadd\tr1, r0, stack[r2]\n\tcontext.sp\tr2\n\tsub\tr8, r2, r2\n\tnop\tstack+=[r2]\n\tsub.s!\t@CPI9_15[0], r1, r1\n\tjump.ne\t@.BB9_63\n.BB9_65:\n\tret\n.BB9_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_6:\n\tld.1\t64, r1\n\tadd\t@CPI9_3[0], r0, r2\n\tjump\t@.BB9_7\n.BB9_26:\n\trevert\n.BB9_11:\n\tld.1\t64, r1\n\tadd\t@CPI9_6[0], r0, r2\n\tjump\t@.BB9_7\n.BB9_20:\n\tld.1\t64, r1\n\tadd\t@CPI9_22[0], r0, r2\n\tjump\t@.BB9_7\n.BB9_19:\n\tld.1\t64, r1\n\tadd\t@CPI9_7[0], r0, r2\n\tjump\t@.BB9_7\n.BB9_54:\n\tadd\t96, r0, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB9_61\n\tadd\t63, r3, r2\n\tand\t@CPI9_16[0], r2, r4\n\tld.1\t64, r2\n\tadd\tr2, r4, r4\n\tsub!\tr4, r2, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI9_17[0], r4, r6\n\tjump.gt\t@.BB9_51\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB9_51\n\tst.1\t64, r4\n\tand\t31, r3, r4\n\tst.1.inc\tr2, r3, r8\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB9_66\n\tadd\tr0, r0, r5\n.BB9_59:\n\tshl.s\t5, r5, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB9_59\n.BB9_66:\n\tadd\tr8, r0, stack-[6]\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB9_61\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tstack-[6], r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB9_61:\n\tld.1\tr2, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB9_62\n.BB9_63:\n\tld.1\t64, r1\n\tadd\t@CPI9_19[0], r0, r2\n.BB9_7:\n\tst.1\tr1, r2\n\tadd\t@CPI9_0[0], r0, r2\n\tsub.s!\t@CPI9_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI9_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_51:\n\tadd\t@CPI9_20[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_21[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB9_62:\n\tadd\t@CPI9_0[0], r0, r2\n\tsub.s!\t@CPI9_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[6], r0, r4\n\tsub.s!\t@CPI9_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\n__cxa_throw:\n\trevert\n\n__sha3:\n.func_begin10:\n\tadd\t@CPI11_0[0], r0, r3\n\tsub.s!\t@CPI11_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI11_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI11_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_2\n\tld\tr1, r1\n\tret\n.BB11_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\n__farcall:\n.func_begin11:\n.tmp0:\n\tfar_call\tr1, r2, @.BB12_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB12_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end11:\n\n__staticcall:\n.func_begin12:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB13_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB13_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end12:\n\n\t.data\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI6_1:\nCPI7_0:\nCPI8_0:\nCPI9_0:\nCPI11_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -18446744073709551457\nCPI0_2:\n\t.cell -18446744073709551489\nCPI0_3:\nCPI9_16:\n\t.cell 8589934560\nCPI0_4:\nCPI5_0:\nCPI9_17:\n\t.cell 18446744073709551615\nCPI0_5:\nCPI3_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_6:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_7:\n\t.cell 29102676481673041902632991033461445430619272659676223336789171408008386403022\nCPI0_8:\n\t.cell -27889059366240281169193357100633332908378892778709981755071813198463099602853\nCPI0_9:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_10:\n\t.cell 1666326813\nCPI0_11:\n\t.cell 2720838756\nCPI0_12:\n\t.cell 3363526364\nCPI0_13:\n\t.cell 3363526365\nCPI0_14:\n\t.cell 3917867461\nCPI0_15:\n\t.cell 2720838757\nCPI0_16:\n\t.cell 3096268766\nCPI0_17:\n\t.cell 1666326814\nCPI0_18:\n\t.cell 1889567281\nCPI0_19:\n\t.cell 2514000705\nCPI0_20:\n\t.cell 157198258\nCPI0_21:\n\t.cell 599290588\nCPI0_22:\n\t.cell 599290589\nCPI0_23:\n\t.cell 1115958798\nCPI0_24:\n\t.cell 157198259\nCPI0_25:\n\t.cell 404098525\nCPI0_26:\n\t.cell 33540519\nCPI0_27:\n\t.cell 117300739\nCPI0_28:\n\t.cell 135795452\nCPI0_29:\nCPI3_1:\nCPI6_0:\nCPI8_5:\nCPI9_5:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_30:\n\t.cell 2535301200456458802993406410752\nCPI0_31:\nCPI6_2:\nCPI7_1:\nCPI8_1:\nCPI9_1:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_32:\nCPI7_2:\nCPI8_2:\nCPI9_2:\n\t.cell 26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_33:\n\t.cell -42834920450715407022082223427960438759242131871708039438462785066532668964864\nCPI0_34:\nCPI7_4:\nCPI8_4:\nCPI9_4:\n\t.cell 316912650057057350374175801344\nCPI0_35:\nCPI4_1:\nCPI5_1:\nCPI9_20:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_36:\nCPI4_2:\nCPI5_2:\nCPI9_21:\n\t.cell 2852213850513516153367582212096\nCPI0_37:\n\t.cell 10488878412788366941768124514102328501031624832915735463117339209566108871729\nCPI0_38:\n\t.cell 2535301202817642044428229017600\nCPI0_39:\n\t.cell -50972281593181485357266260592198204414912041628480094241293009403468908068864\nCPI0_40:\n\t.cell 316912652418240591808998408192\nCPI0_41:\nCPI7_3:\nCPI8_3:\nCPI9_3:\n\t.cell -14845744335292530952159170063561095606257592803503607807502022965368918638592\nCPI0_42:\n\t.cell -21845785353554085949054571718828670455202510469655645007983171859163564212224\nCPI0_43:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_44:\nCPI8_11:\nCPI9_11:\nCPI11_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_45:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI0_46:\n\t.cell -22037877292112947632546596542686982807440413056460666925400268457099709644800\nCPI0_47:\nCPI9_18:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_48:\n\t.cell 904250603428552709895185118199468575982109441609966099573332780532423983104\nCPI0_49:\n\t.cell -57591534043048631271602713168962198724648561309353517944097662808962438791168\nCPI0_50:\n\t.cell 41326688264978518566617017154793646184809722027297161851759941631668658372608\nCPI4_0:\n\t.cell 18446744073709551584\nCPI8_6:\nCPI9_6:\n\t.cell -42933493348836003226145550184546686198324492501020130702489414725785790447616\nCPI8_7:\nCPI9_7:\n\t.cell 40610253321208270774332185957187447255326585543192491974159042718829090177024\nCPI8_8:\nCPI9_8:\n\t.cell 54919857843691310904240101001871775513466943666296306094405906504622902841650\nCPI8_9:\nCPI9_9:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI8_10:\nCPI9_10:\n\t.cell 53919893334301279589334030174039261347274288845081144962207220498432\nCPI8_12:\nCPI9_12:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI8_13:\nCPI9_22:\n\t.cell -9800292063374010541101823263340310137772563531408190335784025992253224779776\nCPI9_13:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI9_14:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI9_15:\n\t.cell 9518847204935358166548570266051330015907116135037852959641967396525866745856\nCPI9_19:\n\t.cell -20966298728256804457890858603336338499916778406143570283640639356514726838272\n","bytecode":{"object":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":"/// @use-src 1:\"erc721a/contracts/ERC721A.sol\", 2:\"erc721a/contracts/IERC721A.sol\"\nobject \"ERC721A_1648\" {\n    code {\n        {\n            /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"ERC721A_1648\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n            let offset := mload(memoryDataOffset)\n            let _2 := sub(shl(64, 1), 1)\n            if gt(offset, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n            let value0 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n            let _3 := 32\n            let offset_1 := mload(add(memoryDataOffset, _3))\n            if gt(offset_1, _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n            let _4 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1)\n            let newLen := mload(value0)\n            if gt(newLen, _2) { panic_error_0x41() }\n            clean_up_bytearray_end_slots_string_storage_1042(extract_byte_array_length(sload(/** @src 1:5012:5025  \"_name = name_\" */ 0x02)), /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ newLen)\n            let srcOffset := 0\n            srcOffset := _3\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage_1043()\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, _3) }\n                {\n                    sstore(dstPtr, mload(add(value0, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, _3)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(value0, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src 1:5012:5025  \"_name = name_\" */ 0x02, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(value0, srcOffset))\n                }\n                sstore(/** @src 1:5012:5025  \"_name = name_\" */ 0x02, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n            copy_byte_array_to_storage_from_string_to_string(_4)\n            sstore(0, 0)\n            let _5 := mload(64)\n            let _6 := datasize(\"ERC721A_1648_deployed\")\n            codecopy(_5, dataoffset(\"ERC721A_1648_deployed\"), _6)\n            return(_5, _6)\n        }\n        function panic_error_0x41()\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x41)\n            revert(0, 0x24)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_string_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n            let _1 := mload(offset)\n            if gt(_1, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            let _2 := 0x20\n            let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n            mstore(array_1, _1)\n            if gt(add(add(offset, _1), _2), end)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n            for { } lt(i, _1) { i := add(i, _2) }\n            {\n                mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n            }\n            if gt(i, _1)\n            {\n                mstore(add(add(array_1, _1), _2), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n            array := array_1\n        }\n        function extract_byte_array_length(data) -> length\n        {\n            length := shr(1, data)\n            let outOfPlaceEncoding := and(data, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(0, 0x24)\n            }\n        }\n        function array_dataslot_string_storage_1043() -> data\n        {\n            mstore(0, /** @src 1:5012:5025  \"_name = name_\" */ 0x02)\n            /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n            data := keccak256(0, 0x20)\n        }\n        function array_dataslot_string_storage() -> data\n        {\n            mstore(0, /** @src 1:5035:5052  \"_symbol = symbol_\" */ 0x03)\n            /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n            data := keccak256(0, 0x20)\n        }\n        function clean_up_bytearray_end_slots_string_storage_1042(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 1:5012:5025  \"_name = name_\" */ 0x02)\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _1)\n                }\n            }\n        }\n        /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n        function clean_up_bytearray_end_slots_string_storage(len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 1:5035:5052  \"_symbol = symbol_\" */ 0x03)\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                let _2 := add(data, shr(5, add(len, 31)))\n                let start := deleteStart\n                for { } lt(start, _2) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ _1)\n                }\n            }\n        }\n        /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n        function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n        {\n            used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n        }\n        function copy_byte_array_to_storage_from_string_to_string(src)\n        {\n            let newLen := mload(src)\n            if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n            clean_up_bytearray_end_slots_string_storage(extract_byte_array_length(sload(/** @src 1:5035:5052  \"_symbol = symbol_\" */ 0x03)), /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ newLen)\n            let srcOffset := 0\n            let srcOffset_1 := 0x20\n            srcOffset := srcOffset_1\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                let dstPtr := array_dataslot_string_storage()\n                let i := 0\n                for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n                {\n                    sstore(dstPtr, mload(add(src, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, srcOffset_1)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(src, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 1:5035:5052  \"_symbol = symbol_\" */ 0x03, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ newLen), 248), not(0)))))\n                }\n                sstore(/** @src 1:5035:5052  \"_symbol = symbol_\" */ 0x03, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := 0\n                if newLen\n                {\n                    value := mload(add(src, srcOffset))\n                }\n                sstore(/** @src 1:5035:5052  \"_symbol = symbol_\" */ 0x03, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n        }\n    }\n    /// @use-src 1:\"erc721a/contracts/ERC721A.sol\"\n    object \"ERC721A_1648_deployed\" {\n        code {\n            {\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                mstore(64, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x01ffc9a7 {\n                        external_fun_supportsInterface()\n                    }\n                    case 0x06fdde03 { external_fun_name() }\n                    case 0x081812fc { external_fun_getApproved() }\n                    case 0x095ea7b3 { external_fun_approve() }\n                    case 0x18160ddd { external_fun_totalSupply() }\n                    case 0x23b872dd { external_fun_transferFrom() }\n                    case 0x42842e0e {\n                        external_fun_safeTransferFrom()\n                    }\n                    case 0x6352211e { external_fun_ownerOf() }\n                    case 0x70a08231 { external_fun_balanceOf() }\n                    case 0x95d89b41 { external_fun_symbol() }\n                    case 0xa22cb465 {\n                        external_fun_setApprovalForAll()\n                    }\n                    case 0xb88d4fde {\n                        external_fun_safeTransferFrom_1007()\n                    }\n                    case 0xc87b56dd { external_fun_tokenURI() }\n                    case 0xe985e9c5 {\n                        external_fun_isApprovedForAll()\n                    }\n                }\n                revert(0, 0)\n            }\n            function validator_revert_bytes4(value)\n            {\n                if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n            }\n            function cleanup_bool(value) -> cleaned\n            {\n                cleaned := iszero(iszero(value))\n            }\n            function external_fun_supportsInterface()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                let value := calldataload(4)\n                validator_revert_bytes4(value)\n                /// @src 1:9558:9583  \"interfaceId == 0x01ffc9a7\"\n                let _1 := /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ and(/** @src 1:9558:9583  \"interfaceId == 0x01ffc9a7\" */ value, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ shl(224, 0xffffffff))\n                /// @src 1:9558:9659  \"interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165....\"\n                let expr := /** @src 1:9558:9583  \"interfaceId == 0x01ffc9a7\" */ eq(_1, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ shl(224, 0x01ffc9a7))\n                /// @src 1:9558:9659  \"interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165....\"\n                if iszero(expr)\n                {\n                    expr := /** @src 1:9634:9659  \"interfaceId == 0x80ac58cd\" */ eq(_1, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ shl(224, 0x80ac58cd))\n                }\n                /// @src 1:9558:9735  \"interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165....\"\n                let expr_1 := expr\n                if iszero(expr)\n                {\n                    expr_1 := /** @src 1:9710:9735  \"interfaceId == 0x5b5e139f\" */ eq(_1, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ shl(224, 0x5b5e139f))\n                }\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(expr_1)))\n                return(memPos, 32)\n            }\n            function array_storeLengthForEncoding_string(pos, length) -> updated_pos\n            {\n                mstore(pos, length)\n                updated_pos := add(pos, 0x20)\n            }\n            function abi_encode_string_to_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                if gt(i, length)\n                {\n                    mstore(add(add(pos, length), 0x20), 0)\n                }\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                mstore(headStart, 32)\n                tail := abi_encode_string_to_string(value0, add(headStart, 32))\n            }\n            function external_fun_name()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := 0\n                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                let memPtr := mload(64)\n                let ret := _1\n                let slotValue := sload(/** @src 1:10125:10130  \"_name\" */ 0x02)\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                let length := _1\n                let _2 := 1\n                length := shr(_2, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _2)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _3 := 32\n                if eq(outOfPlaceEncoding, lt(length, _3))\n                {\n                    mstore(_1, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(_1, 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _3)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage_4015()\n                    let i := _1\n                    for { } lt(i, length) { i := add(i, _3) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _2)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_string(memPos, memPtr), memPos))\n            }\n            function external_fun_getApproved()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                let value0 := calldataload(4)\n                /// @src 1:16455:16519  \"if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken()\"\n                if /** @src 1:16459:16476  \"!_exists(tokenId)\" */ iszero(/** @src 1:16460:16476  \"_exists(tokenId)\" */ fun_exists(value0))\n                /// @src 1:16455:16519  \"if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken()\"\n                {\n                    /// @src 1:16485:16519  \"ApprovalQueryForNonexistentToken()\"\n                    let _1 := /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ mload(64)\n                    /// @src 1:16485:16519  \"ApprovalQueryForNonexistentToken()\"\n                    mstore(_1, shl(226, 0x33d1c039))\n                    revert(_1, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ 4)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ value0)\n                mstore(32, /** @src 1:16537:16552  \"_tokenApprovals\" */ 0x06)\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                let converted := and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ 0x40)), sub(shl(160, 1), 1))\n                let memPos := mload(0x40)\n                mstore(memPos, converted)\n                return(memPos, 32)\n            }\n            function abi_decode_address_4017() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function external_fun_approve()\n            {\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                let value0 := abi_decode_address_4017()\n                let value1 := calldataload(36)\n                let _1 := sub(shl(160, 1), 1)\n                let converted := and(/** @src 1:11505:11532  \"_packedOwnershipOf(tokenId)\" */ fun_packedOwnershipOf(/** @src 1:15916:15932  \"ownerOf(tokenId)\" */ value1), /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ _1)\n                /// @src 1:15943:16115  \"if (_msgSenderERC721A() != owner)...\"\n                if /** @src 1:15947:15975  \"_msgSenderERC721A() != owner\" */ iszero(eq(/** @src 1:39523:39533  \"msg.sender\" */ caller(), /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ converted))\n                /// @src 1:15943:16115  \"if (_msgSenderERC721A() != owner)...\"\n                {\n                    /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ converted)\n                    mstore(32, /** @src 1:17402:17420  \"_operatorApprovals\" */ 0x07)\n                    /// @src 1:15989:16115  \"if (!isApprovedForAll(owner, _msgSenderERC721A())) {...\"\n                    if /** @src 1:15993:16038  \"!isApprovedForAll(owner, _msgSenderERC721A())\" */ iszero(/** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ and(sload(/** @src 1:17402:17437  \"_operatorApprovals[owner][operator]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ 64), /** @src 1:39523:39533  \"msg.sender\" */ caller())), /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ 0xff))\n                    /// @src 1:15989:16115  \"if (!isApprovedForAll(owner, _msgSenderERC721A())) {...\"\n                    {\n                        /// @src 1:16065:16100  \"ApprovalCallerNotOwnerNorApproved()\"\n                        let _2 := /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ mload(64)\n                        /// @src 1:16065:16100  \"ApprovalCallerNotOwnerNorApproved()\"\n                        mstore(_2, shl(225, 0x67d9dca1))\n                        revert(_2, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ 4)\n                    }\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ value1)\n                mstore(0x20, /** @src 1:16125:16140  \"_tokenApprovals\" */ 0x06)\n                /// @src 1:16125:16160  \"_tokenApprovals[tokenId].value = to\"\n                update_storage_value_offsett_address_to_address(/** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ 64), /** @src 1:16125:16160  \"_tokenApprovals[tokenId].value = to\" */ value0)\n                /// @src 1:16175:16203  \"Approval(owner, to, tokenId)\"\n                let _3 := /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ mload(64)\n                /// @src 1:16175:16203  \"Approval(owner, to, tokenId)\"\n                log4(_3, /** @src -1:-1:-1 */ 0, /** @src 1:16175:16203  \"Approval(owner, to, tokenId)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, converted, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ and(/** @src 1:16175:16203  \"Approval(owner, to, tokenId)\" */ value0, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ _1), /** @src 1:16175:16203  \"Approval(owner, to, tokenId)\" */ value1)\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                return(_3, /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n            function external_fun_totalSupply()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let _1 := sload(0)\n                let diff := sub(_1, sload(/** @src 1:6164:6176  \"_burnCounter\" */ 0x01))\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                let memPos := mload(64)\n                mstore(memPos, diff)\n                return(memPos, 32)\n            }\n            function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                let _1 := sub(shl(160, 1), 1)\n                if iszero(eq(value, and(value, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                value0 := value\n                let value_1 := calldataload(36)\n                if iszero(eq(value_1, and(value_1, _1)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                value1 := value_1\n                value2 := calldataload(68)\n            }\n            function external_fun_transferFrom()\n            {\n                let param, param_1, param_2 := abi_decode_addresst_addresst_uint256(calldatasize())\n                fun_transferFrom(param, param_1, param_2)\n                return(mload(64), 0)\n            }\n            function external_fun_safeTransferFrom()\n            {\n                let param, param_1, param_2 := abi_decode_addresst_addresst_uint256(calldatasize())\n                let memPtr := mload(64)\n                let newFreePtr := add(memPtr, 0x20)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n                mstore(memPtr, 0)\n                /// @src 1:22899:22938  \"safeTransferFrom(from, to, tokenId, '')\"\n                fun_safeTransferFrom(param, param_1, param_2, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ memPtr)\n                return(mload(64), 0)\n            }\n            function external_fun_ownerOf()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                let converted := and(/** @src 1:11505:11532  \"_packedOwnershipOf(tokenId)\" */ fun_packedOwnershipOf(/** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ calldataload(4)), sub(shl(160, 1), 1))\n                let memPos := mload(64)\n                mstore(memPos, converted)\n                return(memPos, 32)\n            }\n            function external_fun_balanceOf()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                let _1 := and(abi_decode_address_4017(), sub(shl(160, 1), 1))\n                /// @src 1:7136:7196  \"if (owner == address(0)) revert BalanceQueryForZeroAddress()\"\n                if /** @src 1:7140:7159  \"owner == address(0)\" */ iszero(/** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ _1)\n                /// @src 1:7136:7196  \"if (owner == address(0)) revert BalanceQueryForZeroAddress()\"\n                {\n                    /// @src 1:7168:7196  \"BalanceQueryForZeroAddress()\"\n                    let _2 := /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ mload(64)\n                    /// @src 1:7168:7196  \"BalanceQueryForZeroAddress()\"\n                    mstore(_2, shl(226, 0x23d3ad81))\n                    revert(_2, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ 4)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ _1)\n                mstore(32, /** @src 1:7213:7231  \"_packedAddressData\" */ 0x05)\n                /// @src 1:7206:7268  \"return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY\"\n                let var := /** @src 1:7213:7268  \"_packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY\" */ and(/** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ 0x40)), /** @src 1:1360:1373  \"(1 << 64) - 1\" */ 0xffffffffffffffff)\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                let memPos := mload(0x40)\n                mstore(memPos, var)\n                return(memPos, 32)\n            }\n            function external_fun_symbol()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := 0\n                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                let memPtr := mload(64)\n                let ret := _1\n                let slotValue := sload(/** @src 1:10296:10303  \"_symbol\" */ 0x03)\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                let length := _1\n                let _2 := 1\n                length := shr(_2, slotValue)\n                let outOfPlaceEncoding := and(slotValue, _2)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _3 := 32\n                if eq(outOfPlaceEncoding, lt(length, _3))\n                {\n                    mstore(_1, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(_1, 0x24)\n                }\n                let pos := array_storeLengthForEncoding_string(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, _3)\n                }\n                case 1 {\n                    let dataPos := array_dataslot_string_storage()\n                    let i := _1\n                    for { } lt(i, length) { i := add(i, _3) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _2)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_string(memPos, memPtr), memPos))\n            }\n            function external_fun_setApprovalForAll()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                let value0 := abi_decode_address_4017()\n                let value := calldataload(36)\n                let _1 := iszero(iszero(value))\n                if iszero(eq(value, _1))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:39523:39533  \"msg.sender\" */ caller())\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                mstore(32, /** @src 1:16995:17013  \"_operatorApprovals\" */ 0x07)\n                /// @src 1:16995:17044  \"_operatorApprovals[_msgSenderERC721A()][operator]\"\n                let _2 := mapping_index_access_mapping_address_uint256_of_address(/** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ 64), /** @src 1:16995:17044  \"_operatorApprovals[_msgSenderERC721A()][operator]\" */ value0)\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                let value_1 := and(sload(_2), not(255))\n                sstore(_2, or(value_1, and(_1, 255)))\n                /// @src 1:17070:17125  \"ApprovalForAll(_msgSenderERC721A(), operator, approved)\"\n                let _3 := /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ mload(64)\n                mstore(_3, _1)\n                /// @src 1:17070:17125  \"ApprovalForAll(_msgSenderERC721A(), operator, approved)\"\n                log3(_3, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ 32, /** @src 1:17070:17125  \"ApprovalForAll(_msgSenderERC721A(), operator, approved)\" */ 0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, /** @src 1:39523:39533  \"msg.sender\" */ caller(), /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ and(/** @src 1:17070:17125  \"ApprovalForAll(_msgSenderERC721A(), operator, approved)\" */ value0, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ sub(shl(160, 1), 1)))\n                return(mload(64), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation_6022(memPtr)\n            {\n                let newFreePtr := add(memPtr, 32)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function external_fun_safeTransferFrom_1007()\n            {\n                if slt(add(calldatasize(), not(3)), 128)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                let value0 := abi_decode_address_4017()\n                let value1 := abi_decode_address()\n                let offset := calldataload(100)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                if iszero(slt(add(offset, 35), calldatasize()))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                let _1 := calldataload(add(4, offset))\n                let _2 := array_allocation_size_bytes(_1)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _2)\n                mstore(memPtr, _1)\n                if gt(add(add(offset, _1), 36), calldatasize())\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                calldatacopy(add(memPtr, 32), add(offset, 36), _1)\n                mstore(add(add(memPtr, _1), 32), /** @src -1:-1:-1 */ 0)\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                fun_safeTransferFrom(value0, value1, calldataload(68), memPtr)\n                return(mload(64), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n            function external_fun_tokenURI()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 32)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:10509:10568  \"if (!_exists(tokenId)) revert URIQueryForNonexistentToken()\"\n                if /** @src 1:10513:10530  \"!_exists(tokenId)\" */ iszero(/** @src 1:10514:10530  \"_exists(tokenId)\" */ fun_exists(/** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ calldataload(4)))\n                /// @src 1:10509:10568  \"if (!_exists(tokenId)) revert URIQueryForNonexistentToken()\"\n                {\n                    /// @src 1:10539:10568  \"URIQueryForNonexistentToken()\"\n                    let _1 := /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ mload(64)\n                    /// @src 1:10539:10568  \"URIQueryForNonexistentToken()\"\n                    mstore(_1, shl(228, 0x0a14c4b5))\n                    revert(_1, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ 4)\n                }\n                let memPtr := mload(64)\n                finalize_allocation_6022(memPtr)\n                mstore(memPtr, /** @src -1:-1:-1 */ 0)\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                let memPtr_1 := mload(64)\n                finalize_allocation_6022(memPtr_1)\n                mstore(memPtr_1, /** @src -1:-1:-1 */ 0)\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                let memPos := mload(64)\n                mstore(memPos, 32)\n                return(memPos, sub(abi_encode_string_to_string(memPtr_1, add(memPos, 32)), memPos))\n            }\n            function external_fun_isApprovedForAll()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 64)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                let value0 := abi_decode_address_4017()\n                let value1 := abi_decode_address()\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ and(value0, sub(shl(160, 1), 1)))\n                mstore(32, /** @src 1:17402:17420  \"_operatorApprovals\" */ 0x07)\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                let value := and(sload(/** @src 1:17402:17437  \"_operatorApprovals[owner][operator]\" */ mapping_index_access_mapping_address_uint256_of_address(/** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ 64), value1)), 0xff)\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(value)))\n                return(memPos, 32)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_4039(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:17402:17420  \"_operatorApprovals\" */ 0x07)\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address_4040(key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:21300:21318  \"_packedAddressData\" */ 0x05)\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            function mapping_index_access_mapping_address_uint256_of_address(slot, key) -> dataSlot\n            {\n                mstore(0, and(key, sub(shl(160, 1), 1)))\n                mstore(0x20, slot)\n                dataSlot := keccak256(0, 0x40)\n            }\n            function array_dataslot_string_storage_4015() -> data\n            {\n                mstore(0, /** @src 1:10125:10130  \"_name\" */ 0x02)\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                data := 29102676481673041902632991033461445430619272659676223336789171408008386403022\n            }\n            function array_dataslot_string_storage() -> data\n            {\n                mstore(0, /** @src 1:10296:10303  \"_symbol\" */ 0x03)\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                data := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n            }\n            function mapping_index_access_mapping_uint256_uint256_of_uint256(key) -> dataSlot\n            {\n                mstore(0, key)\n                mstore(0x20, /** @src 1:21654:21671  \"_packedOwnerships\" */ 0x04)\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                dataSlot := keccak256(0, 0x40)\n            }\n            /// @src 1:2118:2126  \"1 << 224\"\n            function decrement_wrapping_uint256(value) -> ret\n            { ret := add(value, not(0)) }\n            /// @ast-id 558 @src 1:12515:13764  \"function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {...\"\n            function fun_packedOwnershipOf(var_tokenId) -> var\n            {\n                /// @src 1:12582:12589  \"uint256\"\n                var := /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ 0\n                /// @src 1:12582:12589  \"uint256\"\n                let var_1 := /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ 0\n                /// @src 1:12601:12623  \"uint256 curr = tokenId\"\n                let var_curr := var_tokenId\n                /// @src 1:12703:13700  \"if (curr < _currentIndex) {...\"\n                if /** @src 1:12707:12727  \"curr < _currentIndex\" */ lt(var_tokenId, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ sload(var_1))\n                /// @src 1:12703:13700  \"if (curr < _currentIndex) {...\"\n                {\n                    /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                    mstore(var_1, var_tokenId)\n                    /// @src 1:12768:12785  \"_packedOwnerships\"\n                    let _1 := 0x04\n                    /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                    let _2 := 0x20\n                    mstore(_2, /** @src 1:12768:12785  \"_packedOwnerships\" */ _1)\n                    /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                    let _3 := 0x40\n                    /// @src 1:12751:12791  \"uint256 packed = _packedOwnerships[curr]\"\n                    let var_packed := /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ sload(keccak256(var_1, _3))\n                    /// @src 1:12851:13682  \"if (packed & _BITMASK_BURNED == 0) {...\"\n                    if /** @src 1:12855:12884  \"packed & _BITMASK_BURNED == 0\" */ iszero(/** @src 1:12855:12879  \"packed & _BITMASK_BURNED\" */ and(var_packed, /** @src 1:2118:2126  \"1 << 224\" */ shl(224, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ 1)))\n                    /// @src 1:12851:13682  \"if (packed & _BITMASK_BURNED == 0) {...\"\n                    {\n                        /// @src 1:13510:13621  \"while (packed == 0) {...\"\n                        for { }\n                        /** @src 1:13517:13528  \"packed == 0\" */ iszero(var_packed)\n                        /// @src 1:13510:13621  \"while (packed == 0) {...\"\n                        { }\n                        {\n                            /// @src 1:13587:13593  \"--curr\"\n                            var_curr := /** @src 1:2118:2126  \"1 << 224\" */ add(/** @src 1:13587:13593  \"--curr\" */ var_curr, /** @src 1:2118:2126  \"1 << 224\" */ not(0))\n                            /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                            mstore(var_1, var_curr)\n                            mstore(_2, /** @src 1:12768:12785  \"_packedOwnerships\" */ _1)\n                            /// @src 1:13560:13594  \"packed = _packedOwnerships[--curr]\"\n                            var_packed := /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ sload(keccak256(var_1, _3))\n                        }\n                        /// @src 1:13646:13659  \"return packed\"\n                        var := var_packed\n                        leave\n                    }\n                }\n                /// @src 1:13726:13757  \"OwnerQueryForNonexistentToken()\"\n                let _4 := /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ mload(64)\n                /// @src 1:13726:13757  \"OwnerQueryForNonexistentToken()\"\n                mstore(_4, shl(225, 0x6f96cda1))\n                revert(_4, 4)\n            }\n            /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n            function update_storage_value_offsett_address_to_address(slot, value)\n            {\n                sstore(slot, or(and(sload(slot), shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n            }\n            function read_from_storage_split_offset_bool(slot) -> value\n            {\n                value := and(sload(slot), 0xff)\n            }\n            /// @ast-id 772 @src 1:17693:17970  \"function _exists(uint256 tokenId) internal view virtual returns (bool) {...\"\n            function fun_exists(var_tokenId) -> var\n            {\n                /// @src 1:17793:17944  \"_startTokenId() <= tokenId &&...\"\n                let expr := /** @src 1:17835:17858  \"tokenId < _currentIndex\" */ lt(var_tokenId, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ sload(/** @src 1:5508:5509  \"0\" */ 0x00))\n                /// @src 1:17793:17944  \"_startTokenId() <= tokenId &&...\"\n                if expr\n                {\n                    /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                    mstore(/** @src 1:5508:5509  \"0\" */ 0x00, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ var_tokenId)\n                    mstore(0x20, /** @src 1:17895:17912  \"_packedOwnerships\" */ 0x04)\n                    /// @src 1:17793:17944  \"_startTokenId() <= tokenId &&...\"\n                    expr := /** @src 1:17895:17944  \"_packedOwnerships[tokenId] & _BITMASK_BURNED == 0\" */ iszero(/** @src 1:17895:17939  \"_packedOwnerships[tokenId] & _BITMASK_BURNED\" */ and(/** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ sload(keccak256(/** @src 1:5508:5509  \"0\" */ 0x00, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ 0x40)), /** @src 1:2118:2126  \"1 << 224\" */ shl(224, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ 1)))\n                }\n                /// @src 1:17774:17944  \"return...\"\n                var := expr\n            }\n            /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n            function increment_wrapping_uint256(value) -> ret\n            { ret := add(value, 1) }\n            /// @ast-id 950 @src 1:19903:22667  \"function transferFrom(...\"\n            function fun_transferFrom(var_from, var_to, var_tokenId)\n            {\n                /// @src 1:20070:20097  \"_packedOwnershipOf(tokenId)\"\n                let expr := fun_packedOwnershipOf(var_tokenId)\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 1:20112:20157  \"address(uint160(prevOwnershipPacked)) != from\" */ var_from, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ _1)\n                /// @src 1:20108:20194  \"if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner()\"\n                if /** @src 1:20112:20157  \"address(uint160(prevOwnershipPacked)) != from\" */ iszero(eq(/** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ and(/** @src 1:20120:20148  \"uint160(prevOwnershipPacked)\" */ expr, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ _1), _2))\n                /// @src 1:20108:20194  \"if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner()\"\n                {\n                    /// @src 1:20166:20194  \"TransferFromIncorrectOwner()\"\n                    let _3 := /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ mload(64)\n                    /// @src 1:20166:20194  \"TransferFromIncorrectOwner()\"\n                    mstore(_3, shl(232, 10556545))\n                    revert(_3, 4)\n                }\n                /// @src 1:20262:20297  \"_getApprovedSlotAndAddress(tokenId)\"\n                let expr_component, expr_component_1 := fun_getApprovedSlotAndAddress(var_tokenId)\n                /// @src 1:20389:20568  \"if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))...\"\n                if /** @src 1:20393:20462  \"!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A())\" */ cleanup_bool(iszero(/** @src 1:20394:20462  \"_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A())\" */ fun_isSenderApprovedOrOwner(expr_component_1, var_from, /** @src 1:39523:39533  \"msg.sender\" */ caller())))\n                /// @src 1:20389:20568  \"if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))...\"\n                {\n                    /// @src 1:20476:20568  \"if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved()\"\n                    if /** @src 1:20480:20524  \"!isApprovedForAll(from, _msgSenderERC721A())\" */ cleanup_bool(iszero(/** @src 1:17402:17437  \"_operatorApprovals[owner][operator]\" */ read_from_storage_split_offset_bool(mapping_index_access_mapping_address_uint256_of_address(/** @src 1:17402:17427  \"_operatorApprovals[owner]\" */ mapping_index_access_mapping_address_uint256_of_address_4039(/** @src 1:20481:20524  \"isApprovedForAll(from, _msgSenderERC721A())\" */ var_from), /** @src 1:39523:39533  \"msg.sender\" */ caller()))))\n                    /// @src 1:20476:20568  \"if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved()\"\n                    {\n                        /// @src 1:20533:20568  \"TransferCallerNotOwnerNorApproved()\"\n                        let _4 := /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ mload(64)\n                        /// @src 1:20533:20568  \"TransferCallerNotOwnerNorApproved()\"\n                        mstore(_4, shl(225, 0x2ce44b5f))\n                        revert(_4, 4)\n                    }\n                }\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                let _5 := and(/** @src 1:20583:20599  \"to == address(0)\" */ var_to, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ _1)\n                /// @src 1:20579:20631  \"if (to == address(0)) revert TransferToZeroAddress()\"\n                if /** @src 1:20583:20599  \"to == address(0)\" */ iszero(/** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ _5)\n                /// @src 1:20579:20631  \"if (to == address(0)) revert TransferToZeroAddress()\"\n                {\n                    /// @src 1:20608:20631  \"TransferToZeroAddress()\"\n                    let _6 := /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ mload(64)\n                    /// @src 1:20608:20631  \"TransferToZeroAddress()\"\n                    mstore(_6, shl(226, 0x3a954ecd))\n                    revert(_6, 4)\n                }\n                /// @src 1:20748:20938  \"assembly {...\"\n                if expr_component_1\n                {\n                    sstore(expr_component, /** @src 1:20597:20598  \"0\" */ 0x00)\n                }\n                /// @src 1:21300:21324  \"_packedAddressData[from]\"\n                let _7 := mapping_index_access_mapping_address_uint256_of_address_4040(var_from)\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                sstore(_7, /** @src 1:21298:21324  \"--_packedAddressData[from]\" */ decrement_wrapping_uint256(/** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ sload(/** @src 1:21298:21324  \"--_packedAddressData[from]\" */ _7)))\n                /// @src 1:21368:21390  \"_packedAddressData[to]\"\n                let _8 := mapping_index_access_mapping_address_uint256_of_address_4040(var_to)\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                sstore(_8, /** @src 1:21366:21390  \"++_packedAddressData[to]\" */ increment_wrapping_uint256(/** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ sload(/** @src 1:21366:21390  \"++_packedAddressData[to]\" */ _8)))\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                sstore(/** @src 1:21654:21680  \"_packedOwnerships[tokenId]\" */ mapping_index_access_mapping_uint256_uint256_of_uint256(var_tokenId), /** @src 1:21683:21826  \"_packOwnershipData(...\" */ fun_packOwnershipData(var_to))\n                /// @src 1:21939:22556  \"if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {...\"\n                if /** @src 1:21943:21995  \"prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0\" */ iszero(/** @src 1:21943:21990  \"prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED\" */ and(expr, /** @src 1:2392:2400  \"1 << 225\" */ shl(225, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ 1)))\n                /// @src 1:21939:22556  \"if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {...\"\n                {\n                    /// @src 1:22037:22048  \"tokenId + 1\"\n                    let expr_1 := /** @src 1:2392:2400  \"1 << 225\" */ add(/** @src 1:22037:22048  \"tokenId + 1\" */ var_tokenId, /** @src 1:22047:22048  \"1\" */ 0x01)\n                    /// @src 1:22164:22542  \"if (_packedOwnerships[nextTokenId] == 0) {...\"\n                    if /** @src 1:22168:22203  \"_packedOwnerships[nextTokenId] == 0\" */ iszero(/** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ sload(/** @src 1:22168:22198  \"_packedOwnerships[nextTokenId]\" */ mapping_index_access_mapping_uint256_uint256_of_uint256(expr_1)))\n                    /// @src 1:22164:22542  \"if (_packedOwnerships[nextTokenId] == 0) {...\"\n                    {\n                        /// @src 1:22285:22524  \"if (nextTokenId != _currentIndex) {...\"\n                        if /** @src 1:22289:22317  \"nextTokenId != _currentIndex\" */ iszero(eq(expr_1, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ sload(/** @src -1:-1:-1 */ 0)))\n                        /// @src 1:22285:22524  \"if (nextTokenId != _currentIndex) {...\"\n                        {\n                            /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                            sstore(/** @src 1:22449:22479  \"_packedOwnerships[nextTokenId]\" */ mapping_index_access_mapping_uint256_uint256_of_uint256(expr_1), /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ expr)\n                        }\n                    }\n                }\n                /// @src 1:22581:22608  \"Transfer(from, to, tokenId)\"\n                log4(/** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ mload(64), /** @src -1:-1:-1 */ 0, /** @src 1:22581:22608  \"Transfer(from, to, tokenId)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _5, var_tokenId)\n            }\n            /// @ast-id 624 @src 1:14297:14740  \"function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {...\"\n            function fun_packOwnershipData(var_owner) -> var_result\n            {\n                /// @src 1:14403:14734  \"assembly {...\"\n                var_result := or(or(and(var_owner, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ sub(shl(160, 1), 1)), /** @src 1:14403:14734  \"assembly {...\" */ shl(160, timestamp())), /** @src 1:2392:2400  \"1 << 225\" */ shl(225, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ 1))\n            }\n            /// @ast-id 786 @src 1:18074:18720  \"function _isSenderApprovedOrOwner(...\"\n            function fun_isSenderApprovedOrOwner(var_approvedAddress, var_owner, var_msgSender) -> var_result\n            {\n                /// @src 1:18242:18714  \"assembly {...\"\n                let _1 := /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ sub(shl(160, 1), 1)\n                /// @src 1:18242:18714  \"assembly {...\"\n                let var_msgSender_1 := and(var_msgSender, _1)\n                var_result := or(eq(var_msgSender_1, and(var_owner, _1)), eq(var_msgSender_1, var_approvedAddress))\n            }\n            /// @ast-id 805 @src 1:18828:19302  \"function _getApprovedSlotAndAddress(uint256 tokenId)...\"\n            function fun_getApprovedSlotAndAddress(var_tokenId) -> var_approvedAddressSlot, var_approvedAddress\n            {\n                /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ var_tokenId)\n                mstore(0x20, /** @src 1:19036:19051  \"_tokenApprovals\" */ 0x06)\n                /// @src 1:19164:19296  \"assembly {...\"\n                var_approvedAddressSlot := /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ 0x40)\n                /// @src 1:19164:19296  \"assembly {...\"\n                var_approvedAddress := sload(var_approvedAddressSlot)\n            }\n            /// @ast-id 1007 @src 1:23526:23922  \"function safeTransferFrom(...\"\n            function fun_safeTransferFrom(var_from, var_to, var_tokenId, var__data_mpos)\n            {\n                /// @src 1:23718:23725  \"tokenId\"\n                fun_transferFrom(var_from, var_to, var_tokenId)\n                /// @src 1:23736:23916  \"if (to.code.length != 0)...\"\n                if /** @src 1:23740:23759  \"to.code.length != 0\" */ iszero(iszero(/** @src 1:23740:23754  \"to.code.length\" */ extcodesize(var_to)))\n                /// @src 1:23736:23916  \"if (to.code.length != 0)...\"\n                {\n                    /// @src 1:23773:23916  \"if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {...\"\n                    if /** @src 1:23777:23834  \"!_checkContractOnERC721Received(from, to, tokenId, _data)\" */ iszero(/** @src 1:23778:23834  \"_checkContractOnERC721Received(from, to, tokenId, _data)\" */ fun_checkContractOnERC721Received(var_from, var_to, var_tokenId, var__data_mpos))\n                    /// @src 1:23773:23916  \"if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {...\"\n                    {\n                        /// @src 1:23861:23901  \"TransferToNonERC721ReceiverImplementer()\"\n                        let _1 := /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ mload(64)\n                        /// @src 1:23861:23901  \"TransferToNonERC721ReceiverImplementer()\"\n                        mstore(_1, shl(225, 0x68d2bf6b))\n                        revert(_1, 4)\n                    }\n                }\n            }\n            /// @src 1:895:41347  \"contract ERC721A is IERC721A {...\"\n            function abi_decode_bytes4_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                validator_revert_bytes4(value)\n                value0 := value\n            }\n            function abi_encode_address_address_uint256_bytes(headStart, value0, value1, value2, value3) -> tail\n            {\n                let _1 := sub(shl(160, 1), 1)\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n                mstore(add(headStart, 64), value2)\n                mstore(add(headStart, 96), 128)\n                tail := abi_encode_string_to_string(value3, add(headStart, 128))\n            }\n            function extract_returndata() -> data\n            {\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _1 := returndatasize()\n                    let _2 := array_allocation_size_bytes(_1)\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, _2)\n                    mstore(memPtr, _1)\n                    data := memPtr\n                    returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ returndatasize())\n                }\n            }\n            /// @ast-id 1088 @src 1:25948:26645  \"function _checkContractOnERC721Received(...\"\n            function fun_checkContractOnERC721Received(var_from, var_to, var_tokenId, var_data_mpos) -> var\n            {\n                /// @src 1:26106:26110  \"bool\"\n                var := /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ 0\n                /// @src 1:26126:26214  \"ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data)\"\n                let _1 := /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ mload(64)\n                let _2 := shl(225, 0x0a85bd01)\n                /// @src 1:26126:26214  \"ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data)\"\n                mstore(_1, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ _2)\n                /// @src 1:26126:26214  \"ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data)\"\n                let trySuccessCondition := call(gas(), /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ and(/** @src 1:26126:26154  \"ERC721A__IERC721Receiver(to)\" */ var_to, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ sub(shl(160, 1), 1)), 0, /** @src 1:26126:26214  \"ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data)\" */ _1, sub(abi_encode_address_address_uint256_bytes(add(_1, 4), /** @src 1:39523:39533  \"msg.sender\" */ caller(), /** @src 1:26126:26214  \"ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data)\" */ var_from, var_tokenId, var_data_mpos), _1), _1, 32)\n                let expr := /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ 0\n                /// @src 1:26126:26214  \"ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data)\"\n                if trySuccessCondition\n                {\n                    let _3 := 32\n                    if gt(_3, returndatasize()) { _3 := returndatasize() }\n                    finalize_allocation(_1, _3)\n                    expr := abi_decode_bytes4_fromMemory(_1, add(_1, _3))\n                }\n                /// @src 1:26122:26639  \"try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (...\"\n                switch iszero(trySuccessCondition)\n                case 0 {\n                    /// @src 1:26275:26346  \"return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector\"\n                    var := /** @src 1:26282:26346  \"retval == ERC721A__IERC721Receiver(to).onERC721Received.selector\" */ eq(/** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ and(/** @src 1:26282:26346  \"retval == ERC721A__IERC721Receiver(to).onERC721Received.selector\" */ expr, /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ shl(224, 0xffffffff)), _2)\n                    /// @src 1:26275:26346  \"return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector\"\n                    leave\n                }\n                default /// @src 1:26122:26639  \"try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (...\"\n                {\n                    /// @src 1:26358:26639  \"catch (bytes memory reason) {...\"\n                    let var_reason_mpos := extract_returndata()\n                    /// @src 1:26404:26417  \"reason.length\"\n                    let expr_1 := /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ mload(/** @src 1:26404:26417  \"reason.length\" */ var_reason_mpos)\n                    /// @src 1:26400:26629  \"if (reason.length == 0) {...\"\n                    switch /** @src 1:26404:26422  \"reason.length == 0\" */ iszero(expr_1)\n                    case /** @src 1:26400:26629  \"if (reason.length == 0) {...\" */ 0 {\n                        /// @src 1:26528:26615  \"assembly {...\"\n                        revert(add(/** @src 1:26126:26214  \"ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data)\" */ 32, /** @src 1:26528:26615  \"assembly {...\" */ var_reason_mpos), expr_1)\n                    }\n                    default /// @src 1:26400:26629  \"if (reason.length == 0) {...\"\n                    {\n                        /// @src 1:26449:26489  \"TransferToNonERC721ReceiverImplementer()\"\n                        let _4 := /** @src 1:895:41347  \"contract ERC721A is IERC721A {...\" */ mload(64)\n                        /// @src 1:26449:26489  \"TransferToNonERC721ReceiverImplementer()\"\n                        mstore(_4, /** @src 1:23861:23901  \"TransferToNonERC721ReceiverImplementer()\" */ shl(225, 0x68d2bf6b))\n                        /// @src 1:26449:26489  \"TransferToNonERC721ReceiverImplementer()\"\n                        revert(_4, /** @src 1:26126:26214  \"ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data)\" */ 4)\n                    }\n                }\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212200e0614fd06e3921ad3255e92baa571105fdaaf90639b9e8e1476794ebde5974164736f6c634300080d0033\"\n    }\n}\n","hash":"0100023d6542b36269a4d8c4f1e2a028e6511baabca522884f1ae7fd56f49b21","factoryDependencies":{}},"ERC721A__IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721 token receiver.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/ERC721A.sol\":\"ERC721A__IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x23116c16976b7d8c0c714ba1b38ae6b16c16fc90ec69b568fb1ebf1bc063e01c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7874e48418b55b9d718680915454f2b0054d19d2a387e123b0c139294d0e809\",\"dweb:/ipfs/QmdryJHATT4R454JY8FXCE5qTxanYWfjGKGMv5U6YJntWy\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]}},\"version\":1}","devdoc":{"details":"Interface of ERC721 token receiver.","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"irOptimized":""}},"erc721a/contracts/IERC721A.sol":{"IERC721A":{"abi":[{"inputs":[],"name":"ApprovalCallerNotOwnerNorApproved","type":"error"},{"inputs":[],"name":"ApprovalQueryForNonexistentToken","type":"error"},{"inputs":[],"name":"BalanceQueryForZeroAddress","type":"error"},{"inputs":[],"name":"MintERC2309QuantityExceedsLimit","type":"error"},{"inputs":[],"name":"MintToZeroAddress","type":"error"},{"inputs":[],"name":"MintZeroQuantity","type":"error"},{"inputs":[],"name":"OwnerQueryForNonexistentToken","type":"error"},{"inputs":[],"name":"OwnershipNotInitializedForExtraData","type":"error"},{"inputs":[],"name":"TransferCallerNotOwnerNorApproved","type":"error"},{"inputs":[],"name":"TransferFromIncorrectOwner","type":"error"},{"inputs":[],"name":"TransferToNonERC721ReceiverImplementer","type":"error"},{"inputs":[],"name":"TransferToZeroAddress","type":"error"},{"inputs":[],"name":"URIQueryForNonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"toTokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"ConsecutiveTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"payable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721A.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]}},\"version\":1}","devdoc":{"details":"Interface of ERC721A.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"ConsecutiveTransfer(uint256,uint256,address,address)":{"details":"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in `owner`'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Equivalent to `safeTransferFrom(from, to, tokenId, '')`."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"totalSupply()":{"details":"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"userdoc":{"errors":{"ApprovalCallerNotOwnerNorApproved()":[{"notice":"The caller must own the token or be an approved operator."}],"ApprovalQueryForNonexistentToken()":[{"notice":"The token does not exist."}],"BalanceQueryForZeroAddress()":[{"notice":"Cannot query the balance for the zero address."}],"MintERC2309QuantityExceedsLimit()":[{"notice":"The `quantity` minted with ERC2309 exceeds the safety limit."}],"MintToZeroAddress()":[{"notice":"Cannot mint to the zero address."}],"MintZeroQuantity()":[{"notice":"The quantity of tokens minted must be more than zero."}],"OwnerQueryForNonexistentToken()":[{"notice":"The token does not exist."}],"OwnershipNotInitializedForExtraData()":[{"notice":"The `extraData` cannot be set on an unintialized ownership slot."}],"TransferCallerNotOwnerNorApproved()":[{"notice":"The caller must own the token or be an approved operator."}],"TransferFromIncorrectOwner()":[{"notice":"The token must be owned by `from`."}],"TransferToNonERC721ReceiverImplementer()":[{"notice":"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."}],"TransferToZeroAddress()":[{"notice":"Cannot transfer to the zero address."}],"URIQueryForNonexistentToken()":[{"notice":"The token does not exist."}]},"kind":"user","methods":{},"version":1},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"irOptimized":""}}}}}